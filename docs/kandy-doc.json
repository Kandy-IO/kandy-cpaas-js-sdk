[
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The SDK creation factory. Create an instance of the SDK by calling this factory with the desired configurations.\nThe SDK instance will be refered as 'api' throughout the rest of the documentation content."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 3,
        "type": null
      },
      {
        "title": "method",
        "description": null,
        "lineNumber": 4,
        "name": "create"
      },
      {
        "title": "param",
        "description": "The configuration object.",
        "lineNumber": 5,
        "type": {
          "type": "NameExpression",
          "name": "config"
        },
        "name": "config"
      },
      {
        "title": "return",
        "description": "The SDK instance.",
        "lineNumber": 6,
        "type": {
          "type": "NameExpression",
          "name": "api"
        }
      },
      {
        "title": "example",
        "description": "// Instantiate the SDK.\nimport { create } from 'kandy'\nconst client = create({\n    authentication: { ... },\n    logs: { ... },\n    ...\n});\n// Use the SDK's API.\nclient.on( ... );",
        "lineNumber": 7
      }
    ],
    "loc": {
      "start": {
        "line": 3,
        "column": 0
      },
      "end": {
        "line": 20,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 121,
          "column": 0
        },
        "end": {
          "line": 121,
          "column": 58
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/builds/core/index.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "// Instantiate the SDK.\nimport { create } from 'kandy'\nconst client = create({\n    authentication: { ... },\n    logs: { ... },\n    ...\n});\n// Use the SDK's API.\nclient.on( ... );"
      }
    ],
    "implements": [],
    "params": [
      {
        "title": "param",
        "name": "config",
        "lineNumber": 5,
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The configuration object."
                }
              ]
            }
          ]
        },
        "type": {
          "type": "NameExpression",
          "name": "config"
        }
      }
    ],
    "properties": [],
    "returns": [
      {
        "description": {
          "type": "root",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "The SDK instance."
                }
              ]
            }
          ]
        },
        "title": "returns",
        "type": {
          "type": "NameExpression",
          "name": "api"
        }
      }
    ],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "function",
    "name": "create",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "create",
        "kind": "function"
      }
    ],
    "namespace": "create"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The configuration object. This object defines what different configuration\nvalues you can use when instantiating the SDK using the "
            },
            {
              "type": "link",
              "url": "#create",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "create"
                }
              ]
            },
            {
              "type": "text",
              "value": " function."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 3,
        "type": null
      },
      {
        "title": "module",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": "config"
      }
    ],
    "loc": {
      "start": {
        "line": 31,
        "column": 0
      },
      "end": {
        "line": 36,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 121,
          "column": 0
        },
        "end": {
          "line": 121,
          "column": 58
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/builds/core/index.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "module",
    "name": "config",
    "members": {
      "global": [],
      "inner": [],
      "instance": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Configuration options for the Logs feature."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will log information about the operations it is performing. The\namount of information will depend on how the Logs feature is configured."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The format of logs can also be customized by providing a\n"
                  },
                  {
                    "type": "link",
                    "url": "#loggerloghandler",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "LogHandler"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ". This function will receive a\n"
                  },
                  {
                    "type": "link",
                    "url": "#loggerlogentry",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "LogEntry"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " which it can handle as it sees fit. By\ndefault, the SDK will log information to the console. For more\ninformation, see the "
                  },
                  {
                    "type": "link",
                    "url": "#logger",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Logs feature"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " description."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 12,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 13
            },
            {
              "title": "name",
              "description": null,
              "lineNumber": 14,
              "name": "config.logs"
            },
            {
              "title": "memberof",
              "description": "config",
              "lineNumber": 15
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 16,
              "name": "logs"
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 17
            },
            {
              "title": "param",
              "description": "Logs configs.",
              "lineNumber": 18,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "logs"
            },
            {
              "title": "param",
              "description": "Log level to be set. See {@link logger.levels}.",
              "lineNumber": 19,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "logs.logLevel",
              "default": "'debug'"
            },
            {
              "title": "param",
              "description": "The function to receive log entries from the\n   SDK. If not provided, a default handler will be used that logs entries\n   to the console.",
              "lineNumber": 20,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "logger.LogHandler"
                }
              },
              "name": "logs.handler"
            },
            {
              "title": "param",
              "description": "Enable the detailed call logger\n   for v3.X. Requires log level debug.",
              "lineNumber": 23,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "logs.enableFcsLogs",
              "default": "true"
            },
            {
              "title": "param",
              "description": "Options specifically for action logs when\n   logLevel is at DEBUG+ levels. Set this to false to not output action logs.",
              "lineNumber": 25,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "UnionType",
                  "elements": [
                    {
                      "type": "NameExpression",
                      "name": "Object"
                    },
                    {
                      "type": "NameExpression",
                      "name": "boolean"
                    }
                  ]
                }
              },
              "name": "logs.logActions",
              "default": "false"
            },
            {
              "title": "param",
              "description": "The function to receive action\n   log entries from the SDK. If not provided, a default handler will be used\n   that logs actions to the console.",
              "lineNumber": 27,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "logger.LogHandler"
                }
              },
              "name": "logs.logActions.handler"
            },
            {
              "title": "param",
              "description": "Only output information\n   about the action itself. Omits the SDK context for when it occurred.",
              "lineNumber": 30,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "logs.logActions.actionOnly",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Whether logs should be\n   minimized when initially output. The full log is still output and can be\n   inspected on the console.",
              "lineNumber": 32,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "logs.logActions.collapsed",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Include a diff of what SDK\n   context was changed by the action.",
              "lineNumber": 35,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "logs.logActions.diff",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Log level to be set\n   on the action logs",
              "lineNumber": 37,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "logs.logActions.level",
              "default": "'debug'"
            },
            {
              "title": "param",
              "description": "Allow action payloads\n   to be exposed in the logs, potentially displaying sensitive information.",
              "lineNumber": 39,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "logs.logActions.exposePayloads",
              "default": "true"
            }
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 44,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 45,
                "column": 0
              },
              "end": {
                "line": 50,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/config.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "logs",
              "lineNumber": 18,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Logs configs."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "logs.logLevel",
                  "lineNumber": 19,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Log level to be set. See "
                          },
                          {
                            "type": "link",
                            "url": "#loggerlevels",
                            "title": null,
                            "jsdoc": true,
                            "children": [
                              {
                                "type": "text",
                                "value": "logger.levels"
                              }
                            ]
                          },
                          {
                            "type": "text",
                            "value": "."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  "default": "'debug'"
                },
                {
                  "title": "param",
                  "name": "logs.handler",
                  "lineNumber": 20,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The function to receive log entries from the\nSDK. If not provided, a default handler will be used that logs entries\nto the console."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "logger.LogHandler"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "logs.enableFcsLogs",
                  "lineNumber": 23,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Enable the detailed call logger\nfor v3.X. Requires log level debug."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "true"
                },
                {
                  "title": "param",
                  "name": "logs.logActions",
                  "lineNumber": 25,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options specifically for action logs when\nlogLevel is at DEBUG+ levels. Set this to false to not output action logs."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "UnionType",
                    "elements": [
                      {
                        "type": "NameExpression",
                        "name": "Object"
                      },
                      {
                        "type": "NameExpression",
                        "name": "boolean"
                      }
                    ]
                  },
                  "default": "false",
                  "properties": [
                    {
                      "title": "param",
                      "name": "logs.logActions.handler",
                      "lineNumber": 27,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The function to receive action\nlog entries from the SDK. If not provided, a default handler will be used\nthat logs actions to the console."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "logger.LogHandler"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "logs.logActions.actionOnly",
                      "lineNumber": 30,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Only output information\nabout the action itself. Omits the SDK context for when it occurred."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "boolean"
                      },
                      "default": "false"
                    },
                    {
                      "title": "param",
                      "name": "logs.logActions.collapsed",
                      "lineNumber": 32,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Whether logs should be\nminimized when initially output. The full log is still output and can be\ninspected on the console."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "boolean"
                      },
                      "default": "false"
                    },
                    {
                      "title": "param",
                      "name": "logs.logActions.diff",
                      "lineNumber": 35,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Include a diff of what SDK\ncontext was changed by the action."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "boolean"
                      },
                      "default": "false"
                    },
                    {
                      "title": "param",
                      "name": "logs.logActions.level",
                      "lineNumber": 37,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Log level to be set\non the action logs"
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "string"
                      },
                      "default": "'debug'"
                    },
                    {
                      "title": "param",
                      "name": "logs.logActions.exposePayloads",
                      "lineNumber": 39,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Allow action payloads\nto be exposed in the logs, potentially displaying sensitive information."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "boolean"
                      },
                      "default": "true"
                    }
                  ]
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "instance",
          "name": "config.logs",
          "memberof": "config",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "config",
              "kind": "module"
            },
            {
              "name": "config.logs",
              "scope": "instance"
            }
          ],
          "namespace": "config#config.logs"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Configuration options for the Authentication feature."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "name",
              "description": null,
              "lineNumber": 3,
              "name": "config.authentication"
            },
            {
              "title": "memberof",
              "description": "config",
              "lineNumber": 4
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": "Authentication configs.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "authentication"
            },
            {
              "title": "param",
              "description": "Information for how to reach the platform.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "authentication.server"
            },
            {
              "title": "param",
              "description": "Server to be used for requests.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "authentication.server.base"
            },
            {
              "title": "param",
              "description": "Protocol to be used for requests.",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "authentication.server.protocol",
              "default": "https"
            },
            {
              "title": "param",
              "description": "Port to be used for requests.",
              "lineNumber": 10,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "authentication.server.port",
              "default": "443"
            },
            {
              "title": "param",
              "description": "Unique ID for the client. This is required by the platform to identify an instance of the application used by the specific device.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "authentication.clientCorrelator"
            }
          ],
          "loc": {
            "start": {
              "line": 23,
              "column": 0
            },
            "end": {
              "line": 35,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 36,
                "column": 0
              },
              "end": {
                "line": 44,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/cpaas/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "authentication",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Authentication configs."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "authentication.server",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Information for how to reach the platform."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Object"
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "authentication.server.base",
                      "lineNumber": 8,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Server to be used for requests."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    },
                    {
                      "title": "param",
                      "name": "authentication.server.protocol",
                      "lineNumber": 9,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Protocol to be used for requests."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "string"
                      },
                      "default": "https"
                    },
                    {
                      "title": "param",
                      "name": "authentication.server.port",
                      "lineNumber": 10,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Port to be used for requests."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "Number"
                      },
                      "default": "443"
                    }
                  ]
                },
                {
                  "title": "param",
                  "name": "authentication.clientCorrelator",
                  "lineNumber": 11,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Unique ID for the client. This is required by the platform to identify an instance of the application used by the specific device."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "name": "config.authentication",
          "memberof": "config",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "config",
              "kind": "module"
            },
            {
              "name": "config.authentication",
              "scope": "instance"
            }
          ],
          "namespace": "config#config.authentication"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Configuration options for the call feature."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "name",
              "description": null,
              "lineNumber": 3,
              "name": "config.call"
            },
            {
              "title": "memberof",
              "description": "config",
              "lineNumber": 4
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": "The call configuration object.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "call"
            },
            {
              "title": "param",
              "description": "The sdpSemantics to use (`'unified-plan'` or `'plan-b'`).\n   As 'plan-b' has become a deprecated option, it will therefore be removed in the future.",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "call.sdpSemantics",
              "default": "'unified-plan'"
            },
            {
              "title": "param",
              "description": "The list of ICE servers to be used for calls.",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "TypeApplication",
                  "expression": {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  "applications": [
                    {
                      "type": "NameExpression",
                      "name": "call.IceServer"
                    }
                  ]
                }
              },
              "name": "call.iceServers"
            },
            {
              "title": "param",
              "description": "Time, in milliseconds, to delay in between\n   ICE candidate checks. If ICE collection does not complete normally, the SDK will check\n   collected candidates at this interval to determine if the operation can continue.",
              "lineNumber": 10,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "call.iceCollectionDelay",
              "default": "1000"
            },
            {
              "title": "param",
              "description": "Maximum time, in milliseconds, to wait for ICE\n   collection to complete normally. After this time, the process will timeout and the\n   operation will attempt to continue no matter how many candidates have been collected.",
              "lineNumber": 13,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "call.maxIceTimeout",
              "default": "3000"
            },
            {
              "title": "param",
              "description": "Function to check whether collected candidates\n   can be used to continue the operation. The function will receive the following two parameters:\n   an array of ICE servers & an extra details object, to help in the decision making.\n   The details object includes: an array of ICE candidates, the elapsed time so far (in milliseconds),\n   the maximum ICE collection timeout (in milliseconds) and an array of offered media.\n   The function must return a boolean value of whether the SDK should attempt to continue\n   the operation. By default, the check is to ensure at least one relay candidate has been\n   collected.",
              "lineNumber": 16,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Function"
                }
              },
              "name": "call.iceCollectionCheck"
            },
            {
              "title": "param",
              "description": "Whether server-provided TURN credentials should be used.",
              "lineNumber": 24,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "call.serverTurnCredentials",
              "default": "true"
            },
            {
              "title": "param",
              "description": "List of SDP handler functions to modify SDP. Advanced usage.",
              "lineNumber": 25,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "TypeApplication",
                  "expression": {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  "applications": [
                    {
                      "type": "NameExpression",
                      "name": "call.SdpHandlerFunction"
                    }
                  ]
                }
              },
              "name": "call.sdpHandlers"
            },
            {
              "title": "param",
              "description": "Whether to remove \"H264\" codec lines from incoming and outgoing SDP messages.",
              "lineNumber": 26,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "call.removeH264Codecs",
              "default": "true"
            },
            {
              "title": "param",
              "description": "Whether to remove a=group attributes to stop media bundling from incoming and outgoing SDP messages.",
              "lineNumber": 27,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "call.removeBundling",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Whether all Calls will be anchored on the MediaBroker instead of being peer-to-peer. Set to true if the backend is configured for broker only mode.",
              "lineNumber": 28,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "call.mediaBrokerOnly",
              "default": "false"
            },
            {
              "title": "param",
              "description": "The mode for sending ringing feedback to the Caller ('auto', 'manual').\n   By default, feedback will be automatically sent when a call has been received. In 'manual' mode, the application\n   must initiate the feedback being sent. See the `call.sendRingingFeedback` API for more info.",
              "lineNumber": 29,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "call.ringingFeedbackMode",
              "default": "'auto'"
            },
            {
              "title": "param",
              "description": "Time interval, in milliseconds between call audits.",
              "lineNumber": 32,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "call.callAuditTimer",
              "default": "25000"
            },
            {
              "title": "param",
              "description": "Delay, in milliseconds for the passive side of a call to wait before trying a media reconnection.",
              "lineNumber": 33,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "call.mediaConnectionRetryDelay",
              "default": "3000"
            }
          ],
          "loc": {
            "start": {
              "line": 24,
              "column": 0
            },
            "end": {
              "line": 58,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 69,
                "column": 0
              },
              "end": {
                "line": 88,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/cpaas/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "call",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The call configuration object."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "call.sdpSemantics",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The sdpSemantics to use ("
                          },
                          {
                            "type": "inlineCode",
                            "value": "'unified-plan'"
                          },
                          {
                            "type": "text",
                            "value": " or "
                          },
                          {
                            "type": "inlineCode",
                            "value": "'plan-b'"
                          },
                          {
                            "type": "text",
                            "value": ").\nAs 'plan-b' has become a deprecated option, it will therefore be removed in the future."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  "default": "'unified-plan'"
                },
                {
                  "title": "param",
                  "name": "call.iceServers",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The list of ICE servers to be used for calls."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "TypeApplication",
                      "expression": {
                        "type": "NameExpression",
                        "name": "Array"
                      },
                      "applications": [
                        {
                          "type": "NameExpression",
                          "name": "call.IceServer"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "call.iceCollectionDelay",
                  "lineNumber": 10,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Time, in milliseconds, to delay in between\nICE candidate checks. If ICE collection does not complete normally, the SDK will check\ncollected candidates at this interval to determine if the operation can continue."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  },
                  "default": "1000"
                },
                {
                  "title": "param",
                  "name": "call.maxIceTimeout",
                  "lineNumber": 13,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Maximum time, in milliseconds, to wait for ICE\ncollection to complete normally. After this time, the process will timeout and the\noperation will attempt to continue no matter how many candidates have been collected."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  },
                  "default": "3000"
                },
                {
                  "title": "param",
                  "name": "call.iceCollectionCheck",
                  "lineNumber": 16,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Function to check whether collected candidates\ncan be used to continue the operation. The function will receive the following two parameters:\nan array of ICE servers & an extra details object, to help in the decision making.\nThe details object includes: an array of ICE candidates, the elapsed time so far (in milliseconds),\nthe maximum ICE collection timeout (in milliseconds) and an array of offered media.\nThe function must return a boolean value of whether the SDK should attempt to continue\nthe operation. By default, the check is to ensure at least one relay candidate has been\ncollected."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Function"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "call.serverTurnCredentials",
                  "lineNumber": 24,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether server-provided TURN credentials should be used."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "true"
                },
                {
                  "title": "param",
                  "name": "call.sdpHandlers",
                  "lineNumber": 25,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "List of SDP handler functions to modify SDP. Advanced usage."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "TypeApplication",
                      "expression": {
                        "type": "NameExpression",
                        "name": "Array"
                      },
                      "applications": [
                        {
                          "type": "NameExpression",
                          "name": "call.SdpHandlerFunction"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "call.removeH264Codecs",
                  "lineNumber": 26,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether to remove \"H264\" codec lines from incoming and outgoing SDP messages."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "true"
                },
                {
                  "title": "param",
                  "name": "call.removeBundling",
                  "lineNumber": 27,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether to remove a=group attributes to stop media bundling from incoming and outgoing SDP messages."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "call.mediaBrokerOnly",
                  "lineNumber": 28,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether all Calls will be anchored on the MediaBroker instead of being peer-to-peer. Set to true if the backend is configured for broker only mode."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "call.ringingFeedbackMode",
                  "lineNumber": 29,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The mode for sending ringing feedback to the Caller ('auto', 'manual').\nBy default, feedback will be automatically sent when a call has been received. In 'manual' mode, the application\nmust initiate the feedback being sent. See the "
                          },
                          {
                            "type": "inlineCode",
                            "value": "call.sendRingingFeedback"
                          },
                          {
                            "type": "text",
                            "value": " API for more info."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  "default": "'auto'"
                },
                {
                  "title": "param",
                  "name": "call.callAuditTimer",
                  "lineNumber": 32,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Time interval, in milliseconds between call audits."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  },
                  "default": "25000"
                },
                {
                  "title": "param",
                  "name": "call.mediaConnectionRetryDelay",
                  "lineNumber": 33,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Delay, in milliseconds for the passive side of a call to wait before trying a media reconnection."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  },
                  "default": "3000"
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "name": "config.call",
          "memberof": "config",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "config",
              "kind": "module"
            },
            {
              "name": "config.call",
              "scope": "instance"
            }
          ],
          "namespace": "config#config.call"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Configuration options for the Connectivity feature.\nCan use pingPong (default) or keepAlive as the connectivity check."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Ping Pong: The responsibleParty (default 'client') sends \"ping\" messages to the other party (default 'server') on the websocket at regular intervals, and the other party is expected to respond with a \"pong\" message. This lets both sides know that the connection is still valid and that they can receive messages from each other."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Keep Alive: The responsibleParty (default 'client') sends \"keepalive\" messages to the other party (default 'server') on the websocket at regular intervals. This lets the responsibleParty know that the other party is still connected, and that it should \"keep the connection alive\"."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Keep Alive is the older/simpler method where only one side (the server) has logic for handling the connection. The server knows that if it doesn't receive the keepalive messages, the client is gone and it should clean-up the connection/websocket.\nIn Ping pong, both sides can handle the connection. Both sides can determine if the connection is gone because they will miss the ping or pong message from the other side. The benefit of ping pong is that both sides learn of possible issues sooner."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "For more information on these methods refer to these documents:"
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "https://en.wikipedia.org/wiki/Ping-pong_scheme"
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "https://en.wikipedia.org/wiki/Keepalive"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 17,
              "type": null
            },
            {
              "title": "name",
              "description": null,
              "lineNumber": 18,
              "name": "config.connectivity"
            },
            {
              "title": "memberof",
              "description": "config",
              "lineNumber": 19
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 20
            },
            {
              "title": "param",
              "description": "Connectivity configs.",
              "lineNumber": 21,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "connectivity"
            },
            {
              "title": "param",
              "description": "Configuration for how connectivity checks should be made.",
              "lineNumber": 22,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "connectivity.method"
            },
            {
              "title": "param",
              "description": "The method of connectivity checking to use: `keepAlive` or `pingPong`.",
              "lineNumber": 23,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "String"
                }
              },
              "name": "connectivity.method.type",
              "default": "'pingPong'"
            },
            {
              "title": "param",
              "description": "Configures who is responsible for initiating the connectivity check: `client` or `server`.",
              "lineNumber": 24,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "String"
                }
              },
              "name": "connectivity.method.responsibleParty",
              "default": "'client'"
            },
            {
              "title": "param",
              "description": "Time in between websocket ping attempts (milliseconds). Only used for when the client is responsible for ping/connCheck.",
              "lineNumber": 25,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "connectivity.pingInterval",
              "default": "30000"
            },
            {
              "title": "param",
              "description": "Number of failed reconnect attempts before reporting an error. Can be set to 0 to not limit reconnection attempts.",
              "lineNumber": 26,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "connectivity.reconnectLimit",
              "default": "5"
            },
            {
              "title": "param",
              "description": "Base time between websocket reconnect attempts (milliseconds).",
              "lineNumber": 27,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "connectivity.reconnectDelay",
              "default": "5000"
            },
            {
              "title": "param",
              "description": "Reconnect delay multiplier for subsequent attempts. The reconnect delay time will be multiplied by this after each failed reconnect attempt to increase the delay between attempts. eg. 5000ms then 10000ms then 20000ms delay if value is 2.",
              "lineNumber": 28,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "connectivity.reconnectTimeMultiplier",
              "default": "1"
            },
            {
              "title": "param",
              "description": "Maximum time delay between reconnect attempts (milliseconds). Used in conjunction with `reconnectTimeMultiplier` to prevent overly long delays between reconnection attempts.",
              "lineNumber": 29,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "connectivity.reconnectTimeLimit",
              "default": "640000"
            },
            {
              "title": "param",
              "description": "Flag to determine whether reconnection will be attempted automatically after connectivity disruptions.",
              "lineNumber": 30,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Boolean"
                }
              },
              "name": "connectivity.autoReconnect",
              "default": "true"
            },
            {
              "title": "param",
              "description": "Maximum pings sent (without receiving a response) before reporting an error.",
              "lineNumber": 31,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Number"
                }
              },
              "name": "connectivity.maxMissedPings",
              "default": "3"
            },
            {
              "title": "param",
              "description": "Flag to determine whether to enable connectivity checking or not.",
              "lineNumber": 32,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Boolean"
                }
              },
              "name": "connectivity.checkConnectivity",
              "default": "true"
            }
          ],
          "loc": {
            "start": {
              "line": 37,
              "column": 0
            },
            "end": {
              "line": 70,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 71,
                "column": 0
              },
              "end": {
                "line": 75,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/cpaas/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "connectivity",
              "lineNumber": 21,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Connectivity configs."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "connectivity.method",
                  "lineNumber": 22,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Configuration for how connectivity checks should be made."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Object"
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "connectivity.method.type",
                      "lineNumber": 23,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The method of connectivity checking to use: "
                              },
                              {
                                "type": "inlineCode",
                                "value": "keepAlive"
                              },
                              {
                                "type": "text",
                                "value": " or "
                              },
                              {
                                "type": "inlineCode",
                                "value": "pingPong"
                              },
                              {
                                "type": "text",
                                "value": "."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "String"
                      },
                      "default": "'pingPong'"
                    },
                    {
                      "title": "param",
                      "name": "connectivity.method.responsibleParty",
                      "lineNumber": 24,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Configures who is responsible for initiating the connectivity check: "
                              },
                              {
                                "type": "inlineCode",
                                "value": "client"
                              },
                              {
                                "type": "text",
                                "value": " or "
                              },
                              {
                                "type": "inlineCode",
                                "value": "server"
                              },
                              {
                                "type": "text",
                                "value": "."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "String"
                      },
                      "default": "'client'"
                    }
                  ]
                },
                {
                  "title": "param",
                  "name": "connectivity.pingInterval",
                  "lineNumber": 25,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Time in between websocket ping attempts (milliseconds). Only used for when the client is responsible for ping/connCheck."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Number"
                  },
                  "default": "30000"
                },
                {
                  "title": "param",
                  "name": "connectivity.reconnectLimit",
                  "lineNumber": 26,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Number of failed reconnect attempts before reporting an error. Can be set to 0 to not limit reconnection attempts."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Number"
                  },
                  "default": "5"
                },
                {
                  "title": "param",
                  "name": "connectivity.reconnectDelay",
                  "lineNumber": 27,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Base time between websocket reconnect attempts (milliseconds)."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Number"
                  },
                  "default": "5000"
                },
                {
                  "title": "param",
                  "name": "connectivity.reconnectTimeMultiplier",
                  "lineNumber": 28,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Reconnect delay multiplier for subsequent attempts. The reconnect delay time will be multiplied by this after each failed reconnect attempt to increase the delay between attempts. eg. 5000ms then 10000ms then 20000ms delay if value is 2."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Number"
                  },
                  "default": "1"
                },
                {
                  "title": "param",
                  "name": "connectivity.reconnectTimeLimit",
                  "lineNumber": 29,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Maximum time delay between reconnect attempts (milliseconds). Used in conjunction with "
                          },
                          {
                            "type": "inlineCode",
                            "value": "reconnectTimeMultiplier"
                          },
                          {
                            "type": "text",
                            "value": " to prevent overly long delays between reconnection attempts."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Number"
                  },
                  "default": "640000"
                },
                {
                  "title": "param",
                  "name": "connectivity.autoReconnect",
                  "lineNumber": 30,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Flag to determine whether reconnection will be attempted automatically after connectivity disruptions."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Boolean"
                  },
                  "default": "true"
                },
                {
                  "title": "param",
                  "name": "connectivity.maxMissedPings",
                  "lineNumber": 31,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Maximum pings sent (without receiving a response) before reporting an error."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Number"
                  },
                  "default": "3"
                },
                {
                  "title": "param",
                  "name": "connectivity.checkConnectivity",
                  "lineNumber": 32,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Flag to determine whether to enable connectivity checking or not."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Boolean"
                  },
                  "default": "true"
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "name": "config.connectivity",
          "memberof": "config",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "config",
              "kind": "module"
            },
            {
              "name": "config.connectivity",
              "scope": "instance"
            }
          ],
          "namespace": "config#config.connectivity"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Configuration options for the notification feature."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "name",
              "description": null,
              "lineNumber": 3,
              "name": "config.notifications"
            },
            {
              "title": "memberof",
              "description": "config",
              "lineNumber": 4
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": "The notifications configuration object.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "notifications"
            },
            {
              "title": "param",
              "description": "Default amount of event ids to remember for de-duplication purposes.",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "notifications.idCacheLength",
              "default": "100"
            }
          ],
          "loc": {
            "start": {
              "line": 17,
              "column": 0
            },
            "end": {
              "line": 25,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 33,
                "column": 0
              },
              "end": {
                "line": 35,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/cpaas/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "notifications",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The notifications configuration object."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "notifications.idCacheLength",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Default amount of event ids to remember for de-duplication purposes."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  },
                  "default": "100"
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "name": "config.notifications",
          "memberof": "config",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "config",
              "kind": "module"
            },
            {
              "name": "config.notifications",
              "scope": "instance"
            }
          ],
          "namespace": "config#config.notifications"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Configuration options for the Subscription feature."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "name",
              "description": null,
              "lineNumber": 3,
              "name": "config.subscription"
            },
            {
              "title": "memberof",
              "description": "config",
              "lineNumber": 4
            },
            {
              "title": "instance",
              "description": null,
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": "Subscription configs.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "subscription"
            },
            {
              "title": "param",
              "description": "The amount of time (in seconds) for which to keep subscription channels up and alive.",
              "lineNumber": 7,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "subscription.channelLifetime",
              "default": "3600"
            },
            {
              "title": "param",
              "description": "The amount of time (in seconds) allowed for the subscription/unsubscription process to take place before timing out.",
              "lineNumber": 8,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "subscription.timeout",
              "default": "20"
            }
          ],
          "loc": {
            "start": {
              "line": 19,
              "column": 0
            },
            "end": {
              "line": 28,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 37,
                "column": 0
              },
              "end": {
                "line": 40,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/cpaas/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "subscription",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Subscription configs."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "subscription.channelLifetime",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The amount of time (in seconds) for which to keep subscription channels up and alive."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  },
                  "default": "3600"
                },
                {
                  "title": "param",
                  "name": "subscription.timeout",
                  "lineNumber": 8,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The amount of time (in seconds) allowed for the subscription/unsubscription process to take place before timing out."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  },
                  "default": "20"
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "name": "config.subscription",
          "memberof": "config",
          "scope": "instance",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "config",
              "kind": "module"
            },
            {
              "name": "config.subscription",
              "scope": "instance"
            }
          ],
          "namespace": "config#config.subscription"
        }
      ],
      "events": [],
      "static": []
    },
    "path": [
      {
        "name": "config",
        "kind": "module"
      }
    ],
    "namespace": "config"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The 'api' is the type returned by the create function.\nIt contains various top-level functions that pertain to SDK global instance\nas well as several nested namespaces that pertain to various features (e.g. call, contacts, presence, etc)."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 5,
        "type": null
      },
      {
        "title": "module",
        "description": null,
        "lineNumber": 6,
        "type": null,
        "name": "api"
      }
    ],
    "loc": {
      "start": {
        "line": 22,
        "column": 0
      },
      "end": {
        "line": 29,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 121,
          "column": 0
        },
        "end": {
          "line": 121,
          "column": 58
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/builds/core/index.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "module",
    "name": "api",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An error occurred with server authorization."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This event will be emitted anytime a REST request to the server is rejected\ndue to an authorization issue. This may occur for invalid credentials or\nexpired tokens, depending on which form of authentication the application\nhas chosen to use."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 7,
              "type": null
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 8
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 9,
              "name": "restAuthorization"
            },
            {
              "title": "event",
              "description": "request:error",
              "lineNumber": 10
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The Basic error object.",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "api.BasicError"
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 14,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 15,
                "column": 0
              },
              "end": {
                "line": 15,
                "column": 44
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 12,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The Basic error object."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "api.BasicError"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "api",
          "kind": "event",
          "name": "request:error",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "request:error",
              "kind": "event"
            }
          ],
          "namespace": "api.event:request:error"
        }
      ],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Returns the current version of the API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "getVersion"
            }
          ],
          "loc": {
            "start": {
              "line": 264,
              "column": 4
            },
            "end": {
              "line": 270,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 271,
                "column": 4
              },
              "end": {
                "line": 273,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/factory.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "api",
          "kind": "function",
          "name": "getVersion",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "getVersion",
              "kind": "function"
            }
          ],
          "namespace": "apigetVersion"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Destroys the SDK, and removes its state, rendering the SDK unusable.\nUseful when a user logs out and their call data needs to be destroyed.\nThe SDK must be recreated to be usable again.\nThe destroy command is async, and will happen on the next tick\nso as not to interfere with any ongoing events."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 7,
              "type": null
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 8
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 9,
              "name": "destroy"
            },
            {
              "title": "example",
              "description": "// Instantiate the SDK.\nimport { create } from 'kandy'\nconst config = {\n    authentication: { ... },\n    logs: { ... },\n    ...\n}\nlet client = create(config);\nclient.on( ... )\n// Use the SDK\n...\n// Destroy the SDK, then recreate on the next step\nclient.destroy()\nclient = create(config)\nclient.on( ... )",
              "lineNumber": 10
            }
          ],
          "loc": {
            "start": {
              "line": 276,
              "column": 4
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 303,
                "column": 4
              },
              "end": {
                "line": 329,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/factory.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Instantiate the SDK.\nimport { create } from 'kandy'\nconst config = {\n    authentication: { ... },\n    logs: { ... },\n    ...\n}\nlet client = create(config);\nclient.on( ... )\n// Use the SDK\n...\n// Destroy the SDK, then recreate on the next step\nclient.destroy()\nclient = create(config)\nclient.on( ... )"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "api",
          "kind": "function",
          "name": "destroy",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "destroy",
              "kind": "function"
            }
          ],
          "namespace": "apidestroy"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Gets the current configuration Object. This is the object that is initially set as part of SDK creation using 'create' function."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 4
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 5,
              "name": "config"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 6,
              "name": "getConfig"
            },
            {
              "title": "returns",
              "description": "A configuration Object.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 18,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 19,
                "column": 4
              },
              "end": {
                "line": 22,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A configuration Object."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "api",
          "kind": "function",
          "name": "getConfig",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "getConfig",
              "kind": "function"
            }
          ],
          "namespace": "apigetConfig"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Update values in the global Config section of the store. The values pertain to the SDK configuration."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 5
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 6,
              "name": "config"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 7,
              "name": "updateConfig"
            },
            {
              "title": "param",
              "description": "Key-value pairs that will be placed into the store. See {@link config} for details on what key-value pairs are available for use.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "newConfigValues"
            }
          ],
          "loc": {
            "start": {
              "line": 24,
              "column": 4
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 34,
                "column": 4
              },
              "end": {
                "line": 37,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "newConfigValues",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Key-value pairs that will be placed into the store. See "
                      },
                      {
                        "type": "link",
                        "url": "#config",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "config"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": " for details on what key-value pairs are available for use."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "api",
          "kind": "function",
          "name": "updateConfig",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "updateConfig",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "api.updateConfig"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add an event listener for the specified event type. The event is emitted by the SDK instance."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "on"
            },
            {
              "title": "param",
              "description": "The event type for which to add the listener.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "type"
            },
            {
              "title": "param",
              "description": "The listener for the event type. The parameters of the listener depend on the event type.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Function"
              },
              "name": "listener"
            },
            {
              "title": "throws",
              "description": "Invalid event type",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Error"
              }
            },
            {
              "title": "example",
              "description": "// Listen for events of a specific type emitted by the SDK.\nclient.on('dummy:event', function (params) {\n   // Handle the event.\n})",
              "lineNumber": 9
            }
          ],
          "loc": {
            "start": {
              "line": 17,
              "column": 2
            },
            "end": {
              "line": 31,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 32,
                "column": 2
              },
              "end": {
                "line": 35,
                "column": 3
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/api.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Listen for events of a specific type emitted by the SDK.\nclient.on('dummy:event', function (params) {\n   // Handle the event.\n})"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "type",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The event type for which to add the listener."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "listener",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The listener for the event type. The parameters of the listener depend on the event type."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Function"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Invalid event type"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Error"
              }
            }
          ],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "api",
          "kind": "function",
          "name": "on",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "on",
              "kind": "function"
            }
          ],
          "namespace": "apion"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Removes an event listener for the specified event type. The event is emitted by the SDK instance."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "off"
            },
            {
              "title": "param",
              "description": "The event type for which to remote the listener.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "type"
            },
            {
              "title": "param",
              "description": "The listener to remove.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Function"
              },
              "name": "listener"
            },
            {
              "title": "throws",
              "description": "Invalid event type",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Error"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 37,
              "column": 2
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 47,
                "column": 2
              },
              "end": {
                "line": 50,
                "column": 3
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "type",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The event type for which to remote the listener."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "listener",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The listener to remove."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Function"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Invalid event type"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Error"
              }
            }
          ],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "api",
          "kind": "function",
          "name": "off",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "off",
              "kind": "function"
            }
          ],
          "namespace": "apioff"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds a global event listener to SDK instance."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "subscribe"
            },
            {
              "title": "param",
              "description": "The event listener to add. The parameters are (type, ...args), where args depend on the event type.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Function"
              },
              "name": "listener"
            },
            {
              "title": "throws",
              "description": "Listener not a function",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Error"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 61,
                "column": 2
              },
              "end": {
                "line": 64,
                "column": 3
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "listener",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The event listener to add. The parameters are (type, ...args), where args depend on the event type."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Function"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Listener not a function"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Error"
              }
            }
          ],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "api",
          "kind": "function",
          "name": "subscribe",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "subscribe",
              "kind": "function"
            }
          ],
          "namespace": "apisubscribe"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Removes a global event listener from SDK instance."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "unsubscribe"
            },
            {
              "title": "param",
              "description": "The event listener to remove.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Function"
              },
              "name": "listener"
            },
            {
              "title": "throws",
              "description": "Listener not a function",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Error"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 66,
              "column": 2
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 75,
                "column": 2
              },
              "end": {
                "line": 78,
                "column": 3
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "listener",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The event listener to remove."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Function"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Listener not a function"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Error"
              }
            }
          ],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "api",
          "kind": "function",
          "name": "unsubscribe",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "unsubscribe",
              "kind": "function"
            }
          ],
          "namespace": "apiunsubscribe"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves information about the current user."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "getUserInfo"
            },
            {
              "title": "returns",
              "description": "user The user data.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            },
            {
              "title": "returns",
              "description": "user.username The username of the current user. Note that this username can take different encoded forms.\n                                It's not meant to be displayed to a user.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "returns",
              "description": "user.token The current access token.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 240,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 251,
                "column": 4
              },
              "end": {
                "line": 254,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "user The user data."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            },
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "user.username The username of the current user. Note that this username can take different encoded forms.\nIt's not meant to be displayed to a user."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "user.token The current access token."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "api",
          "kind": "function",
          "name": "getUserInfo",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "getUserInfo",
              "kind": "function"
            }
          ],
          "namespace": "apigetUserInfo"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Sets the authentication tokens necessary to make requests to the platform. The access token\nprovided establishes what can be accessed by the SDK. The identity token represents who is authenticated."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 5
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 6,
              "name": "cpaasAuth"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 7,
              "name": "setTokens"
            },
            {
              "title": "param",
              "description": "Dictionary object of parameters.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "An access token retrieved using the authentication APIs of the platform.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.accessToken"
            },
            {
              "title": "param",
              "description": "An identity token retrieved using the authentication APIs of the platform.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.idToken"
            },
            {
              "title": "example",
              "description": "client.setTokens({\n  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n  idToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n})",
              "lineNumber": 11
            }
          ],
          "loc": {
            "start": {
              "line": 318,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 335,
                "column": 4
              },
              "end": {
                "line": 346,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/api.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "client.setTokens({\n  accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n  idToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n})"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Dictionary object of parameters."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.accessToken",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An access token retrieved using the authentication APIs of the platform."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.idToken",
                  "lineNumber": 10,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An identity token retrieved using the authentication APIs of the platform."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "api",
          "kind": "function",
          "name": "setTokens",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "setTokens",
              "kind": "function"
            }
          ],
          "namespace": "apisetTokens"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Sets the authentication tokens necessary to make requests to the platform. The bearerAccessToken\nprovided establishes what can be accessed by the SDK. The identity token represents who is authenticated."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 5
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 6,
              "name": "cpaasAuth"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 7,
              "name": "setCredentials"
            },
            {
              "title": "param",
              "description": "The credentials object.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "credentials"
            },
            {
              "title": "param",
              "description": "A bearerAccessToken retrieved using the authentication APIs of the platform.\n                                              The bearerAccessToken is same as the access token for the cpaas platform.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "credentials.bearerAccessToken"
            },
            {
              "title": "param",
              "description": "An identity token retrieved using the authentication APIs of the platform.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "credentials.idToken"
            },
            {
              "title": "example",
              "description": "client.setCredentials({\n  bearerAccessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n  idToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n});",
              "lineNumber": 12
            }
          ],
          "loc": {
            "start": {
              "line": 411,
              "column": 4
            },
            "end": {
              "line": 428,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 429,
                "column": 4
              },
              "end": {
                "line": 443,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/api.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "client.setCredentials({\n  bearerAccessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n  idToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n});"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "credentials",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The credentials object."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "credentials.bearerAccessToken",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "A bearerAccessToken retrieved using the authentication APIs of the platform.\nThe bearerAccessToken is same as the access token for the cpaas platform."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "credentials.idToken",
                  "lineNumber": 11,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An identity token retrieved using the authentication APIs of the platform."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "api",
          "kind": "function",
          "name": "setCredentials",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "setCredentials",
              "kind": "function"
            }
          ],
          "namespace": "apisetCredentials"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieve information about the browser being used."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Browser information being defined indicates that the browser supports\nbasic webRTC scenarios."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 6
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 7,
              "name": "getBrowserDetails"
            },
            {
              "title": "return",
              "description": "Object containing `browser` and `version` information.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            },
            {
              "title": "example",
              "description": "const details = client.getBrowserDetails()\n\nlog(`Browser in use: ${details.browser}, version ${details.version}.`)",
              "lineNumber": 9
            }
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 4
            },
            "end": {
              "line": 33,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 34,
                "column": 4
              },
              "end": {
                "line": 37,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/index.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "const details = client.getBrowserDetails()\n\nlog(`Browser in use: ${details.browser}, version ${details.version}.`)"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Object containing "
                      },
                      {
                        "type": "inlineCode",
                        "value": "browser"
                      },
                      {
                        "type": "text",
                        "value": " and "
                      },
                      {
                        "type": "inlineCode",
                        "value": "version"
                      },
                      {
                        "type": "text",
                        "value": " information."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "api",
          "kind": "function",
          "name": "getBrowserDetails",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "getBrowserDetails",
              "kind": "function"
            }
          ],
          "namespace": "apigetBrowserDetails"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The Basic Error object. Provides information about an error that occurred in the SDK."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "BasicError"
            },
            {
              "title": "memberof",
              "description": "api",
              "lineNumber": 5
            },
            {
              "title": "property",
              "description": "The code of the error. If no code is known, this will be 'NO_CODE'.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "code"
            },
            {
              "title": "property",
              "description": "A human-readable message to describe the error. If no message is known, this will be 'An error occurred'.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "message"
            }
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 11,
                "column": 0
              },
              "end": {
                "line": 24,
                "column": 16
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/errors/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "code",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The code of the error. If no code is known, this will be 'NO_CODE'."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "message",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A human-readable message to describe the error. If no message is known, this will be 'An error occurred'."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "BasicError",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "api",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "api",
              "kind": "module"
            },
            {
              "name": "BasicError",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "api.BasicError"
        }
      ]
    },
    "path": [
      {
        "name": "api",
        "kind": "module"
      }
    ],
    "namespace": "api"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The 'call' namespace (within the 'api' type) is used to make audio and video calls to and from\nSIP users and PSTN phones."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Call functions are all part of the 'call' namespace."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 6,
        "type": null
      },
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 7,
        "type": null,
        "name": "call"
      }
    ],
    "loc": {
      "start": {
        "line": 3,
        "column": 0
      },
      "end": {
        "line": 11,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 351,
          "column": 0
        },
        "end": {
          "line": 355,
          "column": 1
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "namespace",
    "name": "call",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A call operation has either started, been updated, or finished."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about ongoing call operations are stored with the call\ninformation (see the "
                  },
                  {
                    "type": "link",
                    "url": "#callgetbyid",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getById"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API). This event indicates that\nan operation's information has been changed."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Local call operations will be tracked from start to finish. An operation may\nbe updated as it progresses, based on the status of the operation. The\noperation status may be ongoing or pending, depending if the operation is\nwaiting on activity on the local or remote end of the call, respectively."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Except in the case of slow-start operations, remote operations will only be\ntracked as a \"finish\", to indicate that it occurred."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 14,
              "type": null
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 15
            },
            {
              "title": "event",
              "description": "call:operation",
              "lineNumber": 16
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 17,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The call operation causing this event.",
              "lineNumber": 18,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.operation"
            },
            {
              "title": "param",
              "description": "The transition reason for the operation change.",
              "lineNumber": 19,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.transition"
            },
            {
              "title": "param",
              "description": "Flag indicating whether the operation was local or not.",
              "lineNumber": 20,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "params.isLocal"
            },
            {
              "title": "param",
              "description": "The operation information before this change.\n   If the transition is to \"start\" the operation, there will be no previous information.",
              "lineNumber": 21,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "params.previous"
            },
            {
              "title": "param",
              "description": "The operation that was ongoing.",
              "lineNumber": 23,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "params.previous.operation"
            },
            {
              "title": "param",
              "description": "The operation status before this change.",
              "lineNumber": 24,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "params.previous.status"
            },
            {
              "title": "param",
              "description": "An error object, if the operation was not successful.",
              "lineNumber": 25,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "api.BasicError"
                }
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 27,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 28,
                "column": 0
              },
              "end": {
                "line": 28,
                "column": 46
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 17,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.operation",
                  "lineNumber": 18,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The call operation causing this event."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.transition",
                  "lineNumber": 19,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The transition reason for the operation change."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.isLocal",
                  "lineNumber": 20,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Flag indicating whether the operation was local or not."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  }
                },
                {
                  "title": "param",
                  "name": "params.previous",
                  "lineNumber": 21,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The operation information before this change.\nIf the transition is to \"start\" the operation, there will be no previous information."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "params.previous.operation",
                      "lineNumber": 23,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The operation that was ongoing."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "string"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "params.previous.status",
                      "lineNumber": 24,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The operation status before this change."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "string"
                        }
                      }
                    }
                  ]
                },
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 25,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An error object, if the operation was not successful."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "api.BasicError"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "call",
          "kind": "event",
          "name": "call:operation",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:operation",
              "kind": "event"
            }
          ],
          "namespace": "call.event:call:operation"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An outgoing call has been started."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about the Call can be retrieved using the "
                  },
                  {
                    "type": "link",
                    "url": "#callgetbyid",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getById"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nAPI."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 7
            },
            {
              "title": "event",
              "description": "call:start",
              "lineNumber": 8
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the call.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.callId"
            },
            {
              "title": "param",
              "description": "An error object, if the operation was not successful.",
              "lineNumber": 11,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "api.BasicError"
                }
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 30,
              "column": 0
            },
            "end": {
              "line": 42,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 43,
                "column": 0
              },
              "end": {
                "line": 43,
                "column": 40
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.callId",
                  "lineNumber": 10,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the call."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 11,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An error object, if the operation was not successful."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "api.BasicError"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "call",
          "kind": "event",
          "name": "call:start",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:start",
              "kind": "event"
            }
          ],
          "namespace": "call.event:call:start"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A new incoming call has been received."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about the Call can be retrieved using the "
                  },
                  {
                    "type": "link",
                    "url": "#callgetbyid",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getById"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nAPI."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 7
            },
            {
              "title": "event",
              "description": "call:receive",
              "lineNumber": 8
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the call.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.callId"
            },
            {
              "title": "param",
              "description": "An error object, if the operation was not successful.",
              "lineNumber": 11,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "api.BasicError"
                }
              },
              "name": "params.error"
            },
            {
              "title": "example",
              "description": "client.on('call:receive', function(params) {\n    // We have received a call, prompt the user to respond.\n    promptUser(client.call.getById(params.callId));\n});",
              "lineNumber": 12
            }
          ],
          "loc": {
            "start": {
              "line": 61,
              "column": 0
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 79,
                "column": 0
              },
              "end": {
                "line": 79,
                "column": 43
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "client.on('call:receive', function(params) {\n    // We have received a call, prompt the user to respond.\n    promptUser(client.call.getById(params.callId));\n});"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.callId",
                  "lineNumber": 10,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the call."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 11,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An error object, if the operation was not successful."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "api.BasicError"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "call",
          "kind": "event",
          "name": "call:receive",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:receive",
              "kind": "event"
            }
          ],
          "namespace": "call.event:call:receive"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Call's state has changed."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "See "
                  },
                  {
                    "type": "link",
                    "url": "#callstates",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.states"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " for information about call states."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 5
            },
            {
              "title": "event",
              "description": "call:stateChange",
              "lineNumber": 6
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the Media object that was operated on.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.callId"
            },
            {
              "title": "param",
              "description": "The call's properties before the operation changed it.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params.previous"
            },
            {
              "title": "param",
              "description": "The previous state of the call.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.previous.state"
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 11,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "params.transition"
            },
            {
              "title": "param",
              "description": "The status code associated with the particular state change's reason.",
              "lineNumber": 12,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "params.transition.statusCode"
            },
            {
              "title": "param",
              "description": "The reason for the state change.",
              "lineNumber": 13,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "params.transition.reasonText"
            },
            {
              "title": "param",
              "description": "The previous local hold state. Present when the state change was a hold/unhold operation.",
              "lineNumber": 14,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "params.previous.localHold"
            },
            {
              "title": "param",
              "description": "The previous remote hold state. Present when the state change was a hold/unhold operation.",
              "lineNumber": 15,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "params.previous.remoteHold"
            },
            {
              "title": "param",
              "description": "An error object, if the operation was not successful.",
              "lineNumber": 16,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "api.BasicError"
                }
              },
              "name": "params.error"
            },
            {
              "title": "example",
              "description": "client.on('call:stateChange', function (params) {\n    const call = client.call.getById(params.callId)\n    const prevState = params.previous.state\n    log(`Call changed from ${prevState} to ${call.state} state.`)\n\n    // Handle the event depending on the new call state.\n    switch (call.state) {\n        case client.call.states.CONNECTED:\n            // Handle being on call with media.\n            break\n        case client.call.states.ENDED:\n            // Handle call ending.\n            break\n        ...\n    }\n})",
              "lineNumber": 17
            }
          ],
          "loc": {
            "start": {
              "line": 81,
              "column": 0
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 116,
                "column": 0
              },
              "end": {
                "line": 116,
                "column": 51
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "client.on('call:stateChange', function (params) {\n    const call = client.call.getById(params.callId)\n    const prevState = params.previous.state\n    log(`Call changed from ${prevState} to ${call.state} state.`)\n\n    // Handle the event depending on the new call state.\n    switch (call.state) {\n        case client.call.states.CONNECTED:\n            // Handle being on call with media.\n            break\n        case client.call.states.ENDED:\n            // Handle call ending.\n            break\n        ...\n    }\n})"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.callId",
                  "lineNumber": 8,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the Media object that was operated on."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.previous",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The call's properties before the operation changed it."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Object"
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "params.previous.state",
                      "lineNumber": 10,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The previous state of the call."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    },
                    {
                      "title": "param",
                      "name": "params.previous.localHold",
                      "lineNumber": 14,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The previous local hold state. Present when the state change was a hold/unhold operation."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "boolean"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "params.previous.remoteHold",
                      "lineNumber": 15,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The previous remote hold state. Present when the state change was a hold/unhold operation."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "boolean"
                        }
                      }
                    }
                  ]
                },
                {
                  "title": "param",
                  "name": "params.transition",
                  "lineNumber": 11,
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "params.transition.statusCode",
                      "lineNumber": 12,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The status code associated with the particular state change's reason."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "number"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "params.transition.reasonText",
                      "lineNumber": 13,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The reason for the state change."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "string"
                        }
                      }
                    }
                  ]
                },
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 16,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An error object, if the operation was not successful."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "api.BasicError"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "call",
          "kind": "event",
          "name": "call:stateChange",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:stateChange",
              "kind": "event"
            }
          ],
          "namespace": "call.event:call:stateChange"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "New media has been added to the call."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 3
            },
            {
              "title": "event",
              "description": "call:newMedia",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the call.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.callId"
            },
            {
              "title": "param",
              "description": "Whether the new media is local or not.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "params.local"
            },
            {
              "title": "param",
              "description": "The list of new Tracks.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Array"
              },
              "name": "params.tracks"
            },
            {
              "title": "param",
              "description": "The ID of the Media object the Tracks belong to.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.mediaId"
            }
          ],
          "loc": {
            "start": {
              "line": 118,
              "column": 0
            },
            "end": {
              "line": 128,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 129,
                "column": 0
              },
              "end": {
                "line": 129,
                "column": 47
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.callId",
                  "lineNumber": 6,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the call."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.local",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether the new media is local or not."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  }
                },
                {
                  "title": "param",
                  "name": "params.tracks",
                  "lineNumber": 8,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The list of new Tracks."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Array"
                  }
                },
                {
                  "title": "param",
                  "name": "params.mediaId",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the Media object the Tracks belong to."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "call",
          "kind": "event",
          "name": "call:newMedia",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:newMedia",
              "kind": "event"
            }
          ],
          "namespace": "call.event:call:newMedia"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Media has been removed from the call."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 3
            },
            {
              "title": "event",
              "description": "call:removedMedia",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the call.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.callId"
            },
            {
              "title": "param",
              "description": "Whether the removed Media was local or not.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "params.local"
            },
            {
              "title": "param",
              "description": "The list of removed Tracks.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Array"
              },
              "name": "params.tracks"
            }
          ],
          "loc": {
            "start": {
              "line": 131,
              "column": 0
            },
            "end": {
              "line": 140,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 141,
                "column": 0
              },
              "end": {
                "line": 141,
                "column": 53
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.callId",
                  "lineNumber": 6,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the call."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.local",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether the removed Media was local or not."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  }
                },
                {
                  "title": "param",
                  "name": "params.tracks",
                  "lineNumber": 8,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The list of removed Tracks."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Array"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "call",
          "kind": "event",
          "name": "call:removedMedia",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:removedMedia",
              "kind": "event"
            }
          ],
          "namespace": "call.event:call:removedMedia"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A new Track has been added to the Call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The Track may have been added by either the local user or remote user using\nthe "
                  },
                  {
                    "type": "link",
                    "url": "#calladdmedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.addMedia"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about the Track can be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#mediagettrackbyid",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media.getTrackById"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 9,
              "type": null
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 10
            },
            {
              "title": "event",
              "description": "call:newTrack",
              "lineNumber": 11
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the call the track was added to.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.callId"
            },
            {
              "title": "param",
              "description": "The ID of the media the track was added to.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.mediaId"
            },
            {
              "title": "param",
              "description": "The ID of the newly added track.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.trackId"
            },
            {
              "title": "param",
              "description": "Whether the track is local or not (remote)",
              "lineNumber": 16,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "params.local"
            }
          ],
          "loc": {
            "start": {
              "line": 143,
              "column": 0
            },
            "end": {
              "line": 160,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 161,
                "column": 0
              },
              "end": {
                "line": 161,
                "column": 45
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.callId",
                  "lineNumber": 13,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the call the track was added to."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.mediaId",
                  "lineNumber": 14,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the media the track was added to."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.trackId",
                  "lineNumber": 15,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the newly added track."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.local",
                  "lineNumber": 16,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether the track is local or not (remote)"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "call",
          "kind": "event",
          "name": "call:newTrack",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:newTrack",
              "kind": "event"
            }
          ],
          "namespace": "call.event:call:newTrack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Track has been removed from a Call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The Track may have been removed by either the local user or remote user using\nthe "
                  },
                  {
                    "type": "link",
                    "url": "#callremovemedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.removeMedia"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API. Tracks are also removed from Calls\nautomatically while the Call is on hold."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Note that receiving this event is not an indication that a media operation\nhas completed. Therefore the application should not assume it is safe to\nperform a new operation at this time. To be notified when a call has had\nits media removed, see "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallremovedmedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:removedMedia"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 12,
              "type": null
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 13
            },
            {
              "title": "event",
              "description": "call:trackEnded",
              "lineNumber": 14
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the call the track was removed from.",
              "lineNumber": 16,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.callId"
            },
            {
              "title": "param",
              "description": "The ID of the media the track was removed from.",
              "lineNumber": 17,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.mediaId"
            },
            {
              "title": "param",
              "description": "The ID of the removed track.",
              "lineNumber": 18,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.trackId"
            },
            {
              "title": "param",
              "description": "Whether the track was local or not (remote)",
              "lineNumber": 19,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "params.local"
            }
          ],
          "loc": {
            "start": {
              "line": 163,
              "column": 0
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 184,
                "column": 0
              },
              "end": {
                "line": 184,
                "column": 49
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.callId",
                  "lineNumber": 16,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the call the track was removed from."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.mediaId",
                  "lineNumber": 17,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the media the track was removed from."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.trackId",
                  "lineNumber": 18,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the removed track."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.local",
                  "lineNumber": 19,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether the track was local or not (remote)"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "call",
          "kind": "event",
          "name": "call:trackEnded",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:trackEnded",
              "kind": "event"
            }
          ],
          "namespace": "call.event:call:trackEnded"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Stats have been retrieved for a Call or specific Track of a Call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "See the "
                  },
                  {
                    "type": "link",
                    "url": "#callgetstats",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getStats"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API for more information."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 6
            },
            {
              "title": "event",
              "description": "call:statsReceived",
              "lineNumber": 7
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the Call to retrieve stats for.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.callId"
            },
            {
              "title": "param",
              "description": "The ID of the Track to retrieve stats for.",
              "lineNumber": 10,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "params.trackId"
            },
            {
              "title": "param",
              "description": "The RTCStatsReport.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "Map"
              },
              "name": "params.result"
            },
            {
              "title": "param",
              "description": "An error object, if the operation was not successful.",
              "lineNumber": 12,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "api.BasicError"
                }
              },
              "name": "params.error"
            },
            {
              "title": "example",
              "description": "client.on('call:statsReceived', function (params) {\n   // Iterate over each individual statistic inside the RTCPStatsReport Map.\n   params.result.forEach(stat => {\n     ...\n   })\n})",
              "lineNumber": 13
            }
          ],
          "loc": {
            "start": {
              "line": 186,
              "column": 0
            },
            "end": {
              "line": 206,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 207,
                "column": 0
              },
              "end": {
                "line": 207,
                "column": 50
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "client.on('call:statsReceived', function (params) {\n   // Iterate over each individual statistic inside the RTCPStatsReport Map.\n   params.result.forEach(stat => {\n     ...\n   })\n})"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.callId",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the Call to retrieve stats for."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.trackId",
                  "lineNumber": 10,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the Track to retrieve stats for."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "params.result",
                  "lineNumber": 11,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The RTCStatsReport."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Map"
                  }
                },
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 12,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An error object, if the operation was not successful."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "api.BasicError"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "call",
          "kind": "event",
          "name": "call:statsReceived",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:statsReceived",
              "kind": "event"
            }
          ],
          "namespace": "call.event:call:statsReceived"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Track has been replaced on the Call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Track is replaced by the local user using the "
                  },
                  {
                    "type": "link",
                    "url": "#callreplacetrack",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.replaceTrack"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nAPI."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This event is similar to the "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallnewtrack",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:newTrack"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent, where the call has a new Track, except that an existing Track has\nbeen removed at the same time. The event includes information about the\nTrack that was replaced to help an application replace it seamlessly."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 11,
              "type": null
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 12
            },
            {
              "title": "event",
              "description": "call:trackReplaced",
              "lineNumber": 13
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the call where a track was replaced.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.callId"
            },
            {
              "title": "param",
              "description": "The ID of the new track that replaced the old track.",
              "lineNumber": 16,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "params.newTrackId"
            },
            {
              "title": "param",
              "description": "State of the replaced track.",
              "lineNumber": 17,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.TrackObject"
                }
              },
              "name": "params.oldTrack"
            },
            {
              "title": "param",
              "description": "An error object, if the operation was not successful.",
              "lineNumber": 18,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "api.BasicError"
                }
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 209,
              "column": 0
            },
            "end": {
              "line": 228,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 229,
                "column": 0
              },
              "end": {
                "line": 229,
                "column": 55
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.callId",
                  "lineNumber": 15,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the call where a track was replaced."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.newTrackId",
                  "lineNumber": 16,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the new track that replaced the old track."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "params.oldTrack",
                  "lineNumber": 17,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "State of the replaced track."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.TrackObject"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 18,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An error object, if the operation was not successful."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "api.BasicError"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "call",
          "kind": "event",
          "name": "call:trackReplaced",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:trackReplaced",
              "kind": "event"
            }
          ],
          "namespace": "call.event:call:trackReplaced"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The list of available and supported codecs by the browser have been retrieved."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This event is emitted as a result of the "
                  },
                  {
                    "type": "link",
                    "url": "#callgetavailablecodecs",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getAvailableCodecs"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API. Please refer to the API for more\ninformation."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 6
            },
            {
              "title": "event",
              "description": "call:availableCodecs",
              "lineNumber": 7
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The kind of media the codecs are for.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.kind"
            },
            {
              "title": "param",
              "description": "The list of codecs.",
              "lineNumber": 10,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              },
              "name": "params.codecs"
            }
          ],
          "loc": {
            "start": {
              "line": 246,
              "column": 0
            },
            "end": {
              "line": 257,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 258,
                "column": 0
              },
              "end": {
                "line": 258,
                "column": 54
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.kind",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The kind of media the codecs are for."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.codecs",
                  "lineNumber": 10,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The list of codecs."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "Object"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "call",
          "kind": "event",
          "name": "call:availableCodecs",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:availableCodecs",
              "kind": "event"
            }
          ],
          "namespace": "call.event:call:availableCodecs"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Call's media connection state has been changed."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This event is emitted as a result of changes to the media connection of the Call.\nThese state changes occur during call establishment, connection loss/re-establishment, call completion, etc."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "To check the media connection state of a call, retrieve the call's information using the  "
                  },
                  {
                    "type": "link",
                    "url": "#callgetbyid",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getById"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API,\nand check the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "mediaConnectionState"
                  },
                  {
                    "type": "text",
                    "value": " property of the call.\nSee {@link call.mediaConnectionStates} for the list of possible values and descriptions."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 9,
              "type": null
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 10
            },
            {
              "title": "event",
              "description": "call:mediaConnectionChange",
              "lineNumber": 11
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the Call whose media connection state was changed.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.callId"
            },
            {
              "title": "param",
              "description": "The call's media connection properties before the operation changed it.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params.previous"
            },
            {
              "title": "param",
              "description": "The previous state of the media connection.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.previous.state"
            }
          ],
          "loc": {
            "start": {
              "line": 260,
              "column": 0
            },
            "end": {
              "line": 276,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 277,
                "column": 0
              },
              "end": {
                "line": 277,
                "column": 67
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.callId",
                  "lineNumber": 13,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the Call whose media connection state was changed."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.previous",
                  "lineNumber": 14,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The call's media connection properties before the operation changed it."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Object"
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "params.previous.state",
                      "lineNumber": 15,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The previous state of the media connection."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "call",
          "kind": "event",
          "name": "call:mediaConnectionChange",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:mediaConnectionChange",
              "kind": "event"
            }
          ],
          "namespace": "call.event:call:mediaConnectionChange"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A media restart operation for a Call has been attempted."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This event is emitted as a result of the "
                  },
                  {
                    "type": "link",
                    "url": "#callrestartmedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.restartMedia"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API being called.\nSee the description for "
                  },
                  {
                    "type": "link",
                    "url": "#callrestartmedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.restartMedia"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " for information about its\nusage."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallmediaconnectionchange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:mediaConnectionChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nwill also be emitted alongside this event when the media restart operation is\nsuccessful."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 10,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 11
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 12
            },
            {
              "title": "event",
              "description": "call:mediaRestart",
              "lineNumber": 13
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the Call that was acted on.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.callId"
            },
            {
              "title": "param",
              "description": "An error object, if the operation was not successful.",
              "lineNumber": 16,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "api.BasicError"
                }
              },
              "name": "params.error"
            },
            {
              "title": "example",
              "description": "client.on('call:mediaRestart', function (params) {\n   if (params.error) {\n     // The operation failed. May want to determine whether to re-attempt the\n     //    operation (if the failure was simply a connectivity issue) or to\n     //    consider the call's media irrecoverable.\n     ...\n   } else {\n     // The call should be re-establishing media, with the call's\n     //    `mediaConnectionState` being updated.\n     const mediaState = client.call.getById(params.callId).mediaConnectionState\n     ...\n   }\n})",
              "lineNumber": 17
            }
          ],
          "loc": {
            "start": {
              "line": 279,
              "column": 0
            },
            "end": {
              "line": 310,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 311,
                "column": 0
              },
              "end": {
                "line": 311,
                "column": 48
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "client.on('call:mediaRestart', function (params) {\n   if (params.error) {\n     // The operation failed. May want to determine whether to re-attempt the\n     //    operation (if the failure was simply a connectivity issue) or to\n     //    consider the call's media irrecoverable.\n     ...\n   } else {\n     // The call should be re-establishing media, with the call's\n     //    `mediaConnectionState` being updated.\n     const mediaState = client.call.getById(params.callId).mediaConnectionState\n     ...\n   }\n})"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.callId",
                  "lineNumber": 15,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the Call that was acted on."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 16,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An error object, if the operation was not successful."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "api.BasicError"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "event",
          "name": "call:mediaRestart",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "call:mediaRestart",
              "kind": "event",
              "scope": "static"
            }
          ],
          "namespace": "call.event:call:mediaRestart"
        }
      ],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about a Call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Can be retrieved using the "
                  },
                  {
                    "type": "link",
                    "url": "#callgetall",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getAll"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or "
                  },
                  {
                    "type": "link",
                    "url": "#callgetbyid",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getById"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "CallObject"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 8
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 9,
              "name": "cpaas_call"
            },
            {
              "title": "property",
              "description": "The ID of the call.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "id"
            },
            {
              "title": "property",
              "description": "A unique identifier (uri) of the person who made the call.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "user.UserID"
              },
              "name": "from"
            },
            {
              "title": "property",
              "description": "A unique identifier (uri) of the person who receives the call.",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "user.UserID"
              },
              "name": "to"
            },
            {
              "title": "property",
              "description": "The direction in which the call was created. Can be 'outgoing' or 'incoming'.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "direction"
            },
            {
              "title": "property",
              "description": "The current state of the call. See {@link call.states} for possible states.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "state"
            },
            {
              "title": "property",
              "description": "The current status of the call's media connection. See {@link call.mediaConnectionStates} for possible states.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "mediaConnectionState"
            },
            {
              "title": "property",
              "description": "Indicates whether this call is currently being held locally.",
              "lineNumber": 16,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "localHold"
            },
            {
              "title": "property",
              "description": "Indicates whether this call is currently being held remotely.",
              "lineNumber": 17,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "remoteHold"
            },
            {
              "title": "property",
              "description": "A list of Track IDs that the call is sending to the remote participant.",
              "lineNumber": 18,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "localTracks"
            },
            {
              "title": "property",
              "description": "A list of Track IDs that the call is receiving from the remote participant.",
              "lineNumber": 19,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "remoteTracks"
            },
            {
              "title": "property",
              "description": "Information about the other call participant.",
              "lineNumber": 20,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "remoteParticipant"
            },
            {
              "title": "property",
              "description": "The User ID of the remote participant in the form \"username@domain\".",
              "lineNumber": 21,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "remoteParticipant.displayNumber"
            },
            {
              "title": "property",
              "description": "The display name of the remote participant.",
              "lineNumber": 22,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "remoteParticipant.displayName"
            },
            {
              "title": "property",
              "description": "The bandwidth limitations set for the call.",
              "lineNumber": 23,
              "type": {
                "type": "NameExpression",
                "name": "call.BandwidthControls"
              },
              "name": "bandwidth"
            },
            {
              "title": "property",
              "description": "The start time of the call in milliseconds since the epoch.",
              "lineNumber": 24,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "startTime"
            },
            {
              "title": "property",
              "description": "The end time of the call in milliseconds since the epoch.",
              "lineNumber": 25,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "endTime"
            }
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 39,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 351,
                "column": 0
              },
              "end": {
                "line": 355,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "id",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "from",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A unique identifier (uri) of the person who made the call."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "user.UserID"
              }
            },
            {
              "title": "property",
              "name": "to",
              "lineNumber": 12,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A unique identifier (uri) of the person who receives the call."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "user.UserID"
              }
            },
            {
              "title": "property",
              "name": "direction",
              "lineNumber": 13,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The direction in which the call was created. Can be 'outgoing' or 'incoming'."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "state",
              "lineNumber": 14,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The current state of the call. See "
                      },
                      {
                        "type": "link",
                        "url": "#callstates",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "call.states"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": " for possible states."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "mediaConnectionState",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The current status of the call's media connection. See "
                      },
                      {
                        "type": "link",
                        "url": "#callmediaconnectionstates",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "call.mediaConnectionStates"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": " for possible states."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "localHold",
              "lineNumber": 16,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Indicates whether this call is currently being held locally."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "property",
              "name": "remoteHold",
              "lineNumber": 17,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Indicates whether this call is currently being held remotely."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "property",
              "name": "localTracks",
              "lineNumber": 18,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A list of Track IDs that the call is sending to the remote participant."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "title": "property",
              "name": "remoteTracks",
              "lineNumber": 19,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A list of Track IDs that the call is receiving from the remote participant."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "title": "property",
              "name": "remoteParticipant",
              "lineNumber": 20,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Information about the other call participant."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "property",
                  "name": "remoteParticipant.displayNumber",
                  "lineNumber": 21,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The User ID of the remote participant in the form \"username@domain\"."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "property",
                  "name": "remoteParticipant.displayName",
                  "lineNumber": 22,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The display name of the remote participant."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                }
              ]
            },
            {
              "title": "property",
              "name": "bandwidth",
              "lineNumber": 23,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The bandwidth limitations set for the call."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "call.BandwidthControls"
              }
            },
            {
              "title": "property",
              "name": "startTime",
              "lineNumber": 24,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The start time of the call in milliseconds since the epoch."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "property",
              "name": "endTime",
              "lineNumber": 25,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The end time of the call in milliseconds since the epoch."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "CallObject",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "CallObject",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.CallObject"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The MediaConstraint type defines the format for configuring media options.\nEither the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "exact"
                  },
                  {
                    "type": "text",
                    "value": " or "
                  },
                  {
                    "type": "inlineCode",
                    "value": "ideal"
                  },
                  {
                    "type": "text",
                    "value": " property should be provided. If both are present, the\n"
                  },
                  {
                    "type": "inlineCode",
                    "value": "exact"
                  },
                  {
                    "type": "text",
                    "value": " value will be used."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "When the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "exact"
                  },
                  {
                    "type": "text",
                    "value": " value is provided, it will be the only value considered for the option.\nIf it cannot be used, the constraint will be considered an error."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "When the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "ideal"
                  },
                  {
                    "type": "text",
                    "value": " value is provided, it will be considered as the optimal value for the option.\nIf it cannot be used, the closest acceptable value will be used instead."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A string value can be provided directly instead of using the MediaConstraint format.\nUsing a string directly is not recommended, since behaviour may differ depending\non browser and media property. For most properties, a direct string value will be\nhandled as "
                  },
                  {
                    "type": "inlineCode",
                    "value": "ideal"
                  },
                  {
                    "type": "text",
                    "value": " behaviour, but some properties may follow the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "exact"
                  },
                  {
                    "type": "text",
                    "value": " behaviour\n(eg. "
                  },
                  {
                    "type": "inlineCode",
                    "value": "deviceId"
                  },
                  {
                    "type": "text",
                    "value": ")."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 17,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 18
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 19,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "MediaConstraint"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 20
            },
            {
              "title": "property",
              "description": "The required value for the constraint. Other values will not be accepted.",
              "lineNumber": 21,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "exact"
            },
            {
              "title": "property",
              "description": "The ideal value for the constraint. Other values will be considered if necessary.",
              "lineNumber": 22,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "ideal"
            },
            {
              "title": "example",
              "description": "// Specify video resolution when making a call.\nclient.call.make(destination, {\n   audio: true,\n   video: true,\n   videoOptions: {\n     // Set height and width constraints to ideally be 1280x720.\n     height: { ideal: 720 },\n     width: { ideal: 1280 }\n   }\n})",
              "lineNumber": 23
            }
          ],
          "loc": {
            "start": {
              "line": 91,
              "column": 0
            },
            "end": {
              "line": 125,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 351,
                "column": 0
              },
              "end": {
                "line": 355,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Specify video resolution when making a call.\nclient.call.make(destination, {\n   audio: true,\n   video: true,\n   videoOptions: {\n     // Set height and width constraints to ideally be 1280x720.\n     height: { ideal: 720 },\n     width: { ideal: 1280 }\n   }\n})"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "exact",
              "lineNumber": 21,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The required value for the constraint. Other values will not be accepted."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            },
            {
              "title": "property",
              "name": "ideal",
              "lineNumber": 22,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ideal value for the constraint. Other values will be considered if necessary."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "MediaConstraint",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "MediaConstraint",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.MediaConstraint"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The BandwidthControls type defines the format for configuring media and/or track bandwidth options.\nBandwidthControls only affect received remote tracks of the specified type."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 5
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "BandwidthControls"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 7
            },
            {
              "title": "property",
              "description": "The desired combined bandwidth bitrate in kilobits per second for all media in the call.",
              "lineNumber": 8,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "call"
            },
            {
              "title": "property",
              "description": "The desired bandwidth bitrate in kilobits per second for received remote audio.",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "audio"
            },
            {
              "title": "property",
              "description": "The desired bandwidth bitrate in kilobits per second for received remote video.",
              "lineNumber": 10,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "video"
            },
            {
              "title": "example",
              "description": "// Specify received remote video bandwidth limits when making a call.\nclient.call.make(destination, mediaConstraints,\n {\n   bandwidth: {\n     video: 5\n   }\n }\n)",
              "lineNumber": 11
            }
          ],
          "loc": {
            "start": {
              "line": 127,
              "column": 0
            },
            "end": {
              "line": 147,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 351,
                "column": 0
              },
              "end": {
                "line": 355,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Specify received remote video bandwidth limits when making a call.\nclient.call.make(destination, mediaConstraints,\n {\n   bandwidth: {\n     video: 5\n   }\n }\n)"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "call",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The desired combined bandwidth bitrate in kilobits per second for all media in the call."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "title": "property",
              "name": "audio",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The desired bandwidth bitrate in kilobits per second for received remote audio."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            },
            {
              "title": "property",
              "name": "video",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The desired bandwidth bitrate in kilobits per second for received remote video."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "BandwidthControls",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "BandwidthControls",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.BandwidthControls"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The DSCPControls type defines the format for configuring network priorities (DSCP marking) for the media traffic."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If DSCPControls are not configured for a call the network priority of the traffic for all media kinds will be the default (i.e., \"low\")."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "DSCPControls"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 8
            },
            {
              "title": "property",
              "description": "The desired network priority for audio traffic (see {@link https://www.w3.org/TR/webrtc-priority/#rtc-priority-type RTCPriorityType Enum} for the list of possible values).",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "RTCPriorityType"
                }
              },
              "name": "audioNetworkPriority",
              "default": "'low'"
            },
            {
              "title": "property",
              "description": "The desired network priority for video traffic (see {@link https://www.w3.org/TR/webrtc-priority/#rtc-priority-type RTCPriorityType Enum} for the list of possible values).",
              "lineNumber": 10,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "RTCPriorityType"
                }
              },
              "name": "videoNetworkPriority",
              "default": "'low'"
            },
            {
              "title": "property",
              "description": "The desired network priority for screen share traffic (see {@link https://www.w3.org/TR/webrtc-priority/#rtc-priority-type RTCPriorityType Enum} for the list of possible values).",
              "lineNumber": 11,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "RTCPriorityType"
                }
              },
              "name": "screenNetworkPriority",
              "default": "'low'"
            }
          ],
          "loc": {
            "start": {
              "line": 149,
              "column": 0
            },
            "end": {
              "line": 161,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 351,
                "column": 0
              },
              "end": {
                "line": 355,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "audioNetworkPriority",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The desired network priority for audio traffic (see "
                      },
                      {
                        "type": "link",
                        "url": "https://www.w3.org/TR/webrtc-priority/#rtc-priority-type",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "RTCPriorityType Enum"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": " for the list of possible values)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "RTCPriorityType"
                }
              }
            },
            {
              "title": "property",
              "name": "videoNetworkPriority",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The desired network priority for video traffic (see "
                      },
                      {
                        "type": "link",
                        "url": "https://www.w3.org/TR/webrtc-priority/#rtc-priority-type",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "RTCPriorityType Enum"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": " for the list of possible values)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "RTCPriorityType"
                }
              }
            },
            {
              "title": "property",
              "name": "screenNetworkPriority",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The desired network priority for screen share traffic (see "
                      },
                      {
                        "type": "link",
                        "url": "https://www.w3.org/TR/webrtc-priority/#rtc-priority-type",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "RTCPriorityType Enum"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": " for the list of possible values)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "RTCPriorityType"
                }
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "DSCPControls",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "DSCPControls",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.DSCPControls"
        },
        {
          "description": "",
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 1,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 2
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "IceServer"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 4
            },
            {
              "title": "property",
              "description": "Either an array of URLs for reaching out several ICE servers or a single URL for reaching one ICE server. See {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer/urls RTCIceServers.urls documentation} to learn more about the actual url format.",
              "lineNumber": 5,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "urls"
            },
            {
              "title": "property",
              "description": "The credential needed by the ICE server.",
              "lineNumber": 6,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "credential"
            }
          ],
          "loc": {
            "start": {
              "line": 163,
              "column": 0
            },
            "end": {
              "line": 170,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 351,
                "column": 0
              },
              "end": {
                "line": 355,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "urls",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Either an array of URLs for reaching out several ICE servers or a single URL for reaching one ICE server. See "
                      },
                      {
                        "type": "link",
                        "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer/urls",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "RTCIceServers.urls documentation"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": " to learn more about the actual url format."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "title": "property",
              "name": "credential",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The credential needed by the ICE server."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "IceServer",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "IceServer",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.IceServer"
        },
        {
          "description": "",
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 1,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 2
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "SdpHandlerInfo"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 4
            },
            {
              "title": "property",
              "description": "The id corresponding to the call for which the handler is being run.",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            },
            {
              "title": "property",
              "description": "The session description's type.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "RTCSdpType"
              },
              "name": "type"
            },
            {
              "title": "property",
              "description": "The step that will occur after the SDP Handlers are run.\n   Will be either 'set' (the SDP will be set locally) or 'send' (the SDP will\n   be sent to the remote endpoint).",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "step"
            },
            {
              "title": "property",
              "description": "Which end of the connection created the SDP.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "endpoint"
            }
          ],
          "loc": {
            "start": {
              "line": 172,
              "column": 0
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 351,
                "column": 0
              },
              "end": {
                "line": 355,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "callId",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The id corresponding to the call for which the handler is being run."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "type",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The session description's type."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "RTCSdpType"
              }
            },
            {
              "title": "property",
              "name": "step",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The step that will occur after the SDP Handlers are run.\nWill be either 'set' (the SDP will be set locally) or 'send' (the SDP will\nbe sent to the remote endpoint)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "endpoint",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Which end of the connection created the SDP."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "SdpHandlerInfo",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "SdpHandlerInfo",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.SdpHandlerInfo"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The form of an SDP handler function and the expected arguments that it receives."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "Function"
              },
              "name": "SdpHandlerFunction"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": "The SDP so far (could have been modified by previous handlers).",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "newSdp"
            },
            {
              "title": "param",
              "description": "Additional information that might be useful when making SDP modifications.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "call.SdpHandlerInfo"
              },
              "name": "info"
            },
            {
              "title": "param",
              "description": "The SDP in its initial state.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "originalSdp"
            },
            {
              "title": "returns",
              "description": "The resulting modified SDP based on the changes made by this function.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 185,
              "column": 0
            },
            "end": {
              "line": 195,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 351,
                "column": 0
              },
              "end": {
                "line": 355,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "newSdp",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The SDP so far (could have been modified by previous handlers)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            },
            {
              "title": "param",
              "name": "info",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Additional information that might be useful when making SDP modifications."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "call.SdpHandlerInfo"
              }
            },
            {
              "title": "param",
              "name": "originalSdp",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The SDP in its initial state."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The resulting modified SDP based on the changes made by this function."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "SdpHandlerFunction",
          "type": {
            "type": "NameExpression",
            "name": "Function"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "SdpHandlerFunction",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.SdpHandlerFunction"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The state representation of a Media object.\nMedia is a collection of Track objects."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 5
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "MediaObject"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 7
            },
            {
              "title": "property",
              "description": "The ID of the Media object.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "id"
            },
            {
              "title": "property",
              "description": "Indicator on whether this media is local or remote.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "local"
            },
            {
              "title": "property",
              "description": "A list of Track objects that are contained in this Media object.",
              "lineNumber": 10,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "call.TrackObject"
                  }
                ]
              },
              "name": "tracks"
            }
          ],
          "loc": {
            "start": {
              "line": 197,
              "column": 0
            },
            "end": {
              "line": 208,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 351,
                "column": 0
              },
              "end": {
                "line": 355,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "id",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Media object."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "local",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Indicator on whether this media is local or remote."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "property",
              "name": "tracks",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A list of Track objects that are contained in this Media object."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "call.TrackObject"
                  }
                ]
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "MediaObject",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "MediaObject",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.MediaObject"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Track is a stream of audio or video media from a single source.\nTracks can be retrieved using the Media module's "
                  },
                  {
                    "type": "inlineCode",
                    "value": "getTrackById"
                  },
                  {
                    "type": "text",
                    "value": " API and manipulated with other functions of the Media module."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 5
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "TrackObject"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 7
            },
            {
              "title": "property",
              "description": "The list of CSS selectors that were used to render this Track.",
              "lineNumber": 8,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "containers"
            },
            {
              "title": "property",
              "description": "Indicator of whether this Track is disabled or not. If disabled, it cannot be re-enabled.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "disabled"
            },
            {
              "title": "property",
              "description": "Indicator of whether this Track is a locally created one or is a remote one.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "isLocal"
            },
            {
              "title": "property",
              "description": "The ID of the Track.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "id"
            },
            {
              "title": "property",
              "description": "The kind of Track this is (audio, video).",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "kind"
            },
            {
              "title": "property",
              "description": "The label of the device this Track uses.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "label"
            },
            {
              "title": "property",
              "description": "Indicator on whether this Track is muted or not.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "muted"
            },
            {
              "title": "property",
              "description": "Indicator on whether this Track is receiving media from its source or not.\n   When true, the Track can be considered removed. This indicator is affected by actions outside the\n   control of the SDK, such as the remote endpoint of a Call stopping to send media for a remote Track,\n   or the browser temporarily disabling the SDK's access to a local Track's source.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "sourceMuted"
            },
            {
              "title": "property",
              "description": "The state of this Track. Can be 'live' or 'ended'.",
              "lineNumber": 19,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "state"
            },
            {
              "title": "property",
              "description": "The ID of the Media Stream that includes this Track.",
              "lineNumber": 20,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "streamId"
            }
          ],
          "loc": {
            "start": {
              "line": 210,
              "column": 0
            },
            "end": {
              "line": 231,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 351,
                "column": 0
              },
              "end": {
                "line": 355,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "containers",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The list of CSS selectors that were used to render this Track."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "title": "property",
              "name": "disabled",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Indicator of whether this Track is disabled or not. If disabled, it cannot be re-enabled."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "property",
              "name": "isLocal",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Indicator of whether this Track is a locally created one or is a remote one."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "property",
              "name": "id",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Track."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "kind",
              "lineNumber": 12,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The kind of Track this is (audio, video)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "label",
              "lineNumber": 13,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The label of the device this Track uses."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "muted",
              "lineNumber": 14,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Indicator on whether this Track is muted or not."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "property",
              "name": "sourceMuted",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Indicator on whether this Track is receiving media from its source or not.\nWhen true, the Track can be considered removed. This indicator is affected by actions outside the\ncontrol of the SDK, such as the remote endpoint of a Call stopping to send media for a remote Track,\nor the browser temporarily disabling the SDK's access to a local Track's source."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "property",
              "name": "state",
              "lineNumber": 19,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The state of this Track. Can be 'live' or 'ended'."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "streamId",
              "lineNumber": 20,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Media Stream that includes this Track."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "TrackObject",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "TrackObject",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.TrackObject"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A collection of media devices and their information."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "DevicesObject"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 6
            },
            {
              "title": "property",
              "description": "A list of camera device information.",
              "lineNumber": 7,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "call.DeviceInfo"
                  }
                ]
              },
              "name": "camera"
            },
            {
              "title": "property",
              "description": "A list of microphone device information.",
              "lineNumber": 8,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "call.DeviceInfo"
                  }
                ]
              },
              "name": "microphone"
            },
            {
              "title": "property",
              "description": "A list of speaker device information.",
              "lineNumber": 9,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "call.DeviceInfo"
                  }
                ]
              },
              "name": "speaker"
            }
          ],
          "loc": {
            "start": {
              "line": 233,
              "column": 0
            },
            "end": {
              "line": 243,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 351,
                "column": 0
              },
              "end": {
                "line": 355,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "camera",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A list of camera device information."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "call.DeviceInfo"
                  }
                ]
              }
            },
            {
              "title": "property",
              "name": "microphone",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A list of microphone device information."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "call.DeviceInfo"
                  }
                ]
              }
            },
            {
              "title": "property",
              "name": "speaker",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A list of speaker device information."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "call.DeviceInfo"
                  }
                ]
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "DevicesObject",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "DevicesObject",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.DevicesObject"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Contains information about a device."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "DeviceInfo"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 6
            },
            {
              "title": "property",
              "description": "The ID of the device.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "deviceId"
            },
            {
              "title": "property",
              "description": "The group ID of the device. Devices that share a `groupId` belong to the same physical device.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "groupId"
            },
            {
              "title": "property",
              "description": "The type of the device (audioinput, audiooutput, videoinput).",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "kind"
            },
            {
              "title": "property",
              "description": "The name of the device.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "label"
            }
          ],
          "loc": {
            "start": {
              "line": 245,
              "column": 0
            },
            "end": {
              "line": 256,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 351,
                "column": 0
              },
              "end": {
                "line": 355,
                "column": 1
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "deviceId",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the device."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "groupId",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The group ID of the device. Devices that share a "
                      },
                      {
                        "type": "inlineCode",
                        "value": "groupId"
                      },
                      {
                        "type": "text",
                        "value": " belong to the same physical device."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "kind",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The type of the device (audioinput, audiooutput, videoinput)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "label",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The name of the device."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "DeviceInfo",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "DeviceInfo",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.DeviceInfo"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Starts an outgoing call to a "
                  },
                  {
                    "type": "link",
                    "url": "#calluserid",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "UserID"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or a\n"
                  },
                  {
                    "type": "link",
                    "url": "#callphonenumber",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "PhoneNumber"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The call will be tracked by a unique ID that is returned by the API. The\napplication will use this ID to identify and control the call after it\nhas been initiated."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The "
                  },
                  {
                    "type": "link",
                    "url": "#callgetbyid",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getById"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API can be used to retrieve the\ncurrent information about the call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstart",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:start"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nlocally when the operation completes. When the remote participant\nreceives the call, a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallreceive",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:receive"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent will be emitted remotely for them."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK requires access to the machine's media devices (e.g. microphone)\nin order to make a call. If it does not already have permissions to\nuse the devices, the user may be prompted by the browser to give\npermissions."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 23,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 24
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 25
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 26,
              "name": "cpaas_call"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 27,
              "name": "make"
            },
            {
              "title": "param",
              "description": "The desired destination.",
              "lineNumber": 28,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "call.UserID"
                  },
                  {
                    "type": "NameExpression",
                    "name": "call.PhoneNumber"
                  }
                ]
              },
              "name": "destination"
            },
            {
              "title": "param",
              "description": "The media options the call should be initialized with.",
              "lineNumber": 29,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "media"
            },
            {
              "title": "param",
              "description": "Whether the call should have audio on start. Currently, audio-less calls are not supported.",
              "lineNumber": 30,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "media.audio",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Options for configuring the call's audio.",
              "lineNumber": 31,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media.audioOptions"
            },
            {
              "title": "param",
              "description": "ID of the microphone to receive audio from.",
              "lineNumber": 32,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.audioOptions.deviceId"
            },
            {
              "title": "param",
              "description": "Whether the call should have video on start.",
              "lineNumber": 33,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "media.video",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Options for configuring the call's video.",
              "lineNumber": 34,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media.videoOptions"
            },
            {
              "title": "param",
              "description": "ID of the camera to receive video from.",
              "lineNumber": 35,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.deviceId"
            },
            {
              "title": "param",
              "description": "The height of the video.",
              "lineNumber": 36,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.height"
            },
            {
              "title": "param",
              "description": "The width of the video.",
              "lineNumber": 37,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.width"
            },
            {
              "title": "param",
              "description": "The frame rate of the video.",
              "lineNumber": 38,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.frameRate"
            },
            {
              "title": "param",
              "description": "Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)",
              "lineNumber": 39,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "media.screen",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Options for configuring the call's screenShare.",
              "lineNumber": 40,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media.screenOptions"
            },
            {
              "title": "param",
              "description": "The height of the screenShare.",
              "lineNumber": 41,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.screenOptions.height"
            },
            {
              "title": "param",
              "description": "The width of the screenShare.",
              "lineNumber": 42,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.screenOptions.width"
            },
            {
              "title": "param",
              "description": "The frame rate of the screenShare.",
              "lineNumber": 43,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.screenOptions.frameRate"
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 44,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "options"
            },
            {
              "title": "param",
              "description": "Options for configuring media's bandwidth.",
              "lineNumber": 45,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.BandwidthControls"
                }
              },
              "name": "options.bandwidth"
            },
            {
              "title": "param",
              "description": "Options for configuring DSCP markings on the media traffic",
              "lineNumber": 46,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.DSCPControls"
                }
              },
              "name": "options.dscpControls"
            },
            {
              "title": "returns",
              "description": "The generated ID of the newly created call.",
              "lineNumber": 47,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "example",
              "description": "// Listen for the event emitted after making a call.\nclient.on('call:start', function (params) {\n  const { callId, error } = params\n  if (error) {\n    // Call failed to initialize.\n  } else {\n    // Call was initialized, and the recipient user will be notified.\n  }\n})\n// Make an audio-only call.\nconst newCallId = client.call.make(destination, { audio: true })",
              "lineNumber": 48
            }
          ],
          "loc": {
            "start": {
              "line": 23,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 159,
                "column": 4
              },
              "end": {
                "line": 188,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Listen for the event emitted after making a call.\nclient.on('call:start', function (params) {\n  const { callId, error } = params\n  if (error) {\n    // Call failed to initialize.\n  } else {\n    // Call was initialized, and the recipient user will be notified.\n  }\n})\n// Make an audio-only call.\nconst newCallId = client.call.make(destination, { audio: true })"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "destination",
              "lineNumber": 28,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The desired destination."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "NameExpression",
                    "name": "call.UserID"
                  },
                  {
                    "type": "NameExpression",
                    "name": "call.PhoneNumber"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "media",
              "lineNumber": 29,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The media options the call should be initialized with."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "media.audio",
                  "lineNumber": 30,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether the call should have audio on start. Currently, audio-less calls are not supported."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "media.audioOptions",
                  "lineNumber": 31,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring the call's audio."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "media.audioOptions.deviceId",
                      "lineNumber": 32,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "ID of the microphone to receive audio from."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    }
                  ]
                },
                {
                  "title": "param",
                  "name": "media.video",
                  "lineNumber": 33,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether the call should have video on start."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "media.videoOptions",
                  "lineNumber": 34,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring the call's video."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "media.videoOptions.deviceId",
                      "lineNumber": 35,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "ID of the camera to receive video from."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.videoOptions.height",
                      "lineNumber": 36,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The height of the video."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.videoOptions.width",
                      "lineNumber": 37,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The width of the video."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.videoOptions.frameRate",
                      "lineNumber": 38,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The frame rate of the video."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    }
                  ]
                },
                {
                  "title": "param",
                  "name": "media.screen",
                  "lineNumber": 39,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "media.screenOptions",
                  "lineNumber": 40,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring the call's screenShare."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "media.screenOptions.height",
                      "lineNumber": 41,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The height of the screenShare."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.screenOptions.width",
                      "lineNumber": 42,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The width of the screenShare."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.screenOptions.frameRate",
                      "lineNumber": 43,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The frame rate of the screenShare."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "title": "param",
              "name": "options",
              "lineNumber": 44,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "options.bandwidth",
                  "lineNumber": 45,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring media's bandwidth."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.BandwidthControls"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "options.dscpControls",
                  "lineNumber": 46,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring DSCP markings on the media traffic"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.DSCPControls"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The generated ID of the newly created call."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "function",
          "name": "make",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "make",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.make"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Rejects an incoming call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The specified call to reject must be in a ringing state with an incoming\ndirection. The call will be ended as a result of the operation."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent locally when the operation completes. The remote participant\nwill be notified, through their own\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event, that the\ncall was rejected."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 14,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 15
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 16
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 17,
              "name": "call"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 18,
              "name": "reject"
            },
            {
              "title": "param",
              "description": "The ID of the call to reject.",
              "lineNumber": 19,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            }
          ],
          "loc": {
            "start": {
              "line": 190,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 211,
                "column": 4
              },
              "end": {
                "line": 214,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 19,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call to reject."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "function",
          "name": "reject",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "reject",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.reject"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Answers an incoming call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The specified call to answer must be in Initiated or Ringing state with an incoming\ndirection. The call will become connected as a result of the operation."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent locally when the operation completes. This indicates that the\ncall has connected with the remote participant. The\n"
                  },
                  {
                    "type": "link",
                    "url": "#callgetbyid",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getById"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API can be used to retrieve the latest call state\nafter the change. Further events will be emitted to indicate that the\ncall has received media from the remote participant. See the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallnewtrack",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:newTrack"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event for more\ninformation about this."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK requires access to the system's media devices (eg. microphone)\nin order to answer a call. If it does not already have permissions to\nuse the devices, the user may be prompted by the browser to give\npermissions."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 22,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 23
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 24
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 25,
              "name": "cpaas_call"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 26,
              "name": "answer"
            },
            {
              "title": "param",
              "description": "The ID of the call to answer.",
              "lineNumber": 27,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            },
            {
              "title": "param",
              "description": "The media options the call should be initialized with.",
              "lineNumber": 28,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "media"
            },
            {
              "title": "param",
              "description": "Whether the call should have audio on start. Currently, audio-less calls are not supported.",
              "lineNumber": 29,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "media.audio",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Options for configuring the call's audio.",
              "lineNumber": 30,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media.audioOptions"
            },
            {
              "title": "param",
              "description": "ID of the microphone to receive audio from.",
              "lineNumber": 31,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.audioOptions.deviceId"
            },
            {
              "title": "param",
              "description": "Whether the call should have video on start.",
              "lineNumber": 32,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "media.video",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Options for configuring the call's video.",
              "lineNumber": 33,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media.videoOptions"
            },
            {
              "title": "param",
              "description": "ID of the camera to receive video from.",
              "lineNumber": 34,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.deviceId"
            },
            {
              "title": "param",
              "description": "The height of the video.",
              "lineNumber": 35,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.height"
            },
            {
              "title": "param",
              "description": "The width of the video.",
              "lineNumber": 36,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.width"
            },
            {
              "title": "param",
              "description": "The frame rate of the video.",
              "lineNumber": 37,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.frameRate"
            },
            {
              "title": "param",
              "description": "Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)",
              "lineNumber": 38,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "media.screen",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Options for configuring the call's screenShare.",
              "lineNumber": 39,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media.screenOptions"
            },
            {
              "title": "param",
              "description": "The height of the screenShare.",
              "lineNumber": 40,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.screenOptions.height"
            },
            {
              "title": "param",
              "description": "The width of the screenShare.",
              "lineNumber": 41,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.screenOptions.width"
            },
            {
              "title": "param",
              "description": "The frame rate of the screenShare.",
              "lineNumber": 42,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.screenOptions.frameRate"
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 43,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "options"
            },
            {
              "title": "param",
              "description": "Options for configuring media's bandwidth.",
              "lineNumber": 44,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.BandwidthControls"
                }
              },
              "name": "options.bandwidth"
            },
            {
              "title": "param",
              "description": "Options for configuring DSCP markings on the media traffic",
              "lineNumber": 45,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.DSCPControls"
                }
              },
              "name": "options.dscpControls"
            }
          ],
          "loc": {
            "start": {
              "line": 216,
              "column": 4
            },
            "end": {
              "line": 262,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 323,
                "column": 4
              },
              "end": {
                "line": 338,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 27,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call to answer."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "media",
              "lineNumber": 28,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The media options the call should be initialized with."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "media.audio",
                  "lineNumber": 29,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether the call should have audio on start. Currently, audio-less calls are not supported."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "media.audioOptions",
                  "lineNumber": 30,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring the call's audio."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "media.audioOptions.deviceId",
                      "lineNumber": 31,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "ID of the microphone to receive audio from."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    }
                  ]
                },
                {
                  "title": "param",
                  "name": "media.video",
                  "lineNumber": 32,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether the call should have video on start."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "media.videoOptions",
                  "lineNumber": 33,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring the call's video."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "media.videoOptions.deviceId",
                      "lineNumber": 34,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "ID of the camera to receive video from."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.videoOptions.height",
                      "lineNumber": 35,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The height of the video."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.videoOptions.width",
                      "lineNumber": 36,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The width of the video."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.videoOptions.frameRate",
                      "lineNumber": 37,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The frame rate of the video."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    }
                  ]
                },
                {
                  "title": "param",
                  "name": "media.screen",
                  "lineNumber": 38,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "media.screenOptions",
                  "lineNumber": 39,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring the call's screenShare."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "media.screenOptions.height",
                      "lineNumber": 40,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The height of the screenShare."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.screenOptions.width",
                      "lineNumber": 41,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The width of the screenShare."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.screenOptions.frameRate",
                      "lineNumber": 42,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The frame rate of the screenShare."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "title": "param",
              "name": "options",
              "lineNumber": 43,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "options.bandwidth",
                  "lineNumber": 44,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring media's bandwidth."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.BandwidthControls"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "options.dscpControls",
                  "lineNumber": 45,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring DSCP markings on the media traffic"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.DSCPControls"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "function",
          "name": "answer",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "answer",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.answer"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Sends the \"ringing feedback\" notification to the remote participant of a call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "When using the 'manual' "
                  },
                  {
                    "type": "inlineCode",
                    "value": "ringingFeedbackMode"
                  },
                  {
                    "type": "text",
                    "value": " configuration, the application\nis responsible for transitioning the call into the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "Ringing"
                  },
                  {
                    "type": "text",
                    "value": " state. This\nAPI will notify both ends of the call to enter "
                  },
                  {
                    "type": "inlineCode",
                    "value": "Ringing"
                  },
                  {
                    "type": "text",
                    "value": " state at the same\ntime. The application may decide not to send the \"ringing feedback\"\nnotification by not using this API. The "
                  },
                  {
                    "type": "inlineCode",
                    "value": "ringingFeedbackMode"
                  },
                  {
                    "type": "text",
                    "value": " configuration\nmust be set to 'manual' to use this API."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The specified call must be an incoming call in "
                  },
                  {
                    "type": "inlineCode",
                    "value": "Initiated"
                  },
                  {
                    "type": "text",
                    "value": " state. The call\nwill enter "
                  },
                  {
                    "type": "inlineCode",
                    "value": "Ringing"
                  },
                  {
                    "type": "text",
                    "value": " state as a result of the operation."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent locally when the operation completes. The remote participant will\nbe notified of the operation through a\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event as well."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 17,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 18
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 19
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 20,
              "name": "call"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 21,
              "name": "sendRingingFeedback"
            },
            {
              "title": "param",
              "description": "The ID of the call.",
              "lineNumber": 22,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            }
          ],
          "loc": {
            "start": {
              "line": 340,
              "column": 4
            },
            "end": {
              "line": 363,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 364,
                "column": 4
              },
              "end": {
                "line": 368,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 22,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "function",
          "name": "sendRingingFeedback",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "sendRingingFeedback",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.sendRingingFeedback"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Ignores an incoming call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The specified call to ignore must be in a ringing state with an incoming\ndirection. The call will be ended as a result of the operation."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent locally when the operation completes. The remote participant\nwill not be notified that the call was ignored."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 12,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 13
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 14
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 15,
              "name": "call"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 16,
              "name": "ignore"
            },
            {
              "title": "param",
              "description": "The ID of the call to ignore.",
              "lineNumber": 17,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            }
          ],
          "loc": {
            "start": {
              "line": 370,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 389,
                "column": 4
              },
              "end": {
                "line": 392,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 17,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call to ignore."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "function",
          "name": "ignore",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "ignore",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.ignore"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Puts a call on hold."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The specified call to hold must not already be locally held. Any/all\nmedia received from the remote participant will stop being received,\nand any/all media being sent to the remote participant will stop\nbeing sent."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Some call operations cannot be performed while the call is on hold. The\ncall can be taken off hold with the "
                  },
                  {
                    "type": "link",
                    "url": "#callunhold",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.unhold"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent locally when the operation completes. The remote participant\nwill be notified of the operation through a\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event as well."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 18,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 19
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 20
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 21,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 22,
              "name": "callMe"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 23,
              "name": "hold"
            },
            {
              "title": "param",
              "description": "The ID of the call to hold.",
              "lineNumber": 24,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            }
          ],
          "loc": {
            "start": {
              "line": 394,
              "column": 4
            },
            "end": {
              "line": 419,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 420,
                "column": 4
              },
              "end": {
                "line": 423,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 24,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call to hold."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "function",
          "name": "hold",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "hold",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.hold"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Takes a call off hold."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The specified call to unhold must be locally held. If the call is not\nalso remotely held, call media will be reconnected as it was before\nthe call was held."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent locally when the operation completes. The remote participant\nwill be notified of the operation through a\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event as well."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 14,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 15
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 16
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 17,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 18,
              "name": "callMe"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 19,
              "name": "unhold"
            },
            {
              "title": "param",
              "description": "The ID of the call to unhold.",
              "lineNumber": 20,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            }
          ],
          "loc": {
            "start": {
              "line": 425,
              "column": 4
            },
            "end": {
              "line": 446,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 447,
                "column": 4
              },
              "end": {
                "line": 450,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 20,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call to unhold."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "function",
          "name": "unhold",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "unhold",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.unhold"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves the information of all calls made during the current session."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 4
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 5,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 6,
              "name": "callMe"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 7,
              "name": "getAll"
            },
            {
              "title": "return",
              "description": "Call objects.",
              "lineNumber": 8,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "call.CallObject"
                  }
                ]
              }
            },
            {
              "title": "example",
              "description": "let calls = client.call.getAll()\nlet currentCalls = calls.filter(call => {\n    return call.state === client.call.states.CONNECTED\n})",
              "lineNumber": 9
            }
          ],
          "loc": {
            "start": {
              "line": 523,
              "column": 4
            },
            "end": {
              "line": 537,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 538,
                "column": 4
              },
              "end": {
                "line": 541,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "let calls = client.call.getAll()\nlet currentCalls = calls.filter(call => {\n    return call.state === client.call.states.CONNECTED\n})"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Call objects."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "call.CallObject"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "function",
          "name": "getAll",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "getAll",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.getAll"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves the information of a single call with a specific call ID."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 4
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 5,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 6,
              "name": "callMe"
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 8,
              "name": "getById"
            },
            {
              "title": "param",
              "description": "The ID of the call to retrieve.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            },
            {
              "title": "return",
              "description": "A call object.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "call.CallObject"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 543,
              "column": 4
            },
            "end": {
              "line": 554,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 555,
                "column": 4
              },
              "end": {
                "line": 558,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call to retrieve."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A call object."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "call.CallObject"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "function",
          "name": "getById",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "getById",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.getById"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Ends an ongoing call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will stop any/all local media associated with the call. Events\nwill be emitted to indicate which media tracks were stopped. See the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalltrackended",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:trackEnded"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event for more\ninformation."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent locally when the operation completes. The remote participant\nwill be notified, through their own\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event, that the\ncall was ended."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 16,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 17
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 18
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 19,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 20,
              "name": "callMe"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 21,
              "name": "end"
            },
            {
              "title": "param",
              "description": "The ID of the call to end.",
              "lineNumber": 22,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            }
          ],
          "loc": {
            "start": {
              "line": 560,
              "column": 4
            },
            "end": {
              "line": 583,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 584,
                "column": 4
              },
              "end": {
                "line": 587,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 22,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call to end."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "function",
          "name": "end",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "end",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.end"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add new media tracks to an ongoing call.\nWill get new media tracks from the specific sources to add to the call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallnewtrack",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:newTrack"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nboth for the local and remote users to indicate a track has been\nadded to the Call."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 11,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 12
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 13
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 14,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 15,
              "name": "callMe"
            },
            {
              "title": "param",
              "description": "The ID of the call to add media to.",
              "lineNumber": 16,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            },
            {
              "title": "param",
              "description": "The media options to add to the call.",
              "lineNumber": 17,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media",
              "default": "{}"
            },
            {
              "title": "param",
              "description": "Whether to add audio to the call.",
              "lineNumber": 18,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "media.audio",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Whether to add video to the call.",
              "lineNumber": 19,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "media.video",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Whether to add the screenshare to the call. (Note: Screensharing is not supported on iOS Safari.)",
              "lineNumber": 20,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "media.screen",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Options for configuring the call's audio.",
              "lineNumber": 21,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media.audioOptions"
            },
            {
              "title": "param",
              "description": "Options for configuring the call's video.",
              "lineNumber": 22,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media.videoOptions"
            },
            {
              "title": "param",
              "description": "Options for configuring the call's screenShare.",
              "lineNumber": 23,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media.screenOptions"
            },
            {
              "title": "param",
              "description": "ID of the microphone to receive audio from.",
              "lineNumber": 24,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.audioOptions.deviceId"
            },
            {
              "title": "param",
              "description": "ID of the camera to receive video from.",
              "lineNumber": 25,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.deviceId"
            },
            {
              "title": "param",
              "description": "The height of the video.",
              "lineNumber": 26,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.height"
            },
            {
              "title": "param",
              "description": "The width of the video.",
              "lineNumber": 27,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.width"
            },
            {
              "title": "param",
              "description": "The frame rate of the video.",
              "lineNumber": 28,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.frameRate"
            },
            {
              "title": "param",
              "description": "The height of the screenShare.",
              "lineNumber": 29,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.screenOptions.height"
            },
            {
              "title": "param",
              "description": "The width of the screenShare.",
              "lineNumber": 30,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.screenOptions.width"
            },
            {
              "title": "param",
              "description": "The frame rate of the screenShare.",
              "lineNumber": 31,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.screenOptions.frameRate"
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 32,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "options"
            },
            {
              "title": "param",
              "description": "Options for configuring media's bandwidth.",
              "lineNumber": 33,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.BandwidthControls"
                }
              },
              "name": "options.bandwidth"
            },
            {
              "title": "param",
              "description": "Options for configuring DSCP markings on the media traffic",
              "lineNumber": 34,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.DSCPControls"
                }
              },
              "name": "options.dscpControls"
            }
          ],
          "loc": {
            "start": {
              "line": 589,
              "column": 4
            },
            "end": {
              "line": 624,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 625,
                "column": 4
              },
              "end": {
                "line": 634,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 16,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call to add media to."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "media",
              "lineNumber": 17,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The media options to add to the call."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "default": "{}",
              "properties": [
                {
                  "title": "param",
                  "name": "media.audio",
                  "lineNumber": 18,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether to add audio to the call."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "media.video",
                  "lineNumber": 19,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether to add video to the call."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "media.screen",
                  "lineNumber": 20,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether to add the screenshare to the call. (Note: Screensharing is not supported on iOS Safari.)"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "media.audioOptions",
                  "lineNumber": 21,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring the call's audio."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "media.audioOptions.deviceId",
                      "lineNumber": 24,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "ID of the microphone to receive audio from."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    }
                  ]
                },
                {
                  "title": "param",
                  "name": "media.videoOptions",
                  "lineNumber": 22,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring the call's video."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "media.videoOptions.deviceId",
                      "lineNumber": 25,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "ID of the camera to receive video from."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.videoOptions.height",
                      "lineNumber": 26,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The height of the video."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.videoOptions.width",
                      "lineNumber": 27,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The width of the video."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.videoOptions.frameRate",
                      "lineNumber": 28,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The frame rate of the video."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    }
                  ]
                },
                {
                  "title": "param",
                  "name": "media.screenOptions",
                  "lineNumber": 23,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring the call's screenShare."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "media.screenOptions.height",
                      "lineNumber": 29,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The height of the screenShare."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.screenOptions.width",
                      "lineNumber": 30,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The width of the screenShare."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.screenOptions.frameRate",
                      "lineNumber": 31,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The frame rate of the screenShare."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    }
                  ]
                }
              ]
            },
            {
              "title": "param",
              "name": "options",
              "lineNumber": 32,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "options.bandwidth",
                  "lineNumber": 33,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring media's bandwidth."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.BandwidthControls"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "options.dscpControls",
                  "lineNumber": 34,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring DSCP markings on the media traffic"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.DSCPControls"
                    }
                  }
                }
              ],
              "default": "{}"
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "name": "addMedia",
          "kind": "function",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "addMedia",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.addMedia"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Remove tracks from an ongoing call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalltrackended",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:trackEnded"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent for both the local and remote users to indicate that a track\nhas been removed."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 10,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 11
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 12
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 13,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 14,
              "name": "callMe"
            },
            {
              "title": "param",
              "description": "The ID of the call to remove media from.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            },
            {
              "title": "param",
              "description": "A list of track IDs to remove.",
              "lineNumber": 16,
              "type": {
                "type": "NameExpression",
                "name": "Array"
              },
              "name": "tracks"
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 17,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "options"
            },
            {
              "title": "param",
              "description": "Options for configuring media's bandwidth.",
              "lineNumber": 18,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.BandwidthControls"
                }
              },
              "name": "options.bandwidth"
            }
          ],
          "loc": {
            "start": {
              "line": 636,
              "column": 4
            },
            "end": {
              "line": 655,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 656,
                "column": 4
              },
              "end": {
                "line": 659,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call to remove media from."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "tracks",
              "lineNumber": 16,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A list of track IDs to remove."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Array"
              }
            },
            {
              "title": "param",
              "name": "options",
              "lineNumber": 17,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "options.bandwidth",
                  "lineNumber": 18,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring media's bandwidth."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.BandwidthControls"
                    }
                  }
                }
              ],
              "default": "{}"
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "name": "removeMedia",
          "kind": "function",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "removeMedia",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.removeMedia"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds local video to an ongoing Call, to start sending to the remote\nparticipant."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Can only be used in a basic media scenario, where the Call does not\nalready have video. For more advanced scenarios, the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calladdmedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.addMedia"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API can be used."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallnewtrack",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:newTrack"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nboth for the local and remote users to indicate a track has been\nadded to the Call."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 15,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 16
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 17,
              "name": "startVideo"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 18
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 19,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 20,
              "name": "callMe"
            },
            {
              "title": "param",
              "description": "ID of the call being acted on.",
              "lineNumber": 21,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            },
            {
              "title": "param",
              "description": "Options for configuring the call's video.",
              "lineNumber": 22,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "videoOptions"
            },
            {
              "title": "param",
              "description": "ID of the camera to receive video from.",
              "lineNumber": 23,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "videoOptions.deviceId"
            },
            {
              "title": "param",
              "description": "The height of the video.",
              "lineNumber": 24,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "videoOptions.height"
            },
            {
              "title": "param",
              "description": "The width of the video.",
              "lineNumber": 25,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "videoOptions.width"
            },
            {
              "title": "param",
              "description": "The frame rate of the video.",
              "lineNumber": 26,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "videoOptions.frameRate"
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 27,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "options"
            },
            {
              "title": "param",
              "description": "Options for configuring media's bandwidth.",
              "lineNumber": 28,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.BandwidthControls"
                }
              },
              "name": "options.bandwidth"
            },
            {
              "title": "param",
              "description": "Options for configuring DSCP markings on the media traffic.",
              "lineNumber": 29,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.DSCPControls"
                }
              },
              "name": "options.dscpControls"
            }
          ],
          "loc": {
            "start": {
              "line": 661,
              "column": 4
            },
            "end": {
              "line": 691,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 692,
                "column": 4
              },
              "end": {
                "line": 701,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 21,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "ID of the call being acted on."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "videoOptions",
              "lineNumber": 22,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Options for configuring the call's video."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "videoOptions.deviceId",
                  "lineNumber": 23,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "ID of the camera to receive video from."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.MediaConstraint"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "videoOptions.height",
                  "lineNumber": 24,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The height of the video."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.MediaConstraint"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "videoOptions.width",
                  "lineNumber": 25,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The width of the video."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.MediaConstraint"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "videoOptions.frameRate",
                  "lineNumber": 26,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The frame rate of the video."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.MediaConstraint"
                    }
                  }
                }
              ]
            },
            {
              "title": "param",
              "name": "options",
              "lineNumber": 27,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "options.bandwidth",
                  "lineNumber": 28,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring media's bandwidth."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.BandwidthControls"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "options.dscpControls",
                  "lineNumber": 29,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring DSCP markings on the media traffic."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "call.DSCPControls"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "function",
          "name": "startVideo",
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "startVideo",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.startVideo"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Removes local video from an ongoing Call, stopping it from being sent\nto the remote participant."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Can only be used in a basic media scenario, where the Call has only one\nvideo track. For more advanced scenarios, the\n"
                  },
                  {
                    "type": "link",
                    "url": "#callremovemedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.removeMedia"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API can be used."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalltrackended",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:trackEnded"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent for both the local and remote users to indicate that a track\nhas been removed."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 15,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 16
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 17,
              "name": "stopVideo"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 18
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 19,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 20,
              "name": "callMe"
            },
            {
              "title": "param",
              "description": "ID of the call being acted on.",
              "lineNumber": 21,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            }
          ],
          "loc": {
            "start": {
              "line": 703,
              "column": 4
            },
            "end": {
              "line": 725,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 726,
                "column": 4
              },
              "end": {
                "line": 729,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 21,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "ID of the call being acted on."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "function",
          "name": "stopVideo",
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "stopVideo",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.stopVideo"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds local screenshare to an ongoing Call, to start sending to the remote\nparticipant."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The latest SDK release (v4.X+) has not yet implemented this API in the\nsame way that it was available in previous releases (v3.X). In place\nof this API, the SDK has a more general API that can be used for this\nsame behaviour."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The "
                  },
                  {
                    "type": "link",
                    "url": "#calladdmedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.addMedia"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API can be used to perform the same behaviour\nas "
                  },
                  {
                    "type": "inlineCode",
                    "value": "startScreenshare"
                  },
                  {
                    "type": "text",
                    "value": ". {@link call.addMedia} is a general-purpose API\nfor adding media to a call, which covers the same functionality as\n"
                  },
                  {
                    "type": "inlineCode",
                    "value": "startScreenshare"
                  },
                  {
                    "type": "text",
                    "value": ". Selecting only screen options when using\n"
                  },
                  {
                    "type": "link",
                    "url": "#calladdmedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.addMedia"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " will perform the same behaviour as using\n"
                  },
                  {
                    "type": "inlineCode",
                    "value": "startScreenshare"
                  },
                  {
                    "type": "text",
                    "value": "."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 16,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 17
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 18,
              "name": "startScreenshare"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 19
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 20,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 21,
              "name": "callMe"
            },
            {
              "title": "example",
              "description": "// Select media options for adding only screenshare.\nconst media = {\n   audio: false,\n   video: false,\n   screen: true,\n   screenOptions: { ... }\n}\n\n// Add the selected media to the call.\nclient.call.addMedia(callId, media)",
              "lineNumber": 22
            }
          ],
          "loc": {
            "start": {
              "line": 731,
              "column": 4
            },
            "end": {
              "line": 764,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 836,
                "column": 4
              },
              "end": {
                "line": 839,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Select media options for adding only screenshare.\nconst media = {\n   audio: false,\n   video: false,\n   screen: true,\n   screenOptions: { ... }\n}\n\n// Add the selected media to the call.\nclient.call.addMedia(callId, media)"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "function",
          "name": "startScreenshare",
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "startScreenshare",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.startScreenshare"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Removes local screenshare from an ongoing Call, stopping it from being\nsent to the remote participant."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The latest SDK release (v4.X+) has not yet implemented this API in the\nsame way that it was available in previous releases (v3.X). In place\nof this API, the SDK has a more general API that can be used for this\nsame behaviour."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The "
                  },
                  {
                    "type": "link",
                    "url": "#callremovemedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.removeMedia"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API can be used to perform the same\nbehaviour as "
                  },
                  {
                    "type": "inlineCode",
                    "value": "stopScreenshare"
                  },
                  {
                    "type": "text",
                    "value": ". {@link call.removeMedia} is a\ngeneral-purpose API for removing media from a call, which covers the\nsame functionality as "
                  },
                  {
                    "type": "inlineCode",
                    "value": "stopScreenshare"
                  },
                  {
                    "type": "text",
                    "value": ". Specifying only the screen\ntrack when using "
                  },
                  {
                    "type": "link",
                    "url": "#callremovemedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.removeMedia"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " will perform the same\nbehaviour as using "
                  },
                  {
                    "type": "inlineCode",
                    "value": "stopScreenshare"
                  },
                  {
                    "type": "text",
                    "value": "."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "There is a caveat that if a Call has multiple video tracks (for example,\nboth a video and a screen track), the SDK itself cannot yet\ndifferentiate one from the other. The application will need to know\nwhich track was the screen track in this scenario."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 20,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 21
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 22,
              "name": "stopScreenshare"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 23
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 24,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 25,
              "name": "callMe"
            },
            {
              "title": "example",
              "description": "const call = client.call.getById(callId)\n// Get the ID of any/all video tracks on the call.\nconst videoTracks = call.localTracks.filter(trackId => {\n   const track = call.media.getTrackById(trackId)\n   // Both video and screen tracks have kind of 'video'.\n   return track.kind === 'video'\n})\n\n// Pick out the screen track.\nconst screenTrack = videoTracks[0]\n\n// Remove screen from the call.\nclient.call.removeMedia(callId, [ screenTrack ])",
              "lineNumber": 26
            }
          ],
          "loc": {
            "start": {
              "line": 766,
              "column": 4
            },
            "end": {
              "line": 806,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 836,
                "column": 4
              },
              "end": {
                "line": 839,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "const call = client.call.getById(callId)\n// Get the ID of any/all video tracks on the call.\nconst videoTracks = call.localTracks.filter(trackId => {\n   const track = call.media.getTrackById(trackId)\n   // Both video and screen tracks have kind of 'video'.\n   return track.kind === 'video'\n})\n\n// Pick out the screen track.\nconst screenTrack = videoTracks[0]\n\n// Remove screen from the call.\nclient.call.removeMedia(callId, [ screenTrack ])"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "function",
          "name": "stopScreenshare",
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "stopScreenshare",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.stopScreenshare"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Send DTMF tones to a call's audio."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The provided tone can either be a single DTMF tone (eg. '1') or a\nsequence of DTMF tones (eg. '123') which will be played one after the\nother."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The specified call must be either in Connected, Ringing, or Early Media\nstate, otherwise invoking this API will have no effect."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The tones will be sent as out-of-band tones if supported by the call,\notherwise they will be added in-band to the call's audio."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 16,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 17
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 18
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 19,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 20,
              "name": "callMe"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 21,
              "name": "sendDTMF"
            },
            {
              "title": "param",
              "description": "ID of the call being acted on.",
              "lineNumber": 22,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            },
            {
              "title": "param",
              "description": "DTMF tone(s) to send. Valid chracters are ['0','1','2','3','4','5','6','7','8','9','#','*' and ','].",
              "lineNumber": 23,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "tone"
            },
            {
              "title": "param",
              "description": "The amount of time, in milliseconds, that each DTMF tone should last.",
              "lineNumber": 24,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "duration",
              "default": "100"
            },
            {
              "title": "param",
              "description": "The length of time, in milliseconds, to wait between tones.",
              "lineNumber": 25,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "intertoneGap",
              "default": "70"
            }
          ],
          "loc": {
            "start": {
              "line": 808,
              "column": 4
            },
            "end": {
              "line": 835,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 836,
                "column": 4
              },
              "end": {
                "line": 839,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 22,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "ID of the call being acted on."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "tone",
              "lineNumber": 23,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "DTMF tone(s) to send. Valid chracters are ['0','1','2','3','4','5','6','7','8','9','#','*' and ',']."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "duration",
              "lineNumber": 24,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The amount of time, in milliseconds, that each DTMF tone should last."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "default": "100"
            },
            {
              "title": "param",
              "name": "intertoneGap",
              "lineNumber": 25,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The length of time, in milliseconds, to wait between tones."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "default": "70"
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "function",
          "name": "sendDTMF",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "sendDTMF",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.sendDTMF"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieve a snapshot of the low-level information of the Call through statistical\nreport."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The data retrieved is a "
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport",
                    "children": [
                      {
                        "type": "text",
                        "value": "RTCStatsReport"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nobject, which contains many individual\n"
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCStats",
                    "children": [
                      {
                        "type": "text",
                        "value": "RTCStats"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ".\nThese are advanced statistics gathered by the browser providing insights\ninto the Call at a certain point in time. Aggregating reports over a\nperiod of time would allow a low-level analysis of the Call for that\nperiod. As an example, this could be done to determine the media quality\nduring the Call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Track ID can optionally be provided to get a report for a specific\nTrack of the Call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This API will return a promise which, when resolved, will contain the report of the particlar call.\nThe progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatsreceived",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:statsReceived"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event, after\nthe operation completes, that has the report."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 23,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 24
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 25
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 26,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 27,
              "name": "callMe"
            },
            {
              "title": "param",
              "description": "The ID of the Call to retrieve the report.",
              "lineNumber": 28,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            },
            {
              "title": "param",
              "description": "ID of a Track being used by the Call. If not\n   provided, RTCStatsReport is generated for the Call itself.",
              "lineNumber": 29,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "trackId"
            },
            {
              "title": "example",
              "description": "client.on('call:statsReceived', function (params) {\n   // Iterate over each individual statistic inside the RTCPStatsReport.\n   params.result.forEach(stats => {\n       // Handle the data on its own or collate with previously gathered stats\n       //    for analysis.\n       ...\n   })\n})\n\n// Get a snapshot of the Call's stats.\n//   This may be done on a regular interval to collect data over time.\nclient.call.getStats(callId)",
              "lineNumber": 31
            }
          ],
          "loc": {
            "start": {
              "line": 841,
              "column": 4
            },
            "end": {
              "line": 885,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 886,
                "column": 4
              },
              "end": {
                "line": 891,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "client.on('call:statsReceived', function (params) {\n   // Iterate over each individual statistic inside the RTCPStatsReport.\n   params.result.forEach(stats => {\n       // Handle the data on its own or collate with previously gathered stats\n       //    for analysis.\n       ...\n   })\n})\n\n// Get a snapshot of the Call's stats.\n//   This may be done on a regular interval to collect data over time.\nclient.call.getStats(callId)"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 28,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Call to retrieve the report."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "trackId",
              "lineNumber": 29,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "ID of a Track being used by the Call. If not\nprovided, RTCStatsReport is generated for the Call itself."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "name": "getStats",
          "kind": "function",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "getStats",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.getStats"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Replace a call's track with a new track of the same media type."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The operation will remove the old track from the call and add a\nnew track to the call. This effectively allows for changing the\ntrack constraints (eg. device used) for an ongoing call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalltrackreplaced",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:trackReplaced"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nlocally when the operation completes. The newly added track will need\nto be handled by the local application. The track will be replaced\nseamlessly for the remote application, which will not receive an event."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 16,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 17
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 18
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 19,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 20,
              "name": "callMe"
            },
            {
              "title": "param",
              "description": "The ID of the call to replace the track of.",
              "lineNumber": 21,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            },
            {
              "title": "param",
              "description": "The ID of the track to replace.",
              "lineNumber": 22,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "trackId"
            },
            {
              "title": "param",
              "description": "The media options.",
              "lineNumber": 23,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media",
              "default": "{}"
            },
            {
              "title": "param",
              "description": "Whether to create an audio track.",
              "lineNumber": 24,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "media.audio",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Options for configuring the audio track.",
              "lineNumber": 25,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media.audioOptions"
            },
            {
              "title": "param",
              "description": "ID of the microphone to receive audio from.",
              "lineNumber": 26,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.audioOptions.deviceId"
            },
            {
              "title": "param",
              "description": "Whether to create a video track.",
              "lineNumber": 27,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "media.video",
              "default": "false"
            },
            {
              "title": "param",
              "description": "Options for configuring the video track.",
              "lineNumber": 28,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "media.videoOptions"
            },
            {
              "title": "param",
              "description": "ID of the camera to receive video from.",
              "lineNumber": 29,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.deviceId"
            },
            {
              "title": "param",
              "description": "The height of the video.",
              "lineNumber": 30,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.height"
            },
            {
              "title": "param",
              "description": "The width of the video.",
              "lineNumber": 31,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.width"
            },
            {
              "title": "param",
              "description": "The frame rate of the video.",
              "lineNumber": 32,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "call.MediaConstraint"
                }
              },
              "name": "media.videoOptions.frameRate"
            },
            {
              "title": "example",
              "description": "const callId = ...\n// Get the video track used by the call.\nconst videoTrack = ...\n\n// Replace the specified video track of the call with a new\n//    video track.\nclient.call.replaceTrack(callId, videoTrack.id, {\n  // The track should be replaced with a video track using\n  //    a specific device. This effectively changes the input\n  //    device for an ongoing call.\n  video: true,\n  videoOptions: {\n    deviceId: cameraId\n  }\n})",
              "lineNumber": 33
            },
            {
              "title": "example",
              "description": "const callId = ...\n// Get the video track used by the call.\nconst videoTrack = ...\n\n// Can also replace the specified video track of the call with a new\n// screen sharing track because screen sharing is delivered as a video stream to remote peer.\n// User will then be prompted to pick a specific screen to share and thus the device id will be selected.\nclient.call.replaceTrack(callId, videoTrack.id, {\n  // The track should be replaced with a screen sharing track.\n  // Note that 'screenOptions' property is not mandatory, as API will use default values\n  // for properties like: width, height, frameRate.\n  screen: true\n})",
              "lineNumber": 50
            }
          ],
          "loc": {
            "start": {
              "line": 1138,
              "column": 4
            },
            "end": {
              "line": 1202,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1203,
                "column": 4
              },
              "end": {
                "line": 1212,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "const callId = ...\n// Get the video track used by the call.\nconst videoTrack = ...\n\n// Replace the specified video track of the call with a new\n//    video track.\nclient.call.replaceTrack(callId, videoTrack.id, {\n  // The track should be replaced with a video track using\n  //    a specific device. This effectively changes the input\n  //    device for an ongoing call.\n  video: true,\n  videoOptions: {\n    deviceId: cameraId\n  }\n})"
            },
            {
              "description": "const callId = ...\n// Get the video track used by the call.\nconst videoTrack = ...\n\n// Can also replace the specified video track of the call with a new\n// screen sharing track because screen sharing is delivered as a video stream to remote peer.\n// User will then be prompted to pick a specific screen to share and thus the device id will be selected.\nclient.call.replaceTrack(callId, videoTrack.id, {\n  // The track should be replaced with a screen sharing track.\n  // Note that 'screenOptions' property is not mandatory, as API will use default values\n  // for properties like: width, height, frameRate.\n  screen: true\n})"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 21,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call to replace the track of."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "trackId",
              "lineNumber": 22,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the track to replace."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "media",
              "lineNumber": 23,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The media options."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "default": "{}",
              "properties": [
                {
                  "title": "param",
                  "name": "media.audio",
                  "lineNumber": 24,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether to create an audio track."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "media.audioOptions",
                  "lineNumber": 25,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring the audio track."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "media.audioOptions.deviceId",
                      "lineNumber": 26,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "ID of the microphone to receive audio from."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    }
                  ]
                },
                {
                  "title": "param",
                  "name": "media.video",
                  "lineNumber": 27,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether to create a video track."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "false"
                },
                {
                  "title": "param",
                  "name": "media.videoOptions",
                  "lineNumber": 28,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Options for configuring the video track."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Object"
                    }
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "media.videoOptions.deviceId",
                      "lineNumber": 29,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "ID of the camera to receive video from."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.videoOptions.height",
                      "lineNumber": 30,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The height of the video."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.videoOptions.width",
                      "lineNumber": 31,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The width of the video."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    },
                    {
                      "title": "param",
                      "name": "media.videoOptions.frameRate",
                      "lineNumber": 32,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "The frame rate of the video."
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "OptionalType",
                        "expression": {
                          "type": "NameExpression",
                          "name": "call.MediaConstraint"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "name": "replaceTrack",
          "kind": "function",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "replaceTrack",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.replaceTrack"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieve the list of available and supported codecs based on the browser's capabilities for sending media."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This API will return a promise which, when resolved, it will contain the list of available and supported codecs.\nIn addition, the SDK emits a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallavailablecodecs",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:availableCodecs"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nupon retrieving that list of codecs."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This API is a wrapper for the static method "
                  },
                  {
                    "type": "link",
                    "url": "https://w3c.github.io/webrtc-pc/#dom-rtcrtpsender-getcapabilities",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "RTCRtpSender.getCapabilities()"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ".\nFirefox browser does not currently support this method. Therefore, this API will not work on Firefox."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 10,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 11
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 12
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 13,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 14,
              "name": "callMe"
            },
            {
              "title": "param",
              "description": "The kind of media, i.e., 'audio' or 'video', to get the list of available codecs of.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "kind"
            }
          ],
          "loc": {
            "start": {
              "line": 1214,
              "column": 4
            },
            "end": {
              "line": 1230,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1231,
                "column": 4
              },
              "end": {
                "line": 1241,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "kind",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The kind of media, i.e., 'audio' or 'video', to get the list of available codecs of."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "name": "getAvailableCodecs",
          "kind": "function",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "getAvailableCodecs",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.getAvailableCodecs"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Set "
                  },
                  {
                    "type": "link",
                    "url": "#callsdphandlerfunction",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "SDP Handler Functions"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " that will be run as part of a pipeline for all future calls.\nThis will replace any SDP Handlers that were previously set."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "SDP handlers can be used to make modifications to the SDP (e.g., removing certain codecs)\nbefore they are processed or sent to the other side."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This is an advanced feature, changing the SDP handlers mid-call may cause\nunexpected behaviour in future call operations for that call."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 10,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 11
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 12
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 13,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 14,
              "name": "callMe"
            },
            {
              "title": "param",
              "description": "The list of SDP handler functions to modify SDP.",
              "lineNumber": 15,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "call.SdpHandlerFunction"
                  }
                ]
              },
              "name": "sdpHandlers"
            }
          ],
          "loc": {
            "start": {
              "line": 1243,
              "column": 4
            },
            "end": {
              "line": 1259,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1260,
                "column": 4
              },
              "end": {
                "line": 1268,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "sdpHandlers",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The list of SDP handler functions to modify SDP."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "call.SdpHandlerFunction"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "name": "setSdpHandlers",
          "kind": "function",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "setSdpHandlers",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.setSdpHandlers"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Possible states that a Call can be in."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Call's state describes the current status of the Call. An application\nshould use the state to understand how the Call, and any media\nassociated with the Call, should be handled. Which state the Call is\nin defines how it can be interacted with, as certain operations can\nonly be performed while in specific states, and tells an application\nwhether the Call currently has media flowing between users.\nUnless stated otherwise, the Call's state pertains to both caller & callee."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The Call's state is a property of the "
                  },
                  {
                    "type": "link",
                    "url": "#callcallobject",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "CallObject"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ",\nwhich can be retrieved using the "
                  },
                  {
                    "type": "link",
                    "url": "#callgetbyid",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getById"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or\n"
                  },
                  {
                    "type": "link",
                    "url": "#callgetall",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getAll"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK emits a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallstatechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:stateChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent when a Call's state changes from one state to another."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 18,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 19
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 20
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 21,
              "name": "callMe"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 22,
              "name": "call"
            },
            {
              "title": "type",
              "description": null,
              "lineNumber": 23,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            },
            {
              "title": "property",
              "description": "The (outgoing) call is being started. While in this state, no Call operations can be performed until Call gets into Initiated state.",
              "lineNumber": 24,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "INITIATING"
            },
            {
              "title": "property",
              "description": "A call has been started and both the callee and caller may now perform further operations on the call object.",
              "lineNumber": 25,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "INITIATED"
            },
            {
              "title": "property",
              "description": "The call has been received by both parties, and is waiting to be answered.",
              "lineNumber": 26,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "RINGING"
            },
            {
              "title": "property",
              "description": "The call has not been answered, but media\n   is already being received. This may be network-ringing media, IVR\n   system media, or other pre-answer medias. When early media is\n   supported, this state may replace the Ringing state. This is a state valid only for caller's side.",
              "lineNumber": 27,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "EARLY_MEDIA"
            },
            {
              "title": "property",
              "description": "The call was disconnected before it could be answered. This is a state valid only for callee's side.",
              "lineNumber": 31,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "CANCELLED"
            },
            {
              "title": "property",
              "description": "Both parties are connected and media is flowing.",
              "lineNumber": 32,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "CONNECTED"
            },
            {
              "title": "property",
              "description": "Both parties are connected but no media is flowing.",
              "lineNumber": 33,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "ON_HOLD"
            },
            {
              "title": "property",
              "description": "The call has ended.",
              "lineNumber": 34,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "ENDED"
            },
            {
              "title": "example",
              "description": "// Use the call states to know how to handle a change in the call.\nclient.on('call:stateChange', function (params) {\n   const call = client.call.getById(params.callId)\n   // Check if the call now has media flowing.\n   if (call.state === client.call.states.CONNECTED) {\n     // The call is now active, and can perform midcall operations.\n   }\n})",
              "lineNumber": 35
            }
          ],
          "loc": {
            "start": {
              "line": 1270,
              "column": 4
            },
            "end": {
              "line": 1314,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1315,
                "column": 4
              },
              "end": {
                "line": 1315,
                "column": 23
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Use the call states to know how to handle a change in the call.\nclient.on('call:stateChange', function (params) {\n   const call = client.call.getById(params.callId)\n   // Check if the call now has media flowing.\n   if (call.state === client.call.states.CONNECTED) {\n     // The call is now active, and can perform midcall operations.\n   }\n})"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "INITIATING",
              "lineNumber": 24,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The (outgoing) call is being started. While in this state, no Call operations can be performed until Call gets into Initiated state."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "INITIATED",
              "lineNumber": 25,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A call has been started and both the callee and caller may now perform further operations on the call object."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "RINGING",
              "lineNumber": 26,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The call has been received by both parties, and is waiting to be answered."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "EARLY_MEDIA",
              "lineNumber": 27,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The call has not been answered, but media\nis already being received. This may be network-ringing media, IVR\nsystem media, or other pre-answer medias. When early media is\nsupported, this state may replace the Ringing state. This is a state valid only for caller's side."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "CANCELLED",
              "lineNumber": 31,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The call was disconnected before it could be answered. This is a state valid only for callee's side."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "CONNECTED",
              "lineNumber": 32,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Both parties are connected and media is flowing."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "ON_HOLD",
              "lineNumber": 33,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Both parties are connected but no media is flowing."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "ENDED",
              "lineNumber": 34,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The call has ended."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "name": "states",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "states",
              "scope": "static"
            }
          ],
          "namespace": "call.states"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Possible states that a Call's media connection can be in."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Call's media connection state describes the current status of media within the call.\nAn application should use this state to understand whether the Call participants are\nable to see/hear each other or may be experiencing connection issues. The media connection\nstate can be used alongside the "
                  },
                  {
                    "type": "link",
                    "url": "#callstates",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Call state"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " to determine if media issues\nare occurring while the participants are expecting to be connected."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An important state to check for is the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "FAILED"
                  },
                  {
                    "type": "text",
                    "value": " state. This state signifies that there is no\nmedia connection between the call participants and an action must be taken to resolve the\nproblem. Using the "
                  },
                  {
                    "type": "link",
                    "url": "#callrestartmedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.restartMedia"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API will attempt to reconnect the media. See\nthe "
                  },
                  {
                    "type": "link",
                    "url": "#callrestartmedia",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.restartMedia"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API description for more information."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "These states are direct reflections of the possible\n"
                  },
                  {
                    "type": "link",
                    "title": null,
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState",
                    "children": [
                      {
                        "type": "text",
                        "value": "RTCPeerConnection.iceConnectionState"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " values."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The Call's media connection state is a property of the "
                  },
                  {
                    "type": "link",
                    "url": "#callcallobject",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "CallObject"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ",\nwhich can be retrieved using the "
                  },
                  {
                    "type": "link",
                    "url": "#callgetbyid",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getById"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or\n"
                  },
                  {
                    "type": "link",
                    "url": "#callgetall",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getAll"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK emits a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallmediaconnectionchange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:mediaConnectionChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent when a Call's media connection state changes from one state to another."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 24,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 25
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 26
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 27,
              "name": "callMe"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 28,
              "name": "call"
            },
            {
              "title": "type",
              "description": null,
              "lineNumber": 29,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            },
            {
              "title": "property",
              "description": "The Call is initializing the local side of the connection and waiting on information from the remote side.\n When the information is received, the state will transition into `checking` as the Call automatically begins the connection process.",
              "lineNumber": 30,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "NEW"
            },
            {
              "title": "property",
              "description": "The Call has received information from the remote endpoint and is working to establish the media connection.\n When finished, the state will transition to either `connected` or `failed`.",
              "lineNumber": 32,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "CHECKING"
            },
            {
              "title": "property",
              "description": "A usable connection has been made and the Call will now have media.\n The connection may not be optimal, though, so the Call will continue establishment to improve the connection before going into the `completed` state.",
              "lineNumber": 34,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "CONNECTED"
            },
            {
              "title": "property",
              "description": "The media connection process has fully completed and the optimal connection has been established. While in this state,\n the Call endpoints will receive each other's media.",
              "lineNumber": 36,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "COMPLETED"
            },
            {
              "title": "property",
              "description": "Media has become disconnected and the Call endpoints have stopped receiving each other's media.\n The Call will automatically attempt to reconnect, transitioning back to `completed` if successful or to `failed` if not.",
              "lineNumber": 38,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "DISCONNECTED"
            },
            {
              "title": "property",
              "description": "The connection has failed and cannot be recovered automatically. A full media connection refresh is required to restablish a connection. See the {@link call.restartMedia} API.",
              "lineNumber": 40,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "FAILED"
            },
            {
              "title": "property",
              "description": "The connection has been shut down and is no longer in use.",
              "lineNumber": 41,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "CLOSED"
            },
            {
              "title": "example",
              "description": "// Use the media connection states to check the status of the media connection of the Call.\nclient.on('call:mediaConnectionChange', function (params) {\n  // Retrieve the state of the Call this event is for.\n  const call = client.call.getById(params.callId)\n  const mediaConnectionStates = client.call.mediaConnectionStates\n\n  // Check the mediaConnectionState to determine which scenario the call is in.\n  switch (call.mediaConnectionState) {\n    case mediaConnectionStates.CONNECTED:\n    case mediaConnectionStates.COMPLETED:\n      // Media established: The Call's media is connected. The Call's participants\n      //    are able to see/hear each other.\n      // These states will occur after Call establishment.\n      ...\n      break\n    case mediaConnectionStates.NEW:\n    case mediaConnectionStates.CHECKING:\n    case mediaConnectionStates.DISCONNECTED:\n      // Media pending: The Call's media is not connected. The Call is working\n      //    to connect media automatically.\n      // These states will occur during Call establishment and may occur midcall if there are\n      //    connection issues (eg. poor network quality) or a Call participant has changed (eg. transfer).\n      ...\n      break\n    case mediaConnectionStates.FAILED:\n     // Media has failed. The call requires a media refresh to restablish.\n     // This state will occur after the `DISCONNECTED` state is encountered.\n     ...\n      break\n    case mediaConnectionStates.CLOSED:\n      // Media ended due to the Call being ended.\n      // This state will occur after Call establishment.\n      ...\n      break\n  }\n}",
              "lineNumber": 42
            }
          ],
          "loc": {
            "start": {
              "line": 1317,
              "column": 4
            },
            "end": {
              "line": 1396,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1397,
                "column": 4
              },
              "end": {
                "line": 1397,
                "column": 55
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Use the media connection states to check the status of the media connection of the Call.\nclient.on('call:mediaConnectionChange', function (params) {\n  // Retrieve the state of the Call this event is for.\n  const call = client.call.getById(params.callId)\n  const mediaConnectionStates = client.call.mediaConnectionStates\n\n  // Check the mediaConnectionState to determine which scenario the call is in.\n  switch (call.mediaConnectionState) {\n    case mediaConnectionStates.CONNECTED:\n    case mediaConnectionStates.COMPLETED:\n      // Media established: The Call's media is connected. The Call's participants\n      //    are able to see/hear each other.\n      // These states will occur after Call establishment.\n      ...\n      break\n    case mediaConnectionStates.NEW:\n    case mediaConnectionStates.CHECKING:\n    case mediaConnectionStates.DISCONNECTED:\n      // Media pending: The Call's media is not connected. The Call is working\n      //    to connect media automatically.\n      // These states will occur during Call establishment and may occur midcall if there are\n      //    connection issues (eg. poor network quality) or a Call participant has changed (eg. transfer).\n      ...\n      break\n    case mediaConnectionStates.FAILED:\n     // Media has failed. The call requires a media refresh to restablish.\n     // This state will occur after the `DISCONNECTED` state is encountered.\n     ...\n      break\n    case mediaConnectionStates.CLOSED:\n      // Media ended due to the Call being ended.\n      // This state will occur after Call establishment.\n      ...\n      break\n  }\n}"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "NEW",
              "lineNumber": 30,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The Call is initializing the local side of the connection and waiting on information from the remote side.\nWhen the information is received, the state will transition into "
                      },
                      {
                        "type": "inlineCode",
                        "value": "checking"
                      },
                      {
                        "type": "text",
                        "value": " as the Call automatically begins the connection process."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "CHECKING",
              "lineNumber": 32,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The Call has received information from the remote endpoint and is working to establish the media connection.\nWhen finished, the state will transition to either "
                      },
                      {
                        "type": "inlineCode",
                        "value": "connected"
                      },
                      {
                        "type": "text",
                        "value": " or "
                      },
                      {
                        "type": "inlineCode",
                        "value": "failed"
                      },
                      {
                        "type": "text",
                        "value": "."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "CONNECTED",
              "lineNumber": 34,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A usable connection has been made and the Call will now have media.\nThe connection may not be optimal, though, so the Call will continue establishment to improve the connection before going into the "
                      },
                      {
                        "type": "inlineCode",
                        "value": "completed"
                      },
                      {
                        "type": "text",
                        "value": " state."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "COMPLETED",
              "lineNumber": 36,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The media connection process has fully completed and the optimal connection has been established. While in this state,\nthe Call endpoints will receive each other's media."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "DISCONNECTED",
              "lineNumber": 38,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Media has become disconnected and the Call endpoints have stopped receiving each other's media.\nThe Call will automatically attempt to reconnect, transitioning back to "
                      },
                      {
                        "type": "inlineCode",
                        "value": "completed"
                      },
                      {
                        "type": "text",
                        "value": " if successful or to "
                      },
                      {
                        "type": "inlineCode",
                        "value": "failed"
                      },
                      {
                        "type": "text",
                        "value": " if not."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "FAILED",
              "lineNumber": 40,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The connection has failed and cannot be recovered automatically. A full media connection refresh is required to restablish a connection. See the "
                      },
                      {
                        "type": "link",
                        "url": "#callrestartmedia",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "call.restartMedia"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": " API."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "CLOSED",
              "lineNumber": 41,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The connection has been shut down and is no longer in use."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "name": "mediaConnectionStates",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "mediaConnectionStates",
              "scope": "static"
            }
          ],
          "namespace": "call.mediaConnectionStates"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Attempt to re-establish a media connection for a call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This API will perform a \"refresh\" operation on the call with the intention\nof resolving media issues that may have been encountered. This API is only\nnecessary after the Call's "
                  },
                  {
                    "type": "link",
                    "url": "#callmediaconnectionstates",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "mediaConnectionState"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nhas entered the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "failed"
                  },
                  {
                    "type": "text",
                    "value": " state, but may be used in other scenarios."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "After the operation completes successfully, the Call will be re-establishing\nits media connection. By this time, or shortly after, the Call's\n"
                  },
                  {
                    "type": "link",
                    "url": "#callmediaconnectionstates",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "mediaConnectionState"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " should have\ntransitioned to "
                  },
                  {
                    "type": "inlineCode",
                    "value": "checking"
                  },
                  {
                    "type": "text",
                    "value": " (via a\n{@link call.event:call:mediaConnectionChange call:mediaConnectionChange}\nevent) to signify the re-establishment. It will then transition to either\n"
                  },
                  {
                    "type": "inlineCode",
                    "value": "connected"
                  },
                  {
                    "type": "text",
                    "value": " or "
                  },
                  {
                    "type": "inlineCode",
                    "value": "failed"
                  },
                  {
                    "type": "text",
                    "value": " state, similar to during the initial Call establishment."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If this operation fails, then the Call will not attempt the re-establishment\nand will remain in the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "failed"
                  },
                  {
                    "type": "text",
                    "value": " "
                  },
                  {
                    "type": "link",
                    "url": "#callmediaconnectionstates",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "mediaConnectionState"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Behaviour during the operation may differ slightly based on the browser.\nNotably, Firefox will always transition to the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "checking"
                  },
                  {
                    "type": "text",
                    "value": "\n"
                  },
                  {
                    "type": "link",
                    "url": "#callmediaconnectionstates",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "mediaConnectionState"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " no matter what\nthe previous state was. Whereas Chrome will skip the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "checking"
                  },
                  {
                    "type": "text",
                    "value": " state,\ntransitioning directly to either "
                  },
                  {
                    "type": "inlineCode",
                    "value": "connected"
                  },
                  {
                    "type": "text",
                    "value": " or "
                  },
                  {
                    "type": "inlineCode",
                    "value": "failed"
                  },
                  {
                    "type": "text",
                    "value": ". This has the\nimplication for Chrome that if the state does not change (for example,\nthe Call is in the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "failed"
                  },
                  {
                    "type": "text",
                    "value": " state before the media restart operation,\nand media re-establishment fails), then there will be no\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallmediaconnectionchange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:mediaConnectionChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent emitted. For this reason, Chrome-based applications may need a\nshort delay after receiving the "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallmediarestart",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:mediaRestart"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent before checking the Call's updated\n"
                  },
                  {
                    "type": "link",
                    "url": "#callmediaconnectionstates",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "mediaConnectionState"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " to ensure the\napplication is acting on the \"latest\" state."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#calleventcallmediarestart",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:mediaRestart"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent when the operation completes."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The progress of the operation will be tracked via the\n"
                  },
                  {
                    "type": "link",
                    "url": "#calleventcalloperation",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call:operation"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 39,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 40
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 41
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 42,
              "name": "restartMedia"
            },
            {
              "title": "param",
              "description": "The ID of the call to act on.",
              "lineNumber": 43,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "callId"
            }
          ],
          "loc": {
            "start": {
              "line": 1399,
              "column": 4
            },
            "end": {
              "line": 1443,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1444,
                "column": 4
              },
              "end": {
                "line": 1447,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "callId",
              "lineNumber": 43,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the call to act on."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "call",
          "kind": "function",
          "name": "restartMedia",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "restartMedia",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.restartMedia"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The "
                  },
                  {
                    "type": "inlineCode",
                    "value": "setDefaultDevices"
                  },
                  {
                    "type": "text",
                    "value": " API from previous SDK releases (3.X) has been\ndeprecated in the latest releases (4.X+). The SDK no longer keeps\ntrack of \"default devices\" on behalf of the application."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The devices used for a call can be selected as part of the APIs for\nstarting the call. Microphone and/or camera can be chosen in the\n"
                  },
                  {
                    "type": "link",
                    "url": "#callmake",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.make"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " and "
                  },
                  {
                    "type": "link",
                    "url": "#callanswer",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.answer"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs, and speaker can be\nchosen when the audio track is rendered with the\n"
                  },
                  {
                    "type": "link",
                    "url": "#mediarendertracks",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media.renderTracks"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 10,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 11
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 12,
              "name": "setDefaultDevices"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 13
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 14,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 15,
              "name": "callMe"
            }
          ],
          "loc": {
            "start": {
              "line": 1449,
              "column": 4
            },
            "end": {
              "line": 1465,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1444,
                "column": 4
              },
              "end": {
                "line": 1447,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "function",
          "name": "setDefaultDevices",
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "setDefaultDevices",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.setDefaultDevices"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Changes the camera and/or microphone used for a Call's media input."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The latest SDK release (v4.X+) has not yet implemented this API in the\nsame way that it was available in previous releases (v3.X). In place\nof this API, the SDK has a more general API that can be used for this\nsame behaviour."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The same behaviour as the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "changeInputDevices"
                  },
                  {
                    "type": "text",
                    "value": " API can be implemented\nusing the general-purpose "
                  },
                  {
                    "type": "link",
                    "url": "#callreplacetrack",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.replaceTrack"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API. This API can\nbe used to replace an existing media track with a new track of the\nsame type, allowing an application to change certain aspects of the\nmedia, such as input device."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 13,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 14
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 15,
              "name": "changeInputDevices"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 16
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 17,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 18,
              "name": "callMe"
            },
            {
              "title": "example",
              "description": "const call = client.call.getById(callId)\n// Get the ID of the Call's video track.\nconst videoTrack = call.localTracks.find(trackId => {\n   const track = client.media.getTrackById(trackId)\n   return track.kind === 'video'\n})\n\n// Select the new video options.\nconst media = {\n   video: true,\n   videoOptions: {\n       deviceId: 'cameraId'\n   }\n}\n\n// Change the call's camera by replacing the video track.\nclient.call.replaceTrack(callId, videoTrack, media)",
              "lineNumber": 19
            }
          ],
          "loc": {
            "start": {
              "line": 1467,
              "column": 4
            },
            "end": {
              "line": 1504,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1444,
                "column": 4
              },
              "end": {
                "line": 1447,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "const call = client.call.getById(callId)\n// Get the ID of the Call's video track.\nconst videoTrack = call.localTracks.find(trackId => {\n   const track = client.media.getTrackById(trackId)\n   return track.kind === 'video'\n})\n\n// Select the new video options.\nconst media = {\n   video: true,\n   videoOptions: {\n       deviceId: 'cameraId'\n   }\n}\n\n// Change the call's camera by replacing the video track.\nclient.call.replaceTrack(callId, videoTrack, media)"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "function",
          "name": "changeInputDevices",
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "changeInputDevices",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.changeInputDevices"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Changes the speaker used for a Call's audio output. Supported on\nbrowser's that support HTMLMediaElement.setSinkId()."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The latest SDK release (v4.X+) has not yet implemented this API in the\nsame way that it was available in previous releases (v3.X). In place\nof this API, the SDK has a more general API that can be used for this\nsame behaviour."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The same behaviour as the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "changeSpeaker"
                  },
                  {
                    "type": "text",
                    "value": " API can be implemented by\nre-rendering the Call's audio track.  A speaker can be selected when\nrendering an audio track, so changing a speaker can be simulated\nby unrendering the track with "
                  },
                  {
                    "type": "link",
                    "url": "#mediaremovetracks",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media.removeTracks"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ", then\nre-rendering it with a new speaker with "
                  },
                  {
                    "type": "link",
                    "url": "#mediarendertracks",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media.renderTracks"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 14,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 15
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 16,
              "name": "changeSpeaker"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 17
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 18,
              "name": "call"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 19,
              "name": "callMe"
            },
            {
              "title": "example",
              "description": "const call = client.call.getById(callId)\n// Get the ID of the Call's audio track.\nconst audioTrack = call.localTracks.find(trackId => {\n   const track = client.media.getTrackById(trackId)\n   return track.kind === 'audio'\n})\n\n// Where the audio track was previously rendered.\nconst audioContainer = ...\n\n// Unrender the audio track we want to change speaker for.\nclient.media.removeTrack([ audioTrack ], audioContainer)\n// Re-render the audio track with a new speaker.\nclient.media.renderTrack([ audioTrack ], audioContainer, {\n   speakerId: 'speakerId'\n})",
              "lineNumber": 20
            }
          ],
          "loc": {
            "start": {
              "line": 1506,
              "column": 4
            },
            "end": {
              "line": 1543,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1444,
                "column": 4
              },
              "end": {
                "line": 1447,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "const call = client.call.getById(callId)\n// Get the ID of the Call's audio track.\nconst audioTrack = call.localTracks.find(trackId => {\n   const track = client.media.getTrackById(trackId)\n   return track.kind === 'audio'\n})\n\n// Where the audio track was previously rendered.\nconst audioContainer = ...\n\n// Unrender the audio track we want to change speaker for.\nclient.media.removeTrack([ audioTrack ], audioContainer)\n// Re-render the audio track with a new speaker.\nclient.media.renderTrack([ audioTrack ], audioContainer, {\n   speakerId: 'speakerId'\n})"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "function",
          "name": "changeSpeaker",
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "changeSpeaker",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "call.changeSpeaker"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The User ID ie: joe@test.3s5j.att.com"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "UserID"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 6
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 7,
              "name": "cpaas_user_id"
            }
          ],
          "loc": {
            "start": {
              "line": 10,
              "column": 0
            },
            "end": {
              "line": 18,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 58,
                "column": 0
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/docs/docs.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "UserID",
          "type": {
            "type": "NameExpression",
            "name": "string"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "UserID",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.UserID"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The Phone Numer ie: +18885559876"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "PhoneNumber"
            },
            {
              "title": "memberof",
              "description": "call",
              "lineNumber": 6
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 7,
              "name": "cpaas_pstn"
            }
          ],
          "loc": {
            "start": {
              "line": 39,
              "column": 0
            },
            "end": {
              "line": 47,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 58,
                "column": 0
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/docs/docs.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "PhoneNumber",
          "type": {
            "type": "NameExpression",
            "name": "string"
          },
          "memberof": "call",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "call",
              "kind": "namespace"
            },
            {
              "name": "PhoneNumber",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "call.PhoneNumber"
        }
      ]
    },
    "path": [
      {
        "name": "call",
        "kind": "namespace"
      }
    ],
    "namespace": "call"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The 'connection' namespace is used to connect and maintain connections between\nthe SDK and one or more backend servers."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 4,
        "type": null
      },
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 5,
        "type": null,
        "name": "connection"
      }
    ],
    "loc": {
      "start": {
        "line": 4,
        "column": 0
      },
      "end": {
        "line": 10,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 44,
          "column": 0
        },
        "end": {
          "line": 44,
          "column": 70
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/api.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "namespace",
    "name": "connection",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The websocket to the server has changed state."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "connection",
              "lineNumber": 4
            },
            {
              "title": "event",
              "description": "ws:change",
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The platform",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.platform"
            }
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 10,
                "column": 0
              },
              "end": {
                "line": 10,
                "column": 36
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.platform",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The platform"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "connection",
          "kind": "event",
          "name": "ws:change",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "connection",
              "kind": "namespace"
            },
            {
              "name": "ws:change",
              "kind": "event"
            }
          ],
          "namespace": "connection.event:ws:change"
        }
      ],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about a websocket connection."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Can be retrieved using the "
                  },
                  {
                    "type": "link",
                    "url": "#connectiongetsocketstate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "connection.getSocketState"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "WSConnectionObject"
            },
            {
              "title": "memberof",
              "description": "connection",
              "lineNumber": 8
            },
            {
              "title": "property",
              "description": "The state of the websocket connection.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "connected"
            },
            {
              "title": "property",
              "description": "True if the client has sent a ping to the server and is still waiting for a pong response.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "pinging"
            },
            {
              "title": "property",
              "description": "Information about how the websocket is being used.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "method"
            },
            {
              "title": "property",
              "description": "How the websocket is staying connected.",
              "lineNumber": 12,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "method.type"
            },
            {
              "title": "property",
              "description": "Who is responsible for keeping the connection alive.",
              "lineNumber": 13,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "method.responsibleParty"
            },
            {
              "title": "property",
              "description": "The SDK platform being used.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "platform"
            },
            {
              "title": "property",
              "description": "How often the client will ping the server to test for websocket connectivity.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "pingInterval"
            },
            {
              "title": "property",
              "description": "How many times the SDK will try to reconnect a disconnected websocket.",
              "lineNumber": 16,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "reconnectLimit"
            },
            {
              "title": "property",
              "description": "How long the SDK will wait before retrying websocket reconnection.",
              "lineNumber": 17,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "reconnectDelay"
            },
            {
              "title": "property",
              "description": "Reconnect delay multiplier for subsequent attempts. The reconnect delay time will be multiplied by this after each failed reconnect attempt to increase the delay between attempts. eg. 5000ms then 10000ms then 20000ms delay if value is 2.",
              "lineNumber": 18,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "reconnectTimeMultiplier"
            },
            {
              "title": "property",
              "description": "Maximum time delay between reconnect attempts (milliseconds). Used in conjunction with `reconnectTimeMultiplier` to prevent overly long delays between reconnection attempts.",
              "lineNumber": 19,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "reconnectTimeLimit"
            },
            {
              "title": "property",
              "description": "Indicates if the SDK should automatically try reconnecting a disconnected websocket.",
              "lineNumber": 20,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "autoReconnect"
            },
            {
              "title": "property",
              "description": "How many missed pings before the SDK stops trying to reconnect a disconnected websocket.",
              "lineNumber": 21,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "maxMissedPings"
            },
            {
              "title": "property",
              "description": "The mode used for authenticating with the server.",
              "lineNumber": 22,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "webSocketOAuthMode"
            },
            {
              "title": "property",
              "description": "Information required to connect a websocket to the server.",
              "lineNumber": 23,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "wsInfo"
            },
            {
              "title": "property",
              "description": "The protocol to use to connect a websocket.",
              "lineNumber": 24,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "wsInfo.protocol"
            },
            {
              "title": "property",
              "description": "The domain name or IP address of the server to connect to.",
              "lineNumber": 25,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "wsInfo.server"
            },
            {
              "title": "property",
              "description": "The port of the server to connect to.",
              "lineNumber": 26,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "wsInfo.port"
            },
            {
              "title": "property",
              "description": "The URL path to use to request a websocket connection.",
              "lineNumber": 27,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "wsInfo.url"
            },
            {
              "title": "property",
              "description": "Any additional params that might be required by the server to establish the websocket connection.",
              "lineNumber": 28,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "wsInfo.params"
            },
            {
              "title": "property",
              "description": "The date and time that the last known contact with the server was.",
              "lineNumber": 29,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "lastContact"
            }
          ],
          "loc": {
            "start": {
              "line": 12,
              "column": 0
            },
            "end": {
              "line": 42,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 44,
                "column": 0
              },
              "end": {
                "line": 44,
                "column": 70
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "connected",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The state of the websocket connection."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "property",
              "name": "pinging",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "True if the client has sent a ping to the server and is still waiting for a pong response."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "property",
              "name": "method",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Information about how the websocket is being used."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "property",
                  "name": "method.type",
                  "lineNumber": 12,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "How the websocket is staying connected."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "property",
                  "name": "method.responsibleParty",
                  "lineNumber": 13,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Who is responsible for keeping the connection alive."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                }
              ]
            },
            {
              "title": "property",
              "name": "platform",
              "lineNumber": 14,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The SDK platform being used."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "pingInterval",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "How often the client will ping the server to test for websocket connectivity."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "property",
              "name": "reconnectLimit",
              "lineNumber": 16,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "How many times the SDK will try to reconnect a disconnected websocket."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "property",
              "name": "reconnectDelay",
              "lineNumber": 17,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "How long the SDK will wait before retrying websocket reconnection."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "property",
              "name": "reconnectTimeMultiplier",
              "lineNumber": 18,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Reconnect delay multiplier for subsequent attempts. The reconnect delay time will be multiplied by this after each failed reconnect attempt to increase the delay between attempts. eg. 5000ms then 10000ms then 20000ms delay if value is 2."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "property",
              "name": "reconnectTimeLimit",
              "lineNumber": 19,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Maximum time delay between reconnect attempts (milliseconds). Used in conjunction with "
                      },
                      {
                        "type": "inlineCode",
                        "value": "reconnectTimeMultiplier"
                      },
                      {
                        "type": "text",
                        "value": " to prevent overly long delays between reconnection attempts."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "property",
              "name": "autoReconnect",
              "lineNumber": 20,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Indicates if the SDK should automatically try reconnecting a disconnected websocket."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            },
            {
              "title": "property",
              "name": "maxMissedPings",
              "lineNumber": 21,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "How many missed pings before the SDK stops trying to reconnect a disconnected websocket."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "property",
              "name": "webSocketOAuthMode",
              "lineNumber": 22,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The mode used for authenticating with the server."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "wsInfo",
              "lineNumber": 23,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Information required to connect a websocket to the server."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "property",
                  "name": "wsInfo.protocol",
                  "lineNumber": 24,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The protocol to use to connect a websocket."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "property",
                  "name": "wsInfo.server",
                  "lineNumber": 25,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The domain name or IP address of the server to connect to."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "property",
                  "name": "wsInfo.port",
                  "lineNumber": 26,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The port of the server to connect to."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  }
                },
                {
                  "title": "property",
                  "name": "wsInfo.url",
                  "lineNumber": 27,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The URL path to use to request a websocket connection."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "property",
                  "name": "wsInfo.params",
                  "lineNumber": 28,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Any additional params that might be required by the server to establish the websocket connection."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                }
              ]
            },
            {
              "title": "property",
              "name": "lastContact",
              "lineNumber": 29,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The date and time that the last known contact with the server was."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "WSConnectionObject",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "connection",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "connection",
              "kind": "namespace"
            },
            {
              "name": "WSConnectionObject",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "connection.WSConnectionObject"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Get the state of the websocket."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "memberof",
              "description": "connection",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "getSocketState"
            },
            {
              "title": "param",
              "description": "Backend platform for which to request the websocket's state.",
              "lineNumber": 6,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "platform",
              "default": "'link'"
            },
            {
              "title": "return",
              "description": "Details about the current websocket connection, including state and configuration.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "connection.WSConnectionObject"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 65,
                "column": 4
              },
              "end": {
                "line": 68,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "platform",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Backend platform for which to request the websocket's state."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "default": "'link'"
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Details about the current websocket connection, including state and configuration."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "connection.WSConnectionObject"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "connection",
          "kind": "function",
          "name": "getSocketState",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "connection",
              "kind": "namespace"
            },
            {
              "name": "getSocketState",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "connection.getSocketState"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Enables or disables connectivity checking."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "memberof",
              "description": "connection",
              "lineNumber": 3
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 4,
              "name": "enableConnectivityChecking"
            },
            {
              "title": "param",
              "description": "Enable connectivity checking.",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "enable"
            }
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 77,
                "column": 4
              },
              "end": {
                "line": 80,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "enable",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Enable connectivity checking."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "connection",
          "kind": "function",
          "name": "enableConnectivityChecking",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "connection",
              "kind": "namespace"
            },
            {
              "name": "enableConnectivityChecking",
              "kind": "function"
            }
          ],
          "namespace": "connectionenableConnectivityChecking"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Triggers a reset in the connection to the WebSocket being used for notifications.\nThis can be used in scenarios where a network issue (undetectable by the SDK)\nis detected by an application."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If there is no WebSocket currently connected, this function has no effect.\nCalling this function will trigger all the normal WebSocket and connectivity lifecycle\nevents as well as trigger re-connection processing that follows the configuration of the SDK.\nCalling this function always has the potential of causing some events being lost by the\nSDK and preventing proper operation."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 10,
              "type": null
            },
            {
              "title": "memberof",
              "description": "connection",
              "lineNumber": 11
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 12,
              "name": "resetConnection"
            }
          ],
          "loc": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 96,
                "column": 4
              },
              "end": {
                "line": 109,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "connection",
          "kind": "function",
          "name": "resetConnection",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "connection",
              "kind": "namespace"
            },
            {
              "name": "resetConnection",
              "kind": "function"
            }
          ],
          "namespace": "connectionresetConnection"
        }
      ]
    },
    "path": [
      {
        "name": "connection",
        "kind": "namespace"
      }
    ],
    "namespace": "connection"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The 'contacts' namespace allows users to store personal contacts to their account."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 3,
        "type": null
      },
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": "contacts"
      }
    ],
    "loc": {
      "start": {
        "line": 10,
        "column": 2
      },
      "end": {
        "line": 15,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 17,
          "column": 2
        },
        "end": {
          "line": 195,
          "column": 3
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/contacts.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "namespace",
    "name": "contacts",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A new contact has been added to the address book."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "memberof",
              "description": "contacts",
              "lineNumber": 3
            },
            {
              "title": "event",
              "description": "contacts:new",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": "The new contact.",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "contact"
            }
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 9,
                "column": 0
              },
              "end": {
                "line": 9,
                "column": 42
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "contact",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The new contact."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "contacts",
          "kind": "event",
          "name": "contacts:new",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "contacts",
              "kind": "namespace"
            },
            {
              "name": "contacts:new",
              "kind": "event"
            }
          ],
          "namespace": "contacts.event:contacts:new"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An error occurred while performing a contact operation."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "memberof",
              "description": "contacts",
              "lineNumber": 3
            },
            {
              "title": "event",
              "description": "contacts:error",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The Basic error object.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 18,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 19,
                "column": 46
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 6,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The Basic error object."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "contacts",
          "kind": "event",
          "name": "contacts:error",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "contacts",
              "kind": "namespace"
            },
            {
              "name": "contacts:error",
              "kind": "event"
            }
          ],
          "namespace": "contacts.event:contacts:error"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The contacts list has changed."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "memberof",
              "description": "contacts",
              "lineNumber": 3
            },
            {
              "title": "event",
              "description": "contacts:change",
              "lineNumber": 4
            },
            {
              "title": "example",
              "description": "client.on('contacts:change', function () {\n   // Get the updated list of contacts.\n   const contacts = client.contacts.getAll()\n   ...\n})",
              "lineNumber": 5
            }
          ],
          "loc": {
            "start": {
              "line": 21,
              "column": 0
            },
            "end": {
              "line": 32,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 33,
                "column": 0
              },
              "end": {
                "line": 33,
                "column": 48
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/eventTypes.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "client.on('contacts:change', function () {\n   // Get the updated list of contacts.\n   const contacts = client.contacts.getAll()\n   ...\n})"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "contacts",
          "kind": "event",
          "name": "contacts:change",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "contacts",
              "kind": "namespace"
            },
            {
              "name": "contacts:change",
              "kind": "event"
            }
          ],
          "namespace": "contacts.event:contacts:change"
        }
      ],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Add a contact to a user's personal address book.\nWill trigger the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "contacts:new"
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "memberof",
              "description": "contacts",
              "lineNumber": 5
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 6,
              "name": "add"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 7,
              "name": "addContactAsBuddy"
            },
            {
              "title": "param",
              "description": "The contact object.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "contact"
            },
            {
              "title": "param",
              "description": "The primary userId for the contact",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "contact.primaryContact"
            },
            {
              "title": "param",
              "description": "The contact's unique contact ID",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "contact.contactId"
            },
            {
              "title": "param",
              "description": "The contact's first name",
              "lineNumber": 11,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.firstName"
            },
            {
              "title": "param",
              "description": "The contact's last name",
              "lineNumber": 12,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.lastName"
            },
            {
              "title": "param",
              "description": "The contact's email address",
              "lineNumber": 13,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.email"
            },
            {
              "title": "param",
              "description": "The contact's home phone number",
              "lineNumber": 14,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.homePhoneNumber"
            },
            {
              "title": "param",
              "description": "The contact's business phone number",
              "lineNumber": 15,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.businessPhoneNumber"
            },
            {
              "title": "param",
              "description": "The contact's mobile phone number",
              "lineNumber": 16,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.mobilePhoneNumber"
            },
            {
              "title": "param",
              "description": "The name of the contact list for which to add this contact to (\"friends\" by default)",
              "lineNumber": 17,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.list"
            },
            {
              "title": "param",
              "description": "Indicates whether or not the contact is a friend of the user",
              "lineNumber": 18,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "contact.buddy"
            }
          ],
          "loc": {
            "start": {
              "line": 42,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 62,
                "column": 4
              },
              "end": {
                "line": 65,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/contacts.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "contact",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The contact object."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "contact.primaryContact",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The primary userId for the contact"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "contact.contactId",
                  "lineNumber": 10,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's unique contact ID"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "contact.firstName",
                  "lineNumber": 11,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's first name"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.lastName",
                  "lineNumber": 12,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's last name"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.email",
                  "lineNumber": 13,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's email address"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.homePhoneNumber",
                  "lineNumber": 14,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's home phone number"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.businessPhoneNumber",
                  "lineNumber": 15,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's business phone number"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.mobilePhoneNumber",
                  "lineNumber": 16,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's mobile phone number"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.list",
                  "lineNumber": 17,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The name of the contact list for which to add this contact to (\"friends\" by default)"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.buddy",
                  "lineNumber": 18,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Indicates whether or not the contact is a friend of the user"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "boolean"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "contacts",
          "kind": "function",
          "name": "add",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "contacts",
              "kind": "namespace"
            },
            {
              "name": "add",
              "kind": "function"
            }
          ],
          "namespace": "contactsadd"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves local information about a contact."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "contacts",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "get"
            },
            {
              "title": "param",
              "description": "The unique contact ID of the contact.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "contactId"
            },
            {
              "title": "return",
              "description": "Contact information.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 76,
                "column": 4
              },
              "end": {
                "line": 79,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/contacts.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "contactId",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The unique contact ID of the contact."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Contact information."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "contacts",
          "kind": "function",
          "name": "get",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "contacts",
              "kind": "namespace"
            },
            {
              "name": "get",
              "kind": "function"
            }
          ],
          "namespace": "contactsget"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves local information about all contacts."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "contacts",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "getAll"
            },
            {
              "title": "return",
              "description": "List of contact information.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Array"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 89,
                "column": 4
              },
              "end": {
                "line": 92,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/contacts.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "List of contact information."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Array"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "contacts",
          "kind": "function",
          "name": "getAll",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "contacts",
              "kind": "namespace"
            },
            {
              "name": "getAll",
              "kind": "function"
            }
          ],
          "namespace": "contactsgetAll"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Refreshes the local information about contacts. This will get new contacts from the platform.\nWill trigger the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "contacts:change"
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "memberof",
              "description": "contacts",
              "lineNumber": 5
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 6,
              "name": "refresh"
            }
          ],
          "loc": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 102,
                "column": 4
              },
              "end": {
                "line": 105,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/contacts.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "contacts",
          "kind": "function",
          "name": "refresh",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "contacts",
              "kind": "namespace"
            },
            {
              "name": "refresh",
              "kind": "function"
            }
          ],
          "namespace": "contactsrefresh"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Remove a contact from a personal address book.\nWill trigger the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "contacts:change"
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "memberof",
              "description": "contacts",
              "lineNumber": 5
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 6,
              "name": "remove"
            },
            {
              "title": "param",
              "description": "The Id of the contact that will be removed.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "id"
            }
          ],
          "loc": {
            "start": {
              "line": 107,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 116,
                "column": 4
              },
              "end": {
                "line": 119,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/contacts.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "id",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The Id of the contact that will be removed."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "contacts",
          "kind": "function",
          "name": "remove",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "contacts",
              "kind": "namespace"
            },
            {
              "name": "remove",
              "kind": "function"
            }
          ],
          "namespace": "contactsremove"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Update a contact from the user's personal address book.\nWill trigger the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "contacts:change"
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "memberof",
              "description": "contacts",
              "lineNumber": 5
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 6,
              "name": "update"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 7,
              "name": "addContactAsBuddy"
            },
            {
              "title": "param",
              "description": "The contact object.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "contact"
            },
            {
              "title": "param",
              "description": "The primary userId for the contact",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "contact.primaryContact"
            },
            {
              "title": "param",
              "description": "The contact's unique contact ID",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "contact.contactId"
            },
            {
              "title": "param",
              "description": "The contact's first name",
              "lineNumber": 11,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.firstName"
            },
            {
              "title": "param",
              "description": "The contact's last name",
              "lineNumber": 12,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.lastName"
            },
            {
              "title": "param",
              "description": "The contact's email address",
              "lineNumber": 13,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.email"
            },
            {
              "title": "param",
              "description": "The contact's home phone number",
              "lineNumber": 14,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.homePhoneNumber"
            },
            {
              "title": "param",
              "description": "The contact's business phone number",
              "lineNumber": 15,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.businessPhoneNumber"
            },
            {
              "title": "param",
              "description": "The contact's mobile phone number",
              "lineNumber": 16,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.mobilePhoneNumber"
            },
            {
              "title": "param",
              "description": "The name of the contact list for which to add this contact to (\"friends\" by default)",
              "lineNumber": 17,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "contact.list"
            },
            {
              "title": "param",
              "description": "Indicates whether or not the contact is a friend of the user",
              "lineNumber": 18,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "contact.buddy"
            }
          ],
          "loc": {
            "start": {
              "line": 145,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 165,
                "column": 4
              },
              "end": {
                "line": 180,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/contacts.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "contact",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The contact object."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "contact.primaryContact",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The primary userId for the contact"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "contact.contactId",
                  "lineNumber": 10,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's unique contact ID"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "contact.firstName",
                  "lineNumber": 11,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's first name"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.lastName",
                  "lineNumber": 12,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's last name"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.email",
                  "lineNumber": 13,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's email address"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.homePhoneNumber",
                  "lineNumber": 14,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's home phone number"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.businessPhoneNumber",
                  "lineNumber": 15,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's business phone number"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.mobilePhoneNumber",
                  "lineNumber": 16,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The contact's mobile phone number"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.list",
                  "lineNumber": 17,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The name of the contact list for which to add this contact to (\"friends\" by default)"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "contact.buddy",
                  "lineNumber": 18,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Indicates whether or not the contact is a friend of the user"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "boolean"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "contacts",
          "kind": "function",
          "name": "update",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "contacts",
              "kind": "namespace"
            },
            {
              "name": "update",
              "kind": "function"
            }
          ],
          "namespace": "contactsupdate"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Fetch a contact from the user's personal address book.\nWill trigger the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "contacts:change"
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "memberof",
              "description": "contacts",
              "lineNumber": 5
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 6,
              "name": "fetch"
            },
            {
              "title": "param",
              "description": "The unique contact ID of the contact.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "contactId"
            }
          ],
          "loc": {
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 191,
                "column": 4
              },
              "end": {
                "line": 194,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/contacts.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "contactId",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The unique contact ID of the contact."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "contacts",
          "kind": "function",
          "name": "fetch",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "contacts",
              "kind": "namespace"
            },
            {
              "name": "fetch",
              "kind": "function"
            }
          ],
          "namespace": "contactsfetch"
        }
      ]
    },
    "path": [
      {
        "name": "contacts",
        "kind": "namespace"
      }
    ],
    "namespace": "contacts"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The messaging feature revolves around a 'conversation' namespace. It is responsible for storing the conversations\nand its messages, and returning conversation objects when requested."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "See the \"Conversation\" and \"Message\" sections of the documentation for more details."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Available conversations can be retrieved using the "
            },
            {
              "type": "link",
              "url": "#conversationget",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "conversation.get"
                }
              ]
            },
            {
              "type": "text",
              "value": "\nor "
            },
            {
              "type": "link",
              "url": "#conversationgetall",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "conversation.getAll"
                }
              ]
            },
            {
              "type": "text",
              "value": " APIs."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Messaging functions are all part of the 'conversation' namespace. Ex: "
            },
            {
              "type": "link",
              "url": "messaging.getAll",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "client.conversation.getAll"
                }
              ]
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 11,
        "type": null
      },
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 12,
        "type": null,
        "name": "conversation"
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 14,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 16,
          "column": 40
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/api.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "namespace",
    "name": "conversation",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A new conversation has been created."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 4
            },
            {
              "title": "event",
              "description": "conversations:new",
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": "An array containing one object with information about the newly created conversation.",
              "lineNumber": 6,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "An array of destinations for messages created in this conversation.",
              "lineNumber": 7,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "params.destination"
            },
            {
              "title": "param",
              "description": "The type of conversation created. See {@link conversation.chatTypes} for valid types.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.type"
            }
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 11,
                "column": 0
              },
              "end": {
                "line": 11,
                "column": 52
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "An array containing one object with information about the newly created conversation."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.destination",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An array of destinations for messages created in this conversation."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                },
                {
                  "title": "param",
                  "name": "params.type",
                  "lineNumber": 8,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The type of conversation created. See "
                          },
                          {
                            "type": "link",
                            "url": "#conversationchattypes",
                            "title": null,
                            "jsdoc": true,
                            "children": [
                              {
                                "type": "text",
                                "value": "conversation.chatTypes"
                              }
                            ]
                          },
                          {
                            "type": "text",
                            "value": " for valid types."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "conversation",
          "kind": "event",
          "name": "conversations:new",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "conversations:new",
              "kind": "event"
            }
          ],
          "namespace": "conversation.event:conversations:new"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A change has occurred in the conversation list."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 4
            },
            {
              "title": "event",
              "description": "conversations:change",
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": "An array of objects containing information about the conversations that have changed.",
              "lineNumber": 6,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "An array of destinations for messages in this conversation.",
              "lineNumber": 7,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "params.destination"
            },
            {
              "title": "param",
              "description": "The type of conversation changed. See {@link conversation.chatTypes} for valid types.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.type"
            }
          ],
          "loc": {
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 22,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 23,
                "column": 0
              },
              "end": {
                "line": 23,
                "column": 58
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "An array of objects containing information about the conversations that have changed."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.destination",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An array of destinations for messages in this conversation."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                },
                {
                  "title": "param",
                  "name": "params.type",
                  "lineNumber": 8,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The type of conversation changed. See "
                          },
                          {
                            "type": "link",
                            "url": "#conversationchattypes",
                            "title": null,
                            "jsdoc": true,
                            "children": [
                              {
                                "type": "text",
                                "value": "conversation.chatTypes"
                              }
                            ]
                          },
                          {
                            "type": "text",
                            "value": " for valid types."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "conversation",
          "kind": "event",
          "name": "conversations:change",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "conversations:change",
              "kind": "event"
            }
          ],
          "namespace": "conversation.event:conversations:change"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A change has occurred in a specific conversation's message list.\nIf a single message was created/edited, "
                  },
                  {
                    "type": "inlineCode",
                    "value": "messageId"
                  },
                  {
                    "type": "text",
                    "value": " will be present."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 5
            },
            {
              "title": "event",
              "description": "messages:change",
              "lineNumber": 6
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "An array of destinations for the message affected.",
              "lineNumber": 8,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "params.destination"
            },
            {
              "title": "param",
              "description": "The type of conversation. See {@link conversation.chatTypes} for valid types.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.type"
            },
            {
              "title": "param",
              "description": "The ID of the message affected.",
              "lineNumber": 10,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "params.messageId"
            },
            {
              "title": "param",
              "description": "The username of the sender.",
              "lineNumber": 11,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "params.sender"
            }
          ],
          "loc": {
            "start": {
              "line": 25,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 38,
                "column": 0
              },
              "end": {
                "line": 38,
                "column": 48
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.destination",
                  "lineNumber": 8,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An array of destinations for the message affected."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                },
                {
                  "title": "param",
                  "name": "params.type",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The type of conversation. See "
                          },
                          {
                            "type": "link",
                            "url": "#conversationchattypes",
                            "title": null,
                            "jsdoc": true,
                            "children": [
                              {
                                "type": "text",
                                "value": "conversation.chatTypes"
                              }
                            ]
                          },
                          {
                            "type": "text",
                            "value": " for valid types."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.messageId",
                  "lineNumber": 10,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the message affected."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "params.sender",
                  "lineNumber": 11,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The username of the sender."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "conversation",
          "kind": "event",
          "name": "messages:change",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "messages:change",
              "kind": "event"
            }
          ],
          "namespace": "conversation.event:messages:change"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An error occurred with messaging."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 4
            },
            {
              "title": "event",
              "description": "messages:error",
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The Basic error object.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "api.BasicError"
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 40,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 49,
                "column": 0
              },
              "end": {
                "line": 49,
                "column": 46
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The Basic error object."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "api.BasicError"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "conversation",
          "kind": "event",
          "name": "messages:error",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "messages:error",
              "kind": "event"
            }
          ],
          "namespace": "conversation.event:messages:error"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The list of users that are currently typing has changed."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 4,
              "name": "isTyping"
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 5
            },
            {
              "title": "event",
              "description": "isTypingList:change",
              "lineNumber": 6
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "An array of destinations in this conversation.",
              "lineNumber": 8,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "params.destination"
            },
            {
              "title": "param",
              "description": "The username of the sender that caused the event to fire.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.sender"
            },
            {
              "title": "param",
              "description": "The type of conversation. See {@link conversation.chatTypes} for valid types.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.type"
            },
            {
              "title": "param",
              "description": "(active/idle) The current state of the sender that caused the event to fire.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.state"
            }
          ],
          "loc": {
            "start": {
              "line": 51,
              "column": 0
            },
            "end": {
              "line": 63,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 64,
                "column": 0
              },
              "end": {
                "line": 64,
                "column": 58
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.destination",
                  "lineNumber": 8,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "An array of destinations in this conversation."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                },
                {
                  "title": "param",
                  "name": "params.sender",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The username of the sender that caused the event to fire."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.type",
                  "lineNumber": 10,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The type of conversation. See "
                          },
                          {
                            "type": "link",
                            "url": "#conversationchattypes",
                            "title": null,
                            "jsdoc": true,
                            "children": [
                              {
                                "type": "text",
                                "value": "conversation.chatTypes"
                              }
                            ]
                          },
                          {
                            "type": "text",
                            "value": " for valid types."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.state",
                  "lineNumber": 11,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "(active/idle) The current state of the sender that caused the event to fire."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "conversation",
          "kind": "event",
          "name": "isTypingList:change",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "isTypingList:change",
              "kind": "event"
            }
          ],
          "namespace": "conversation.event:isTypingList:change"
        }
      ],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Fetches chat conversations that the current user is part of. This will refresh\nthe available information with any new information from the server."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If successful, the event "
                  },
                  {
                    "type": "link",
                    "url": "#conversationeventconversationschange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "conversations:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " will be emitted."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Available conversation information can be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#conversationget",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "conversation.get"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or "
                  },
                  {
                    "type": "link",
                    "url": "#conversationgetall",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "conversation.getAll"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " Messaging\nAPIs."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 10,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 11
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 12,
              "name": "fetch"
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 13
            },
            {
              "title": "param",
              "description": "A configuration object to query for more specific results.",
              "lineNumber": 14,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "options"
            },
            {
              "title": "param",
              "description": "The type of conversation to fetch. See {@link conversation.chatTypes} for valid types.",
              "lineNumber": 15,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "options.type",
              "default": "'chat-oneToOne'"
            }
          ],
          "loc": {
            "start": {
              "line": 26,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 43,
                "column": 4
              },
              "end": {
                "line": 50,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "options",
              "lineNumber": 14,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A configuration object to query for more specific results."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "options.type",
                  "lineNumber": 15,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The type of conversation to fetch. See "
                          },
                          {
                            "type": "link",
                            "url": "#conversationchattypes",
                            "title": null,
                            "jsdoc": true,
                            "children": [
                              {
                                "type": "text",
                                "value": "conversation.chatTypes"
                              }
                            ]
                          },
                          {
                            "type": "text",
                            "value": " for valid types."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  "default": "'chat-oneToOne'"
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "function",
          "name": "fetch",
          "memberof": "conversation",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "fetch",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "conversation.fetch"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves a conversation object matching the User ID and Type provided if available."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Conversations are made availble using the "
                  },
                  {
                    "type": "link",
                    "url": "#conversationfetch",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "conversation.fetch"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or\n"
                  },
                  {
                    "type": "link",
                    "url": "#conversationcreate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "conversation.create"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " Messaging APIs."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 8,
              "name": "get"
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 9
            },
            {
              "title": "param",
              "description": "The User ID of the remote user with which the current user had a conversation.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "recipient"
            },
            {
              "title": "param",
              "description": "Options used to query for more specific results.",
              "lineNumber": 11,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "options"
            },
            {
              "title": "param",
              "description": "The type of conversation to get. See {@link conversation.chatTypes} for valid types.",
              "lineNumber": 12,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "options.type",
              "default": "'chat-oneToOne'"
            },
            {
              "title": "returns",
              "description": "A Conversation object.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "conversation.Conversation"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 66,
                "column": 4
              },
              "end": {
                "line": 102,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "recipient",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The User ID of the remote user with which the current user had a conversation."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "options",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Options used to query for more specific results."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "options.type",
                  "lineNumber": 12,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The type of conversation to get. See "
                          },
                          {
                            "type": "link",
                            "url": "#conversationchattypes",
                            "title": null,
                            "jsdoc": true,
                            "children": [
                              {
                                "type": "text",
                                "value": "conversation.chatTypes"
                              }
                            ]
                          },
                          {
                            "type": "text",
                            "value": " for valid types."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  "default": "'chat-oneToOne'"
                }
              ]
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A Conversation object."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "conversation.Conversation"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "function",
          "name": "get",
          "memberof": "conversation",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "get",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "conversation.get"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Creates and return a new conversation object. Any messages being sent through this Conversation\nobject will be sent to the destination provided."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If successful, the event "
                  },
                  {
                    "type": "link",
                    "url": "#conversationeventconversationsnew",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "conversations:new"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " will be emitted."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 8,
              "name": "create"
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 9
            },
            {
              "title": "param",
              "description": "The ID of the remote user to create a conversation with. The ID will be changed to lowercase.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "recipient"
            },
            {
              "title": "param",
              "description": "Options to use when creating a new conversation object.",
              "lineNumber": 11,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "options"
            },
            {
              "title": "param",
              "description": "The type of conversation to create. See {@link conversation.chatTypes} for valid types.",
              "lineNumber": 12,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "options.type",
              "default": "'chat-oneToOne'"
            },
            {
              "title": "returns",
              "description": "A Conversation object.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "conversation.Conversation"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 117,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 118,
                "column": 4
              },
              "end": {
                "line": 155,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "recipient",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the remote user to create a conversation with. The ID will be changed to lowercase."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "options",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Options to use when creating a new conversation object."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "options.type",
                  "lineNumber": 12,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The type of conversation to create. See "
                          },
                          {
                            "type": "link",
                            "url": "#conversationchattypes",
                            "title": null,
                            "jsdoc": true,
                            "children": [
                              {
                                "type": "text",
                                "value": "conversation.chatTypes"
                              }
                            ]
                          },
                          {
                            "type": "text",
                            "value": " for valid types."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  "default": "'chat-oneToOne'"
                }
              ]
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A Conversation object."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "conversation.Conversation"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "function",
          "name": "create",
          "memberof": "conversation",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "create",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "conversation.create"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves all available conversations for the current user."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Conversations are made availble using the "
                  },
                  {
                    "type": "link",
                    "url": "#conversationfetch",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "conversation.fetch"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or\n"
                  },
                  {
                    "type": "link",
                    "url": "#conversationcreate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "conversation.create"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " Messaging APIs."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 8,
              "name": "getAll"
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 9
            },
            {
              "title": "returns",
              "description": "An array of Conversation objects.",
              "lineNumber": 10,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "conversation.Conversation"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 167,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 168,
                "column": 4
              },
              "end": {
                "line": 174,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "An array of Conversation objects."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "conversation.Conversation"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "function",
          "name": "getAll",
          "memberof": "conversation",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "getAll",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "conversation.getAll"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Possible types of conversations."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "chatTypes"
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 5
            },
            {
              "title": "type",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            },
            {
              "title": "property",
              "description": "A simple chat between two users.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "ONETOONE"
            },
            {
              "title": "property",
              "description": "A chat between groups of users",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "GROUP"
            },
            {
              "title": "property",
              "description": "A chat using SMS.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "SMS"
            },
            {
              "title": "example",
              "description": "// Use the chat types to fetch group conversations.\nclient.conversation.fetch({type: client.conversation.chatTypes.GROUP}) {",
              "lineNumber": 10
            }
          ],
          "loc": {
            "start": {
              "line": 176,
              "column": 4
            },
            "end": {
              "line": 189,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 190,
                "column": 4
              },
              "end": {
                "line": 190,
                "column": 13
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/api.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Use the chat types to fetch group conversations.\nclient.conversation.fetch({type: client.conversation.chatTypes.GROUP}) {"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "ONETOONE",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A simple chat between two users."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "GROUP",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A chat between groups of users"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "SMS",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A chat using SMS."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "chatTypes",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "conversation",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "chatTypes",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "conversation.chatTypes"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Conversation object represents a conversation either between two users, or between a\nuser and a group. A user can create a Conversation using "
                  },
                  {
                    "type": "link",
                    "url": "#conversationcreate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "conversation.create"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " Messaging API."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Conversation can be used to create messages to send using the Conversation and Messaging APIs\n"
                  },
                  {
                    "type": "link",
                    "url": "#conversationconversationcreatemessage",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Conversation.createMessage"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " and "
                  },
                  {
                    "type": "link",
                    "url": "#conversationmessagesend",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Message.send"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " functions."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Once a sender sends the initial message (within a conversation) to a recipient, there will be a\nconversation object saved in both sender and recipient's state."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "property",
              "description": "The ID/group ID of the remote user with which the current user is having a conversation.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "destination"
            },
            {
              "title": "property",
              "description": "The ID of the current user who is having a conversation.",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "address"
            },
            {
              "title": "property",
              "description": "The timestamp (milliseconds since epoch) of when a message was last received in this conversation.\nThis property applies only to conversation object stored in recipient's state.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "lastReceived"
            },
            {
              "title": "property",
              "description": "The type of conversation. See {@link conversation.chatTypes} for valid types.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "type"
            },
            {
              "title": "property",
              "description": "The last message received.",
              "lineNumber": 16,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "lastMessage"
            },
            {
              "title": "property",
              "description": "The array of message objects.",
              "lineNumber": 17,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "conversation.Message"
                  }
                ]
              },
              "name": "messages"
            },
            {
              "title": "property",
              "description": "The array indentifying the User IDs of the users who are currently typing.",
              "lineNumber": 18,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "isTypingList"
            },
            {
              "title": "public",
              "description": null,
              "lineNumber": 20,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 21
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 22,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "Conversation"
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 23
            }
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 25,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 78,
                "column": 0
              },
              "end": {
                "line": 78,
                "column": 51
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "destination",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID/group ID of the remote user with which the current user is having a conversation."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "address",
              "lineNumber": 12,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the current user who is having a conversation."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "lastReceived",
              "lineNumber": 13,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The timestamp (milliseconds since epoch) of when a message was last received in this conversation.\nThis property applies only to conversation object stored in recipient's state."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "property",
              "name": "type",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The type of conversation. See "
                      },
                      {
                        "type": "link",
                        "url": "#conversationchattypes",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "conversation.chatTypes"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": " for valid types."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "lastMessage",
              "lineNumber": 16,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The last message received."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "messages",
              "lineNumber": 17,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The array of message objects."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "conversation.Message"
                  }
                ]
              }
            },
            {
              "title": "property",
              "name": "isTypingList",
              "lineNumber": 18,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The array indentifying the User IDs of the users who are currently typing."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "Conversation",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "conversation",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": [
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Creates and return a message object. You must specify a part. If this is a simple text message, provide a "
                        },
                        {
                          "type": "inlineCode",
                          "value": "text"
                        },
                        {
                          "type": "text",
                          "value": " part as demonstrated in the example below."
                        }
                      ]
                    },
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "If successful, the event "
                        },
                        {
                          "type": "link",
                          "url": "#conversationeventmessageschange",
                          "title": null,
                          "jsdoc": true,
                          "children": [
                            {
                              "type": "text",
                              "value": "messages:change"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": " will be emitted."
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 5,
                    "type": null
                  },
                  {
                    "title": "static",
                    "description": null,
                    "lineNumber": 6
                  },
                  {
                    "title": "memberof",
                    "description": "conversation.Conversation",
                    "lineNumber": 7
                  },
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 8,
                    "name": "createMessage"
                  },
                  {
                    "title": "constructs",
                    "description": "Message",
                    "lineNumber": 9
                  },
                  {
                    "title": "param",
                    "description": "The Part to add to the message.",
                    "lineNumber": 10,
                    "type": {
                      "type": "NameExpression",
                      "name": "conversation.Part"
                    },
                    "name": "part"
                  },
                  {
                    "title": "returns",
                    "description": "The newly created Message object.",
                    "lineNumber": 11,
                    "type": {
                      "type": "NameExpression",
                      "name": "conversation.Message"
                    }
                  },
                  {
                    "title": "example",
                    "description": "conversation.createMessage({type: 'text', text: 'This is the message'});",
                    "lineNumber": 13
                  }
                ],
                "loc": {
                  "start": {
                    "line": 137,
                    "column": 4
                  },
                  "end": {
                    "line": 152,
                    "column": 7
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 153,
                      "column": 4
                    },
                    "end": {
                      "line": 171,
                      "column": 5
                    }
                  },
                  "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
                },
                "augments": [],
                "examples": [
                  {
                    "description": "conversation.createMessage({type: 'text', text: 'This is the message'});"
                  }
                ],
                "implements": [],
                "params": [
                  {
                    "title": "param",
                    "name": "part",
                    "lineNumber": 10,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "The Part to add to the message."
                            }
                          ]
                        }
                      ]
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "conversation.Part"
                    }
                  }
                ],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "The newly created Message object."
                            }
                          ]
                        }
                      ]
                    },
                    "title": "returns",
                    "type": {
                      "type": "NameExpression",
                      "name": "conversation.Message"
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "access": "public",
                "scope": "static",
                "memberof": "conversation.Conversation",
                "kind": "function",
                "name": "createMessage",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "conversation",
                    "kind": "namespace"
                  },
                  {
                    "name": "Conversation",
                    "kind": "typedef",
                    "scope": "static"
                  },
                  {
                    "name": "createMessage",
                    "kind": "function",
                    "scope": "static"
                  }
                ],
                "namespace": "conversation.Conversation.createMessage"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Clears all messages in this conversation from local state."
                        }
                      ]
                    },
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "If successful, the event "
                        },
                        {
                          "type": "link",
                          "url": "#conversationeventmessageschange",
                          "title": null,
                          "jsdoc": true,
                          "children": [
                            {
                              "type": "text",
                              "value": "messages:change"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": " will be emitted."
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 5,
                    "type": null
                  },
                  {
                    "title": "static",
                    "description": null,
                    "lineNumber": 6
                  },
                  {
                    "title": "memberof",
                    "description": "conversation.Conversation",
                    "lineNumber": 7
                  },
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 8,
                    "name": "clearMessages"
                  }
                ],
                "loc": {
                  "start": {
                    "line": 173,
                    "column": 4
                  },
                  "end": {
                    "line": 182,
                    "column": 7
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 183,
                      "column": 4
                    },
                    "end": {
                      "line": 185,
                      "column": 5
                    }
                  },
                  "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "access": "public",
                "scope": "static",
                "memberof": "conversation.Conversation",
                "kind": "function",
                "name": "clearMessages",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "conversation",
                    "kind": "namespace"
                  },
                  {
                    "name": "Conversation",
                    "kind": "typedef",
                    "scope": "static"
                  },
                  {
                    "name": "clearMessages",
                    "kind": "function",
                    "scope": "static"
                  }
                ],
                "namespace": "conversation.Conversation.clearMessages"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Gets all messages from this conversation."
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 3,
                    "type": null
                  },
                  {
                    "title": "static",
                    "description": null,
                    "lineNumber": 4
                  },
                  {
                    "title": "memberof",
                    "description": "conversation.Conversation",
                    "lineNumber": 5
                  },
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 6,
                    "name": "getMessages"
                  },
                  {
                    "title": "return",
                    "description": "An array of messages.",
                    "lineNumber": 7,
                    "type": {
                      "type": "TypeApplication",
                      "expression": {
                        "type": "NameExpression",
                        "name": "Array"
                      },
                      "applications": [
                        {
                          "type": "NameExpression",
                          "name": "conversation.Message"
                        }
                      ]
                    }
                  }
                ],
                "loc": {
                  "start": {
                    "line": 187,
                    "column": 4
                  },
                  "end": {
                    "line": 195,
                    "column": 7
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 196,
                      "column": 4
                    },
                    "end": {
                      "line": 206,
                      "column": 5
                    }
                  },
                  "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "An array of messages."
                            }
                          ]
                        }
                      ]
                    },
                    "title": "returns",
                    "type": {
                      "type": "TypeApplication",
                      "expression": {
                        "type": "NameExpression",
                        "name": "Array"
                      },
                      "applications": [
                        {
                          "type": "NameExpression",
                          "name": "conversation.Message"
                        }
                      ]
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "access": "public",
                "scope": "static",
                "memberof": "conversation.Conversation",
                "kind": "function",
                "name": "getMessages",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "conversation",
                    "kind": "namespace"
                  },
                  {
                    "name": "Conversation",
                    "kind": "typedef",
                    "scope": "static"
                  },
                  {
                    "name": "getMessages",
                    "kind": "function",
                    "scope": "static"
                  }
                ],
                "namespace": "conversation.Conversation.getMessages"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Gets a specific message from this conversation."
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 3,
                    "type": null
                  },
                  {
                    "title": "static",
                    "description": null,
                    "lineNumber": 4
                  },
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 5,
                    "name": "getMessage"
                  },
                  {
                    "title": "memberof",
                    "description": "conversation.Conversation",
                    "lineNumber": 6
                  },
                  {
                    "title": "param",
                    "description": "The ID of the message to retrieve.",
                    "lineNumber": 7,
                    "type": {
                      "type": "NameExpression",
                      "name": "string"
                    },
                    "name": "messageId"
                  },
                  {
                    "title": "return",
                    "description": "A message object.",
                    "lineNumber": 8,
                    "type": {
                      "type": "NameExpression",
                      "name": "conversation.Message"
                    }
                  }
                ],
                "loc": {
                  "start": {
                    "line": 208,
                    "column": 4
                  },
                  "end": {
                    "line": 217,
                    "column": 7
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 218,
                      "column": 4
                    },
                    "end": {
                      "line": 260,
                      "column": 5
                    }
                  },
                  "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [
                  {
                    "title": "param",
                    "name": "messageId",
                    "lineNumber": 7,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "The ID of the message to retrieve."
                            }
                          ]
                        }
                      ]
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                ],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "A message object."
                            }
                          ]
                        }
                      ]
                    },
                    "title": "returns",
                    "type": {
                      "type": "NameExpression",
                      "name": "conversation.Message"
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "access": "public",
                "scope": "static",
                "kind": "function",
                "name": "getMessage",
                "memberof": "conversation.Conversation",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "conversation",
                    "kind": "namespace"
                  },
                  {
                    "name": "Conversation",
                    "kind": "typedef",
                    "scope": "static"
                  },
                  {
                    "name": "getMessage",
                    "kind": "function",
                    "scope": "static"
                  }
                ],
                "namespace": "conversation.Conversation.getMessage"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Deletes specified messages from this conversation.\nProvide an array of message IDs for the messages to be deleted."
                        }
                      ]
                    },
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "If successful, the event "
                        },
                        {
                          "type": "link",
                          "url": "#conversationeventmessageschange",
                          "title": null,
                          "jsdoc": true,
                          "children": [
                            {
                              "type": "text",
                              "value": "messages:change"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": " will be emitted."
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 6,
                    "type": null
                  },
                  {
                    "title": "static",
                    "description": null,
                    "lineNumber": 7
                  },
                  {
                    "title": "memberof",
                    "description": "conversation.Conversation",
                    "lineNumber": 8
                  },
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 9,
                    "name": "deleteMessages"
                  },
                  {
                    "title": "param",
                    "description": "An array of message IDs for the messages to be deleted",
                    "lineNumber": 10,
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "TypeApplication",
                        "expression": {
                          "type": "NameExpression",
                          "name": "Array"
                        },
                        "applications": [
                          {
                            "type": "NameExpression",
                            "name": "string"
                          }
                        ]
                      }
                    },
                    "name": "messageIds",
                    "default": "[]"
                  }
                ],
                "loc": {
                  "start": {
                    "line": 262,
                    "column": 4
                  },
                  "end": {
                    "line": 273,
                    "column": 7
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 274,
                      "column": 4
                    },
                    "end": {
                      "line": 278,
                      "column": 5
                    }
                  },
                  "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [
                  {
                    "title": "param",
                    "name": "messageIds",
                    "lineNumber": 10,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "An array of message IDs for the messages to be deleted"
                            }
                          ]
                        }
                      ]
                    },
                    "type": {
                      "type": "TypeApplication",
                      "expression": {
                        "type": "NameExpression",
                        "name": "Array"
                      },
                      "applications": [
                        {
                          "type": "NameExpression",
                          "name": "string"
                        }
                      ]
                    },
                    "default": "[]"
                  }
                ],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "access": "public",
                "scope": "static",
                "memberof": "conversation.Conversation",
                "kind": "function",
                "name": "deleteMessages",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "conversation",
                    "kind": "namespace"
                  },
                  {
                    "name": "Conversation",
                    "kind": "typedef",
                    "scope": "static"
                  },
                  {
                    "name": "deleteMessages",
                    "kind": "function",
                    "scope": "static"
                  }
                ],
                "namespace": "conversation.Conversation.deleteMessages"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Delete the conversation."
                        }
                      ]
                    },
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "If successful, the event "
                        },
                        {
                          "type": "link",
                          "url": "#conversationeventmessageschange",
                          "title": null,
                          "jsdoc": true,
                          "children": [
                            {
                              "type": "text",
                              "value": "messages:change"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": " will be emitted."
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 5,
                    "type": null
                  },
                  {
                    "title": "static",
                    "description": null,
                    "lineNumber": 6
                  },
                  {
                    "title": "memberof",
                    "description": "conversation.Conversation",
                    "lineNumber": 7
                  },
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 8,
                    "name": "delete"
                  }
                ],
                "loc": {
                  "start": {
                    "line": 280,
                    "column": 4
                  },
                  "end": {
                    "line": 289,
                    "column": 7
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 290,
                      "column": 4
                    },
                    "end": {
                      "line": 292,
                      "column": 5
                    }
                  },
                  "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "access": "public",
                "scope": "static",
                "memberof": "conversation.Conversation",
                "kind": "function",
                "name": "delete",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "conversation",
                    "kind": "namespace"
                  },
                  {
                    "name": "Conversation",
                    "kind": "typedef",
                    "scope": "static"
                  },
                  {
                    "name": "delete",
                    "kind": "function",
                    "scope": "static"
                  }
                ],
                "namespace": "conversation.Conversation.delete"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Subscribe to this conversation's messages list to receive notification of changes."
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 3,
                    "type": null
                  },
                  {
                    "title": "static",
                    "description": null,
                    "lineNumber": 4
                  },
                  {
                    "title": "memberof",
                    "description": "conversation.Conversation",
                    "lineNumber": 5
                  },
                  {
                    "title": "param",
                    "description": "A subscriber function to be triggered when the messages array of this conversation is updated.",
                    "lineNumber": 6,
                    "type": {
                      "type": "NameExpression",
                      "name": "Function"
                    },
                    "name": "subscriber"
                  },
                  {
                    "title": "param",
                    "description": "The conversation participants.",
                    "lineNumber": 7,
                    "type": {
                      "type": "NameExpression",
                      "name": "string"
                    },
                    "name": "subscriber.destination"
                  },
                  {
                    "title": "param",
                    "description": "The ID of the message that caused the event.",
                    "lineNumber": 8,
                    "type": {
                      "type": "NameExpression",
                      "name": "string"
                    },
                    "name": "subscriber.messageId"
                  },
                  {
                    "title": "return",
                    "description": "The unsubscribe function.",
                    "lineNumber": 9,
                    "type": {
                      "type": "NameExpression",
                      "name": "Function"
                    }
                  }
                ],
                "loc": {
                  "start": {
                    "line": 294,
                    "column": 4
                  },
                  "end": {
                    "line": 304,
                    "column": 7
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 305,
                      "column": 4
                    },
                    "end": {
                      "line": 322,
                      "column": 5
                    }
                  },
                  "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [
                  {
                    "title": "param",
                    "name": "subscriber",
                    "lineNumber": 6,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "A subscriber function to be triggered when the messages array of this conversation is updated."
                            }
                          ]
                        }
                      ]
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "Function"
                    },
                    "properties": [
                      {
                        "title": "param",
                        "name": "subscriber.destination",
                        "lineNumber": 7,
                        "description": {
                          "type": "root",
                          "children": [
                            {
                              "type": "paragraph",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "The conversation participants."
                                }
                              ]
                            }
                          ]
                        },
                        "type": {
                          "type": "NameExpression",
                          "name": "string"
                        }
                      },
                      {
                        "title": "param",
                        "name": "subscriber.messageId",
                        "lineNumber": 8,
                        "description": {
                          "type": "root",
                          "children": [
                            {
                              "type": "paragraph",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "The ID of the message that caused the event."
                                }
                              ]
                            }
                          ]
                        },
                        "type": {
                          "type": "NameExpression",
                          "name": "string"
                        }
                      }
                    ]
                  }
                ],
                "properties": [],
                "returns": [
                  {
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "The unsubscribe function."
                            }
                          ]
                        }
                      ]
                    },
                    "title": "returns",
                    "type": {
                      "type": "NameExpression",
                      "name": "Function"
                    }
                  }
                ],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "access": "public",
                "scope": "static",
                "memberof": "conversation.Conversation",
                "name": "subscribe",
                "kind": "function",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "conversation",
                    "kind": "namespace"
                  },
                  {
                    "name": "Conversation",
                    "kind": "typedef",
                    "scope": "static"
                  },
                  {
                    "name": "subscribe",
                    "kind": "function",
                    "scope": "static"
                  }
                ],
                "namespace": "conversation.Conversation.subscribe"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Allows the user to fetch messages associated with a specific conversation to make them available.\nWhen the operation is complete, a "
                        },
                        {
                          "type": "inlineCode",
                          "value": "messages:change"
                        },
                        {
                          "type": "text",
                          "value": " event will be emitted.\nMessages can then be retrieved using "
                        },
                        {
                          "type": "link",
                          "url": "#conversationconversationgetmessages",
                          "title": null,
                          "jsdoc": true,
                          "children": [
                            {
                              "type": "text",
                              "value": "Conversation.getMessages"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "."
                        }
                      ]
                    },
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "If successful, the event "
                        },
                        {
                          "type": "link",
                          "url": "#conversationeventmessageschange",
                          "title": null,
                          "jsdoc": true,
                          "children": [
                            {
                              "type": "text",
                              "value": "messages:change"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": " will be emitted."
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 7,
                    "type": null
                  },
                  {
                    "title": "static",
                    "description": null,
                    "lineNumber": 8
                  },
                  {
                    "title": "memberof",
                    "description": "conversation.Conversation",
                    "lineNumber": 9
                  },
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 10,
                    "name": "fetchMessages"
                  },
                  {
                    "title": "param",
                    "description": "An amount of messages to fetch.",
                    "lineNumber": 11,
                    "type": {
                      "type": "OptionalType",
                      "expression": {
                        "type": "NameExpression",
                        "name": "number"
                      }
                    },
                    "name": "amount",
                    "default": "50"
                  }
                ],
                "loc": {
                  "start": {
                    "line": 342,
                    "column": 4
                  },
                  "end": {
                    "line": 354,
                    "column": 7
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 355,
                      "column": 4
                    },
                    "end": {
                      "line": 357,
                      "column": 5
                    }
                  },
                  "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [
                  {
                    "title": "param",
                    "name": "amount",
                    "lineNumber": 11,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "An amount of messages to fetch."
                            }
                          ]
                        }
                      ]
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "number"
                    },
                    "default": "50"
                  }
                ],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "access": "public",
                "scope": "static",
                "memberof": "conversation.Conversation",
                "kind": "function",
                "name": "fetchMessages",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "conversation",
                    "kind": "namespace"
                  },
                  {
                    "name": "Conversation",
                    "kind": "typedef",
                    "scope": "static"
                  },
                  {
                    "name": "fetchMessages",
                    "kind": "function",
                    "scope": "static"
                  }
                ],
                "namespace": "conversation.Conversation.fetchMessages"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Sets the typing status of the conversation for the current user.\nOther participants will be notified of changes to the conversation's typing status."
                        }
                      ]
                    },
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "If successful, the event "
                        },
                        {
                          "type": "link",
                          "url": "#conversationeventistypinglistchange",
                          "title": null,
                          "jsdoc": true,
                          "children": [
                            {
                              "type": "text",
                              "value": "isTypingList:change"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": " will be emitted."
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 6,
                    "type": null
                  },
                  {
                    "title": "static",
                    "description": null,
                    "lineNumber": 7
                  },
                  {
                    "title": "memberof",
                    "description": "conversation.Conversation",
                    "lineNumber": 8
                  },
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 9,
                    "name": "setIsTyping"
                  },
                  {
                    "title": "param",
                    "description": "Whether the user is typing or not",
                    "lineNumber": 10,
                    "type": {
                      "type": "NameExpression",
                      "name": "boolean"
                    },
                    "name": "isTyping"
                  }
                ],
                "loc": {
                  "start": {
                    "line": 375,
                    "column": 4
                  },
                  "end": {
                    "line": 386,
                    "column": 7
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 387,
                      "column": 4
                    },
                    "end": {
                      "line": 392,
                      "column": 5
                    }
                  },
                  "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [
                  {
                    "title": "param",
                    "name": "isTyping",
                    "lineNumber": 10,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "Whether the user is typing or not"
                            }
                          ]
                        }
                      ]
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "boolean"
                    }
                  }
                ],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "access": "public",
                "scope": "static",
                "memberof": "conversation.Conversation",
                "kind": "function",
                "name": "setIsTyping",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "conversation",
                    "kind": "namespace"
                  },
                  {
                    "name": "Conversation",
                    "kind": "typedef",
                    "scope": "static"
                  },
                  {
                    "name": "setIsTyping",
                    "kind": "function",
                    "scope": "static"
                  }
                ],
                "namespace": "conversation.Conversation.setIsTyping"
              }
            ]
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "Conversation",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "conversation.Conversation"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Part is a custom object representing a section of the payload of a message. Messages can have one or many Parts."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "property",
              "description": "The payload type. Can be `text`, `json`, or `file`.",
              "lineNumber": 3,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "type"
            },
            {
              "title": "property",
              "description": "The text of the message. Messages with file or json attachments are still required to have text associated to it.",
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "text"
            },
            {
              "title": "property",
              "description": "The object corresponding to a json object to attach to a message. A `Part` cannot have both json and a file.",
              "lineNumber": 5,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "json"
            },
            {
              "title": "property",
              "description": "The file to attach to a message. A `Part` cannot have both json and a file.",
              "lineNumber": 6,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "File"
                }
              },
              "name": "file"
            },
            {
              "title": "public",
              "description": null,
              "lineNumber": 8,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 9
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "Part"
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 11
            }
          ],
          "loc": {
            "start": {
              "line": 28,
              "column": 0
            },
            "end": {
              "line": 40,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 78,
                "column": 0
              },
              "end": {
                "line": 78,
                "column": 51
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "type",
              "lineNumber": 3,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The payload type. Can be "
                      },
                      {
                        "type": "inlineCode",
                        "value": "text"
                      },
                      {
                        "type": "text",
                        "value": ", "
                      },
                      {
                        "type": "inlineCode",
                        "value": "json"
                      },
                      {
                        "type": "text",
                        "value": ", or "
                      },
                      {
                        "type": "inlineCode",
                        "value": "file"
                      },
                      {
                        "type": "text",
                        "value": "."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "text",
              "lineNumber": 4,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The text of the message. Messages with file or json attachments are still required to have text associated to it."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "json",
              "lineNumber": 5,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The object corresponding to a json object to attach to a message. A "
                      },
                      {
                        "type": "inlineCode",
                        "value": "Part"
                      },
                      {
                        "type": "text",
                        "value": " cannot have both json and a file."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              }
            },
            {
              "title": "property",
              "name": "file",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The file to attach to a message. A "
                      },
                      {
                        "type": "inlineCode",
                        "value": "Part"
                      },
                      {
                        "type": "text",
                        "value": " cannot have both json and a file."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "File"
                }
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "Part",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "conversation",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "Part",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "conversation.Part"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Message object is a means by which a sender can deliver information to a recipient."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Creating and sending a message:"
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The message object can be obtained through the "
                  },
                  {
                    "type": "link",
                    "url": "#conversationconversationcreatemessage",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Conversation.createMessage"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API on an existing conversation."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Messages have Parts which represent pieces of a message, such as a text part, a json object part or a file part.\nOnce all the desired parts have been added to the message using the "
                  },
                  {
                    "type": "link",
                    "url": "#conversationmessageaddpart",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Message.addPart"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " function,\nthe message can then be sent using the "
                  },
                  {
                    "type": "link",
                    "url": "#conversationmessagesend",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Message.send"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " function."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Once the sender sends a message, this message is saved in sender's state as an object.\nSimilarly, once the recipient gets a message, this message is saved in recipient's state."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieving a delivered message:"
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Once a message is delivered successfully, it can be\nobtained through the "
                  },
                  {
                    "type": "link",
                    "url": "#conversationconversationgetmessages",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Conversation.getMessages"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or "
                  },
                  {
                    "type": "link",
                    "url": "#conversationconversationgetmessage",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Conversation.getMessage"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API on an existing conversation."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Below are the properties pertaining to the message object, returned by Conversation.getMessage(s) APIs, for either sender or recipient."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "property",
              "description": "A Unix timestamp in seconds marking the time when the message was created by sender.",
              "lineNumber": 21,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "timestamp"
            },
            {
              "title": "property",
              "description": "An array of Part Objects.",
              "lineNumber": 22,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "conversation.Part"
                  }
                ]
              },
              "name": "parts"
            },
            {
              "title": "property",
              "description": "The primary contact address of the sender.",
              "lineNumber": 23,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "sender"
            },
            {
              "title": "property",
              "description": "An array of primary contact addresses associated with various destinations to which the message is meant to be delivered.",
              "lineNumber": 24,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "destination"
            },
            {
              "title": "property",
              "description": "The unique id of the message. The message object (stored in sender's state) has a different id\nthan the one associated with the message object stored in recipient's state.",
              "lineNumber": 25,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "messageId"
            },
            {
              "title": "property",
              "description": "The type of message that was sent. See {@link conversation.chatTypes} for valid types.\nThis property applies only to message objects stored in sender's state.",
              "lineNumber": 27,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "type"
            },
            {
              "title": "property",
              "description": "Whether or not the recipient of the message is in the process of fetching the message attachment(s) using the provided link(s).",
              "lineNumber": 29,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "isFetchingLinks"
            },
            {
              "title": "public",
              "description": null,
              "lineNumber": 30,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 31
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 32,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "Message"
            },
            {
              "title": "memberof",
              "description": "conversation",
              "lineNumber": 33
            }
          ],
          "loc": {
            "start": {
              "line": 42,
              "column": 0
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 78,
                "column": 0
              },
              "end": {
                "line": 78,
                "column": 51
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "timestamp",
              "lineNumber": 21,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A Unix timestamp in seconds marking the time when the message was created by sender."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "property",
              "name": "parts",
              "lineNumber": 22,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "An array of Part Objects."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "conversation.Part"
                  }
                ]
              }
            },
            {
              "title": "property",
              "name": "sender",
              "lineNumber": 23,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The primary contact address of the sender."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "destination",
              "lineNumber": 24,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "An array of primary contact addresses associated with various destinations to which the message is meant to be delivered."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "title": "property",
              "name": "messageId",
              "lineNumber": 25,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The unique id of the message. The message object (stored in sender's state) has a different id\nthan the one associated with the message object stored in recipient's state."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "type",
              "lineNumber": 27,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The type of message that was sent. See "
                      },
                      {
                        "type": "link",
                        "url": "#conversationchattypes",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "conversation.chatTypes"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": " for valid types.\nThis property applies only to message objects stored in sender's state."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "isFetchingLinks",
              "lineNumber": 29,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Whether or not the recipient of the message is in the process of fetching the message attachment(s) using the provided link(s)."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "Message",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "conversation",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": [
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Sends the message."
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 3,
                    "type": null
                  },
                  {
                    "title": "static",
                    "description": null,
                    "lineNumber": 4
                  },
                  {
                    "title": "method",
                    "description": null,
                    "lineNumber": 5,
                    "name": "send"
                  },
                  {
                    "title": "memberof",
                    "description": "conversation.Message",
                    "lineNumber": 6
                  }
                ],
                "loc": {
                  "start": {
                    "line": 435,
                    "column": 4
                  },
                  "end": {
                    "line": 442,
                    "column": 7
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 443,
                      "column": 4
                    },
                    "end": {
                      "line": 449,
                      "column": 5
                    }
                  },
                  "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "access": "public",
                "scope": "static",
                "kind": "function",
                "name": "send",
                "memberof": "conversation.Message",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "conversation",
                    "kind": "namespace"
                  },
                  {
                    "name": "Message",
                    "kind": "typedef",
                    "scope": "static"
                  },
                  {
                    "name": "send",
                    "kind": "function",
                    "scope": "static"
                  }
                ],
                "namespace": "conversation.Message.send"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Add an additional "
                        },
                        {
                          "type": "inlineCode",
                          "value": "Part"
                        },
                        {
                          "type": "text",
                          "value": " to a message."
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 3,
                    "type": null
                  },
                  {
                    "title": "static",
                    "description": null,
                    "lineNumber": 4
                  },
                  {
                    "title": "memberof",
                    "description": "conversation.Message",
                    "lineNumber": 5
                  },
                  {
                    "title": "param",
                    "description": "The `Part` to add to the message.",
                    "lineNumber": 6,
                    "type": {
                      "type": "NameExpression",
                      "name": "conversation.Part"
                    },
                    "name": "part"
                  }
                ],
                "loc": {
                  "start": {
                    "line": 470,
                    "column": 4
                  },
                  "end": {
                    "line": 477,
                    "column": 7
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 478,
                      "column": 4
                    },
                    "end": {
                      "line": 485,
                      "column": 5
                    }
                  },
                  "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [
                  {
                    "title": "param",
                    "name": "part",
                    "lineNumber": 6,
                    "description": {
                      "type": "root",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "text",
                              "value": "The "
                            },
                            {
                              "type": "inlineCode",
                              "value": "Part"
                            },
                            {
                              "type": "text",
                              "value": " to add to the message."
                            }
                          ]
                        }
                      ]
                    },
                    "type": {
                      "type": "NameExpression",
                      "name": "conversation.Part"
                    }
                  }
                ],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "access": "public",
                "scope": "static",
                "memberof": "conversation.Message",
                "name": "addPart",
                "kind": "function",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "conversation",
                    "kind": "namespace"
                  },
                  {
                    "name": "Message",
                    "kind": "typedef",
                    "scope": "static"
                  },
                  {
                    "name": "addPart",
                    "kind": "function",
                    "scope": "static"
                  }
                ],
                "namespace": "conversation.Message.addPart"
              },
              {
                "description": {
                  "type": "root",
                  "children": [
                    {
                      "type": "paragraph",
                      "children": [
                        {
                          "type": "text",
                          "value": "Creates a usable image link for the message in this "
                        },
                        {
                          "type": "inlineCode",
                          "value": "Message"
                        },
                        {
                          "type": "text",
                          "value": " instance."
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "title": "public",
                    "description": null,
                    "lineNumber": 3,
                    "type": null
                  },
                  {
                    "title": "static",
                    "description": null,
                    "lineNumber": 4
                  },
                  {
                    "title": "memberof",
                    "description": "conversation.Message",
                    "lineNumber": 5
                  }
                ],
                "loc": {
                  "start": {
                    "line": 506,
                    "column": 4
                  },
                  "end": {
                    "line": 512,
                    "column": 7
                  }
                },
                "context": {
                  "loc": {
                    "start": {
                      "line": 513,
                      "column": 4
                    },
                    "end": {
                      "line": 516,
                      "column": 5
                    }
                  },
                  "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js"
                },
                "augments": [],
                "examples": [],
                "implements": [],
                "params": [],
                "properties": [],
                "returns": [],
                "sees": [],
                "throws": [],
                "todos": [],
                "yields": [],
                "access": "public",
                "scope": "static",
                "memberof": "conversation.Message",
                "name": "createImageLinks",
                "kind": "function",
                "members": {
                  "global": [],
                  "inner": [],
                  "instance": [],
                  "events": [],
                  "static": []
                },
                "path": [
                  {
                    "name": "conversation",
                    "kind": "namespace"
                  },
                  {
                    "name": "Message",
                    "kind": "typedef",
                    "scope": "static"
                  },
                  {
                    "name": "createImageLinks",
                    "kind": "function",
                    "scope": "static"
                  }
                ],
                "namespace": "conversation.Message.createImageLinks"
              }
            ]
          },
          "path": [
            {
              "name": "conversation",
              "kind": "namespace"
            },
            {
              "name": "Message",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "conversation.Message"
        }
      ]
    },
    "path": [
      {
        "name": "conversation",
        "kind": "namespace"
      }
    ],
    "namespace": "conversation"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The 'groups' namespace provides an interface for an application to create and\nmanage Groups for a User. Groups are used in conjuction with the\n"
            },
            {
              "type": "link",
              "url": "#conversation",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Messaging"
                }
              ]
            },
            {
              "type": "text",
              "value": " feature to allow for group conversations."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Groups are persisted by the server. When the SDK is initialized, there will\nbe no Group information available, but the "
            },
            {
              "type": "link",
              "url": "#groupsfetch",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "groups.fetch"
                }
              ]
            },
            {
              "type": "text",
              "value": "\nAPI is used to make available any Groups that were created\npreviously."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The creator of a Group is the Group's administrator."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 12,
        "type": null
      },
      {
        "title": "requires",
        "description": null,
        "lineNumber": 13,
        "name": "groups"
      },
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 14,
        "type": null,
        "name": "groups"
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 16,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 18,
          "column": 0
        },
        "end": {
          "line": 18,
          "column": 36
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "namespace",
    "name": "groups",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A new Group has been created and its information is now available."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about an available Group can be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#groupsgetall",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.getAll"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or "
                  },
                  {
                    "type": "link",
                    "url": "#groupsget",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.get"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 8
            },
            {
              "title": "event",
              "description": "group:new",
              "lineNumber": 9
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the newly available Group.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.id"
            },
            {
              "title": "example",
              "description": "// Set an event listener for new Groups being created.\nclient.on('group:new', params => {\n   const group = client.groups.get(params.groupId)\n   // Use the new group.\n})",
              "lineNumber": 12
            }
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 19,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 20,
                "column": 0
              },
              "end": {
                "line": 20,
                "column": 36
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Set an event listener for new Groups being created.\nclient.on('group:new', params => {\n   const group = client.groups.get(params.groupId)\n   // Use the new group.\n})"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.id",
                  "lineNumber": 11,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the newly available Group."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "groups",
          "kind": "event",
          "name": "group:new",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "group:new",
              "kind": "event",
              "scope": "static"
            }
          ],
          "namespace": "groups.event:group:new"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An existing Group has been modified and the new information is available."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 4
            },
            {
              "title": "event",
              "description": "group:change",
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the Group that has changed.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.id"
            }
          ],
          "loc": {
            "start": {
              "line": 22,
              "column": 0
            },
            "end": {
              "line": 30,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 31,
                "column": 0
              },
              "end": {
                "line": 31,
                "column": 42
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.id",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the Group that has changed."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "groups",
          "kind": "event",
          "name": "group:change",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "group:change",
              "kind": "event"
            }
          ],
          "namespace": "groups.event:group:change"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Group has been deleted and is no longer available."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The latest information about the Group is provided as part of the event."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 6
            },
            {
              "title": "event",
              "description": "group:delete",
              "lineNumber": 7
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The information about the Group that was deleted.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params.group"
            },
            {
              "title": "param",
              "description": "the Group ID of the deleted group",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.group.id"
            },
            {
              "title": "param",
              "description": "the group image of the deleted group",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.group.image"
            },
            {
              "title": "param",
              "description": "the group name of the deleted group",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.group.name"
            },
            {
              "title": "param",
              "description": "the participants of the group of the deleted group",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "Array"
              },
              "name": "params.group.participants"
            },
            {
              "title": "param",
              "description": "the subject for the group of the deleted group",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.group.subject"
            }
          ],
          "loc": {
            "start": {
              "line": 33,
              "column": 0
            },
            "end": {
              "line": 48,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 49,
                "column": 0
              },
              "end": {
                "line": 49,
                "column": 42
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.group",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The information about the Group that was deleted."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Object"
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "params.group.id",
                      "lineNumber": 10,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "the Group ID of the deleted group"
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    },
                    {
                      "title": "param",
                      "name": "params.group.image",
                      "lineNumber": 11,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "the group image of the deleted group"
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    },
                    {
                      "title": "param",
                      "name": "params.group.name",
                      "lineNumber": 12,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "the group name of the deleted group"
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    },
                    {
                      "title": "param",
                      "name": "params.group.participants",
                      "lineNumber": 13,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "the participants of the group of the deleted group"
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "Array"
                      }
                    },
                    {
                      "title": "param",
                      "name": "params.group.subject",
                      "lineNumber": 14,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "the subject for the group of the deleted group"
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "groups",
          "kind": "event",
          "name": "group:delete",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "group:delete",
              "kind": "event"
            }
          ],
          "namespace": "groups.event:group:delete"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The list of Groups has been refreshed."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Any previously available Groups may have had their information updated, and\nany otherwise unknown Groups may now be available."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about an available Group can be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#groupsgetall",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.getAll"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or "
                  },
                  {
                    "type": "link",
                    "url": "#groupsget",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.get"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 9,
              "type": null
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 10
            },
            {
              "title": "event",
              "description": "group:refresh",
              "lineNumber": 11
            }
          ],
          "loc": {
            "start": {
              "line": 51,
              "column": 0
            },
            "end": {
              "line": 63,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 64,
                "column": 0
              },
              "end": {
                "line": 64,
                "column": 44
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "groups",
          "kind": "event",
          "name": "group:refresh",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "group:refresh",
              "kind": "event"
            }
          ],
          "namespace": "groups.event:group:refresh"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An invitation to a Group has been received."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about a Group invitation can be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#groupsgetinvitations",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.getInvitations"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 8
            },
            {
              "title": "event",
              "description": "group:invitation_received",
              "lineNumber": 9
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "contains information about the group invitation",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params.invitation"
            },
            {
              "title": "param",
              "description": "Group ID used to locate and join the group",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.invitation.id"
            },
            {
              "title": "param",
              "description": "a list of participants in the group",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "Array"
              },
              "name": "params.invitation.participants"
            },
            {
              "title": "param",
              "description": "the group name",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.invitation.name"
            }
          ],
          "loc": {
            "start": {
              "line": 66,
              "column": 0
            },
            "end": {
              "line": 81,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 82,
                "column": 0
              },
              "end": {
                "line": 82,
                "column": 68
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.invitation",
                  "lineNumber": 11,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "contains information about the group invitation"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Object"
                  },
                  "properties": [
                    {
                      "title": "param",
                      "name": "params.invitation.id",
                      "lineNumber": 12,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "Group ID used to locate and join the group"
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    },
                    {
                      "title": "param",
                      "name": "params.invitation.participants",
                      "lineNumber": 13,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "a list of participants in the group"
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "Array"
                      }
                    },
                    {
                      "title": "param",
                      "name": "params.invitation.name",
                      "lineNumber": 14,
                      "description": {
                        "type": "root",
                        "children": [
                          {
                            "type": "paragraph",
                            "children": [
                              {
                                "type": "text",
                                "value": "the group name"
                              }
                            ]
                          }
                        ]
                      },
                      "type": {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "groups",
          "kind": "event",
          "name": "group:invitation_received",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "group:invitation_received",
              "kind": "event",
              "scope": "static"
            }
          ],
          "namespace": "groups.event:group:invitation_received"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An error occurred with a Group operation."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 4
            },
            {
              "title": "event",
              "description": "group:error",
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The Basic error object.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "api.BasicError"
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 84,
              "column": 0
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 93,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 40
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The Basic error object."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "api.BasicError"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "groups",
          "kind": "event",
          "name": "group:error",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "group:error",
              "kind": "event"
            }
          ],
          "namespace": "groups.event:group:error"
        }
      ],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Creates a Group."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#groupseventgroupnew",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "group:new"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event locally\nwhen the operation completes. This event will include a Group ID that\nis used to uniquely identify the group."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Remote users added to the Group during creation will receive a\n"
                  },
                  {
                    "type": "inlineCode",
                    "value": "group:invitation_received"
                  },
                  {
                    "type": "text",
                    "value": " event, which will include information\nabout the Group. Group participants can be managed after creation\nusing the "
                  },
                  {
                    "type": "link",
                    "url": "#groupsaddparticipant",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.addParticipant"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " and\n"
                  },
                  {
                    "type": "link",
                    "url": "#groupsremoveparticipant",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.removeParticipant"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Group information will become available after the operation completes\nusing the "
                  },
                  {
                    "type": "link",
                    "url": "#groupsget",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.get"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " and "
                  },
                  {
                    "type": "link",
                    "url": "#groupsgetall",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.getAll"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 16,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 17
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 18
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 19,
              "name": "create"
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 20,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "List of participants to\n   invite to the group as part of creation. A participant's address\n   should be in the form of their User ID.",
              "lineNumber": 21,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "TypeApplication",
                  "expression": {
                    "type": "NameExpression",
                    "name": "Array"
                  },
                  "applications": [
                    {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  ]
                }
              },
              "name": "params.participants"
            },
            {
              "title": "param",
              "description": "Subject of the Group.",
              "lineNumber": 24,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "params.subject"
            },
            {
              "title": "param",
              "description": "Name of the Group.",
              "lineNumber": 25,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.name"
            },
            {
              "title": "param",
              "description": "HTTP URL of the image to be used as the\n   Group's avatar.",
              "lineNumber": 26,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "params.image"
            },
            {
              "title": "param",
              "description": "Closed group indicates this is an\n   invitation-based closed chat group. Only Closed supported.",
              "lineNumber": 28,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.type"
            }
          ],
          "loc": {
            "start": {
              "line": 27,
              "column": 4
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 58,
                "column": 4
              },
              "end": {
                "line": 61,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 20,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.participants",
                  "lineNumber": 21,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "List of participants to\ninvite to the group as part of creation. A participant's address\nshould be in the form of their User ID."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "TypeApplication",
                      "expression": {
                        "type": "NameExpression",
                        "name": "Array"
                      },
                      "applications": [
                        {
                          "type": "NameExpression",
                          "name": "string"
                        }
                      ]
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "params.subject",
                  "lineNumber": 24,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Subject of the Group."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "params.name",
                  "lineNumber": 25,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Name of the Group."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.image",
                  "lineNumber": 26,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "HTTP URL of the image to be used as the\nGroup's avatar."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "params.type",
                  "lineNumber": 28,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Closed group indicates this is an\ninvitation-based closed chat group. Only Closed supported."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "groups",
          "kind": "function",
          "name": "create",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "create",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "groups.create"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Fetches information about all Groups that the current user is a member\nof. This will refresh the available Groups with any new information\nfrom the server."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#groupseventgrouprefresh",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "group:refresh"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nwhen the operation completes."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about an available Group can be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#groupsgetall",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.getAll"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or "
                  },
                  {
                    "type": "link",
                    "url": "#groupsget",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.get"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 11,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 12
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 13
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 14,
              "name": "fetch"
            }
          ],
          "loc": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 79,
                "column": 4
              },
              "end": {
                "line": 82,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "groups",
          "kind": "function",
          "name": "fetch",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "fetch",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "groups.fetch"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves information about all available Groups."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 5
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 6,
              "name": "getAll"
            },
            {
              "title": "return",
              "description": "The list of all available Groups.",
              "lineNumber": 7,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Group"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 93,
                "column": 4
              },
              "end": {
                "line": 96,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The list of all available Groups."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Group"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "groups",
          "kind": "function",
          "name": "getAll",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "getAll",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "groups.getAll"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves information about a single Group, if available."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 5
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 6,
              "name": "get"
            },
            {
              "title": "param",
              "description": "The ID uniquely identifying the Group.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "groupId"
            },
            {
              "title": "return",
              "description": "The specified Group.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Group"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 108,
                "column": 4
              },
              "end": {
                "line": 111,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "groupId",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID uniquely identifying the Group."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The specified Group."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Group"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "groups",
          "kind": "function",
          "name": "get",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "get",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "groups.get"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves the list of particpants from an available Group."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "getParticipants"
            },
            {
              "title": "param",
              "description": "The ID of the Group to get participants.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "groupId"
            },
            {
              "title": "return",
              "description": "The list of Group participants.",
              "lineNumber": 7,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 122,
                "column": 4
              },
              "end": {
                "line": 125,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "groupId",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Group to get participants."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The list of Group participants."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "groups",
          "kind": "function",
          "name": "getParticipants",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "getParticipants",
              "kind": "function"
            }
          ],
          "namespace": "groupsgetParticipants"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves information about all Group invitations available."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The "
                  },
                  {
                    "type": "link",
                    "url": "#groupseventgroupinvitation_received",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "group:invitation_received"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent indicates that a new Group invitation is available."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 8
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 9,
              "name": "getInvitations"
            },
            {
              "title": "return",
              "description": "The list of Group invitations.",
              "lineNumber": 10,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Invitations"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 139,
                "column": 4
              },
              "end": {
                "line": 143,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The list of Group invitations."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Invitations"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "groups",
          "kind": "function",
          "name": "getInvitations",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "getInvitations",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "groups.getInvitations"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Leaves a Group."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#groupseventgroupchange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "group:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nwhen the operation completes."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 7
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 8,
              "name": "leave"
            },
            {
              "title": "param",
              "description": "The ID of the Group to leave.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "groupId"
            }
          ],
          "loc": {
            "start": {
              "line": 145,
              "column": 4
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 156,
                "column": 4
              },
              "end": {
                "line": 159,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "groupId",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Group to leave."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "groups",
          "kind": "function",
          "name": "leave",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "leave",
              "kind": "function"
            }
          ],
          "namespace": "groupsleave"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Accepts an invitation to a Group."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#groupseventgroupchange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "group:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nwhen the operation completes."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 7
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 8,
              "name": "acceptInvitation"
            },
            {
              "title": "param",
              "description": "The ID of the Group to accept an invitation to.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "groupId"
            }
          ],
          "loc": {
            "start": {
              "line": 161,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 172,
                "column": 4
              },
              "end": {
                "line": 175,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "groupId",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Group to accept an invitation to."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "groups",
          "kind": "function",
          "name": "acceptInvitation",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "acceptInvitation",
              "kind": "function"
            }
          ],
          "namespace": "groupsacceptInvitation"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Rejects an invitation to a Group."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#groupseventgroupchange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "group:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nwhen the operation completes."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 7
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 8,
              "name": "rejectInvitation"
            },
            {
              "title": "param",
              "description": "The ID of the Group to reject an invitation to.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "groupId"
            }
          ],
          "loc": {
            "start": {
              "line": 177,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 188,
                "column": 4
              },
              "end": {
                "line": 191,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "groupId",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Group to reject an invitation to."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "groups",
          "kind": "function",
          "name": "rejectInvitation",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "rejectInvitation",
              "kind": "function"
            }
          ],
          "namespace": "groupsrejectInvitation"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Adds participant to a Group."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#groupseventgroupchange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "group:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nwhen the operation completes. The participant being added will receive\na "
                  },
                  {
                    "type": "link",
                    "url": "#groupseventgroupinvitation_received",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "group:invitation_received"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 8,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 9
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 10
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 11,
              "name": "addParticipant"
            },
            {
              "title": "param",
              "description": "The ID of the Group to add participant to.",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "groupId"
            },
            {
              "title": "param",
              "description": "The User ID of the participant to add.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "participant"
            }
          ],
          "loc": {
            "start": {
              "line": 193,
              "column": 4
            },
            "end": {
              "line": 207,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 208,
                "column": 4
              },
              "end": {
                "line": 211,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "groupId",
              "lineNumber": 12,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Group to add participant to."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "participant",
              "lineNumber": 13,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The User ID of the participant to add."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "groups",
          "kind": "function",
          "name": "addParticipant",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "addParticipant",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "groups.addParticipant"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Removes a participant from a Group."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#groupseventgroupchange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "group:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nwhen the operation completes."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 8
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 9,
              "name": "removeParticipant"
            },
            {
              "title": "param",
              "description": "The ID of the Group to remove participant from.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "groupId"
            },
            {
              "title": "param",
              "description": "The User ID of the participant to remove.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "participant"
            }
          ],
          "loc": {
            "start": {
              "line": 213,
              "column": 4
            },
            "end": {
              "line": 225,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 226,
                "column": 4
              },
              "end": {
                "line": 229,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "groupId",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Group to remove participant from."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "participant",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The User ID of the participant to remove."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "groups",
          "kind": "function",
          "name": "removeParticipant",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "removeParticipant",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "groups.removeParticipant"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Deletes a Group."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The Group will no longer be available using the "
                  },
                  {
                    "type": "link",
                    "url": "#groupsget",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.get"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nand "
                  },
                  {
                    "type": "link",
                    "url": "#groupsgetall",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "groups.getAll"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#groupseventgroupdelete",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "group:delete"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nfor all participants in the Group."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 9,
              "type": null
            },
            {
              "title": "memberof",
              "description": "groups",
              "lineNumber": 10
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 11,
              "name": "delete"
            },
            {
              "title": "param",
              "description": "The ID of the Group to delete.",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "groupId"
            }
          ],
          "loc": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 245,
                "column": 4
              },
              "end": {
                "line": 248,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "groupId",
              "lineNumber": 12,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Group to delete."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "groups",
          "kind": "function",
          "name": "delete",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "groups",
              "kind": "namespace"
            },
            {
              "name": "delete",
              "kind": "function"
            }
          ],
          "namespace": "groupsdelete"
        }
      ]
    },
    "path": [
      {
        "name": "groups",
        "kind": "namespace"
      }
    ],
    "namespace": "groups"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The SDK has an internal logging system for providing information about its\nbehaviour. The SDK will generate logs, at different levels for different\ntypes of information, which are routed to a\n\""
            },
            {
              "type": "link",
              "url": "#loggerloghandler",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Log Handler"
                }
              ]
            },
            {
              "type": "text",
              "value": "\" for consumption. An application\ncan provide their own Log Handler (see\n"
            },
            {
              "type": "link",
              "url": "#configconfiglogs",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "config.logs"
                }
              ]
            },
            {
              "type": "text",
              "value": ") to customize how the logs are\nhandled, or allow the default Log Handler to print the logs to the\nconsole."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The SDK's default Log Handler is merely a thin wrapper around the browser's\nconsole API (ie. "
            },
            {
              "type": "inlineCode",
              "value": "window.console"
            },
            {
              "type": "text",
              "value": "). It receives the log generated by the\nSDK, called a \""
            },
            {
              "type": "link",
              "url": "#loggerlogentry",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Log Entry"
                }
              ]
            },
            {
              "type": "text",
              "value": "\", formats a\nhuman-readable message with it, then uses the console to log it at the\nappropriate level. This is important to be aware of, since your browser's\nconsole may affect how you see the SDK's default log messages. Since the\ndefault Log Handler uses the console's levels, the browser may filter\nwhich messages are shown depending on which levels it has configured. For\na user that understands console log levels, this can be helpful for\nfiltering the logs to only the relevant information. But it can equally\nbe a hindrance by hiding the more detailed log messages (at the 'debug'\nlevel), since browser can have this level hidden by default. For this\nreason, we recommend providing a custom Log Handler to the SDK that is\nbetter suited for your application and its users."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 25,
        "type": null
      },
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 26,
        "type": null,
        "name": "logger"
      },
      {
        "title": "requires",
        "description": null,
        "lineNumber": 27,
        "name": "logs"
      }
    ],
    "loc": {
      "start": {
        "line": 6,
        "column": 0
      },
      "end": {
        "line": 34,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 36,
          "column": 0
        },
        "end": {
          "line": 181,
          "column": 1
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/api.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "namespace",
    "name": "logger",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Possible levels for the SDK logger."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will provide "
                  },
                  {
                    "type": "link",
                    "url": "#loggerlogentry",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Log Entries"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " to the\n"
                  },
                  {
                    "type": "link",
                    "url": "#loggerloghandler",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Log Handler"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " for all logs at or above the set\nlog level. 'debug' is considered the lowest level and 'silent' the\nhighest level. For example, if the current level is 'info', then the\n"
                  },
                  {
                    "type": "link",
                    "url": "#loggerloghandler",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Log Handler"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " will receive\n"
                  },
                  {
                    "type": "link",
                    "url": "#loggerlogentry",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "Log Entries"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " for logs at 'info', 'warn', and\n'error', but not for the 'debug' level."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 10,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 11
            },
            {
              "title": "memberof",
              "description": "logger",
              "lineNumber": 12
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 13,
              "name": "levels"
            },
            {
              "title": "property",
              "description": "Nothing will be logged.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "SILENT"
            },
            {
              "title": "property",
              "description": "Unhandled error information will be logged. If\n   the SDK encounters an issue it cannot resolve, the error will be included\n   in the logs. This likely points to an issue with the SDK itself or an\n   issue with how the SDK is being used.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "ERROR"
            },
            {
              "title": "property",
              "description": "Warning messages for the application developer will\n   be logged. If the SDK encounters an issue that it can recover and continue,\n   a warning about the issue will be included in the logs. These logs point\n   to issues that need to be handled by the application. For example, providing\n   an invalid configuration to the SDK will cause a warning log that explains\n   the issue.",
              "lineNumber": 19,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "WARN"
            },
            {
              "title": "property",
              "description": "General information about the SDK's operations will\n   be logged, outlining how the SDK is handling the operations. Reading through\n   these logs should provide a high-level view of what the SDK is doing,\n   and why it is doing it.",
              "lineNumber": 25,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "INFO"
            },
            {
              "title": "property",
              "description": "Detailed information about the SDK's operations,\n   meant for debugging issues, will be logged. Specific information and relevant\n   operation data are provided for understanding the scenario that the SDK\n   was in during the operation.",
              "lineNumber": 29,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "DEBUG"
            }
          ],
          "loc": {
            "start": {
              "line": 40,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 74,
                "column": 4
              },
              "end": {
                "line": 80,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "SILENT",
              "lineNumber": 14,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Nothing will be logged."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "ERROR",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Unhandled error information will be logged. If\nthe SDK encounters an issue it cannot resolve, the error will be included\nin the logs. This likely points to an issue with the SDK itself or an\nissue with how the SDK is being used."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "WARN",
              "lineNumber": 19,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Warning messages for the application developer will\nbe logged. If the SDK encounters an issue that it can recover and continue,\na warning about the issue will be included in the logs. These logs point\nto issues that need to be handled by the application. For example, providing\nan invalid configuration to the SDK will cause a warning log that explains\nthe issue."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "INFO",
              "lineNumber": 25,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "General information about the SDK's operations will\nbe logged, outlining how the SDK is handling the operations. Reading through\nthese logs should provide a high-level view of what the SDK is doing,\nand why it is doing it."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "DEBUG",
              "lineNumber": 29,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Detailed information about the SDK's operations,\nmeant for debugging issues, will be logged. Specific information and relevant\noperation data are provided for understanding the scenario that the SDK\nwas in during the operation."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "logger",
          "kind": "function",
          "name": "levels",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "logger",
              "kind": "namespace"
            },
            {
              "name": "levels",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "logger.levels"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A LogEntry object is the data that the SDK compiles when information is\nlogged. It contains both the logged information and meta-info about when\nand who logged it."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A "
                  },
                  {
                    "type": "link",
                    "url": "#loggerloghandler",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "LogHandler"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " provided to the SDK (see\n"
                  },
                  {
                    "type": "link",
                    "url": "#configconfiglogs",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "config.logs"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": ") will need to handle LogEntry\nobjects."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 9,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 10
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "LogEntry"
            },
            {
              "title": "memberof",
              "description": "logger",
              "lineNumber": 12
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 13,
              "name": "logs"
            },
            {
              "title": "property",
              "description": "When the log was created, based on UNIX epoch.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "timestamp"
            },
            {
              "title": "property",
              "description": "The log function that was used to create the log.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "method"
            },
            {
              "title": "property",
              "description": "The level of severity the log.",
              "lineNumber": 16,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "level"
            },
            {
              "title": "property",
              "description": "The subject that the log is about.",
              "lineNumber": 17,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "target"
            },
            {
              "title": "property",
              "description": "The type of the target. This is also\n   used as part of the name of the Logger.",
              "lineNumber": 18,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "target.type"
            },
            {
              "title": "property",
              "description": "A unique identifer for the target.",
              "lineNumber": 20,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "target.id"
            },
            {
              "title": "property",
              "description": "A combination of the target type and ID. If no\n   id was provided, this will be the same as the type.",
              "lineNumber": 21,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "target.name"
            },
            {
              "title": "property",
              "description": "The logged information, given to the Logger\n   method as parameters.",
              "lineNumber": 23,
              "type": {
                "type": "NameExpression",
                "name": "Array"
              },
              "name": "messages"
            },
            {
              "title": "property",
              "description": "Timing data, if the log method was a timer method.",
              "lineNumber": 25,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "timer"
            },
            {
              "title": "example",
              "description": "function defaultLogHandler (logEntry) {\n  // Compile the meta info of the log for a prefix.\n  const { timestamp, level, target } = logEntry\n  let { method } = logEntry\n  const logInfo = `${timestamp} - ${target.type} - ${level}`\n\n  // Assume that the first message parameter is a string.\n  const [log, ...extra] = logEntry.messages\n\n  // For the timer methods, don't actually use the console methods.\n  //    The Logger already did the timing, so simply log out the info.\n  if (['time', 'timeLog', 'timeEnd'].includes(method)) {\n    method = 'debug'\n  }\n\n  console[method](`${logInfo} - ${log}`, ...extra)\n}",
              "lineNumber": 26
            }
          ],
          "loc": {
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 52,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 94,
                "column": 0
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/docs.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "function defaultLogHandler (logEntry) {\n  // Compile the meta info of the log for a prefix.\n  const { timestamp, level, target } = logEntry\n  let { method } = logEntry\n  const logInfo = `${timestamp} - ${target.type} - ${level}`\n\n  // Assume that the first message parameter is a string.\n  const [log, ...extra] = logEntry.messages\n\n  // For the timer methods, don't actually use the console methods.\n  //    The Logger already did the timing, so simply log out the info.\n  if (['time', 'timeLog', 'timeEnd'].includes(method)) {\n    method = 'debug'\n  }\n\n  console[method](`${logInfo} - ${log}`, ...extra)\n}"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "timestamp",
              "lineNumber": 14,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "When the log was created, based on UNIX epoch."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "number"
              }
            },
            {
              "title": "property",
              "name": "method",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The log function that was used to create the log."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "level",
              "lineNumber": 16,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The level of severity the log."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "target",
              "lineNumber": 17,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The subject that the log is about."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "property",
                  "name": "target.type",
                  "lineNumber": 18,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The type of the target. This is also\nused as part of the name of the Logger."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "property",
                  "name": "target.id",
                  "lineNumber": 20,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "A unique identifer for the target."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "property",
                  "name": "target.name",
                  "lineNumber": 21,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "A combination of the target type and ID. If no\nid was provided, this will be the same as the type."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            },
            {
              "title": "property",
              "name": "messages",
              "lineNumber": 23,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The logged information, given to the Logger\nmethod as parameters."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Array"
              }
            },
            {
              "title": "property",
              "name": "timer",
              "lineNumber": 25,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Timing data, if the log method was a timer method."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "LogEntry",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "logger",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "logger",
              "kind": "namespace"
            },
            {
              "name": "LogEntry",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "logger.LogEntry"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A LogHandler can be used to customize how the SDK should log information. By\ndefault, the SDK will log information to the console, but a LogHandler can\nbe configured to change this behaviour."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A LogHandler can be provided to the SDK as part of its configuration (see\n"
                  },
                  {
                    "type": "link",
                    "url": "#configconfiglogs",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "config.logs"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "). The SDK will then provide this\nfunction with the logged information."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 9,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 10
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "Function"
              },
              "name": "LogHandler"
            },
            {
              "title": "memberof",
              "description": "logger",
              "lineNumber": 12
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 13,
              "name": "logs"
            },
            {
              "title": "param",
              "description": "The LogEntry to be logged.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "LogEntry"
            },
            {
              "title": "example",
              "description": "// Define a custom function to handle logs.\nfunction logHandler (logEntry) {\n  // Compile the meta info of the log for a prefix.\n  const { timestamp, level, target } = logEntry\n  let { method } = logEntry\n  const logInfo = `${timestamp} - ${target.type} - ${level}`\n\n  // Assume that the first message parameter is a string.\n  const [log, ...extra] = logEntry.messages\n\n  // For the timer methods, don't actually use the console methods.\n  //    The Logger already did the timing, so simply log out the info.\n  if (['time', 'timeLog', 'timeEnd'].includes(method)) {\n    method = 'debug'\n  }\n\n  console[method](`${logInfo} - ${log}`, ...extra)\n}\n\n// Provide the LogHandler as part of the SDK configurations.\nconst configs = { ... }\nconfigs.logs.handler = logHandler\nconst client = create(configs)",
              "lineNumber": 15
            }
          ],
          "loc": {
            "start": {
              "line": 54,
              "column": 0
            },
            "end": {
              "line": 93,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 94,
                "column": 0
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/docs.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Define a custom function to handle logs.\nfunction logHandler (logEntry) {\n  // Compile the meta info of the log for a prefix.\n  const { timestamp, level, target } = logEntry\n  let { method } = logEntry\n  const logInfo = `${timestamp} - ${target.type} - ${level}`\n\n  // Assume that the first message parameter is a string.\n  const [log, ...extra] = logEntry.messages\n\n  // For the timer methods, don't actually use the console methods.\n  //    The Logger already did the timing, so simply log out the info.\n  if (['time', 'timeLog', 'timeEnd'].includes(method)) {\n    method = 'debug'\n  }\n\n  console[method](`${logInfo} - ${log}`, ...extra)\n}\n\n// Provide the LogHandler as part of the SDK configurations.\nconst configs = { ... }\nconfigs.logs.handler = logHandler\nconst client = create(configs)"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "LogEntry",
              "lineNumber": 14,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The LogEntry to be logged."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "LogHandler",
          "type": {
            "type": "NameExpression",
            "name": "Function"
          },
          "memberof": "logger",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "logger",
              "kind": "namespace"
            },
            {
              "name": "LogHandler",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "logger.LogHandler"
        }
      ]
    },
    "path": [
      {
        "name": "logger",
        "kind": "namespace"
      }
    ],
    "namespace": "logger"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The 'media' namespace provides an interface for interacting with Media that the\nSDK has access to. Media is used in conjunction with the "
            },
            {
              "type": "link",
              "url": "#call",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "Calls"
                }
              ]
            },
            {
              "type": "text",
              "value": "\nfeature to manipulate and render the Tracks sent and received from a Call."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Media and Track objects are not created directly, but are created as part of\nCall operations. Media and Tracks will either be marked as \"local\" or\n\"remote\" depending on whether their source is the local user's machine\nor a remote user's machine."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The Media feature also keeps track of media devices that the user's machine\ncan access. Any media device (eg. USB headset) connected to the machine\ncan be used as a source for media. Available devices can be found using\nthe "
            },
            {
              "type": "link",
              "url": "#mediagetdevices",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "media.getDevices"
                }
              ]
            },
            {
              "type": "text",
              "value": " API."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 15,
        "type": null
      },
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 16,
        "type": null,
        "name": "media"
      }
    ],
    "loc": {
      "start": {
        "line": 72,
        "column": 0
      },
      "end": {
        "line": 89,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 351,
          "column": 0
        },
        "end": {
          "line": 355,
          "column": 1
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "namespace",
    "name": "media",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The media devices available for use have changed."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about the available media devices can be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#mediagetdevices",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media.getDevices"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 8
            },
            {
              "title": "event",
              "description": "devices:change",
              "lineNumber": 9
            },
            {
              "title": "example",
              "description": "// Listen for changes to available media devices.\nclient.on('devices:change', function () {\n   // Retrieve the latest media device lists.\n   const devices = client.media.getDevices()\n})",
              "lineNumber": 10
            }
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 18,
                "column": 0
              },
              "end": {
                "line": 18,
                "column": 47
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Listen for changes to available media devices.\nclient.on('devices:change', function () {\n   // Retrieve the latest media device lists.\n   const devices = client.media.getDevices()\n})"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "media",
          "kind": "event",
          "name": "devices:change",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "devices:change",
              "kind": "event",
              "scope": "static"
            }
          ],
          "namespace": "media.event:devices:change"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An error occurred while trying to access media devices."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The most common causes of this error are when the browser does not have\npermission from the end-user to access the devices, or when the browser\ncannot find a media device that fulfills the\n"
                  },
                  {
                    "type": "link",
                    "url": "#callmediaconstraint",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "MediaConstraint(s)"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " that was provided."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 8,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 9
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 10
            },
            {
              "title": "event",
              "description": "devices:error",
              "lineNumber": 11
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The Basic error object.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "Error"
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 20,
              "column": 0
            },
            "end": {
              "line": 34,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 35,
                "column": 0
              },
              "end": {
                "line": 35,
                "column": 55
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 13,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The Basic error object."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Error"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "media",
          "kind": "event",
          "name": "devices:error",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "devices:error",
              "kind": "event",
              "scope": "static"
            }
          ],
          "namespace": "media.event:devices:error"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The specified Tracks have been muted."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Track can be muted using the "
                  },
                  {
                    "type": "link",
                    "url": "#mediamutetracks",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media.muteTracks"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 5
            },
            {
              "title": "event",
              "description": "media:muted",
              "lineNumber": 6
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The list of Tracks that were muted.",
              "lineNumber": 8,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "params.tracks"
            }
          ],
          "loc": {
            "start": {
              "line": 37,
              "column": 0
            },
            "end": {
              "line": 46,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 47,
                "column": 0
              },
              "end": {
                "line": 47,
                "column": 41
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.tracks",
                  "lineNumber": 8,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The list of Tracks that were muted."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "media",
          "kind": "event",
          "name": "media:muted",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "media:muted",
              "kind": "event"
            }
          ],
          "namespace": "media.event:media:muted"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The specified Tracks have been unmuted."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A Track can be unmuted using the "
                  },
                  {
                    "type": "link",
                    "url": "#mediaunmutetracks",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media.unmuteTracks"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nAPI."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 6
            },
            {
              "title": "event",
              "description": "media:unmuted",
              "lineNumber": 7
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The list of Tracks that were unmuted.",
              "lineNumber": 9,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "params.tracks"
            }
          ],
          "loc": {
            "start": {
              "line": 49,
              "column": 0
            },
            "end": {
              "line": 59,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 60,
                "column": 0
              },
              "end": {
                "line": 60,
                "column": 45
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.tracks",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The list of Tracks that were unmuted."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "media",
          "kind": "event",
          "name": "media:unmuted",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "media:unmuted",
              "kind": "event"
            }
          ],
          "namespace": "media.event:media:unmuted"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The specified Track has had its media source muted."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The Track is still active, but is not receiving media any longer. An audio\ntrack will be silent and a video track will be a black frame. It is\npossible for the track to start receiving media again (see the\n"
                  },
                  {
                    "type": "link",
                    "url": "#mediaeventmediasourceunmuted",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media:sourceUnmuted"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event)."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This event is generated outside the control of the SDK. This may happen for a\nlocal track if the browser or end-user stops allowing the SDK to access\nthe media device, for example. This may happen for a remote track during a\ncall when the remote endpoint stops sending media during a hold operation,\nfor example."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Handling this event is only required if you are using "
                  },
                  {
                    "type": "inlineCode",
                    "value": "unified-plan"
                  },
                  {
                    "type": "text",
                    "value": " as the\n"
                  },
                  {
                    "type": "inlineCode",
                    "value": "sdpSemantics"
                  },
                  {
                    "type": "text",
                    "value": " setting in the SDK's configuration. This setting will become\nthe default in an upcoming release."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 17,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 18
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 19
            },
            {
              "title": "event",
              "description": "media:sourceMuted",
              "lineNumber": 20
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 21,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The track that is affected as a result of media source being muted.",
              "lineNumber": 22,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.trackId"
            }
          ],
          "loc": {
            "start": {
              "line": 62,
              "column": 0
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 86,
                "column": 0
              },
              "end": {
                "line": 86,
                "column": 53
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 21,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.trackId",
                  "lineNumber": 22,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The track that is affected as a result of media source being muted."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "media",
          "kind": "event",
          "name": "media:sourceMuted",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "media:sourceMuted",
              "kind": "event",
              "scope": "static"
            }
          ],
          "namespace": "media.event:media:sourceMuted"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The specified Track has started receiving media from its source once again."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The Track returns to the state before it was muted (see the\n"
                  },
                  {
                    "type": "link",
                    "url": "#mediaeventmediasourcemuted",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media:sourceMuted"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event), and will\nbe able to display video or play audio once again."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This event is generated outside the control of the SDK, when the cause of the\nmedia source being muted had been undone."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Handling this event is only required if you are using "
                  },
                  {
                    "type": "inlineCode",
                    "value": "unified-plan"
                  },
                  {
                    "type": "text",
                    "value": " as the\n"
                  },
                  {
                    "type": "inlineCode",
                    "value": "sdpSemantics"
                  },
                  {
                    "type": "text",
                    "value": " setting in the SDK's configuration. This setting will become\nthe default in an upcoming release."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 13,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 14
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 15
            },
            {
              "title": "event",
              "description": "media:sourceUnmuted",
              "lineNumber": 16
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 17,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The track that is affected as a result of media source being unmuted.",
              "lineNumber": 18,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.trackId"
            }
          ],
          "loc": {
            "start": {
              "line": 88,
              "column": 0
            },
            "end": {
              "line": 107,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 108,
                "column": 0
              },
              "end": {
                "line": 108,
                "column": 57
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 17,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.trackId",
                  "lineNumber": 18,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The track that is affected as a result of media source being unmuted."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "media",
          "kind": "event",
          "name": "media:sourceUnmuted",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "media:sourceUnmuted",
              "kind": "event",
              "scope": "static"
            }
          ],
          "namespace": "media.event:media:sourceUnmuted"
        }
      ],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves the available media devices for use."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The "
                  },
                  {
                    "type": "link",
                    "url": "#mediaeventdeviceschange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "devices:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event will be\nemitted when the available media devices have changed."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 8
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 9,
              "name": "getDevices"
            },
            {
              "title": "return",
              "description": "The lists of camera, microphone, and speaker devices.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 18,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 30,
                "column": 4
              },
              "end": {
                "line": 33,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/media.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The lists of camera, microphone, and speaker devices."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "media",
          "kind": "function",
          "name": "getDevices",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "getDevices",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "media.getDevices"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves an available Media object with a specific Media ID."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "getById"
            },
            {
              "title": "param",
              "description": "The ID of the Media to retrieve.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "mediaId"
            },
            {
              "title": "return",
              "description": "A Media object.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "call.MediaObject"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 44,
                "column": 4
              },
              "end": {
                "line": 47,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/media.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "mediaId",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Media to retrieve."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A Media object."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "call.MediaObject"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "media",
          "kind": "function",
          "name": "getById",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "getById",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "media.getById"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieve an available Track object with a specific Track ID."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 4
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 5,
              "name": "getTrackById"
            },
            {
              "title": "param",
              "description": "The ID of the Track to retrieve.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "trackId"
            },
            {
              "title": "return",
              "description": "A Track object.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "call.TrackObject"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 58,
                "column": 4
              },
              "end": {
                "line": 61,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/media.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "trackId",
              "lineNumber": 6,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The ID of the Track to retrieve."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A Track object."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "call.TrackObject"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "media",
          "kind": "function",
          "name": "getTrackById",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "getTrackById",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "media.getTrackById"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Requests permission to access media devices on the end-user's machine."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This API will trigger the browser to ask the end-user for permission to\naccess their camera and/or microphone. These permissions are\nneeded for the SDK to read information about the devices (the label,\nfor example) and for using the devices for a call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If the browser does not yet have permission, it will prompt the end-user\nwith a small pop-up window, giving the user a chance to allow/deny the\npermissions. The behaviour of this pop-up window differs slightly\nbased on the browser; it may automatically save the user's decision\n(such as in Chrome and Safari) or it may require the user to choose\nwhether their decision should be saved (such as in Firefox)."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This API is not required for proper usage of media and/or calls, but\nhelps to prepare a user before a call is made or received. It allows\nan application to prompt the user for device permissions when it is\nconvenient for them, rather than during call setup. If the user saves\ntheir decision, they will not be prompted again when the SDK accesses\nthose devices for a call."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "For device information, the "
                  },
                  {
                    "type": "link",
                    "url": "#mediagetdevices",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media.getDevices"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API will retrieve\nthe list of media devices available for the SDK to use. If this list\nis empty, or is missing information, it is likely that the browser\ndoes not have permission to access the device's information. We\nrecommend using the "
                  },
                  {
                    "type": "link",
                    "url": "#mediainitializedevices",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media.initializeDevices"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API in this\nscenario if you would like to allow the end-user to select which\ndevice(s) they would like to use when they make a call, rather than\nusing the system default."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#mediaeventdeviceschange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "devices:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent when the operation is successful or a\n"
                  },
                  {
                    "type": "link",
                    "url": "#mediaeventdeviceserror",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "devices:error"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event if an error is\nencountered."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 35,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 36
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 37
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 38,
              "name": "initializeDevices"
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 39,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "constraints"
            },
            {
              "title": "param",
              "description": "Whether to ask for audio device permissions.",
              "lineNumber": 40,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "constraints.audio",
              "default": "true"
            },
            {
              "title": "param",
              "description": "Whether to ask for video device permissions.",
              "lineNumber": 41,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "boolean"
                }
              },
              "name": "constraints.video",
              "default": "true"
            },
            {
              "title": "example",
              "description": "// The SDK will ask for both audio and video permissions by default.\nclient.media.initializeDevices()\n\n// The SDK will only ask for audio permissions.\nclient.media.initializeDevices({ audio: true, video: false })",
              "lineNumber": 42
            }
          ],
          "loc": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 111,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 112,
                "column": 4
              },
              "end": {
                "line": 119,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/media.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// The SDK will ask for both audio and video permissions by default.\nclient.media.initializeDevices()\n\n// The SDK will only ask for audio permissions.\nclient.media.initializeDevices({ audio: true, video: false })"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "constraints",
              "lineNumber": 39,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "constraints.audio",
                  "lineNumber": 40,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether to ask for audio device permissions."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "true"
                },
                {
                  "title": "param",
                  "name": "constraints.video",
                  "lineNumber": 41,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether to ask for video device permissions."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  },
                  "default": "true"
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "media",
          "kind": "function",
          "name": "initializeDevices",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "initializeDevices",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "media.initializeDevices"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Render Media Tracks in a container."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The container is specified by providing a CSS selector string that\ncorresponds to the HTMLElement to act as the container."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 7
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 8,
              "name": "renderTracks"
            },
            {
              "title": "param",
              "description": "List of Track IDs to be rendered.",
              "lineNumber": 9,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "trackIds"
            },
            {
              "title": "param",
              "description": "A CSS selector string that uniquely\n   identifies an element. Ensure that special characters are properly\n   escaped.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "cssSelector"
            },
            {
              "title": "param",
              "description": "Additional options for rendering the tracks.",
              "lineNumber": 13,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "options"
            },
            {
              "title": "param",
              "description": "The speaker's Device ID to use for audio tracks.",
              "lineNumber": 14,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "options.speakerId"
            },
            {
              "title": "example",
              "description": "// When a Call receives a new track, render it.\nclient.on('call:newTrack', function (params) {\n   const track = client.media.getTrackById(params.trackId)\n   const container = params.local ? localContainer : remoteContainer\n\n   // Render the Call's new track when it first becomes available.\n   client.media.renderTracks([ track.trackId ], container)\n})",
              "lineNumber": 15
            }
          ],
          "loc": {
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 145,
                "column": 4
              },
              "end": {
                "line": 153,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/media.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// When a Call receives a new track, render it.\nclient.on('call:newTrack', function (params) {\n   const track = client.media.getTrackById(params.trackId)\n   const container = params.local ? localContainer : remoteContainer\n\n   // Render the Call's new track when it first becomes available.\n   client.media.renderTracks([ track.trackId ], container)\n})"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "trackIds",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "List of Track IDs to be rendered."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "cssSelector",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A CSS selector string that uniquely\nidentifies an element. Ensure that special characters are properly\nescaped."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "options",
              "lineNumber": 13,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Additional options for rendering the tracks."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "options.speakerId",
                  "lineNumber": 14,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The speaker's Device ID to use for audio tracks."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "media",
          "kind": "function",
          "name": "renderTracks",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "renderTracks",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "media.renderTracks"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Remove Media Tracks from a container."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The container is specified by providing a CSS selector string that\ncorresponds to the HTMLElement to act as the container."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 7
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 8,
              "name": "removeTracks"
            },
            {
              "title": "param",
              "description": "List of Track IDs to stop being rendered.",
              "lineNumber": 9,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "trackIds"
            },
            {
              "title": "param",
              "description": "A CSS selector string that uniquely\n   identifies an element. Ensure that special characters are properly\n   escaped.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "cssSelector"
            }
          ],
          "loc": {
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 169,
                "column": 4
              },
              "end": {
                "line": 172,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/media.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "trackIds",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "List of Track IDs to stop being rendered."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "cssSelector",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A CSS selector string that uniquely\nidentifies an element. Ensure that special characters are properly\nescaped."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "media",
          "kind": "function",
          "name": "removeTracks",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "removeTracks",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "media.removeTracks"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Mutes the specified Tracks at their media source."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Prevents media from being received for the Tracks. Audio Tracks will\nbecome silent and video Tracks will be a black frame."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "If a local Track being sent in a Call is muted, the Track will be\nnoticeably muted for the remote user. If a remote Track received in a\ncall is muted, the result will only be noticeable locally."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#mediaeventmediamuted",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media:muted"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nwhen a Track has been muted."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 12,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 13
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 14
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 15,
              "name": "muteTracks"
            },
            {
              "title": "param",
              "description": "List of Track IDs.",
              "lineNumber": 16,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "trackIds"
            }
          ],
          "loc": {
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 192,
                "column": 4
              },
              "end": {
                "line": 195,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/media.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "trackIds",
              "lineNumber": 16,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "List of Track IDs."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "media",
          "kind": "function",
          "name": "muteTracks",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "muteTracks",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "media.muteTracks"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Unmutes the specified Tracks."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Media will resume as normal for the Tracks."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#mediaeventmediaunmuted",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "media:unmuted"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nwhen a Track has been unmuted."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 7,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 8
            },
            {
              "title": "memberof",
              "description": "media",
              "lineNumber": 9
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 10,
              "name": "unmuteTracks"
            },
            {
              "title": "param",
              "description": "List of Track IDs.",
              "lineNumber": 11,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "trackIds"
            }
          ],
          "loc": {
            "start": {
              "line": 197,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 210,
                "column": 4
              },
              "end": {
                "line": 213,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/media.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "trackIds",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "List of Track IDs."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "media",
          "kind": "function",
          "name": "unmuteTracks",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "media",
              "kind": "namespace"
            },
            {
              "name": "unmuteTracks",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "media.unmuteTracks"
        }
      ]
    },
    "path": [
      {
        "name": "media",
        "kind": "namespace"
      }
    ],
    "namespace": "media"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The 'presence' namespace provides an interface for an application to set the\nUser's presence information and to track other Users' presence\ninformation."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Presence information is persisted by the server. When the SDK is initialized,\nthere will be no information available. Presence information will become\navailable either by using "
            },
            {
              "type": "link",
              "url": "#presencefetch",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "presence.fetch"
                }
              ]
            },
            {
              "type": "text",
              "value": " or by subscribing for\nupdates about other Users, using "
            },
            {
              "type": "link",
              "url": "#presencesubscribe",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "presence.subscribe"
                }
              ]
            },
            {
              "type": "text",
              "value": "."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Available presence information can be retrieved using "
            },
            {
              "type": "link",
              "url": "#presenceget",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "presence.get"
                }
              ]
            },
            {
              "type": "text",
              "value": " or\n"
            },
            {
              "type": "link",
              "url": "#presencegetall",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "presence.getAll"
                }
              ]
            },
            {
              "type": "text",
              "value": "."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 13,
        "type": null
      },
      {
        "title": "requires",
        "description": null,
        "lineNumber": 14,
        "name": "presence"
      },
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 15,
        "type": null,
        "name": "presence"
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 17,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 42,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 36
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/api.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "namespace",
    "name": "presence",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A presence update about a subscribed user has been received."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This event is generated as a result of "
                  },
                  {
                    "type": "link",
                    "url": "#presencefetch",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence.fetch"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or "
                  },
                  {
                    "type": "link",
                    "url": "#presenceupdate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence.update"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " operations."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "For the latter operation, the current user receives a presence update of another user that the current user is subscribed to."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The changed information can be retrieved using the "
                  },
                  {
                    "type": "link",
                    "url": "#presenceget",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence.get"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nAPI."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 10,
              "type": null
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 11
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 12,
              "name": "presence"
            },
            {
              "title": "event",
              "description": "presence:change",
              "lineNumber": 13
            },
            {
              "title": "param",
              "description": "A presence object containing data.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID of the user.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.userId"
            },
            {
              "title": "param",
              "description": "The presence status of the user.",
              "lineNumber": 16,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.status"
            },
            {
              "title": "param",
              "description": "The activity of the user.",
              "lineNumber": 17,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.activity"
            },
            {
              "title": "param",
              "description": "A custom note provided by the user.",
              "lineNumber": 18,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "params.note"
            }
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 21,
                "column": 0
              },
              "end": {
                "line": 21,
                "column": 41
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 14,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A presence object containing data."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.userId",
                  "lineNumber": 15,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID of the user."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.status",
                  "lineNumber": 16,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The presence status of the user."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.activity",
                  "lineNumber": 17,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The activity of the user."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                },
                {
                  "title": "param",
                  "name": "params.note",
                  "lineNumber": 18,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "A custom note provided by the user."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "presence",
          "kind": "event",
          "name": "presence:change",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "presence:change",
              "kind": "event"
            }
          ],
          "namespace": "presence.event:presence:change"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The current user's presence information has changed."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The changed information can be retrieved using the "
                  },
                  {
                    "type": "link",
                    "url": "#presencegetself",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence.getSelf"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nAPI."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 7
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 8,
              "name": "presence"
            },
            {
              "title": "event",
              "description": "presence:selfChange",
              "lineNumber": 9
            }
          ],
          "loc": {
            "start": {
              "line": 23,
              "column": 0
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 34,
                "column": 0
              },
              "end": {
                "line": 34,
                "column": 48
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "presence",
          "kind": "event",
          "name": "presence:selfChange",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "presence:selfChange",
              "kind": "event"
            }
          ],
          "namespace": "presence.event:presence:selfChange"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An update (as a result of subscribing to a specific user's presence) has been received."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 4
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 5,
              "name": "presence"
            },
            {
              "title": "event",
              "description": "presence:subscribe",
              "lineNumber": 6
            },
            {
              "title": "param",
              "description": "A subscription object containing data.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID(s) of the user(s) whose presence needs to be watched.",
              "lineNumber": 8,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "params.userIds"
            }
          ],
          "loc": {
            "start": {
              "line": 36,
              "column": 0
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 46,
                "column": 0
              },
              "end": {
                "line": 46,
                "column": 45
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A subscription object containing data."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.userIds",
                  "lineNumber": 8,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID(s) of the user(s) whose presence needs to be watched."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "presence",
          "kind": "event",
          "name": "presence:subscribe",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "presence:subscribe",
              "kind": "event"
            }
          ],
          "namespace": "presence.event:presence:subscribe"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An update (as a result of unsubscribing to a specific user's presence) has been received."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 4
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 5,
              "name": "presence"
            },
            {
              "title": "event",
              "description": "presence:unsubscribe",
              "lineNumber": 6
            },
            {
              "title": "param",
              "description": "A subscription object containing data.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The ID(s) of the user(s) whose presence no longer requires to be watched.",
              "lineNumber": 8,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "params.userIds"
            }
          ],
          "loc": {
            "start": {
              "line": 48,
              "column": 0
            },
            "end": {
              "line": 57,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 58,
                "column": 0
              },
              "end": {
                "line": 58,
                "column": 49
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A subscription object containing data."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.userIds",
                  "lineNumber": 8,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The ID(s) of the user(s) whose presence no longer requires to be watched."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "presence",
          "kind": "event",
          "name": "presence:unsubscribe",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "presence:unsubscribe",
              "kind": "event"
            }
          ],
          "namespace": "presence.event:presence:unsubscribe"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An error occurred with presence."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 4
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 5,
              "name": "presence"
            },
            {
              "title": "event",
              "description": "presence:error",
              "lineNumber": 6
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The Basic error object.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "api.BasicError"
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 60,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 70,
                "column": 0
              },
              "end": {
                "line": 70,
                "column": 37
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 8,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The Basic error object."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "api.BasicError"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "presence",
          "kind": "event",
          "name": "presence:error",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "presence:error",
              "kind": "event"
            }
          ],
          "namespace": "presence.event:presence:error"
        }
      ],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Possible presence status values."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "name",
              "description": null,
              "lineNumber": 4,
              "name": "statuses"
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 5
            },
            {
              "title": "type",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            },
            {
              "title": "property",
              "description": null,
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "OPEN"
            },
            {
              "title": "property",
              "description": null,
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "CLOSED"
            },
            {
              "title": "example",
              "description": "const { statuses, activities } = client.presence\n// Use the values when updating presence.\nclient.presence.update(statuses.OPEN, activities.AVAILABLE)",
              "lineNumber": 9
            }
          ],
          "loc": {
            "start": {
              "line": 22,
              "column": 4
            },
            "end": {
              "line": 35,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 36,
                "column": 4
              },
              "end": {
                "line": 36,
                "column": 37
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/cpaas/index.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "const { statuses, activities } = client.presence\n// Use the values when updating presence.\nclient.presence.update(statuses.OPEN, activities.AVAILABLE)"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "OPEN",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "CLOSED",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "name": "statuses",
          "memberof": "presence",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "statuses",
              "scope": "static"
            }
          ],
          "namespace": "presence.statuses"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Possible presence activity values."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "name",
              "description": null,
              "lineNumber": 4,
              "name": "activities"
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 5
            },
            {
              "title": "type",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            },
            {
              "title": "property",
              "description": null,
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "AVAILABLE"
            },
            {
              "title": "property",
              "description": null,
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "BUSY"
            },
            {
              "title": "property",
              "description": null,
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "LUNCH"
            },
            {
              "title": "property",
              "description": null,
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "VACATION"
            },
            {
              "title": "property",
              "description": null,
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "ON_THE_PHONE"
            },
            {
              "title": "property",
              "description": null,
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "ACTIVITIES_UNKNOWN"
            },
            {
              "title": "property",
              "description": null,
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "ACTIVITIES_OTHER"
            },
            {
              "title": "example",
              "description": "const { statuses, activities } = client.presence\n// Use the values when updating presence.\nclient.presence.update(statuses.OPEN, activities.AVAILABLE)",
              "lineNumber": 14
            }
          ],
          "loc": {
            "start": {
              "line": 37,
              "column": 4
            },
            "end": {
              "line": 55,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 56,
                "column": 4
              },
              "end": {
                "line": 56,
                "column": 41
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/cpaas/index.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "const { statuses, activities } = client.presence\n// Use the values when updating presence.\nclient.presence.update(statuses.OPEN, activities.AVAILABLE)"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "AVAILABLE",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "BUSY",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "LUNCH",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "VACATION",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "ON_THE_PHONE",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "ACTIVITIES_UNKNOWN",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "ACTIVITIES_OTHER",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "name": "activities",
          "memberof": "presence",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "activities",
              "scope": "static"
            }
          ],
          "namespace": "presence.activities"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The PresenceStatus type defines the user's current status in terms of the user's availability to\ncommunicate/respond to other users in the network.\nAn instance of this type can be obtained by invoking the "
                  },
                  {
                    "type": "link",
                    "url": "#presenceget",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence.get"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " function."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Reporting when a user is on the phone is enabled (by default), which means that presence update notifications\nwill be sent whenever a user is in a call, as well as when the call has ended.\nThis is a user preference enabled or disabled on server side, and it can only be changed on the server side."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The status is set to "
                  },
                  {
                    "type": "link",
                    "url": "#presencestatuses",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "open"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " as soon as a user subscribes for the presence service."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 11,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 12
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "PresenceStatus"
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 14
            },
            {
              "title": "property",
              "description": "The unique identifier for the user associated with this presence status.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "userId"
            },
            {
              "title": "property",
              "description": "The current status the user has set for themselves. For supported values see {@link presence.statuses}.",
              "lineNumber": 16,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "status"
            },
            {
              "title": "property",
              "description": "The current activity of the user.\n     For supported values see {@link presence.activities}.",
              "lineNumber": 17,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "activity"
            },
            {
              "title": "property",
              "description": "Additional message acompanying the status & activity.",
              "lineNumber": 19,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "note"
            },
            {
              "title": "property",
              "description": "Whether the presence information has been loaded or is in the process of loading.",
              "lineNumber": 20,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "loading"
            }
          ],
          "loc": {
            "start": {
              "line": 19,
              "column": 0
            },
            "end": {
              "line": 40,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 42,
                "column": 0
              },
              "end": {
                "line": 42,
                "column": 36
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "userId",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The unique identifier for the user associated with this presence status."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "status",
              "lineNumber": 16,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The current status the user has set for themselves. For supported values see "
                      },
                      {
                        "type": "link",
                        "url": "#presencestatuses",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "presence.statuses"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": "."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "activity",
              "lineNumber": 17,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The current activity of the user.\nFor supported values see "
                      },
                      {
                        "type": "link",
                        "url": "#presenceactivities",
                        "title": null,
                        "jsdoc": true,
                        "children": [
                          {
                            "type": "text",
                            "value": "presence.activities"
                          }
                        ]
                      },
                      {
                        "type": "text",
                        "value": "."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "note",
              "lineNumber": 19,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Additional message acompanying the status & activity."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "loading",
              "lineNumber": 20,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Whether the presence information has been loaded or is in the process of loading."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "PresenceStatus",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "presence",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "PresenceStatus",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "presence.PresenceStatus"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Updates the presence information for the current user."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "See "
                  },
                  {
                    "type": "link",
                    "url": "#presencestatuses",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence.statuses"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " and "
                  },
                  {
                    "type": "link",
                    "url": "#presenceactivities",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence.activities"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " for valid\nvalues."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a\n"
                  },
                  {
                    "type": "link",
                    "url": "#presenceeventpresenceselfchange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence:selfChange"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event\nwhen the operation completes. The updated presence information is\navailable and can be retrieved with "
                  },
                  {
                    "type": "link",
                    "url": "#presencegetself",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence.getSelf"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Other users subscribed for this user's presence will receive a\n"
                  },
                  {
                    "type": "link",
                    "url": "#presenceeventpresencechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 14,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 15
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 16
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 17,
              "name": "presence"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 18,
              "name": "update"
            },
            {
              "title": "param",
              "description": "The status of the presence state.",
              "lineNumber": 19,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "status"
            },
            {
              "title": "param",
              "description": "The activity to be shown as presence state",
              "lineNumber": 20,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "activity"
            },
            {
              "title": "param",
              "description": "An additional note to be provided when the activity is `presence.activities.ACTIVITIES_OTHER`.",
              "lineNumber": 21,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "note"
            }
          ],
          "loc": {
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 74,
                "column": 4
              },
              "end": {
                "line": 77,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "status",
              "lineNumber": 19,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The status of the presence state."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "activity",
              "lineNumber": 20,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The activity to be shown as presence state"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "param",
              "name": "note",
              "lineNumber": 21,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "An additional note to be provided when the activity is "
                      },
                      {
                        "type": "inlineCode",
                        "value": "presence.activities.ACTIVITIES_OTHER"
                      },
                      {
                        "type": "text",
                        "value": "."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "presence",
          "kind": "function",
          "name": "update",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "update",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "presence.update"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves the presence information for specified users, if available."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 5
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 6,
              "name": "presence"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 7,
              "name": "get"
            },
            {
              "title": "param",
              "description": "A User ID or an array of User IDs.",
              "lineNumber": 8,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "user"
            },
            {
              "title": "return",
              "description": "List of user presence information.",
              "lineNumber": 9,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "Object"
                      }
                    ]
                  },
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 90,
                "column": 4
              },
              "end": {
                "line": 102,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "user",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A User ID or an array of User IDs."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "List of user presence information."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "Object"
                      }
                    ]
                  },
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "presence",
          "kind": "function",
          "name": "get",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "get",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "presence.get"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves the presence information for all available users."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 5
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 6,
              "name": "presence"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 7,
              "name": "getAll"
            },
            {
              "title": "return",
              "description": "List of user presence information.",
              "lineNumber": 8,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 104,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 114,
                "column": 4
              },
              "end": {
                "line": 117,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "List of user presence information."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "presence",
          "kind": "function",
          "name": "getAll",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "getAll",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "presence.getAll"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves the presence information for the current user."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This information is set using the "
                  },
                  {
                    "type": "link",
                    "url": "#presenceupdate",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence.update"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 6
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 7
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 8,
              "name": "presence"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 9,
              "name": "getSelf"
            },
            {
              "title": "return",
              "description": "Presence information for the current user.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 131,
                "column": 4
              },
              "end": {
                "line": 134,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Presence information for the current user."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "presence",
          "kind": "function",
          "name": "getSelf",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "getSelf",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "presence.getSelf"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Fetches presence information for the given users. This will refresh the\navailable information with any new information from the server."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Available presence information an be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#presenceget",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence.get"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " or "
                  },
                  {
                    "type": "link",
                    "url": "#presencegetall",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence.getAll"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 7,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 8
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 9
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 10,
              "name": "presence"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 11,
              "name": "fetch"
            },
            {
              "title": "param",
              "description": "A User ID or an array of User IDs.",
              "lineNumber": 12,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "user"
            }
          ],
          "loc": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 150,
                "column": 4
              },
              "end": {
                "line": 154,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "user",
              "lineNumber": 12,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A User ID or an array of User IDs."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "presence",
          "kind": "function",
          "name": "fetch",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "fetch",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "presence.fetch"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Subscribe to another User's presence updates."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "When the User updates their presence information, the SDK will emit a\n"
                  },
                  {
                    "type": "link",
                    "url": "#presenceeventpresencechange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "presence:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " event."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 8
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 9,
              "name": "presence"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 10,
              "name": "subscribe"
            },
            {
              "title": "param",
              "description": "A User ID or an array of User IDs.",
              "lineNumber": 11,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "users"
            }
          ],
          "loc": {
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 169,
                "column": 4
              },
              "end": {
                "line": 172,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "users",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A User ID or an array of User IDs."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "presence",
          "kind": "function",
          "name": "subscribe",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "subscribe",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "presence.subscribe"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Unsubscribe from another User's presence updates."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "memberof",
              "description": "presence",
              "lineNumber": 5
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 6,
              "name": "presence"
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 7,
              "name": "unsubscribe"
            },
            {
              "title": "param",
              "description": "A User ID or an array of User IDs.",
              "lineNumber": 8,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "users"
            }
          ],
          "loc": {
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 184,
                "column": 4
              },
              "end": {
                "line": 187,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/api.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "users",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A User ID or an array of User IDs."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  },
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "presence",
          "kind": "function",
          "name": "unsubscribe",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "presence",
              "kind": "namespace"
            },
            {
              "name": "unsubscribe",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "presence.unsubscribe"
        }
      ]
    },
    "path": [
      {
        "name": "presence",
        "kind": "namespace"
      }
    ],
    "namespace": "presence"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "A set of "
            },
            {
              "type": "link",
              "url": "#callsdphandlerfunction",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "SdpHandlerFunction"
                }
              ]
            },
            {
              "type": "text",
              "value": "s for manipulating SDP information.\nThese handlers are used to customize low-level call behaviour for very specific\nenvironments and/or scenarios."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "Note that SDP handlers are exposed on the entry point of the SDK. They can be added during\ninitialization of the SDK using the "
            },
            {
              "type": "link",
              "url": "#configconfigcall",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "config.call.sdpHandlers"
                }
              ]
            },
            {
              "type": "text",
              "value": " configuration\nparameter. They can also be set after the SDK's creation by using the\n"
            },
            {
              "type": "link",
              "url": "#callsetsdphandlers",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "call.setSdpHandlers"
                }
              ]
            },
            {
              "type": "text",
              "value": " function."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 10,
        "type": null
      },
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 11,
        "type": null,
        "name": "sdpHandlers"
      },
      {
        "title": "example",
        "description": "import { create, sdpHandlers } from 'kandy';\nconst codecRemover = sdpHandlers.createCodecRemover(['VP8', 'VP9'])\nconst client = create({\n  call: {\n    sdpHandlers: [ codecRemover, <Your-SDP-Handler-Function>, ...]\n  }\n})",
        "lineNumber": 12
      },
      {
        "title": "example",
        "description": "// Through the Call API post-instantiation\nclient.call.setSdpHandlers([ codecRemover, <Your-SDP-Handler-Function>, ...])",
        "lineNumber": 20
      }
    ],
    "loc": {
      "start": {
        "line": 40,
        "column": 0
      },
      "end": {
        "line": 63,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 121,
          "column": 0
        },
        "end": {
          "line": 121,
          "column": 58
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/builds/core/index.js"
    },
    "augments": [],
    "examples": [
      {
        "description": "import { create, sdpHandlers } from 'kandy';\nconst codecRemover = sdpHandlers.createCodecRemover(['VP8', 'VP9'])\nconst client = create({\n  call: {\n    sdpHandlers: [ codecRemover, <Your-SDP-Handler-Function>, ...]\n  }\n})"
      },
      {
        "description": "// Through the Call API post-instantiation\nclient.call.setSdpHandlers([ codecRemover, <Your-SDP-Handler-Function>, ...])"
      }
    ],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "namespace",
    "name": "sdpHandlers",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An object that represents a selector to match codecs of an RTP map in SDP."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "CodecSelector"
            },
            {
              "title": "memberof",
              "description": "sdpHandlers",
              "lineNumber": 6
            },
            {
              "title": "property",
              "description": "The name of the codec.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "name"
            },
            {
              "title": "property",
              "description": "An array of strings to match against the \"a=fmtp\" format parameters for the corresponding codec.\n                                     All of the elements in the array must be contained in the \"a=fmtp\" attribute in order to be a match.",
              "lineNumber": 8,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "fmtpParams"
            }
          ],
          "loc": {
            "start": {
              "line": 65,
              "column": 0
            },
            "end": {
              "line": 75,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 121,
                "column": 0
              },
              "end": {
                "line": 121,
                "column": 58
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/builds/core/index.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "name",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The name of the codec."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "fmtpParams",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "An array of strings to match against the \"a=fmtp\" format parameters for the corresponding codec.\nAll of the elements in the array must be contained in the \"a=fmtp\" attribute in order to be a match."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "CodecSelector",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "sdpHandlers",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "sdpHandlers",
              "kind": "namespace"
            },
            {
              "name": "CodecSelector",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "sdpHandlers.CodecSelector"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "This function creates an SDP handler that will remove codecs matching the selectors specified for SDP offers and answers."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "In some scenarios it's necessary to remove certain codecs being offered by the SDK to remote parties. For example, some legacy call services limit the SDP\nlength (usually to 4KB) and will reject calls that have SDP size above this amount."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "While creating an SDP handler would allow a user to perform this type of manipulation, it is a non-trivial task that requires in-depth knowledge of WebRTC SDP."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "To facilitate this common task, the createCodecRemover function creates a codec removal handler that can be used for this purpose. Applications can use this codec\nremoval handler in combination with the "
                  },
                  {
                    "type": "link",
                    "url": "#callgetavailablecodecs",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "call.getAvailableCodecs"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " function in order to build logic to determine the best codecs to use\nfor their application."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 12,
              "type": null
            },
            {
              "title": "memberof",
              "description": "sdpHandlers",
              "lineNumber": 13
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 14,
              "name": "createCodecRemover"
            },
            {
              "title": "param",
              "description": "A list of codec selectors to remove from the SDP. If passing a list of strings, they will be converted into\n                                                     codec selectors that correspond to those names without any extra FMTP parameters.",
              "lineNumber": 15,
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "CodecSelector"
                      }
                    ]
                  },
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                ]
              },
              "name": "codecs"
            },
            {
              "title": "returns",
              "description": "The resulting SDP handler that will remove the codec.",
              "lineNumber": 17,
              "type": {
                "type": "NameExpression",
                "name": "call.SdpHandlerFunction"
              }
            },
            {
              "title": "example",
              "description": "import { create, sdpHandlers } from 'kandy';\n\nconst codecRemover = sdpHandlers.createCodecRemover([\n  // Remove all VP8 and VP9 codecs.\n  'VP8',\n  'VP9',\n\n  // Remove all H264 codecs with the specified FMTP parameters.\n  {\n    name: 'H264',\n    fmtpParams: ['profile-level-id=4d0032', 'packetization-mode=1']\n  }\n])\n\nconst client = create({\n  call: {\n    sdpHandlers: [codecRemover]\n  }\n})",
              "lineNumber": 18
            }
          ],
          "loc": {
            "start": {
              "line": 77,
              "column": 0
            },
            "end": {
              "line": 116,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 121,
                "column": 0
              },
              "end": {
                "line": 121,
                "column": 58
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/builds/core/index.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "import { create, sdpHandlers } from 'kandy';\n\nconst codecRemover = sdpHandlers.createCodecRemover([\n  // Remove all VP8 and VP9 codecs.\n  'VP8',\n  'VP9',\n\n  // Remove all H264 codecs with the specified FMTP parameters.\n  {\n    name: 'H264',\n    fmtpParams: ['profile-level-id=4d0032', 'packetization-mode=1']\n  }\n])\n\nconst client = create({\n  call: {\n    sdpHandlers: [codecRemover]\n  }\n})"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "codecs",
              "lineNumber": 15,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A list of codec selectors to remove from the SDP. If passing a list of strings, they will be converted into\ncodec selectors that correspond to those names without any extra FMTP parameters."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "UnionType",
                "elements": [
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "CodecSelector"
                      }
                    ]
                  },
                  {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The resulting SDP handler that will remove the codec."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "call.SdpHandlerFunction"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "sdpHandlers",
          "kind": "function",
          "name": "createCodecRemover",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "sdpHandlers",
              "kind": "namespace"
            },
            {
              "name": "createCodecRemover",
              "kind": "function"
            }
          ],
          "namespace": "sdpHandlerscreateCodecRemover"
        }
      ]
    },
    "path": [
      {
        "name": "sdpHandlers",
        "kind": "namespace"
      }
    ],
    "namespace": "sdpHandlers"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The 'services' namespace allows an application to manage how they wish the SDK to\nreceive communications from the platform. An application can subscribe to\nservices in order to receive updates about that service for the current\nuser. A feature generally requires a subscription for its service to be\nfully functional."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The services an application can subscribe to are based on the features\nincluded in the SDK. The list of available services can be retrieved\nusing the "
            },
            {
              "type": "link",
              "url": "#servicesgetsubscriptions",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "services.getSubscriptions"
                }
              ]
            },
            {
              "type": "text",
              "value": " API. These values can be used\nwith the "
            },
            {
              "type": "link",
              "url": "#servicessubscribe",
              "title": null,
              "jsdoc": true,
              "children": [
                {
                  "type": "text",
                  "value": "services.subscribe"
                }
              ]
            },
            {
              "type": "text",
              "value": " API."
            }
          ]
        },
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The channel used for subscriptions is the method for receiving the service\nupdates. The recommended channel is "
            },
            {
              "type": "inlineCode",
              "value": "websocket"
            },
            {
              "type": "text",
              "value": ", where the SDK is able to\nhandle receiving the updates internally. Alternate channel methods, if a\nwebsocket cannot be used, will be available in the future."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 17,
        "type": null
      },
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 18,
        "type": null,
        "name": "services"
      }
    ],
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 20,
        "column": 3
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 65,
          "column": 0
        },
        "end": {
          "line": 65,
          "column": 36
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/api.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "namespace",
    "name": "services",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Subscription information has changed."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The updated subscription information can be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#servicesgetsubscriptions",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "services.getSubscriptions"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "memberof",
              "description": "services",
              "lineNumber": 6
            },
            {
              "title": "event",
              "description": "subscription:change",
              "lineNumber": 7
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "When unsolicited, the reason for the change.",
              "lineNumber": 9,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "params.reason"
            }
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 12,
                "column": 0
              },
              "end": {
                "line": 12,
                "column": 47
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.reason",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "When unsolicited, the reason for the change."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "services",
          "kind": "event",
          "name": "subscription:change",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "services",
              "kind": "namespace"
            },
            {
              "name": "subscription:change",
              "kind": "event"
            }
          ],
          "namespace": "services.event:subscription:change"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An error occurred during a subscription operation."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The subscription information can be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#servicesgetsubscriptions",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "services.getSubscriptions"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 5,
              "type": null
            },
            {
              "title": "memberof",
              "description": "services",
              "lineNumber": 6
            },
            {
              "title": "event",
              "description": "subscription:error",
              "lineNumber": 7
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "A Basic error object, representing the error that occurred.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 24,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 25,
                "column": 0
              },
              "end": {
                "line": 25,
                "column": 45
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 9,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "A Basic error object, representing the error that occurred."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "services",
          "kind": "event",
          "name": "subscription:error",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "services",
              "kind": "namespace"
            },
            {
              "name": "subscription:error",
              "kind": "event"
            }
          ],
          "namespace": "services.event:subscription:error"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An attempt to extend the current user's subscription was made."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "In a failure scenario, the current user is still connected, and further\nresubscription attempts will be made, but may become disconnected if the\nsession expires."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "memberof",
              "description": "services",
              "lineNumber": 7
            },
            {
              "title": "event",
              "description": "subscription:resub",
              "lineNumber": 8
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The attempt number of this resubscription.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "number"
              },
              "name": "params.attemptNum"
            },
            {
              "title": "param",
              "description": "Whether the resubscription failed or not.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "boolean"
              },
              "name": "params.isFailure"
            },
            {
              "title": "param",
              "description": "The Basic error object.",
              "lineNumber": 12,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "api.BasicError"
                }
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 27,
              "column": 0
            },
            "end": {
              "line": 40,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 41,
                "column": 0
              },
              "end": {
                "line": 41,
                "column": 45
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.attemptNum",
                  "lineNumber": 10,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The attempt number of this resubscription."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "number"
                  }
                },
                {
                  "title": "param",
                  "name": "params.isFailure",
                  "lineNumber": 11,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Whether the resubscription failed or not."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "boolean"
                  }
                },
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 12,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The Basic error object."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "api.BasicError"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "services",
          "kind": "event",
          "name": "subscription:resub",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "services",
              "kind": "namespace"
            },
            {
              "name": "subscription:resub",
              "kind": "event"
            }
          ],
          "namespace": "services.event:subscription:resub"
        }
      ],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The ServiceDescriptor type defines the format for specifying how to subscribe for a certain service.\nThis is the service configuration object that needs to be passed (as part of an array of configuration objects) when calling\nthe "
                  },
                  {
                    "type": "link",
                    "url": "#servicessubscribe",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "services.subscribe"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " function.\nOnly some plugins ("
                  },
                  {
                    "type": "inlineCode",
                    "value": "call"
                  },
                  {
                    "type": "text",
                    "value": ", "
                  },
                  {
                    "type": "inlineCode",
                    "value": "messaging"
                  },
                  {
                    "type": "text",
                    "value": " and "
                  },
                  {
                    "type": "inlineCode",
                    "value": "presence"
                  },
                  {
                    "type": "text",
                    "value": ") support such configuration object that needs to be passed\nto the subscribe function."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 7,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 8
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "ServiceDescriptor"
            },
            {
              "title": "property",
              "description": "The name of the available service user wants to subscribe to.\nThe available service names are `chat`, `presence`, `call` and `smsinbound`.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "service"
            },
            {
              "title": "property",
              "description": "An object containing any additional parameters required for subscribing to that service.\nThis is an optional property as not all service subscriptions require it.",
              "lineNumber": 13,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "params"
            },
            {
              "title": "memberof",
              "description": "services",
              "lineNumber": 15
            },
            {
              "title": "example",
              "description": "// Subscribe to chat, presence & call services on a WebSocket channel.\nclient.services.subscribe([\n   {service: 'chat'},\n   {service: 'presence'},\n   {service: 'call'},\n], 'websocket')",
              "lineNumber": 16
            }
          ],
          "loc": {
            "start": {
              "line": 22,
              "column": 0
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 65,
                "column": 0
              },
              "end": {
                "line": 65,
                "column": 36
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/api.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Subscribe to chat, presence & call services on a WebSocket channel.\nclient.services.subscribe([\n   {service: 'chat'},\n   {service: 'presence'},\n   {service: 'call'},\n], 'websocket')"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "service",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The name of the available service user wants to subscribe to.\nThe available service names are "
                      },
                      {
                        "type": "inlineCode",
                        "value": "chat"
                      },
                      {
                        "type": "text",
                        "value": ", "
                      },
                      {
                        "type": "inlineCode",
                        "value": "presence"
                      },
                      {
                        "type": "text",
                        "value": ", "
                      },
                      {
                        "type": "inlineCode",
                        "value": "call"
                      },
                      {
                        "type": "text",
                        "value": " and "
                      },
                      {
                        "type": "inlineCode",
                        "value": "smsinbound"
                      },
                      {
                        "type": "text",
                        "value": "."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "params",
              "lineNumber": 13,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "An object containing any additional parameters required for subscribing to that service.\nThis is an optional property as not all service subscriptions require it."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "ServiceDescriptor",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "services",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "services",
              "kind": "namespace"
            },
            {
              "name": "ServiceDescriptor",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "services.ServiceDescriptor"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SmsInboundServiceParams type defines the additional information when subscribing to SMS inbound service.\nThis is the configuration object that needs to be passed as the value for the "
                  },
                  {
                    "type": "link",
                    "url": "#servicesservicedescriptor",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "ServiceDescriptor.params"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " property."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 4,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 5
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "SmsInboundServiceParams"
            },
            {
              "title": "memberof",
              "description": "services",
              "lineNumber": 7
            },
            {
              "title": "property",
              "description": "An E164 formatted DID number.\n    The subscription created will provide notifications for inbound SMS messages destined for this address.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "destinationAddress"
            },
            {
              "title": "example",
              "description": "// Subscribe to smsinbound service on a WebSocket channel.\nclient.services.subscribe([\n   {service: 'smsinbound', params: {destinationAddress: '+18001234567'}}\n], 'websocket')",
              "lineNumber": 10
            }
          ],
          "loc": {
            "start": {
              "line": 47,
              "column": 0
            },
            "end": {
              "line": 62,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 65,
                "column": 0
              },
              "end": {
                "line": 65,
                "column": 36
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/api.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Subscribe to smsinbound service on a WebSocket channel.\nclient.services.subscribe([\n   {service: 'smsinbound', params: {destinationAddress: '+18001234567'}}\n], 'websocket')"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "destinationAddress",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "An E164 formatted DID number.\nThe subscription created will provide notifications for inbound SMS messages destined for this address."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "SmsInboundServiceParams",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "services",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "services",
              "kind": "namespace"
            },
            {
              "name": "SmsInboundServiceParams",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "services.SmsInboundServiceParams"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Subscribes to platform notifications for an SDK service."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Subscriptions can only be made for services available to the SDK. See\n"
                  },
                  {
                    "type": "link",
                    "url": "#servicesgetsubscriptions",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "services.getSubscriptions"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " for information about services."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Extra configurations can be provided for a subscription as part of its\n\"service configurations\" object (see the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "services"
                  },
                  {
                    "type": "text",
                    "value": " parameter). This\nconfiguration object must contain a "
                  },
                  {
                    "type": "inlineCode",
                    "value": "service"
                  },
                  {
                    "type": "text",
                    "value": " property with the\nservice name, but may also include other properties as extra\nsubscription configurations."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK currently only supports the "
                  },
                  {
                    "type": "inlineCode",
                    "value": "websocket"
                  },
                  {
                    "type": "text",
                    "value": " channel as a subscription\ntype."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 15,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 16
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 17,
              "name": "cpaas_subscription"
            },
            {
              "title": "memberof",
              "description": "services",
              "lineNumber": 18
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 19,
              "name": "subscribe"
            },
            {
              "title": "param",
              "description": "A list of service configurations.",
              "lineNumber": 20,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "UnionType",
                    "elements": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      },
                      {
                        "type": "NameExpression",
                        "name": "services.ServiceDescriptor"
                      }
                    ]
                  }
                ]
              },
              "name": "services"
            },
            {
              "title": "param",
              "description": "The options object for non-credential options.",
              "lineNumber": 21,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "options"
            },
            {
              "title": "param",
              "description": "The method of how to receive service updates.",
              "lineNumber": 22,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "options.type",
              "default": "'websocket'"
            },
            {
              "title": "example",
              "description": "// Subscribe for chat and SMS services.\nconst services = [\n   { service: 'chat' },\n   // Specify extra configurations for certain services.\n   { service: 'smsinbound', params: {destinationAddress: '<phoneNumber>' }}\n]\n\nclient.services.subscribe(services)",
              "lineNumber": 23
            }
          ],
          "loc": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 150,
                "column": 4
              },
              "end": {
                "line": 176,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/api.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Subscribe for chat and SMS services.\nconst services = [\n   { service: 'chat' },\n   // Specify extra configurations for certain services.\n   { service: 'smsinbound', params: {destinationAddress: '<phoneNumber>' }}\n]\n\nclient.services.subscribe(services)"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "services",
              "lineNumber": 20,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A list of service configurations."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "UnionType",
                    "elements": [
                      {
                        "type": "NameExpression",
                        "name": "string"
                      },
                      {
                        "type": "NameExpression",
                        "name": "services.ServiceDescriptor"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "options",
              "lineNumber": 21,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The options object for non-credential options."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "options.type",
                  "lineNumber": 22,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The method of how to receive service updates."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "string"
                  },
                  "default": "'websocket'"
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "services",
          "kind": "function",
          "name": "subscribe",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "services",
              "kind": "namespace"
            },
            {
              "name": "subscribe",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "services.subscribe"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Cancels existing subscriptions for platform notifications."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Existing subscriptions can be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#servicesgetsubscriptions",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "services.getSubscriptions"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API. The "
                  },
                  {
                    "type": "inlineCode",
                    "value": "subscribed"
                  },
                  {
                    "type": "text",
                    "value": " values are the\nservices that can be unsubscribed from."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 7,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 8
            },
            {
              "title": "memberof",
              "description": "services",
              "lineNumber": 9
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 10,
              "name": "unsubscribe"
            },
            {
              "title": "param",
              "description": "A list of subscribed service names.",
              "lineNumber": 11,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              },
              "name": "services"
            },
            {
              "title": "param",
              "description": "The method of how the service updates\n   are being received.",
              "lineNumber": 12,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "type",
              "default": "'websocket'"
            },
            {
              "title": "example",
              "description": "// Unsubscribe from chat and SMS services.\nconst services = [ 'chat', 'smsinbound' ]\n\nclient.services.unsubscribe(services)",
              "lineNumber": 14
            }
          ],
          "loc": {
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 197,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 198,
                "column": 4
              },
              "end": {
                "line": 206,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/api.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Unsubscribe from chat and SMS services.\nconst services = [ 'chat', 'smsinbound' ]\n\nclient.services.unsubscribe(services)"
            }
          ],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "services",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "A list of subscribed service names."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "title": "param",
              "name": "type",
              "lineNumber": 12,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The method of how the service updates\nare being received."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "default": "'websocket'"
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "services",
          "kind": "function",
          "name": "unsubscribe",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "services",
              "kind": "namespace"
            },
            {
              "name": "unsubscribe",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "services.unsubscribe"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves information about currently subscribed services and available services."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The "
                  },
                  {
                    "type": "inlineCode",
                    "value": "available"
                  },
                  {
                    "type": "text",
                    "value": " values are the SDK's services that an application can\nsubscribe to receive notifications about. A feature generally\nrequires a subscription to its service in order to be fully functional."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The "
                  },
                  {
                    "type": "inlineCode",
                    "value": "subscribed"
                  },
                  {
                    "type": "text",
                    "value": " values are the SDK's services that the application has\nan active subscription for. Services are subscribed to using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#servicessubscribe",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "services.subscribe"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 11,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 12
            },
            {
              "title": "memberof",
              "description": "services",
              "lineNumber": 13
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 14,
              "name": "getSubscriptions"
            },
            {
              "title": "return",
              "description": "Lists of subscribed and available services.",
              "lineNumber": 15,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            },
            {
              "title": "example",
              "description": "// Get the lists of services.\nconst services = client.services.getSubscriptions()\n\n// Figure out which available services don't have a subscription.\nconst notSubscribed = services.available.filter(service => {\n   return !services.subscribed.includes(service)\n})\n\n// Subscribe for all not-yet-subscribed services.\nclient.services.subscribe(notSubscribed)",
              "lineNumber": 16
            }
          ],
          "loc": {
            "start": {
              "line": 220,
              "column": 4
            },
            "end": {
              "line": 247,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 248,
                "column": 4
              },
              "end": {
                "line": 255,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/api.js"
          },
          "augments": [],
          "examples": [
            {
              "description": "// Get the lists of services.\nconst services = client.services.getSubscriptions()\n\n// Figure out which available services don't have a subscription.\nconst notSubscribed = services.available.filter(service => {\n   return !services.subscribed.includes(service)\n})\n\n// Subscribe for all not-yet-subscribed services.\nclient.services.subscribe(notSubscribed)"
            }
          ],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Lists of subscribed and available services."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "Object"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "services",
          "kind": "function",
          "name": "getSubscriptions",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "services",
              "kind": "namespace"
            },
            {
              "name": "getSubscriptions",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "services.getSubscriptions"
        }
      ]
    },
    "path": [
      {
        "name": "services",
        "kind": "namespace"
      }
    ],
    "namespace": "services"
  },
  {
    "description": {
      "type": "root",
      "children": [
        {
          "type": "paragraph",
          "children": [
            {
              "type": "text",
              "value": "The 'user' namespace allows access to user information for users within the same domain."
            }
          ]
        }
      ]
    },
    "tags": [
      {
        "title": "public",
        "description": null,
        "lineNumber": 3,
        "type": null
      },
      {
        "title": "namespace",
        "description": null,
        "lineNumber": 4,
        "type": null,
        "name": "user"
      }
    ],
    "loc": {
      "start": {
        "line": 9,
        "column": 2
      },
      "end": {
        "line": 14,
        "column": 5
      }
    },
    "context": {
      "loc": {
        "start": {
          "line": 31,
          "column": 2
        },
        "end": {
          "line": 182,
          "column": 3
        }
      },
      "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/users.js"
    },
    "augments": [],
    "examples": [],
    "implements": [],
    "params": [],
    "properties": [],
    "returns": [],
    "sees": [],
    "throws": [],
    "todos": [],
    "yields": [],
    "access": "public",
    "kind": "namespace",
    "name": "user",
    "members": {
      "global": [],
      "inner": [],
      "instance": [],
      "events": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The directory has changed."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "memberof",
              "description": "user",
              "lineNumber": 4
            },
            {
              "title": "event",
              "description": "directory:change",
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The Users' information returned by the\n   operation.",
              "lineNumber": 7,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "user.User"
                  }
                ]
              },
              "name": "params.results"
            }
          ],
          "loc": {
            "start": {
              "line": 36,
              "column": 0
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 46,
                "column": 0
              },
              "end": {
                "line": 46,
                "column": 50
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.results",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The Users' information returned by the\noperation."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "user.User"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "user",
          "kind": "event",
          "name": "directory:change",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "user",
              "kind": "namespace"
            },
            {
              "name": "directory:change",
              "kind": "event",
              "scope": "static"
            }
          ],
          "namespace": "user.event:directory:change"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An error occurred while performing a directory operation."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "memberof",
              "description": "user",
              "lineNumber": 3
            },
            {
              "title": "event",
              "description": "directory:error",
              "lineNumber": 4
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The Basic error object.",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 48,
              "column": 0
            },
            "end": {
              "line": 55,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 56,
                "column": 0
              },
              "end": {
                "line": 56,
                "column": 48
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 6,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The Basic error object."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "memberof": "user",
          "kind": "event",
          "name": "directory:error",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "user",
              "kind": "namespace"
            },
            {
              "name": "directory:error",
              "kind": "event"
            }
          ],
          "namespace": "user.event:directory:error"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "A change has occurred in the users list"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "memberof",
              "description": "user",
              "lineNumber": 4
            },
            {
              "title": "event",
              "description": "users:change",
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "The Users' information returned by the\n   operation.",
              "lineNumber": 7,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "user.User"
                  }
                ]
              },
              "name": "params.results"
            }
          ],
          "loc": {
            "start": {
              "line": 58,
              "column": 0
            },
            "end": {
              "line": 67,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 68,
                "column": 0
              },
              "end": {
                "line": 68,
                "column": 42
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.results",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The Users' information returned by the\noperation."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "TypeApplication",
                    "expression": {
                      "type": "NameExpression",
                      "name": "Array"
                    },
                    "applications": [
                      {
                        "type": "NameExpression",
                        "name": "user.User"
                      }
                    ]
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "user",
          "kind": "event",
          "name": "users:change",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "user",
              "kind": "namespace"
            },
            {
              "name": "users:change",
              "kind": "event",
              "scope": "static"
            }
          ],
          "namespace": "user.event:users:change"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "An error occurred while retrieving the user information"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "memberof",
              "description": "user",
              "lineNumber": 4
            },
            {
              "title": "event",
              "description": "users:error",
              "lineNumber": 5
            },
            {
              "title": "param",
              "description": null,
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params"
            },
            {
              "title": "param",
              "description": "params.error The Basic error object.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "params.error"
            }
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 0
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 79,
                "column": 0
              },
              "end": {
                "line": 79,
                "column": 40
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/eventTypes.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "params",
              "lineNumber": 6,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "params.error",
                  "lineNumber": 7,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "params.error The Basic error object."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "NameExpression",
                    "name": "Object"
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "user",
          "kind": "event",
          "name": "users:error",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "user",
              "kind": "namespace"
            },
            {
              "name": "users:error",
              "kind": "event",
              "scope": "static"
            }
          ],
          "namespace": "user.event:users:error"
        }
      ],
      "static": [
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The User data object."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 3,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 4
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 5,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "User"
            },
            {
              "title": "memberof",
              "description": "user",
              "lineNumber": 6
            },
            {
              "title": "property",
              "description": "The User ID of the user.",
              "lineNumber": 7,
              "type": {
                "type": "NameExpression",
                "name": "user.UserID"
              },
              "name": "userId"
            },
            {
              "title": "property",
              "description": "The email address of the user.",
              "lineNumber": 8,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "emailAddress"
            },
            {
              "title": "property",
              "description": "The first name of the user.",
              "lineNumber": 9,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "firstName"
            },
            {
              "title": "property",
              "description": "The last name of the user.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "lastName"
            },
            {
              "title": "property",
              "description": "The URL to get the photo of the user.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "photoURL"
            },
            {
              "title": "property",
              "description": "Whether the user is a \"buddy\". Values can be \"true\" or \"false\".",
              "lineNumber": 12,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "buddy"
            }
          ],
          "loc": {
            "start": {
              "line": 16,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 5
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 31,
                "column": 2
              },
              "end": {
                "line": 182,
                "column": 3
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/users.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [
            {
              "title": "property",
              "name": "userId",
              "lineNumber": 7,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The User ID of the user."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "user.UserID"
              }
            },
            {
              "title": "property",
              "name": "emailAddress",
              "lineNumber": 8,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The email address of the user."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "firstName",
              "lineNumber": 9,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The first name of the user."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "lastName",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The last name of the user."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "photoURL",
              "lineNumber": 11,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The URL to get the photo of the user."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            },
            {
              "title": "property",
              "name": "buddy",
              "lineNumber": 12,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Whether the user is a \"buddy\". Values can be \"true\" or \"false\"."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "User",
          "type": {
            "type": "NameExpression",
            "name": "Object"
          },
          "memberof": "user",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "user",
              "kind": "namespace"
            },
            {
              "name": "User",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "user.User"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Fetches information about a User."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#usereventuserschange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "users:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent after the operation completes. The User's information will then\nbe available."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about an available User can be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#userget",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "user.get"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 10,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 11
            },
            {
              "title": "memberof",
              "description": "user",
              "lineNumber": 12
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 13,
              "name": "fetch"
            },
            {
              "title": "param",
              "description": "The User ID of the user.",
              "lineNumber": 14,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "userId"
            }
          ],
          "loc": {
            "start": {
              "line": 32,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 48,
                "column": 4
              },
              "end": {
                "line": 51,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/users.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "userId",
              "lineNumber": 14,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The User ID of the user."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "string"
              }
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "user",
          "kind": "function",
          "name": "fetch",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "user",
              "kind": "namespace"
            },
            {
              "name": "fetch",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "user.fetch"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Fetches information about the current User from directory.\nThis API is simply a shortcut for the "
                  },
                  {
                    "type": "link",
                    "url": "#userfetch",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "user.fetch(getUserInfo().identity)"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#usereventuserschange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "users:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent after the operation completes. The User's information will then\nbe available."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Information about an available User can be retrieved using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#userget",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "user.get"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " API."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 11,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 12
            },
            {
              "title": "memberof",
              "description": "user",
              "lineNumber": 13
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 14,
              "name": "fetchSelfInfo"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 15,
              "name": "selfInfoAsUserSearch"
            }
          ],
          "loc": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 87,
                "column": 4
              },
              "end": {
                "line": 90,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/users.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "user",
          "kind": "function",
          "name": "fetchSelfInfo",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "user",
              "kind": "namespace"
            },
            {
              "name": "fetchSelfInfo",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "user.fetchSelfInfo"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves information about a User, if available."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "See the "
                  },
                  {
                    "type": "link",
                    "url": "#userfetch",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "user.fetch"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " and "
                  },
                  {
                    "type": "link",
                    "url": "#usersearch",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "user.search"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs for details about\nmaking Users' information available."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "memberof",
              "description": "user",
              "lineNumber": 8
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 9,
              "name": "get"
            },
            {
              "title": "param",
              "description": "The User ID of the user.",
              "lineNumber": 10,
              "type": {
                "type": "NameExpression",
                "name": "user.UserID"
              },
              "name": "userId"
            },
            {
              "title": "returns",
              "description": "The User object for the specified user.",
              "lineNumber": 11,
              "type": {
                "type": "NameExpression",
                "name": "user.User"
              }
            }
          ],
          "loc": {
            "start": {
              "line": 92,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 105,
                "column": 4
              },
              "end": {
                "line": 108,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/users.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "userId",
              "lineNumber": 10,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The User ID of the user."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "user.UserID"
              }
            }
          ],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The User object for the specified user."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "NameExpression",
                "name": "user.User"
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "user",
          "kind": "function",
          "name": "get",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "user",
              "kind": "namespace"
            },
            {
              "name": "get",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "user.get"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Retrieves information about all available Users."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "See the "
                  },
                  {
                    "type": "link",
                    "url": "#userfetch",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "user.fetch"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " and "
                  },
                  {
                    "type": "link",
                    "url": "#usersearch",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "user.search"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs for details about\nmaking Users' information available."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 6,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 7
            },
            {
              "title": "memberof",
              "description": "user",
              "lineNumber": 8
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 9,
              "name": "getAll"
            },
            {
              "title": "returns",
              "description": "An array of all the User objects.",
              "lineNumber": 10,
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "user.User"
                  }
                ]
              }
            }
          ],
          "loc": {
            "start": {
              "line": 110,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 122,
                "column": 4
              },
              "end": {
                "line": 125,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/users.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [
            {
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "An array of all the User objects."
                      }
                    ]
                  }
                ]
              },
              "title": "returns",
              "type": {
                "type": "TypeApplication",
                "expression": {
                  "type": "NameExpression",
                  "name": "Array"
                },
                "applications": [
                  {
                    "type": "NameExpression",
                    "name": "user.User"
                  }
                ]
              }
            }
          ],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "user",
          "kind": "function",
          "name": "getAll",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "user",
              "kind": "namespace"
            },
            {
              "name": "getAll",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "user.getAll"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Searches the domain's directory for Users."
                  }
                ]
              },
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The SDK will emit a "
                  },
                  {
                    "type": "link",
                    "url": "#usereventdirectorychange",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "directory:change"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": "\nevent after the operation completes. The search results will be\nprovided as part of the event, and will also be available using the\n"
                  },
                  {
                    "type": "link",
                    "url": "#userget",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "user.get"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " and "
                  },
                  {
                    "type": "link",
                    "url": "#usergetall",
                    "title": null,
                    "jsdoc": true,
                    "children": [
                      {
                        "type": "text",
                        "value": "user.getAll"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "value": " APIs."
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 8,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 9
            },
            {
              "title": "memberof",
              "description": "user",
              "lineNumber": 10
            },
            {
              "title": "method",
              "description": null,
              "lineNumber": 11,
              "name": "search"
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 12,
              "name": "advancedSearch"
            },
            {
              "title": "param",
              "description": "The filter options for the search.",
              "lineNumber": 13,
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "name": "filters"
            },
            {
              "title": "param",
              "description": "Matches the User ID of the user.",
              "lineNumber": 14,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "user.UserID"
                }
              },
              "name": "filters.userId"
            },
            {
              "title": "param",
              "description": "Matches the firstName or lastName.",
              "lineNumber": 15,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "filters.name"
            },
            {
              "title": "param",
              "description": "Matches the firstName.",
              "lineNumber": 16,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "filters.firstName"
            },
            {
              "title": "param",
              "description": "Matches the lastName.",
              "lineNumber": 17,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "filters.lastName"
            },
            {
              "title": "param",
              "description": "Matches the userName.",
              "lineNumber": 18,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "filters.userName"
            },
            {
              "title": "param",
              "description": "Matches the phoneNumber.",
              "lineNumber": 19,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "filters.phoneNumber"
            },
            {
              "title": "param",
              "description": "Sorting options.",
              "lineNumber": 20,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "name": "options"
            },
            {
              "title": "param",
              "description": "The User property to sort the results by. This can be any of the above listed filters.",
              "lineNumber": 21,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "options.sortBy"
            },
            {
              "title": "param",
              "description": "Order in which results are returned. Can be either \"asc\" or \"desc\".",
              "lineNumber": 22,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "options.order"
            },
            {
              "title": "param",
              "description": "The maximum number of results to return.",
              "lineNumber": 23,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "number"
                }
              },
              "name": "options.max"
            },
            {
              "title": "param",
              "description": "The pointer for a chunk of results, which may be returned from a previous query.",
              "lineNumber": 24,
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "string"
                }
              },
              "name": "options.next"
            }
          ],
          "loc": {
            "start": {
              "line": 152,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 178,
                "column": 4
              },
              "end": {
                "line": 181,
                "column": 5
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/users.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [
            {
              "title": "param",
              "name": "filters",
              "lineNumber": 13,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "The filter options for the search."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "NameExpression",
                "name": "Object"
              },
              "properties": [
                {
                  "title": "param",
                  "name": "filters.userId",
                  "lineNumber": 14,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Matches the User ID of the user."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "user.UserID"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "filters.name",
                  "lineNumber": 15,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Matches the firstName or lastName."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "filters.firstName",
                  "lineNumber": 16,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Matches the firstName."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "filters.lastName",
                  "lineNumber": 17,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Matches the lastName."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "filters.userName",
                  "lineNumber": 18,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Matches the userName."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "filters.phoneNumber",
                  "lineNumber": 19,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Matches the phoneNumber."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                }
              ]
            },
            {
              "title": "param",
              "name": "options",
              "lineNumber": 20,
              "description": {
                "type": "root",
                "children": [
                  {
                    "type": "paragraph",
                    "children": [
                      {
                        "type": "text",
                        "value": "Sorting options."
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "OptionalType",
                "expression": {
                  "type": "NameExpression",
                  "name": "Object"
                }
              },
              "properties": [
                {
                  "title": "param",
                  "name": "options.sortBy",
                  "lineNumber": 21,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The User property to sort the results by. This can be any of the above listed filters."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "options.order",
                  "lineNumber": 22,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "Order in which results are returned. Can be either \"asc\" or \"desc\"."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "options.max",
                  "lineNumber": 23,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The maximum number of results to return."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "number"
                    }
                  }
                },
                {
                  "title": "param",
                  "name": "options.next",
                  "lineNumber": 24,
                  "description": {
                    "type": "root",
                    "children": [
                      {
                        "type": "paragraph",
                        "children": [
                          {
                            "type": "text",
                            "value": "The pointer for a chunk of results, which may be returned from a previous query."
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "OptionalType",
                    "expression": {
                      "type": "NameExpression",
                      "name": "string"
                    }
                  }
                }
              ]
            }
          ],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "memberof": "user",
          "kind": "function",
          "name": "search",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "user",
              "kind": "namespace"
            },
            {
              "name": "search",
              "kind": "function",
              "scope": "static"
            }
          ],
          "namespace": "user.search"
        },
        {
          "description": {
            "type": "root",
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The ID of a User (e.g. joe@test.3s5j.att.com)"
                  }
                ]
              }
            ]
          },
          "tags": [
            {
              "title": "public",
              "description": null,
              "lineNumber": 2,
              "type": null
            },
            {
              "title": "static",
              "description": null,
              "lineNumber": 3
            },
            {
              "title": "typedef",
              "description": null,
              "lineNumber": 4,
              "type": {
                "type": "NameExpression",
                "name": "string"
              },
              "name": "UserID"
            },
            {
              "title": "memberof",
              "description": "user",
              "lineNumber": 5
            },
            {
              "title": "requires",
              "description": null,
              "lineNumber": 6,
              "name": "cpaas_user_id"
            }
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 3
            }
          },
          "context": {
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 58,
                "column": 0
              }
            },
            "file": "/var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/docs/docs.js"
          },
          "augments": [],
          "examples": [],
          "implements": [],
          "params": [],
          "properties": [],
          "returns": [],
          "sees": [],
          "throws": [],
          "todos": [],
          "yields": [],
          "access": "public",
          "scope": "static",
          "kind": "typedef",
          "name": "UserID",
          "type": {
            "type": "NameExpression",
            "name": "string"
          },
          "memberof": "user",
          "members": {
            "global": [],
            "inner": [],
            "instance": [],
            "events": [],
            "static": []
          },
          "path": [
            {
              "name": "user",
              "kind": "namespace"
            },
            {
              "name": "UserID",
              "kind": "typedef",
              "scope": "static"
            }
          ],
          "namespace": "user.UserID"
        }
      ]
    },
    "path": [
      {
        "name": "user",
        "kind": "namespace"
      }
    ],
    "namespace": "user"
  }
]