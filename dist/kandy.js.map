{"version":3,"sources":["webpack://Kandy/webpack/universalModuleDefinition","webpack://Kandy/webpack/bootstrap","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/core/dist/io-6de156f3.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/fp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/helpers/extends.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/is/dist/redux-saga-is.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/errors/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_core.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/utils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_export.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isFunction.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isSymbol.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isEmpty.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/toString.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isString.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/combineActions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/identity.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isNull.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/createAction.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isPlainObject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isArray.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isNil.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/getLastElement.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/camelCase.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/arrayToObject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isMap.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/ownKeys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/get.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/flattenWhenNode.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/flattenActionMap.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/unflattenActionCreators.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/createActions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/createCurriedAction.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/isUndefined.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/handleAction.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/reduce-reducers/es/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/hasGeneratorInterface.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/utils/flattenReducerMap.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/handleActions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-actions/es/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_global.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_wks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/promise.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_is-object.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_descriptors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/logs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/invariant/browser.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-dp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/json/stringify.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actions/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_an-object.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/node_modules/eventemitter3/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/actions/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/effects.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/core/node_modules/redux/es/redux.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/deferred/dist/redux-saga-deferred.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/core/dist/redux-saga-core.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-saga/dist/redux-saga-core-npm-proxy.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_ctx.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_hide.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_has.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/values.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/validation/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/sdp-transform/lib/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_fails.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-iobject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-object.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/map.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/mappings.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/actions/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_property-desc.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/array/from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/sdpUtils/sdpSemantics.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_a-function.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_cof.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_library.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-pie.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/helpers/objectWithoutProperties.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.string.iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iterators.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_set-to-string-tag.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_for-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/version.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/helpers/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/webrtc/midcall.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/rng.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/regex.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/validate.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/stringify.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v1.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/parse.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v35.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/md5.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v3.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v4.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/sha1.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/v5.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/nil.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/version.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/uuid/dist/esm-browser/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-length.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_uid.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/web.dom.iterable.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_meta.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/errors/codes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/utils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/sdpUtils/pipeline.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/sdp/pipeline.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@redux-saga/delay-p/dist/redux-saga-delay-p.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_dom-create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-primitive.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iobject.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_defined.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-integer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_shared-key.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_shared.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_enum-bug-keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gops.js","webpack://Kandy/(webpack)/buildin/global.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/is/object.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-define.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gpo.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_classof.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_an-instance.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_new-promise-capability.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_redefine-all.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-sap.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_wks-ext.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_wks-define.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/validation.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_validate-collection.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/utils/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/freeze.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/sdpUtils/handlers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/utils/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/helpers/handleRequestError.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/webrtc/establish.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/effects.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/actions/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/cpaas/constants.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/symbol-observable/es/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/to-camel-case/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_ie8-dom-define.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-keys-internal.js","webpack://Kandy/(webpack)/buildin/module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/compose/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/is/array.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/is/function.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_redefine.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-dps.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_html.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-step.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-call.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_is-array-iter.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/core.get-iterator-method.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_species-constructor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_task.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_perform.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_promise-resolve.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_set-species.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-detect.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-to-array.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/symbol.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_is-array.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gopn.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gopd.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/logFormatter.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/config.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_collection-strong.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_collection.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_collection-to-json.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_set-collection-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_set-collection-from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/actionTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/configs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/sdp-transform/lib/grammar.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/models/track.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/models/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/utils/iceCollectionScheduledCheck.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/sdpUtils/extractors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/actions/call.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/cpaas/requests/calls.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/utils/bandwidth.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/color-convert/conversions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/utils/dscp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/webrtc/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/entries.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/name.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/effects.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/cpaas/utils/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/sdp/compareMedia.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/requests.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/cpaas/requests/presence.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/utils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/actions/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/actions/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/cpaas/utils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux/es/redux.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@kandy-io/sdp-handlers/src/codecRemover.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@kandy-io/sdp-handlers/src/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/symbol-observable/es/ponyfill.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/just-curry-it/index.js","webpack://Kandy/./index.js","webpack://Kandy/../core/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/factory.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-includes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_to-absolute-index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-devtools-extension/index.js","webpack://Kandy/(webpack)/buildin/harmony-module.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/lodash.min.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/fp/_baseConvert.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/fp/_mapping.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/lodash/fp/placeholder.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/is/stamp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/is/composable.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/core/assign.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/core/merge.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/@stamp/is/plain-object.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/promise.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_string-at.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_iter-create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.array.iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_add-to-unscopables.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.promise.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_invoke.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_microtask.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_user-agent.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.promise.finally.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.promise.try.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/query-string/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/strict-uri-encode/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/decode-uri-component/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/split-on-first/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/filter-obj/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/logManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/values.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.object.values.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/symbol/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.symbol.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_enum-keys.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_object-gopn-ext.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.symbol.async-iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.symbol.observable.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/logger.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/timer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/logger/src/logHandler.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/actions/actionHandler.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/json/stringify.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/v8n/dist/v8n.esm.js","webpack://Kandy/../core/basePlugins.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/plugin.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/to-space-case/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/to-no-case/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-methods.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-species-create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-species-constructor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.set.to-json.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_array-from-iterable.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.set.of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.set.from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/actions/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/actions/transformers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/actions/utils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/redux-logger/dist/redux-logger.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/define-properties.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/define-properties.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.define-properties.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/array/from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.array.from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/_create-property.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/symbol/iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/symbol/iterator.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.create.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/logs/docs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/utils/defaults.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/sdp-transform/lib/parser.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/sdp-transform/lib/writer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/config/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/events/eventEmitter.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/cpaas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/name.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/auth/interface/actions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/jwt-decode/build/jwt-decode.esm.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/api/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actions/devices.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actions/tracks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actions/sessions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actions/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/actions/misc.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/reducers/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/reducers/devices.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/reducers/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/reducers/tracks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/reducers/sessions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/reducers/browser.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/events/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/events/devices.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/interface/events/tracks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/devices.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/trackManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/track.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/mediaManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/sessionManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/channels/session.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/sagas/media.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/webrtc/sagas/logs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/webrtc-adapter/out/adapter_no_edge.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/map.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.map.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.map.to-json.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.map.of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.map.from.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/reflect/set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/reflect/set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.reflect.set.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/icecandidate.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/iceconnectionstatechange.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/icegatheringstatechange.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/negotiationneeded.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/signalingstatechange.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/events/track.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/addIceCandidate.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/addTrack.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/close.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/createAnswer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/freeze.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.freeze.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/createOffer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/findReusableTransceiver.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/getState.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/getStats.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/removeTrack.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/replaceTrack.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/sendDTMF.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/setLocalDescription.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/setRemoteDescription.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/methods/setTransceiversDirection.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/sdpUtils/transceiverUtils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/localDescription.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/localTracks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/remoteDescription.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/remoteTracksActive.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/remoteTracks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/properties/senderTracks.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/config.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/Peer/utils/timer.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/managers/mediaManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/managers/peerManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/managers/sessionManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/models/session.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/managers/deviceManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/managers/trackManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/webrtc/src/managers/webrtcManager.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/cpaas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/api/call.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/actions/turn.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/utils/normalization.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/reducers/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/reducers/call.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/utils.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/reducers/turn.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/cpaas/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/cpaas/sagas/subscriptions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/cpaas/requests/subscriptions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/cpaas/sagas/support.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/call/establish.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/variable-diff/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/variable-diff/node_modules/chalk/source/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/ansi-styles/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/color-convert/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/color-name/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/color-convert/route.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/variable-diff/node_modules/supports-color/browser.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/variable-diff/node_modules/chalk/source/util.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/variable-diff/node_modules/chalk/source/templates.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/entries.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es7.object.entries.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/call/midcall.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/webrtc/rollback.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/sdkId.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/call/notifications.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/call/negotiation.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/sdp/operations.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/utils/sdp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/utils/state.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/webrtc/negotiation.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/utils/sdp.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/call/dtmf.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/call/support.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/callstack/webrtc/codecs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/call/interfaceNew/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/cpaas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/common/base.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/common/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/connectivity/common/websocket.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/actions/messages.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/actions/conversations.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/mixins.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/babel-runtime/core-js/object/get-prototype-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/fn/object/get-prototype-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/node_modules/core-js/library/modules/es6.object.get-prototype-of.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/sagas/messaging.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/sagas/subscriptions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/messaging/cpaas/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/cpaas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/cpaas/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/notifications/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/cpaas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/cpaas/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/cpaas/sagas/subscriptions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/cpaas/requests/subscriptions.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/cpaas/sagas/presence.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/presence/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/cpaas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/selectors.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/cpaas/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/cpaas/sagas/groups.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/cpaas/requests/groups.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/groups/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/cpaas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/reducers.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/name.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/cpaas/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/cpaas/sagas/channels.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/subscription/cpaas/requests.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/effects/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/common/effects/waitFor.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/cpaas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/api/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/reducers/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/reducers/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/reducers/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/cpaas/sagas/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/cpaas/sagas/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/cpaas/requests/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/cpaas/sagas/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/cpaas/requests/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/contacts.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/users/interface/events/users.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/configs.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/sagas.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/makeRequest.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/authorization.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/events.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/eventTypes.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/index.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/name.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/request/interface/api.js","webpack://Kandy//var/jenkins_home/workspace/Kandy.js_beta/packages/kandy/src/docs/docs.js"],"names":["API_LOG_TAG","manager","defaultOptions","logManager","authCodes","callCodes","callHistoryCodes","groupsCodes","messagingCodes","mwiCodes","sipEventCodes","clickToCallCodes","bridgeCodes","subscriptionCodes","presenceCodes","usersCodes","webrtcCodes","BasicError","constructor","message","code","name","platforms","LINK","UC","CPAAS","notificationTypes","WEBSOCKET","PUSH","connCheckResponsibility","CLIENT","SERVER","connCheckMethods","KEEP_ALIVE","PING_PONG","getAuthConfig","getSubscriptionInfo","getConnectionInfo","getDomain","getIdentity","getUserInfo","getAuthScenario","getServices","getPlatform","getRequestInfo","state","config","authentication","platform","subscription","undefined","connection","username","identity","domain","split","userInfo","isSSO","servicesInfo","requested","received","missing","status","SUBSCRIPTION_STATE","NONE","services","clientCorrelator","server","protocol","base","port","version","requestInfo","baseURL","token","accessToken","options","headers","Accept","Authorization","setPlatform","connInfo","requestOptions","mergeValues","toQueryString","autoRestart","forwardAction","normalizeServices","defer","objects","leftValue","rightValue","params","length","stringifiedParams","paramParser","stringify","saga","autoRestarting","args","shouldRestart","e","console","log","action","map","service","hasOwnProperty","d","promise","resolve","reject","prefix","DEVICES_CHANGE","INITIALIZE_DEVICES","INITIALIZE_DEVICES_FINISH","trackPrefix","TRACK_ADDED","TRACK_REMOVED","RENDER_TRACKS","RENDER_TRACKS_FINISH","REMOVE_TRACKS","REMOVE_TRACKS_FINISH","MUTE_TRACKS","MUTE_TRACKS_FINISH","UNMUTE_TRACKS","UNMUTE_TRACKS_FINISH","TRACK_SOURCE_MUTED","TRACK_SOURCE_UNMUTED","sessionPrefix","SESSION_ADDED","SESSION_REMOVED","SESSION_NEW_TRACK","SESSION_TRACK_REMOVED","SESSION_TRACK_ENDED","SESSION_CHANGE","SESSION_TRACK_REPLACED","SESSION_ICE_CONNECTION_STATE_CHANGE","SESSION_ICE_GATHERING_STATE_CHANGE","SESSION_ICE_CANDIDATE_COLLECTED","SESSION_ICE_COLLECTION_SCHEDULED_CHECK","mediaPrefix","MEDIA_NEW","MEDIA_REMOVED","MEDIA_CHANGE","MEDIA_NEW_TRACK","MEDIA_TRACK_REMOVED","MEDIA_TRACK_ENDED","SET_BROWSER_DETAILS","mapEvents","on","off","subscribe","unsubscribe","emitEvent","aliasEvent","actionTypes","mapping","type","MAP_EVENTS","payload","listener","EVENTS_ON","eventType","EVENTS_OFF","EVENTS_SUBSCRIBE","EVENTS_UNSUBSCRIBE","Error","EVENTS_EMIT","alias","EVENTS_ALIAS","getCalls","getActiveCalls","getCallById","getCallByWrtcsSessionId","getCallByWebrtcSessionId","getOptions","getTurnInfo","addTracksToCall","callState","session","webrtcSessionId","localTracks","remoteTracks","call","calls","endedStates","CALL_STATES","ENDED","CANCELLED","filter","includes","callId","find","id","wrtcsSessionId","turn","mapValuesToKeys","source","value","FCS_CALL_STATES","CALL_STATES_FCS","INITIATING","INITIATED","EARLY_MEDIA","RINGING","CONNECTED","ON_HOLD","CALL_MEDIA_STATES","LOCAL_HOLD","REMOTE_HOLD","DUAL_HOLD","CALL_MEDIA_CONNECTION_STATES","NEW","CHECKING","COMPLETED","FAILED","DISCONNECTED","CLOSED","OPERATIONS","CHANGE_MEDIA","HOLD_MEDIA","UNHOLD_MEDIA","MUSIC_ON_HOLD","COMPLEX_OPERATIONS","DIRECT_TRANSFER","CONSULTATIVE_TRANSFER","JOIN","COMPLEX_OPERATION_MESSAGES","DIRECT_TRANSFER_SUCCESS","CONSULTATIVE_TRANSFER_SUCCESS","JOIN_SUCCESS","DIRECT_TRANSFER_FAILURE","CONSULTATIVE_TRANSFER_FAILURE","JOIN_FAILURE","STATUS_CODES","CALL_DIRECTION","INCOMING","OUTGOING","WEBRTC_DEVICE_KINDS","audioinput","videoinput","audiooutput","FCS_ICE_MEDIA_STATES","ICE_MEDIA_STATES","ICE_COLLECTION_RESULT_TYPES","START_CALL","WAIT","ERROR","level","deviceActionsImport","trackActionsImport","sessionActionsImport","mediaActionsImport","miscActionsImport","deviceActions","trackActions","sessionActions","mediaActions","miscActions","update","setSdpHandlers","values","pluginName","CONFIG_UPDATE","sdpHandlers","removeH264Codecs","push","sanitizeSdesFromSdp","modifySdpBandwidth","SET_SDP_HANDLERS","PEER","TRICKLE_ICE","FULL","HALF","ICE_GATHERING_STATE","GATHERING","COMPLETE","ENDPOINT","LOCAL","REMOTE","SDP_SEMANTICS","PLAN_B","UNIFIED_PLAN","MEDIA_DIR","INACTIVE","SEND_ONLY","RECV_ONLY","SEND_RECV","ICE_COLLECTION_CHECK_REASONS","ICE_GATHERING_STATE_CHANGE","NEW_CANDIDATE","SCHEDULED","callActionsImport","turnActionsImport","callActions","turnActions","request","requestSaga","actions","commonOptions","manualOptions","getCommonOptions","url","requestAction","responseAction","RESPONSE","meta","requestId","getSubscriptionConfig","getRegisteredServices","getNotificationChannels","getSubscribedServices","getSubscriptions","getSubscriptionExpiry","getWebsocketConfig","registeredServices","notificationChannels","subscriptions","info","Array","isArray","channelType","reduce","acc","currentSub","concat","subConfig","authConfig","expires","websocket","v8n","extend","function","validation","enums","v8nExact","exact","exactValues","passesAnyOf","errorMessages","v8nRule","input","validationErrorMessages","validationResults","testAll","parse","errors","getLogger","prettyPrint","validationError","startingPath","validationErrorMessageHelper","cause","rule","target","path","newVEM","ruleMessage","enumName","join","aOrAn","arg","chain","__","string","test","callPrefix","MAKE_CALL","PENDING_MAKE_CALL","SESSION_CREATED","MAKE_CALL_FINISH","MAKE_ANONYMOUS_CALL","MAKE_ANONYMOUS_CALL_FINISH","CALL_INCOMING","SEND_RINGING_FEEDBACK","SEND_RINGING_FEEDBACK_FINISH","CALL_RINGING","SESSION_PROGRESS","CALL_CANCELLED","ANSWER_CALL","ANSWER_CALL_FINISH","REJECT_CALL","REJECT_CALL_FINISH","IGNORE_CALL","IGNORE_CALL_FINISH","CALL_ACCEPTED","END_CALL","END_CALL_FINISH","FORWARD_CALL","FORWARD_CALL_FINISH","PENDING_OPERATION","UPDATE_CALL","CALL_HOLD","CALL_HOLD_FINISH","CALL_UNHOLD","CALL_UNHOLD_FINISH","SET_CUSTOM_PARAMETERS","SEND_CUSTOM_PARAMETERS","SEND_CUSTOM_PARAMETERS_FINISH","ADD_MEDIA","ADD_MEDIA_FINISH","ADD_BASIC_MEDIA","REMOVE_MEDIA","REMOVE_MEDIA_FINISH","REMOVE_BASIC_MEDIA","RENEGOTIATE","RENEGOTIATE_FINISH","SEND_DTMF","SEND_DTMF_FINISH","GET_STATS","GET_STATS_FINISH","PENDING_CONSULTATIVE_TRANSFER","CONSULTATIVE_TRANSFER_FINISH","DIRECT_TRANSFER_FINISH","JOIN_START","PENDING_JOIN","JOIN_FINISH","REPLACE_TRACK","REPLACE_TRACK_FINISH","MEDIA_RESTART","MEDIA_RESTART_FINISH","CUSTOM_PARAMETERS_RECEIVED","GET_AVAILABLE_CODECS","AVAILABLE_CODECS_RETRIEVED","CALL_REMOTE_HOLD_FINISH","CALL_REMOTE_UNHOLD_FINISH","REMOTE_ADD_MEDIA_FINISH","REMOTE_REMOVE_MEDIA_FINISH","REMOTE_START_MOH_FINISH","REMOTE_STOP_MOH_FINISH","REMOTE_SLOW_START","turnPrefix","TURN_CHANGED","PROCESS_NOTIFICATION","PROCESS_NOTIFICATION_FINISH","NOTIFICATION_RECEIVED","ENABLE_NOTIFICATION_CHANNEL","ENABLE_NOTIFICATION_CHANNEL_FINISH","REGISTER_APPLE_PUSH_NOTIFICATION","REGISTER_ANDROID_PUSH_NOTIFICATION","UNREGISTER_APPLE_PUSH_NOTIFICATION","UNREGISTER_ANDROID_PUSH_NOTIFICATION","subscribeFinished","unsubscribeFinished","resubscribeFinished","registerService","doPluginSubscriptions","reportSubscriptionFinished","doPluginUnsubscriptions","reportUnsubscriptionFinished","channelOpened","channelClosed","actionFormatter","actionType","error","SUBSCRIBE","SUBSCRIBE_FINISHED","UNSUBSCRIBE","reason","retryAfter","UNSUBSCRIBE_FINISHED","attemptNum","RESUBSCRIPTION_FINISHED","REGISTER_SUB_SERVICE","PLUGIN_SUBSCRIPTION","subscriptionId","resourceURL","PLUGIN_SUBSCRIPTION_FINISHED","PLUGIN_UNSUBSCRIPTION","PLUGIN_UNSUBSCRIPTION_FINISHED","channelInfo","CHANNEL_OPENED","CHANNEL_CLOSED","WS_ATTEMPT_CONNECT","WS_CONNECT_FINISHED","WS_DISCONNECT","WS_DISCONNECT_FINISHED","WS_RECONNECT_FAILED","WS_CLOSED","WS_ERROR","LOST_CONNECTION","RECEIVE_SERVER_PING","RECEIVE_SERVER_PONG","CHANGE_CONNECTIVITY_CHECKING","CHANGE_PING_INTERVAL","DeliveryStatuses","DeliveredToNetwork","DeliveredToTerminal","DeliveryImpossible","Unknown","chatTypes","SMS","ONETOONE","GROUP","chatTypeAliases","sms","im","group","ADD_CONTACT","ADD_CONTACT_FINISH","REFRESH_CONTACTS","REFRESH_CONTACTS_FINISH","REMOVE_CONTACT","REMOVE_CONTACT_FINISH","UPDATE_CONTACT","UPDATE_CONTACT_FINISH","FETCH_CONTACT","FETCH_CONTACT_FINISH","FETCH_USER","FETCH_USER_FINISH","FETCH_SELF_INFO","FETCH_SELF_INFO_FINISH","SEARCH_DIRECTORY","SEARCH_DIRECTORY_FINISH","isUnifiedPlan","getSdpSemanticsList","sdpSemantics","getVersion","logLevels","TRACE","DEBUG","INFO","WARN","SILENT","levelValues","logMethods","trace","debug","warn","groupEnd","groupCollapsed","timeLevel","MAKE","ANSWER","REJECT","IGNORE","END","HOLD","UNHOLD","START_MOH","STOP_MOH","SLOW_START","ENDPOINTS","OP_STATUS","ONGOING","PENDING","OP_TRANSITIONS","START","UPDATE","FINISH","NO_FINISH_OPS","handleRequestError","recreatePeer","closeCall","handleOffer","generateOffer","webRtcAddMedia","webRtcRemoveMedia","webRtcReplaceTrack","mediaOps","webRTC","sessionId","sessionManager","track","deps","offer","bandwidth","callConfigOptions","runPipeline","step","endpoint","answer","sdp","GENERIC_ERROR","answerSDP","newSdp","mediaDirections","mediaConstraints","sessionOptions","medias","createLocal","dscpControls","screenTracks","audioTracks","videoTracks","allTracks","eachMedia","tracks","media","dscpTrackMapping","mediaStates","mediaState","localTracksToRemove","invalidIndexes","cur","ind","invalidTracks","INVALID_PARAM","trackId","noOfTruthyTrackTypes","newTrackKind","forEach","key","newTrackId","oldTrack","oldTrackState","oldTrackKind","kind","compatibleTrackKinds","newMedias","createLocalError","allNewTracks","newTracks","newTrack","USER_MEDIA_ERROR","replaceTrackError","getConnectionState","getConnectivityConfig","getPingInterval","getCheckConnectivity","pingInterval","checkConnectivity","PREFIX","CREATE_CONVERSATION","SEND_MESSAGE","SEND_MESSAGE_FINISH","MESSAGE_RECEIVED","INCOMING_MESSAGE_READ","SEND_MESSAGE_READ","SEND_MESSAGE_READ_FINISH","CLEAR_MESSAGES","CLEAR_MESSAGES_FINISH","DELETE_CONVERSATION","DELETE_CONVERSATION_FINISH","DELETE_MESSAGE","DELETE_MESSAGE_FINISH","FETCH_CONVERSATIONS","FETCH_CONVERSATIONS_FINISHED","UPDATE_CONVERSATION","FETCH_MESSAGES","FETCH_MESSAGES_FINISHED","RECEIVE_DELIVERY_RECEIPT","FILE_UPLOAD_FAIL","SET_IS_TYPING","SET_IS_TYPING_FINISHED","GET_IMAGE_LINKS","GET_IMAGE_LINKS_FINISH","createManager","levelImport","logFormatter","defaultLogFormatter","SET_LEVEL","LEVELS_CHANGE","SET_HANDLER","HANDLERS_CHANGE","PARTIAL","DISCONNECT_REASONS","GONE","getDevices","getSessions","getSessionById","getTracks","getTrackById","getMedia","getMediaById","getBrowserDetails","webrtc","devices","sessions","mediaId","browser","INVALID_CREDENTIALS","CONNECT_FAIL_WS_ERROR","LINK_UNSUBSCRIBE_FAIL","LINK_SUBSCRIBE_FAIL","LINK_EXTEND_SUBSCRIPTION_FAIL","LINK_UPDATE_SUBSCRIPTION_FAIL","UC_SUBSCRIBE_FAIL","UC_REFRESH_TOKEN_FAIL","UC_CREATE_TOKEN_FAIL","UC_EXTEND_SUBSCRIPTION_FAIL","UC_DISCONNECT_FAIL","MISSING_SERVICE","UNKNOWN_ERROR","INIT_MEDIA_FAILED","NOT_SUPPORTED","INVALID_STATE","STATE_DESYNC","INVALID_OFFER","NO_ICE_CANDIDATES","SESSION_MISMATCH","BAD_REQUEST","NOT_FOUND","NOT_AUTHENTICATED","FORBIDDEN","MISSING_ARGS","RESPONSE_ERROR","MISSING_PARAMETERS","CREATE_GROUP_FAIL","MARK_READ_FAIL","REMOVE_MEMBERS_FAIL","ADD_MEMBERS_FAIL","SEND_MESSAGE_FAIL","FETCH_MESSAGES_FAIL","FETCH_CONVERSATIONS_FAIL","INVALID_DESTINATION","INVALID_FILE_PARTS","SET_IS_TYPING_FAIL","FETCH_MWI_FAIL","NOT_PROVISIONED","NOT_SUBSCRIBED","INVALID_INPUT","ALREADY_EXISTS","MEDIA_NOT_FOUND","WS_CONNECTION_ERROR","CPAAS_WSREQUEST_FAIL","CPAAS_WSREVOKE_FAIL","CPAAS_WSREFRESH_FAIL","CPAAS_SERVICE_SUB_FAIL","CPAAS_SERVICE_UNSUB_FAIL","CPAAS_UNSUBSCRIBE_FAIL","INVALID_STATUS","INVALID_ACTIVITY","UNKNOWN","REFRESH_CONTACTS_FAIL","DIRECTORY_REQUEST_FAIL","makeSafeForCSS","replace","adapter","browserDetails","handlers","objectSdp","sdpTransform","originalSdp","handler","write","createPipeline","defaultHandlers","run","setHandlers","getHandlers","REQUEST","AUTHORIZATION_ERROR","logLevel","getLevel","isDebug","pipelineFunc","runPipelineYaml","runPipelineDefault","formattedFunctionName","diffed","oldNewSdp","results","diff","text","yamlFormat","sdpToYaml","finalDiffObject","displayBandwidth","displaySdp","fourSpaces","displayHandlers","displayDiffs","sixSpaces","changed","indentation","trimEnd","handlerToYaml","eightSpaces","toString","slice","createWsAction","isReconnect","wsAttemptConnect","wsDisconnect","wsConnectFinished","wsDisconnectFinished","wsReconnectFailed","wsClosed","wsError","lostConnection","receiveServerPing","receiveServerPong","changeConnectivityChecking","changePingInterval","getMessagingConfig","getConversations","getMessages","findConversation","findMember","messaging","conversations","conversationId","messages","destination","conversation","conv","members","member","UPDATE_FINISH","GET","GET_FINISH","SUBSCRIBE_FINISH","UNSUBSCRIBE_FINISH","RECEIVED","CREATE_PRESENCE_LIST","CREATE_PRESENCE_LIST_FINISH","DELETE_PRESENCE_LIST","GET_PRESENCE_LIST","ADD_PARTICIPANT","ADD_PARTICIPANT_FINISH","REMOVE_PARTICIPANT","REMOVE_PARTICIPANT_FINISH","DELETE_GROUP","DELETE_GROUP_FINISH","FETCH_GROUPS","FETCH_GROUPS_FINISH","CREATE_GROUP","CREATE_GROUP_FINISH","LEAVE_GROUP","LEAVE_GROUP_FINISH","ACCEPT_INVITATION","ACCEPT_INVITATION_FINISH","REJECT_INVITATION","REJECT_INVITATION_FINISH","INVITATION_RECEIVED","STATUS_NOTIFICATION_RECEIVED","EVENT_NOTIFICATION_RECEIVED","checkLevel","checkHandler","upperLevel","toUpperCase","setLevel","levelsChanged","setHandler","handlersChanged","levelMap","handlerMap","changeDtlsRoleTo","generateEndParams","mLine","crypto","fingerprint","role","changeDtlsRole","original","setup","generateBandwidthConfigs","limit","audio","video","currentCallState","isLocal","endParams","remoteParticipant","displayNumber","remoteNumber","displayName","remoteName","transition","prevState","statusCode","reasonText","CONNECT","SET_CONNECTION_INFO","CONNECTION_OCCURRED","CONNECT_FINISHED","GET_USER_DETAILS","USER_DETAILS_RECEIVED","DISCONNECT","DISCONNECT_FINISHED","REFRESH_TOKENS","REFRESH_TOKENS_FINISHED","UPDATE_SUBSCRIPTION","UPDATE_SUBSCRIPTION_FINISH","SET_TOKEN","SET_CREDENTIALS","SET_CREDENTIALS_FINISH","UPDATE_HMAC_TOKEN","removeTrickleIce","removeBundling","changeMediaDirection","preventDtlsRoleChange","iceOptions","groups","isValid","direction","dtlsRole","getCpaasAgentHeaderValue","sanitizeRequest","fetchResource","useCustomHeader","injectAgentVersionHeader","customSuffix","customAgentVersionHeaderSuffix","headerValue","logOptions","authHeader","substring","body","JSON","resource","module","charAt","queryParams","queryString","response","fetch","operation","result","requestError","serviceException","policyException","exception","formatString","variables","messageId","_","m","setupCall","setupIncomingCall","answerWebrtcSession","defaultPeerConfig","turnInfo","trickleIceMode","peer","rtcConfig","iceServers","servers","sessionCreated","offerSdp","mediaIds","hasNoCandidates","every","candidates","parsedSdp","subscribeSaga","unsubscribeSaga","serviceSubscribePattern","some","serviceConfig","serviceUnsubscribePattern","indexOf","extractConfigAndSubscribe","websocketNotification","externalNotification","notificationReceived","processNotificationFinish","enableNotificationChannel","registerApplePushNotification","registerAndroidPushNotification","unregisterApplePushNotification","unregisterAndroidPushNotification","enableNotificationChannelFinish","notificationHelper","channel","notification","deferred","pushProvider","registration","channelEnabled","messageActionsImport","convoActionsImport","messageActions","convoActions","STATUS","OPEN","ACTIVITY","AVAILABLE","BUSY","LUNCH","VACATION","ON_THE_PHONE","ACTIVITIES_UNKNOWN","ACTIVITIES_OTHER","entry","timestamp","shortId","shortName","logInfo","enableFcsLogs","logActions","partialDefaultLogActions","defaultActionHandler","actionOnly","collapsed","exposePayloads","getTypes","clonedState","logs","parseConfigs","mergeDefaults","iceCollectionIdealTimeout","iceCollectionMaxTimeout","serverTurnCredentials","earlyMedia","resyncOnConnect","mediaBrokerOnly","normalizeDestination","ringingFeedbackMode","callAuditTimer","mediaConnectionRetryDelay","v8nValidation","schema","array","iceCandidatePoolSize","optional","positive","iceTransportPolicy","bundlePolicy","certificates","peerIdentity","rtcpMuxPolicy","iceCollectionCheckFunction","boolean","parseOptions","majorVersion","iceserver","iceServer","urls","iceCollectionDelay","maxIceTimeout","DEVICES_CHANGED","INITIALIZE_DEVICES_ERROR","TRACKS_MUTED","TRACKS_UNMUTED","TRACK_RENDERED","getWebRTCSupportCapabilities","initialize","mediaDevices","Boolean","navigator","peerConnection","window","RTCPeerConnection","deviceManager","DeviceManager","trackManager","TrackManager","mediaManager","MediaManager","peerManager","PeerManager","SessionManager","webrtcManager","WebRTCManager","models","Track","Media","Peer","managers","pipeline","sdpPipeline","mediaTrack","mediaStream","stream","isLocalTrack","containers","constraints","emitter","EventEmitter","onended","event","emit","performRenegotiation","onmute","onunmute","setIsLocal","setStream","newStream","getStream","getState","streamId","label","muted","enabled","readyState","element","renderIn","container","speakerId","document","querySelector","renderer","createElement","style","height","width","srcObject","src","URL","createObjectURL","autoplay","playsInline","play","catch","err","setSinkId","then","appendChild","removeFrom","index","splice","rendererId","removeChild","moveTo","i","cleanup","stop","mute","unmute","getConstraints","setConstraints","constr","getContainers","once","nativeStream","onremovetrack","delete","addTrack","has","set","removedTrack","removeTrack","wrappedTrack","getTrack","get","defaults","iceTimer","nativePeer","googDscp","customMethods","methods","bind","proxyPeer","iceCandidates","iceLoop","Proxy","prop","receiver","properties","events","eventName","iceCollectionScheduledCheck","proxyBase","elapsedTime","timeFromStart","iceCollectionDuration","iceGatheringState","rtcPeerConnectionConfig","rtcLocalSessionDescription","localDescription","getSdpSessionId","oLine","match","callActionHelper","makeCall","pendingMakeCall","makeCallFinish","makeAnonymousCall","makeAnonymousCallFinish","callIncoming","sendRingingFeedback","sendRingingFeedbackFinish","callRinging","sessionProgress","callCancelled","answerCall","answerCallFinish","rejectCall","rejectCallFinish","callAccepted","ignoreCall","ignoreCallFinish","endCall","endCallFinish","holdCall","holdCallFinish","unholdCall","unholdCallFinish","setCustomParameters","sendCustomParameters","sendCustomParametersFinish","customParametersReceived","addMedia","addMediaFinish","addBasicMedia","removeMedia","removeMediaFinish","removeBasicMedia","renegotiate","renegotiateFinish","sendDTMF","sendDTMFFinish","getStats","getStatsFinish","forwardCall","forwardCallFinish","consultativeTransfer","pendingConsultativeTransfer","consultativeTransferFinish","directTransfer","directTransferFinish","joinStart","pendingJoin","joinFinish","replaceTrack","replaceTrackFinish","pendingOperation","getAvailableCodecs","availableCodecsRetrieved","remoteHoldFinish","remoteUnholdFinish","remoteAddMediaFinish","remoteRemoveMediaFinish","remoteStartMohFinish","remoteStopMohFinish","remoteSlowStart","restartMedia","restartMediaFinish","updateCall","callee","credentials","callOptions","customOptions","customParameters","customBodies","authorizationError","nextRequestId","generateRequestId","createSession","answerSession","forwardSession","directTransferSession","consultativeTransferSessions","fetchCredentials","updateSession","updateSessionStatus","endSession","rejectSession","callInfo","requestBody","wrtcsSession","tParticipantAddress","participantAddress","tParticipantName","method","sessionInfo","wrtcsAnswer","wrtcsForward","address","wrtcsTransfer","otherWrtcsSessionId","wrtcsTurnCredentials","wrtcsOffer","wrtcsSessionStatus","statusVal","responseType","checkBandwidthControls","bandwidthControls","finalBandwidthControls","getTrackDscpMapping","screenNetworkPriority","screenTrack","audioNetworkPriority","audioTrack","videoNetworkPriority","videoTrack","screenShare","screenShareConstraints","screenShareMedia","audioConstraints","audioMedia","videoConstraints","videoMedia","errMessage","constraint","connectWebsocket","disconnectWebsocket","waitForReconnect","websocketInfo","timeout","connected","isConnected","reconnected","disconnected","getSessionInfoByCallId","validateCallState","targetCall","expected","isSubsetOf","whole","differences","enumerateDiffs","item","bad","good","compareMedia","summarizeMedia","matchMedias","naiveMatchMedias","compareSummary","MEDIA_TRANSITIONS","STOP","SAME","prevSdpString","sdpString","isNaive","prevSdp","prevMedia","currMedia","sortedMedia","removed","prevUnmatched","added","currUnmatched","unchanged","matched","previous","current","changes","sending","receiving","sdpMedia","sectionId","mid","ssrcGroups","mediaDirection","willSend","willReceive","msid","ssrcs","ssrc","attribute","summary","prevList","currList","prev","curr","findMatchingSectionId","prevM","mediaList","findIndex","findMatchingMediaIds","currIndex","currM","longerLength","change","CONVERSATIONS_NEW","CONVERSATIONS_CHANGE","MESSAGES_CHANGE","MESSAGES_ERROR","IS_TYPING_LIST_CHANGE","setIsTypingRequest","uploadFile","sendChatMessageRequest","sendGroupChatMessageRequest","deleteChatConversationRequest","deleteChatMessageRequest","chatSubscribe","chatUnsubscribe","sendSMSRequest","smsInboundSubscribe","smsInboundUnsubscribe","smsOutboundSubscribe","smsOutboundUnsubscribe","fetchConversationsRequest","fetchSmsConversationsRequest","fetchMessagesRequest","fetchSmsMessagesRequest","fetchImageLinks","_marshalData","attributes","accum","refresh","isComposing","contenttype","lastactive","Date","now","file","formData","FormData","reqInfo","placeholderData","object","flags","flag","append","responseData","attachment","textParts","fileParts","chatMessage","senderAddress","legitError","chatNotificationSubscription","callbackReference","notifyURL","callbackURL","subInfo","outboundSMSMessageRequest","outboundSMSTextMessage","destinationAddress","deliveryReceiptSubscription","chatSession","chatSessionList","smsThreadList","smsThread","chatMessageList","smsMessageList","FETCH_IMAGE_LINKS_FAIL","blob","updatePresence","updatePresenceFinish","getPresence","getPresenceFinish","subscribePresence","subscribePresenceFinish","unsubscribePresence","unsubscribePresenceFinish","createPresenceList","deletePresenceList","getPresenceList","createListFinish","presenceReceived","activity","note","users","presentityUserId","presenceListId","presence","getAllPresence","getSelfPresence","user","userId","self","publish","createList","deleteList","getList","getPresenceLists","retrievePresence","addUser","removeUser","presenceSource","person","overridingWillingnessValue","activities","activityValue","other","presenceList","presenceContact","presenceListCollection","adhocPresenceList","fetchGroups","fetchGroupsFinish","create","createFinish","leave","leaveGroupFinish","acceptInvitation","acceptInvitationFinish","rejectInvitation","rejectInvitationFinish","addParticipant","addParticipantFinish","removeParticipant","removeParticipantFinish","deleteGroup","deleteGroupFinish","invitationReceived","statusNotificationReceived","eventNotificationReceived","groupId","participant","invitation","remapParticipants","marshallGroup","participants","remappedParticipant","isAdmin","groupNotification","image","subject","lastIndexOf","fetchSelfInfo","fetchSelfInfoFinish","fetchUser","fetchUserFinish","searchDirectory","searchDirectoryFinish","filters","getContacts","getContact","getUsers","getUser","contacts","allUsers","refreshContacts","refreshContactsFinish","addContact","addContactFinish","fetchContact","fetchContactFinish","removeContact","removeContactFinish","updateContact","updateContactFinish","contact","contactId","localContactFromRemote","remoteContactFromLocal","localUserFromRemote","formattedContact","attributeList","newContact","omittedKeys","contactData","String","data","primaryContact","CONTACTS_NEW","CONTACTS_ERROR","CONTACTS_CHANGE","DIRECTORY_CHANGE","DIRECTORY_ERROR","USERS_CHANGE","USERS_ERROR","defaultPlugins","basePlugins","fn","auth","connectivity","notifications","cpaasRequest","root","plugins","createCodecRemover","exports","commonIndex","noConflict","factory","factoryDefaults","enableReduxDevTools","reduxDevToolsName","allowProxy","pluginFactories","sdkOptions","clonedOptions","common","pluginOptions","sagas","store","middlewares","apis","reducers","initSagas","taskDescriptor","shared","context","capabilities","api","primitives","destroyedSDK","dispatch","loggerMiddleware","destroyedSDKMiddleware","next","plugin","reducer","middleware","init","mixins","baseStamp","propertyDescriptors","objName","rootSaga","composeMiddleware","composeWithoutDevTools","sagaMiddleware","apiFactory","publicAPI","getCapabilities","destroy","_destroy","cancel","destroyStateReducer","replaceReducer","immediately","setTimeout","defaultType","loggers","settings","defaultLogHandler","loggerName","logger","getHandler","getLoggers","createLogger","logFunc","injectables","shouldLog","timeLog","timer","timeWarn","createTimer","timers","time","start","timeEnd","elapsed","end","formattedString","tail","styleLog","logType","logPlugin","Object","webRTCLogManager","components","setLevelEntry","setHandlerEntry","levels","setLogLevel","setLogHandler","getLevelMap","getHandlerMap","types","createActionLogger","actionOptions","nextState","excludeActions","predicate","titleFormatter","colors","transformers","setupTransformers","actionPipeline","transformer","actionTransformers","removePayloads","passwordHider","actionTransformer","isSensitive","isSafe","took","parts","toFixed","t","super_","prototype","enumerable","writable","configurable","r","defineProperty","n","o","a","f","apply","u","N","Math","l","c","s","p","g","prefilter","normalize","h","y","v","b","lhs","rhs","w","x","S","isNaN","F","color","P","duration","started","startedTime","k","j","D","E","title","A","O","C","L","T","M","arguments","stateTransformer","errorTransformer","logErrors","diffPredicate","getHours","getMinutes","getSeconds","getMilliseconds","performance","global","DeepDiff","observableDiff","applyDiff","applyChange","revertChange","isConflict","default","configImplementation","pluginInterface","configApi","getConfig","updateConfig","newConfigValues","configs","getConfiguration","getDefaultCollectionFunction","idealCollectionTimeout","maxCollectionTimeout","iceCollectionInfo","totalTurnServers","configuredIceServers","startsWith","relayCandidates","candidate","component","readyToStart","sectionRelays","parseInt","sdpMid","wait","eventsImplementation","eventMap","mapper","eventReducer","aliases","count","eventEmitter","subscribeMap","strictMode","checkEvent","define","list","setStrictMode","strict","authCpaas","eventsMap","eventTypes","authChangedEvent","AUTH_ERROR","AUTH_CHANGE","discEvent","forced","resubEvent","AUTH_RESUB","isFailure","AUTH_CREDENTIALS_SET","isPending","throw","refreshToken","idTokenPayload","idToken","preferred_username","_removed","removeXtoken","connect","disconnect","updateToken","refreshTokens","updateConnection","updateSubscription","getConnection","subscriptionStates","disconnectReasons","setTokens","jwt","setCredentials","password","authname","hmacToken","bearerAccessToken","setConnectionInfo","connectionOccurred","connectFinished","getUserDetails","userDetailsReceived","disconnectFinished","refreshTokensFinished","updateSubscriptionFinished","setCredentialsFinished","updateHmacToken","userDetailsResponse","firstName","user_first_name","lastName","user_last_name","photoURL","emailAddress","user_email","initializeStack","webRtcPlugin","wrappedSagas","watchManagers","details","setBrowserDetails","mediaAPI","getById","initializeDevices","browserConstraints","initializeDevice","renderTracks","trackIds","cssSelector","selector","removeTracks","muteTracks","unmuteTracks","devicesChanged","initializeDeviceFinish","trackAdded","trackRemoved","muteTracksFinish","unmuteTracksFinish","trackSourceMuted","trackSourceUnmuted","renderTracksFinish","removeTracksFinish","trackManagerHelper","trackHelper","sessionAdded","sessionRemoved","sessionNewTrack","sessionTrackRemoved","sessionTrackEnded","sessionChange","sessionTrackReplaced","sessionIceConnectionStateChange","sessionIceGatheringStateChange","sessionIceCandidateCollected","sessionIceCollectionScheduledCheck","sessionActionHelper","newMedia","removedMedia","mediaNewTrack","mediaTrackRemoved","mediaTrackEnded","mediaActionHelper","defaultState","camera","microphone","speaker","mediaReducers","mediaReducer","specificMediaActions","removeContainer","sourceMuted","removeSession","sessionReducers","local","oldTrackId","newLocalTracks","sessionReducer","specificSessionActions","deviceEvents","trackEvents","watchDeviceEvents","watchTrackManagerEvents","watchSessionManagerEvents","watchMediaManagerEvents","setListeners","managerChannel","checkDevices","trackManagerEventsHandler","watchTrackEvents","trackChannel","trackEnded","trackData","mediaManagerEventsHandler","watchMediaEvents","mediaChannel","mediaStopped","watchSessionEvents","sessionChannel","trackReplaced","iceConnectionStateChange","obj","iceConnectionState","iceCandidateCollected","iceGatheringStateChange","onChange","updateLogLevelEntry","updateLogHandlerEntry","initLogLevel","mediaSagas","logSagas","updateLogLevel","updateLogHandler","WEBRTC","filteredTracks","onicecandidate","oniceconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","onsignalingstatechange","ontrack","haveHalf","halfTrickleThreshold","iceCandidate","gatheringState","signalingState","nativeTrack","streams","targetStream","MediaStream","add","addIceCandidate","close","createAnswer","createOffer","findReusableTransceiver","setLocalDescription","setRemoteDescription","setTransceiversDirection","remoteDescription","sender","clearTimeout","transceivers","getTransceivers","transceiver","currentDirection","localDesc","senderTracks","senders","getSenders","errMsg","targetTransceiver","tone","intertoneGap","callback","insertDTMF","handleToneChangeEvent","dtmf","dtmfSender","ontonechange","desc","dtlsMatch","isStarted","isIceCollectionCheckOngoing","localRole","targetDirection","failures","setTransceiverDirection","setDirection","remoteTracksAll","getLocalDescription","active","getRemoteDescription","remoteDesc","getRemoteTracks","getReceivers","isPassedHalfTrickleThreshold","passedHalf","timerPrototype","_startTime","getTime","getAll","browserConstraintsWorkaround","deviceId","setupMedia","remove","size","constraintsWorkaround","getUserMedia","createLocalScreen","getDisplayMedia","createRemote","keys","findTrack","allMedia","peers","Session","unfixedDebounce","debounce","convert","fixed","peerId","dtlsRoleRecord","latestRemoteDescription","setupPeerEventHandlers","recordNewDtlsRole","remoteSdpSessionId","getLocalTracks","warmup","addTracks","addTrackOrReuseTransceiverPromises","reusableTransceiver","setStreams","all","setLocalAndRemoteTransceiversDirection","description","setParameters","rollbackLocalDescription","iceCollectionCheckResult","promises","setNetworkPriority","networkPriority","parameters","getParameters","encodings","encoding","localAudioTrackIds","remoteAudioTrackIds","audioResult","localVideoTrackIds","remoteVideoTrackIds","videoResult","processOffer","previousDtlsRole","generateAnswer","processAnswer","restartIce","getDtlsRole","DTMFOptions","sendOptions","targetPeer","leading","trackToCleanup","oldPeer","newPeer","oldLocalTrack","getPeer","getLatestRemoteDesc","recentDeviceChange","addEventListener","enumerateDevices","device","setupDeviceInitialization","targetTrack","RTCRtpSender","codecs","cpaasCalls","isPlanB","noPlanBSupport","sdpHandlerOptions","callAPI","make","from","audioOptions","videoOptions","screen","screenOptions","ignore","hold","unhold","startVideo","stopVideo","deferredResult","forward","otherCallId","newCallId","states","mediaConnectionStates","turnChanged","normalizeSipUri","extractDomainFromAddress","addressString","indexOfAtSymbol","substr","separateAddressAndDomain","defaultDomainString","extractedDomain","extractPrependedData","inputString","prependedDataMatches","extractLeadingSpecialCharacters","potentialLeadingChars","actualLeadingChars","withoutVisualSeparators","isPhoneNumber","cleanNumber","phoneNumberMatch","processAddress","processDomain","domainString","trim","resultingAddressAndDomain","prepend","leadingChars","webrtcActionTypes","noop","callEnder","startTime","endTime","mediaConnectionState","callReducers","newCall","participantName","to","localHold","remoteHold","isCaller","isAnonymous","account","setHandling","isHandling","newState","webrtcId","isSlowStart","payloadWithoutTransition","isRemote","remoteOp","callIds","endedCall","isJoinedCall","usedCallIds","callReducer","specificCallActions","specificWebrtcSessionActions","updatedCall","getOperationMeta","setOperationState","opType","opMeta","validPrefixes","prefixes","shift","validSuffixes","suffixes","pop","metaOp","stateProp","operationData","unsetOperation","currentOp","registerCall","createCall","sendRingingEntry","answerCallEntry","forwardCallEntry","directTransferEntry","consultativeTransferEntry","addMediaEntry","removeMediaEntry","addBasicMediaEntry","removeBasicMediaEntry","checkRenegotiationFlagEntry","renegotiationEntry","sendDTMFEntry","incomingCallNotification","callAcceptedNotification","callStatusNotification","callAudit","callOfferNotification","callAnswerNotification","endCallEntry","ignoreCallEntry","rejectCallEntry","getStatsEntry","setTurnCredentials","replaceTrackEntry","getAvailableCodecsEntry","watchForMediaDisconnect","callCollectionCheckEntry","subSagas","supportSagas","requests","establishSagas","midcallSagas","updateSessionRinging","callDeps","updateCallRinging","offerInactiveMedia","offerFullMedia","checkRenegotiationFlag","sendDtmf","cpaasIncomingCall","wrtcsSessionInvitationNotification","link","href","originatorName","originatorAddress","calleeNumber","incomingCall","incomingCallPattern","parseAcceptedNotification","wrtcsAcceptanceNotification","parseCallResponse","callAcceptedPattern","statusUpdatePattern","statusPattern","wrtcsEventNotification","parseStatusNotification","callStatusUpdateEnded","callStatusUpdateRinging","actionTypesToDoAuditOn","auditCall","callStartAuditPattern","preConnectedState","sendCallAudit","updateSessionResponse","parseOfferNotification","wrtcsOfferNotification","parseCallRequest","callOfferPattern","parseAnswerNotification","wrtcsAnswerNotification","callAnswerPattern","callSubscribePattern","iceRestart","onMediaDisconnect","normalizeIceFailure","onIceCollectionActions","callIceCollectionCheck","channels","callSubscribe","callSubscription","sub","callUnsubscribe","wrtcsNotificationSubscription","credential","errorInfo","webrtcInfo","rollbackOps","stateError","rollbackLocalHoldOperation","localOp","rollbackLocalUnholdOperation","updateCustomParameters","rtcStatsReport","basicError","sdkId","sdk","sdkMetaData","iter","rtcStatValue","stat","callBandwidth","finalBandwidth","rollbackLocalAddMedia","rollbackLocalRemoveMedia","trackObj","currentCall","otherCall","currentStateError","otherStateError","currentCallRemoteName","otherCallRemoteName","currentCallRemoteAddress","otherCallRemoteAddress","joinSessions","newWrtcsSessionId","restartIceFinish","sessionStatusUpdateEnded","callStatusUpdateFailed","receiveEarlyMedia","negotiation","callConfig","uuidV4","mediaOffered","aMedia","customNames","param","ringingResponse","handleUpdateRequest","handleSlowUpdateRequest","handleSlowUpdateResponse","handleUpdateResponse","customStatusCode","finishAction","getCallAction","getMediaState","mediaDiff","getOperation","isMediaFlowing","hasMediaFlowing","callAction","setMediaInactive","sameSession","isSameSdpSessionId","remote","slowOffer","answerSdp","receivedAnswer","mediaFlowing","undesired","dir","wasHold","wasUnhold","was3xHold","was3xUnhold","wasAddMedia","wasRemoveMedia","wasStartMoh","wasStopMoh","wasNoChange","hadMediaFlowing","stoppedFlowing","noActiveMediaAdded","noMediaRemoved","didChange","allStopped","notSending","notReceiving","stillStopped","startedFlowing","sameMedia","noUnchangedSend","onlyStartChanges","onlyStartSending","onlyStartReceiving","wasFlowing","allSendOnly","isFlowing","allSending","wasntRemoved","somethingStarted","addedSending","changedSending","wasntAdded","wasChanged","onlyStopSending","onlyAudioChange","inactiveUnchanged","stopSendAudio","noChange","hasUnchanged","unchangedFlowing","changedFlowing","wasSending","wasReceiving","removedFlowing","addedFlowing","hasMusicOnHold","regex","isVideoInactive","isAudioInactive","isMusicOnHold","hasMedia","isLocalHold","isRemoteHold","isDualHold","currentDesc","sameId","hasSameSessionId","newRole","firstSdpSessionId","secondSdpSessionId","playOutBand","playInBand","hasTelephoneEvent","convertTone","splitTones","canSendOutBand","gap","Number","localTrack","AudioContext","createMediaStreamSource","dest","createMediaStreamDestination","getAudioTracks","addTones","targetNode","tones","oscillators","createOscillator","oscNode","createGain","gain","scheduleTone","dur","frequency","setValueAtTime","toneSequence","toneStart","currentTime","numTones","delayTime","stringSdp","hasCodec","rtp","codec","matches","updateCallState","successDelay","max","errorDelay","min","lastAudit","audit","auditDuration","activeCalls","activeCall","callStateAfterConnect","sessionStatusResponse","getSession","isDisconnected","ended","changedState","callOperation","errorMsg","callEventHandler","stateChangeHandler","prevCall","CALL_STATE_CHANGE","callOperationHandler","CALL_OPERATION","callEvents","startActionTypesAndOperations","startActionTypeAndOperation","CALL_STARTED","otherCallAction","operationEvents","newAction","CALL_JOIN","finishActionTypesAndData","finishActionTypeAndData","CALL_ADDED_MEDIA","CALL_REMOVED_MEDIA","STATS_RECEIVED","CALL_TRACK_REPLACED","CUSTOM_PARAMETERS","AVAILABLE_CODECS","CALL_NEW_TRACK","CALL_TRACK_ENDED","prevMediaConnectionState","MEDIA_CONNECTION_CHANGE","defaultValues","responsibleParty","reconnectLimit","reconnectDelay","reconnectTimeMultiplier","reconnectTimeLimit","autoReconnect","maxMissedPings","baseConnectivity","wsConnectFlow","connectivityApi","getSocketState","enableConnectivityChecking","enable","resetConnection","wsState","pinging","kandy","WS_CHANGE","websocketLifecycle","serverPingFlow","clientPingFlow","chan","wsConnectAction","wsInfo","disconnectWebsocketPattern","connConfig","lastContact","emitTask","wsEmitter","pingFlow","closeWebsocketPattern","cleanupWebSocket","notificationChannel","oauthToken","access_token","webSocketOAuthMode","ws","timeOfLastPing","configPingInterval","maxIdleDuration","serverPing","expiry","pingIntervalMillis","connCheck","interval","connAck","_sendWSMessage","timeOfLastPong","shouldCheck","intervalInSeconds","message_type","shouldCheckConnectivity","delayStartTime","serverPong","timeElapsed","timeUntilNextPing","send","connectionAttempt","safeOpenWs","openWebsocket","wsConnectStart","openWs","attemptDuration","remainingDelay","pow","INITIAL_BUFFER_SIZE","WebSocket","validateWS","onOpen","onopen","onerror","onError","onclose","onmessage","createWsChannel","buffers","expanding","wsChannel","cpaasMessaging","features","messagingApi","fetchConversations","recipient","Conversation","isTypingList","lastReceived","lastPull","recipients","toLowerCase","prevConv","smsFrom","createConversation","messageReceived","sendMessageReadFinish","fetchMessages","fetchMessagesFinished","clearMessages","deleteMessage","deleteMessageFinish","getImageLinks","getImageLinksFinish","sendMessageHelper","read","messageReadHelper","deliveryReceiptReceived","deliveryStatus","sendMessage","sendMessageFinish","newConversation","incomingMessageRead","sendMessageRead","amount","rawURL","fetchConversationsFinished","updateConversation","deleteConversation","deleteConversationFinish","setIsTyping","setIsTypingFinished","sendMessageFinishHelper","isFetchingLinks","part","conversationBase","initializers","groupIndex","createMessage","messageContext","isGroup","Message","getMessage","convo","mixinMessage","markRead","deleteMessages","messageIds","subscriber","subscriberWrapper","conversationHistory","lastMessage","conversationIsTyping","isTyping","typingState","messageBase","convoContext","dateInSeconds","withParts","addPart","validationResponse","validatePart","multimediaLinks","createImageLinks","validTypeFlag","registerChat","registerInboundSMS","registerOutboundSMS","sendChatMessage","receiveChatMessageNotification","sendSMS","receiveSMS","receiveDeliveryReceipt","receiveIsTypingNotification","messagingSagas","subsSagas","chatSubscription","chatUnsubscription","smsInboundSubscription","smsInboundUnsubscription","sendChatPattern","incomingChatMessagePattern","chatMessageNotification","handleChatMessageNotification","sendSMSPattern","incomingSMSPattern","inboundSMSMessageNotification","handleIncomingSMS","deliveryReceiptPattern","handleDeliveryReceipts","fetchConversationPattern","fetchSmsConversationPattern","fetchSmsConversations","fetchChatMessagesPattern","fetchSmsMessagesPattern","fetchChatMessages","fetchSmsMessages","isTypingPattern","getImageLinksPattern","sessionType","getNotificationType","chatResponse","chatType","attachmentParts","uploadResponseList","filePart","chatMediaParts","allParts","finishInfo","messagingConfig","deleteResponse","dateTime","messageType","existingConversation","textPart","deliveryInfo","deliveryInfoNotification","deliveryInfoList","inboundSMSMessage","chatSessions","remoteAddress","localAddress","sessionDetails","lastText","lastPullTime","lastMessageTime","smsSessions","threadDetails","firstMessageTime","tmp","addresses","firstReceived","messageList","smsMessage","tmp2","responseList","notificationType","rel","resourceType","getResourceType","search","smsOutboundSubscription","smsOutboundUnsubscription","smsSubscription","idCacheLength","newChannelState","notificationApi","process","registerApplePush","voipDeviceToken","standardDeviceToken","bundleId","realm","isProduction","registerAndroidPush","deviceToken","unregisterApplePush","registrationInfo","unregisterAndroidPush","enableWebsocket","NOTI_ERROR","NOTI_CHANGE","NOTI_RECEIVED","processNotifications","findNotificationInfo","idCache","isDuplicate","ids","getNotificationConfig","getNotificationsInfo","notificationId","augmentedApi","newApi","statuses","presenceApi","storedUsers","selectors","getSelf","loading","userIds","presenceObject","updatedUsers","registerPresence","fetchPresence","receivePresence","subscriptionSagas","presenceSagas","presenceSubscribe","presenceUnsubscribe","presenceNotification","handleIncomingPresence","presenceListResponse","newListResponse","lastIndex","presenceListSubscription","presenceSubscription","activityMapUcToCPaaS","idle","away","lunch","busy","vacation","unknown","statusMapUcToCPaaS","open","closed","presenceValues","wsAction","presenceError","SELF_CHANGE","groupsApi","getAllGroups","getGroup","getParticipants","getInvitations","invitations","newGroup","invite","groupWithId","changedParticipant","processCreateGroup","processDeleteGroup","processAddParticipant","processRemoveParticipant","leaveGroup","receiveInvitationNotification","receiveParticipantStatusNotification","receiveEventNotification","groupSagas","createGroup","groupChatSessionInvitationNotification","handleInvitationNotification","chatParticipantStatusNotification","handleParticipantStatusNotification","chatEventNotification","handleEventNotification","participantInvites","currentUser","requestParams","createRequest","deletedGroup","deleteRequest","newParticipant","addParticipantRequest","removeParticipantRequest","leaveGroupRequest","fetchRequest","acceptInvitationRequest","fetchRequestByGroupId","rejectInvitationRequest","linkInfo","groupOwner","groupChatSessionInformation","participantInformation","groupSessions","groupChatSessionInformationList","participantSessionStatus","groupChangedEvent","GROUP_CHANGE","GROUP_NEW","GROUP_DELETE","GROUP_INVITATION_RECEIVED","GROUP_REFRESH","GROUP_ERROR","createSubscriptionPlugin","channelLifetime","subscriptionFlow","onConnectionLostEntry","pendingChange","removeSubscription","subscriptionApi","resubscribe","subscribed","available","subChangeEvent","SUB_ERROR","SUB_CHANGE","SUB_RESUB","onConnectionLost","connectivityActionTypes","subscriptionChannel","ensureChannelOpen","success","currentUserInfo","currentSubscribedUsername","subResponses","subscribeForServices","unsubResponses","unsubscribeServices","subscribedServices","closeResponse","closeChannel","requestedServices","notRegistered","alreadySubscribed","validServices","waitPatterns","subscriptionConfig","notSubscribed","resultServices","resultAction","openWebsocketChannel","channelResponse","channelId","subscriptionInfo","connectivityInfo","requestWebsocket","channelData","channelURL","connectionInfo","wsOpenOrError","closeAction","deleteChannel","revokeWebsocket","refreshWebsocket","req","subscriptionURL","notificationChannelLifetime","extendResponse","waitFor","WAIT_SAGA_CONTEXT","processTake","pattern","waitContext","numFinishedWaits","numTotalWaits","waitSaga","waitSagaContext","waitTasks","timeoutResult","task","cpaasUsers","contactsEvents","usersEvents","usersAPI","contactsAPI","objectToUse","contactsReducers","usersReducers","contactsPendingReducer","contactsSagas","usersSagas","contactBody","res","addContactRequest","updateContactRequest","deleteContactRequest","fetchContactRequest","refreshContactsRequest","contactCollection","directorySearch","directoryItem","sortBy","order","userName","directoryId","mapSearchKey","validKeys","directoryItemList","contactNewEvent","contactsChangeEvent","addContactFinishActions","pluginFactory","linkRequest","ucRequest","watchRequests","authorizations","handleRequest","makeRequest","__testonly__","responseTypes","json","none","validateOptions","fetchOptions","endUrl","makeResponse","ok","statusText","parseBody","contentType","responseBody","invalidUrlMessage","invalidResponseType","expectedType","apiResponse","httpResponse","linkAuthorization","ucAuthorization","cpaasAuthorization","authIssues","getStatusCode","REQUEST_ERROR"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgH;AACtD;AACuE;AACxF;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAAqE,EAAE,EAQ1E;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,0FAAQ;;AAEV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6lBAA6lB;;AAE7lB;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAqC,EAAE,EAI1C;;AAEL,kDAAkD,uEAAW;AAC7D;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB,qEAAS;AAC1B;AACA;AACA,iBAAiB,uEAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,KAAqC,EAAE,EAI1C;;AAEH;AACA;AACA,gBAAgB,oEAAK;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yEAAa;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA,kBAAkB,OAAO,8DAAE;AAC3B;;AAEA;AACA,SAAS,qEAAM;AACf;;AAEA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,0BAA0B,0FAAQ,GAAG;AACrC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,MAAM,KAAyD,EAAE,EAE9D;;AAEH,MAAM,sEAAO;AACb;AACA;AACA,KAAK;AACL;;AAEA,MAAM,wEAAS,sBAAsB,uEAAQ,sBAAsB,sEAAO;AAC1E;AACA;AACA;AACA,KAAK;AACL;;AAEA,MAAM,sEAAO;AACb;AACA;AACA,KAAK;AACL;;AAEA,MAAM,KAAqC,EAAE,EAE1C;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAQ1C;;AAEH,MAAM,oEAAK;AACX,uBAAuB;;AAEvB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,sBAAsB,+DAAQ;;AAE9B,MAAM,mEAAI;AACV;AACA;;AAEA;AACA;;AAEA,MAAM,oEAAK;AACX;AACA;AACA,cAAc,+DAAQ;AACtB,GAAG,UAAU,qEAAM;AACnB;AACA;AACA,cAAc,+DAAQ,oCAAoC,YAAY;AACtE,GAAG;AACH,wBAAwB,2DAAI;AAC5B;AACA;;AAEA,iBAAiB,qEAAM;AACvB,uBAAuB,2DAAI;AAC3B;AACA;;AAEA,YAAY,2DAAI,+DAA+D,YAAY;AAC3F;;AAEA;AACA;AACA;;AAEA,MAAM,mEAAI;AACV;AACA,GAAG;AACH,QAAQ,oEAAK;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,qEAAM,QAAQ,mEAAI;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA,MAAM,KAAqC,EAAE,aAI1C;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAK1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAY1C;;AAEH;AACA;AACA;AACA;AACA,kBAAkB,6EAAiB;AACnC;;AAEA,MAAM,KAAqC,EAAE,EAY1C;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,4FAA4F,eAAe;AAC3G;AACA;;AAEA,MAAM,KAAyD,EAAE,EAG9D;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,MAAM,KAAqC,EAAE,EAO1C;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iCAAiC;AACjC;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA;AACA;AACA;AACA,gBAAgB,mEAAM;;AAE26B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzqBp6B;AACe;AAC6B;AAC+F;AAC0J;AACrS;;AAE7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,4CAAO;AACb;AACA;;AAEA,MAAM,mDAAc;AACpB;AACA;;AAEA,MAAM,yCAAI;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,iCAAY;AACrB;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,gCAAI;AACf;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,gCAAI;AACf;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa,gCAAM;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,gCAAI;AACf;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA;AACA,WAAW,gCAAa,UAAU,gCAAO;AACzC;;AAEA;AACA;AACA;AACA,aAAa,gCAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;AACA;AACA,WAAW,gCAAK;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA,WAAW,wBAAI;AACf;AACA;AACA;AACA,WAAW,gCAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA;AACA,WAAW,gCAAI;AACf;AACA;AACA;AACA,WAAW,gCAAI;AACf,cAAc,gCAAI;AAClB,gBAAgB,gCAAK;AACrB,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,wBAAI;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,IAAI,yCAAkB;AACtB,EAAE,gCAAK,mBAAmB,qCAAQ;AAClC,EAAE,gCAAK,SAAS,qCAAQ;AACxB;;AAEA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,wFAAwF,aAAa;AACrG;AACA;;AAEA,SAAS,wBAAI;AACb;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA,SAAS,wBAAI;AACb;AACA;AACA,MAAM,KAAqC,EAAE,EAE1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA,SAAS,wBAAI;AACb;AACA;AACA,MAAM,KAAqC,EAAE,EAG1C;;AAEH,4FAA4F,eAAe;AAC3G;AACA;;AAEA,SAAS,wBAAI;AACb;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AGvBC,aAAW,UAHY;AAIvBC,aAAW;;AAGb;;;;AAPyB,CAAlB,CAWA,MAAMC,sEAA+B;AAC1CC,8BAA4B,0BADc;AAE1CC,iBAAe,cAF2B;AAG1CC,aAAW;;AAGb;;;;AAN4C,CAArC,CAUA,MAAM/C,oEAA8B;AACzCC,cAAY,WAD6B;AAEzCC,QAAM,MAFmC;AAGzCC,SAAO;AAHkC,CAApC,C;;;;;;AClDP,eAAe,mBAAO,CAAC,EAAc;AACrC;AACA;AACA;AACA;;;;;;;;ACJa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yDAAyD,OAAO;AAChE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D,mEAAmE;AACnE,uEAAuE;AACvE;AACA,0DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,IAA6B;AACjC;AACA;;;;;;;;;;;;;;;AC/UA;;IAAY6C,iB;;AACZ;;IAAYC,iB;;;;AAEZ;AACA;AACA;AACO,MAAMC,oCAAcF,iBAApB;AACA,MAAMG,oCAAcF,iBAApB,C;;;;;;;;;;;;kBCgBiBG,O;QAONC,W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AWvR,YAAX,CAAwBwR,OAAnD,GAA6DD,WAAWvR,YAAX,CAAwBwR,OAArF,GAA+FF,UAAUE,OAD3G;;AAGA,SAAOA,OAAP;AACD;;AAED;;;;;;;;AAQO,SAASd,kBAAT,CAA6B9Q,KAA7B,EAAoC;AACzC,QAAM0R,YAAY1R,MAAMC,MAAN,CAAaG,YAA/B;AACA,QAAMuR,aAAa3R,MAAMC,MAAN,CAAaC,cAAhC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO,wBAAYwR,UAAUG,SAAtB,EAAiCF,WAAWE,SAA5C,CAAP;AACD,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/Ic;AACf;AACA;AACA;AACA;;AAEA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;ACb6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,IAAI;AACf,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;;;AAGA;AACA;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,qBAAY;AACxB;AACA,KAAK;AACL,GAAG;AACH;AACA;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ,qBAAY;AACvB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG,aAAa;;AAEhB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oEAAoE;AACpE;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;;AAEA,QAAQ,KAAqC,EAAE,EAI1C;;AAEL;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;;AAEA;;AAEA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,KAAqC,EAAE,uBAM1C;;AAEL;AACA;;AAEA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,sEAAsE,aAAa;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;;AAEA;AACA,4EAA4E,aAAa;AACzF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,8BAA8B;AAC9B;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAA6G,EAAE,EAElH;;AAE+H;;;ACtpBhI;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;;AAEA;AACA;;AAEe,oEAAQ,EAAC;AACG;;;;;;ACnBwH;AACvF;AACF;AAC0C;AACsF;AAC0d;AACvlB;AAC7B;AACY;AACf;;AAE7B,IAAI,yBAAK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,EAAE,yBAAK;;AAEP;AACA;AACA,IAAI,yBAAK;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,IAAI,yBAAK;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAAS,yBAAK;AACd;AACA;;AAEA,+BAA+B,yBAAK;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,2BAAO;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4BAAQ;AACZ,SAAS,wBAAK;AACd;AACA,SAAS,2BAAO;AAChB;AACA,yCAAyC,4BAAQ,GAAG,2CAAQ,qBAAqB,0CAAO,oBAAoB,mDAAc,qBAAqB,yCAAI,wBAAwB,2CAAQ;;AAEnL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,kDAAgB;AACxB;AACA,IAAI,yBAAK;AACT,yBAAyB,kDAAgB;AACzC;AACA;AACA;AACA;AACA,SAAS,2BAAO;AAChB;AACA,eAAe,gCAAS;AACxB;;AAEA;AACA;;AAEA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA;AACA,YAAY,gCAAW;AACvB;;AAEA;AACA,YAAY,gCAAW;AACvB;AACA;;AAEA;AACA,QAAQ,KAAqC,EAAE,EAG1C;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ,KAAqC,EAAE,EAG1C;;AAEL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA,QAAQ,iCAAM;AACd;AACA;AACA;;AAEA;AACA,QAAQ,KAAqC,EAAE,EAG1C;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,KAAqC,EAAE,EAE1C;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gCAAI;AACjB;;AAEA;AACA;AACA,aAAa,2BAAO;;AAEpB;AACA;AACA;AACA;;AAEA;;AAEA,QAAQ,yCAAI;AACZ;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,yBAAK;AACb;AACA;AACA;;AAEA;AACA,GAAG;;AAEH,MAAM,KAAqC,EAAE,EAE1C;;AAEH,gBAAgB,gCAAI;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gCAAW;AACvB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,KAAqC,EAAE,EAE1C;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,kBAAkB,OAAO,2CAAS;AAClC,QAAQ,KAAqC,EAAE,EAG1C;;AAEL;AACA;AACA;;AAEA,QAAQ,yBAAK;AACb;AACA;AACA;;AAEA;;AAEA,wCAAwC,SAAS;AACjD;;AAEA,gBAAgB,uCAAK;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,4BAAQ;AACxB;;AAEA,QAAQ,KAAqC,EAAE,EAE1C;;AAEL;AACA;AACA;AACA;;AAEA,OAAO,uCAAK;AACZ;AACA;AACA,gBAAgB,gCAAI;AACpB;AACA,MAAM,iCAAM;AACZ,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,cAAc,6CAAW;AACzB;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,wCAAM;;AAEpC,MAAM,yCAAI;AACV;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,gCAAW;AACpB;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA,yCAAyC;;AAEzC,QAAQ,6CAAQ;AAChB;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA,iBAAiB,4CAAO;AACxB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,iCAAY;AACvB,GAAG;AACH;AACA;AACA,WAAW,iCAAY;AACvB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,4CAAO;AAC1B;AACA,KAAK;AACL;AACA;AACA,GAAG,EAAE;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,yBAAK;AACb,SAAS,2CAAS;AAClB;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,6CAAQ,YAAY,2BAAO;AACpD,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;;AAEA,QAAQ,4CAAO;AACf;AACA;AACA;;AAEA,QAAQ,6CAAQ;AAChB;AACA,+CAA+C,gCAAW;AAC1D;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,UAAU,0CAAK;AACf;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG,EAAE;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,iCAAM;AAC1C;;AAEA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,MAAM,0CAAO;AACb;AACA;AACA;AACA;;AAEA,yBAAyB,gCAA4B;AACrD;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,mDAAiB;AACvC;AACA,GAAG,UAAU,0CAAO;AACpB;AACA,GAAG;AACH;AACA;;AAEA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO,0CAAO,mBAAmB;AACjC;AACA;;AAEA,uBAAuB,gCAA4B;AACnD;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,0CAAO,YAAY,gCAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,iCAAc;AACjC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,yBAAI;AAC3B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,2BAAO;AACpB,cAAc,2BAAO;;AAErB;AACA,SAAS,yBAAK;AACd;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,gCAAiB;AACnB;AACA;;AAEA,4CAA4C,mBAAmB,wBAAI,oCAAoC,wBAAG,mCAAmC,wBAAG,mCAAmC,wBAAI,oCAAoC,wBAAI,oCAAoC,wBAAG,mCAAmC,wBAAI,oCAAoC,wBAAI,oCAAoC,wBAAQ,sCAAsC,wBAAM,sCAAsC,wBAAc,uCAAuC,wBAAW,yCAAyC,wBAAK,qCAAqC,wBAAW,0CAA0C,wBAAW;;AAEtqB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM,iCAAM;AACZ,kBAAkB,yBAAI;;AAEtB;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,yBAAI;AACnB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,iCAAW;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,iCAAO;AAC9B;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,6BAAS;AACb;AACA;AACA,EAAE,6BAAS;AACX;AACA;AACA;AACA,EAAE,6BAAS;AACX,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA,mDAAmD;AACnD,6BAA6B,oCAAoC,GAAG;AACpE,4BAA4B;AAC5B,2BAA2B;AAC3B;;AAEA,IAAI,4BAAQ;AACZ,kBAAkB,6BAAS;AAC3B,mBAAmB,6BAAS;AAC5B;AACA;AACA;AACA;AACA,GAAG,2BAA2B,6BAAS;AACvC;;AAEA;AACA;;AAEA;AACA,WAAW,yBAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB,UAAU,6CAAW;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,6CAAW;AAChC;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,wBAAwB,4BAAQ,GAAG;AACnC;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,QAAQ,KAAqC,EAAE,EAE1C;;AAEL,IAAI,gCAAiB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,uBAAQ;;AAE1B;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA,wBAAwB,QAAQ,sCAAI;AACpC;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA,MAAM,KAAwE,EAAE,EAE7E;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,yBAAI;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,6CAAW;AACtB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,GAAG;;;AAGH,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa,iDAAiD;AAC9D,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC;;AAEvC;AACA,OAAO,UAAU,iCAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,yCAAI,wCAAwC,6CAAW;AACxE;AACA,iBAAiB,6CAAW;AAC5B;AACA,OAAO,UAAU,iCAAe;AAChC;AACA,iBAAiB,yCAAI;AACrB;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,QAAQ,4CAAO;AACf;AACA,KAAK,UAAU,6CAAQ;AACvB;AACA;AACA;AACA;AACA,KAAK,2BAA2B,oCAAE;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,yBAAI,CAAC;;AAEvB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;;AAGL,oBAAoB,yBAAI,CAAC;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;;AAEtB,sBAAsB,yBAAI,CAAC;;AAE3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,0CAA0C,wBAAQ;;AAElD,MAAM,KAAqC,EAAE,EAE1C;;AAEH,wFAAwF,aAAa;AACrG;AACA;;AAEA;;AAEA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;;AAEA;AACA;AACA,iEAAiE,yBAAI;AACrE,iEAAiE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;AAE7D;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;;AAEvB,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,sBAAsB;;AAEtB,mCAAmC;;AAEnC,6BAA6B;;AAE7B,iCAAiC;;AAEjC,2BAA2B;;AAE3B,iBAAiB,OAAO;AACxB;AACA;;AAEA,gBAAgB,qBAAS;AACzB;;AAEe,qDAAE,E;;AC9FoB;;AAErC;AACA,OAAO,oBAAQ;AACf;AACA;;AAEA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA,oBAAoB;;AAEpB;AACA,oBAAoB;;AAEpB;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,2DAAK,E;;AClCmB;AACR;;AAE/B;AACA,0CAA0C;;AAE1C;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;;AAEA;AACA;;AAEO;AACA;AACQ;AACf;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,iBAAK;AACvB;;AAEA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;AACA;;AAEA;AACA;;AAEA,WAAW,qBAAS;AACpB,GAAG;;;AAGH;AACA,6BAA6B;AAC7B,GAAG,eAAe;;;AAGlB;AACA;AACA;AACA,C;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,uDAAG,E;;ACtNS;AACA;AAC3B,SAAS,GAAG,aAAa,eAAG;AACb,qDAAE,E;;ACHU;AACY;;AAEvC;AACA;AACA,+CAA+C,GAAG,IAAI;;AAEtD;AACA,kCAAkC;;AAElC;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;;AAEA,SAAS,qBAAS;AAClB;;AAEe,qDAAE,E;;ACvBjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;;AAEA,mBAA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gB;AACzC,kBAAkB,mBAAO,CAAC,EAAgB;AAC1C,cAAc,mBAAO,CAAC,EAAS;AAC/B,eAAe,mBAAO,CAAC,GAAwB;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,6BAA6B;AAC7B,0BAA0B;AAC1B,0BAA0B;AAC1B,qBAAqB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,8EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qBAAqB;AACrB,0BAA0B;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;AC/Ia;AACb,aAAa,mBAAO,CAAC,EAAW;AAChC,cAAc,mBAAO,CAAC,EAAW;AACjC,WAAW,mBAAO,CAAC,EAAS;AAC5B,YAAY,mBAAO,CAAC,EAAU;AAC9B,WAAW,mBAAO,CAAC,EAAS;AAC5B,kBAAkB,mBAAO,CAAC,GAAiB;AAC3C,YAAY,mBAAO,CAAC,EAAW;AAC/B,iBAAiB,mBAAO,CAAC,GAAgB;AACzC,eAAe,mBAAO,CAAC,EAAc;AACrC,qBAAqB,mBAAO,CAAC,EAAsB;AACnD,SAAS,mBAAO,CAAC,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;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,OAAO,eAAe;AACtB,OAAO,sBAAsB;AAC7B,OAAO,cAAc;AACrB,OAAO,gBAAgB;AACvB,OAAO,gBAAgB;AACvB,OAAO,oBAAoB;AAC3B,OAAO,kBAAkB;AACzB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wCAAwC,UAAU;AAClD,gCAAgC;AAChqCAAqC,eAAe,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gCAAgC,aAAa;AAC7C,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sCAAsC;AACtC,0BAA0B;AAC1B,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iCAAiC;AACjC,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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AACA;;AAEA,QAAQ,iBAAiB;AACzB;AACA;AACA,oDAAoD,gBAAgB;AACpE,kDAAkD,cAAc;AAChE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ,SAAS;AACjC,gBAAgB,QAAQ,SAAS;AACjC,iBAAiB,OAAO,QAAQ;AAChC,iBAAiB,OAAO,QAAQ;AAChC,gBAAgB,SAAS,OAAO;AAChC,gBAAgB,SAAS,OAAO;AAChC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yEAAyE;;AAEzE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD,EAAE,UAAU,EAAE;AAC/D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa;AAC5B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;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AAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,IAAI;AACf,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;;AAEA,SAAS,iBAAW;AACpB;;AAEA;AACA,oBAAoB,KAAqC,+BAA+B,SAA4Q;AACpW;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,KAAqC,+BAA+B,SAAuF;AACjL;;AAEA,oBAAoB,iBAAW;AAC/B;;AAEA;AACA,oBAAoB,KAAqC,+BAA+B,SAA0F;AAClL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;;;AAGA;AACA;AACA,sBAAsB,KAAqC,+BAA+B,SAAgN;AAC1S;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA,sBAAsB,KAAqC,+BAA+B,SAAuF;AACjL;;AAEA;AACA,sBAAsB,KAAqC,+BAA+B,SAAgU;AAC1Z;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,KAAqC,+BAA+B,SAA2J;AACvP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;;AAGA;AACA;AACA,sBAAsB,KAAqC,+BAA+B,SAAga;AAC1f;;AAEA;AACA,sBAAsB,KAAqC,+BAA+B,SAA4G;AACtM;;AAEA;AACA,sBAAsB,KAAqC,+BAA+B,SAAoC;AAC9H;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;;;AAGA;AACA;AACA,sBAAsB,KAAqC,gCAAgC,SAAuF;AAClL;;AAEA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAqC,gCAAgC,SAAsF;AACrL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG,aAAa;;AAEhB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,sBAAsB,KAAqC,gCAAgC,SAA0U;AACra;;AAEA;AACA;AACA,KAAK;AACL,sBAAsB,KAAqC,gCAAgC,SAAqd;AAChjB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;;AAEA,QAAQ,KAAqC,EAAE,EAI1C;;AAEL;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;;AAEA;;AAEA,MAAM,KAAqC,EAAE,EAE1C;;AAEH;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,KAAqC,EAAE,uBAM1C;;AAEL;AACA;;AAEA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,KAAqC,gCAAgC,SAAkV;AAC/a;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,KAAqC,gCAAgC,SAAgN;AACzS;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,sEAAsE,aAAa;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;;AAEA;AACA,4EAA4E,aAAa;AACzF;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,KAAqC,gCAAgC,SAA6H;AAC1N;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,aAAa,cAAa,CAAC,cAAa,GAAG,YAAY;AACvD;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAA6G,EAAE,EAElH;;AAE+H;;;;;;;;;;;;;;;AC3qBhI;AACA;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,YAAY,SAAS;AACrB;AACO;AACP;AACA,2DAA2D,aAAa;;AAExE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;;ACtGA;AACiC;;;;;;;;ACDjC;AAAe;AACf;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;;;;;;AChBA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;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C,EAAE,SAAyC,CAAC,a;;;;;;;AC3InY,cAAc,mBAAO,CAAC,GAAY;AAClC,qBAAqB,mBAAO,CAAC,GAAe;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA,sBAAsB,yCAAyC;AAC/D,mBAAmB,yCAAyC;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC,mBAAmB,gBAAgB;AACnC;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;;;;;;;ACxjgBAAgB,aAAa;AAC7B,oBAAoB,aAAa;AACjC,kBAAkB,aAAa;AAC/B,sBAAsB,aAAa;AACnC,kBAAkB,aAAa;AAC/B,sBAAsB,aAAa;AACnC,iBAAiB,aAAa;AAC9B,oBAAoB,aAAa;AACjC,eAAe,aAAa;AAC5B,mBAAmB,aAAa;AAChC,cAAc,aAAa;AAC3B,mBAAmB,aAAa;AAChC,cAAc,aAAa;AAC3B,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrWA;AACA;AACA;AACA,UAAU;AACV;AACA;;;;;;;ACLA,iBAAiB,mBAAO,CAAC,GAAY;;AAErC;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,GAAU;;;;;;;ACHnC;;;;;;;ACAA,oBAAoB,mBAAO,CAAC,GAAwB;AACpD,eAAe,mBAAO,CAAC,GAAkB;AACzC,cAAc,mBAAO,CAAC,GAAiB;;AAEvC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;;;;;;AClDA;AACA;AACA;AACA;;;;;;;ACHA,mBAAO,CAAC,EAAiC;AACzC,mBAAO,CAAC,EAAgC;AACxC,mBAAO,CAAC,EAA6B;AACrC,mBAAO,CAAC,GAAwB;AAChC,mBAAO,CAAC,GAAgC;AACxC,mBAAO,CAAC,GAA4B;AACpC,iBAAiB,mBAAO,CAAC,CAAkB;;;;;;;ACN3C,gBAAgB,mBAAO,CAAC,GAAe;AACvC,cAAc,mBAAO,CAAC,GAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBa;AACb,aAAa,mBAAO,CAAC,EAAkB;AACvC,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C,qBAAqB,mBAAO,CAAC,EAAsB;AACnD;;AAEA;AACA,mBAAO,CAAC,EAAS,qBAAqB,mBAAO,CAAC,EAAQ,4BAA4B,aAAa,EAAE;;AAEjG;AACA,qDAAqD,4BAA4B;AACjF;AACA;;;;;;;;ACZa;AACb,uBAAuB,mBAAO,CAAC,GAAuB;AACtD,WAAW,mBAAO,CAAC,GAAc;AACjC,gBAAgB,mBAAO,CAAC,EAAc;AACtC,gBAAgB,mBAAO,CAAC,EAAe;;AAEvC;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,GAAgB;AACzC,gCAAgC;AAChC,cAAc;AACd,iBAAiB;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;;;;;;ACjCA,8BAA8B;;;;;;;;ACAjB;AACb,cAAc,mBAAO,CAAC,EAAY;AAClC,aAAa,mBAAO,CAAC,EAAW;AAChC,UAAU,mBAAO,CAAC,EAAQ;AAC1B,cAAc,mBAAO,CAAC,GAAY;AAClC,cAAc,mBAAO,CAAC,EAAW;AACjC,eAAe,mBAAO,CAAC,EAAc;AACrC,gBAAgB,mBAAO,CAAC,EAAe;AACvC,iBAAiB,mBAAO,CAAC,GAAgB;AACzC,YAAY,mBAAO,CAAC,EAAW;AAC/B,yBAAyB,mBAAO,CAAC,GAAwB;AACzD,WAAW,mBAAO,CAAC,GAAS;AAC5B,gBAAgB,mBAAO,CAAC,GAAc;AACtC,iCAAiC,mBAAO,CAAC,GAA2B;AACpE,cAAc,mBAAO,CAAC,GAAY;AAClC,gBAAgB,mBAAO,CAAC,GAAe;AACvC,qBAAqB,mBAAO,CAAC,GAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C,EAAE,mBAAO,CAAC,EAAQ;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,YAAY;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,kCAAkC;AACrD,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe,uCAAuC;AACtD;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH,kBAAkB,yBAAyB,KAAK;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,wBAAwB;AACxB,gBAAgB;AAChB,oBAAoB;AACpB,wBAAwB;AACxB,gBAAgB;AAChB,oBAAoB;AACpB;AACA,uBAAuB,mBAAO,CAAC,GAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D,oBAAoB;AAC9E,mBAAO,CAAC,EAAsB;AAC9B,mBAAO,CAAC,GAAgB;AACxB,UAAU,mBAAO,CAAC,CAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gDAAgD,mBAAO,CAAC,GAAgB;AACxE;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,CAAC;;;;;;;AC7RD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACfA,aAAa,mBAAO,CAAC,EAAW;AAChC,gBAAgB,mBAAO,CAAC,GAAS;AACjC;AACA;AACA;AACA,aAAa,mBAAO,CAAC,EAAQ;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;A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ACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,gCAAgC;AAChG;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,EAAE,mBAAO,CAAC,GAAgB;AAC1B,EAAE,mBAAO,CAAC,EAAe;AACzB;;AAEA,sBAAsB,mBAAO,CAAC,EAAY;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0DAA0D,kBAAkB;;AAE5E;AACA;AACA;AACA,oBAAoB,uBAAuB;;AAE3C,oDAAoD,6BAA6B;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,0BAA0B,eAAe,EAAE;AAC3C,0BAA0B,gBAAgB;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,8CAA8C,YAAY,EAAE;;AAE5D;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,OAAO,QAAQ,iCAAiC;AACpG,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,oCAAoC,mBAAO,CAAC,EAAS;AACrD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrPA;AACA,cAAc,mBAAO,CAAC,EAAgB;AACtC,WAAW,mBAAO,CAAC,GAAgB;AACnC,UAAU,mBAAO,CAAC,EAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACdA;AACA,gBAAgB,mBAAO,CAAC,EAAe;AACvC,WAAW,mBAAO,CAAC,GAAgB;AACnC,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClBA,mBAAO,CAAC,GAAe;;;;;;;ACAvB,mBAAO,CAAC,GAAe;;;;;;;;;;;;;;;;;;kBCaCE,Y;;AAbxB;;AACA;;AACA;;;;;;AAEA;;;;;;;;;AASe,SAASA,YAAT,CAAuB7tC,MAAvB,EAA+BvR,UAAU,EAAzC,EAA6C;AAC1D;AACA,QAAM6K,QAAQ,4BAAW7K,QAAQ6K,KAAnB,CAAd;AACA,QAAMse,UAAU,8BAAanpB,QAAQmpB,OAArB,CAAhB;;AAEA;;;;;;;AAOA,QAAM81B,SAAS;AACb1tC,UADa;AAEb1G,SAFa;AAGbse;;AAGF;;;;;;;;AANe,GAAf,CAcA,SAASk2B,OAAT,CAAkBlW,MAAlB,EAA0Bvf,QAA1B,EAAoC01B,WAApC,EAAiD;AAC/C;;;AAGA,WAAO,UAAU,GAAG/9C,IAAb,EAAmB;AACxB;AACA,YAAMg+C,YAAYtjC,uBAAY2N,QAAZ,KAAyB3N,uBAAYgjC,OAAOp0C,KAAnB,CAA3C;AACA;AACA,UAAI,CAAC00C,SAAL,EAAgB;AACd;AACD;;AAED;AACA,YAAMnnB,mCAEDknB,WAFC;AAGJ;AACAnW,cAJI;AAKJ9Q,mBAAWkZ,KAAKC,GAAL,EALP;AAMJ3mC,eAAO+e,QANH;AAOJrY,gBAAQ0tC,OAAO1tC,MAPX;AAQJ;AACAub,kBAAU,CAAC,GAAGvrB,IAAJ;AATN,QAAN;;AAYA09C,aAAO91B,OAAP,CAAeiP,KAAf;AACD,KAtBD;AAuBD;;AAED;;;;;;;;;;AAUA,WAAS/I,QAAT,CAAmBxkB,KAAnB,EAA0B;AACxBo0C,WAAOp0C,KAAP,GAAe,4BAAWA,KAAX,CAAf;AACD;;AAED;;;;;;;;;AASA,WAASgf,QAAT,GAAqB;AACnB,WAAOo1B,OAAOp0C,KAAd;AACD;;AAED;;;;;;;;;;;;;AAaA,WAAS0kB,UAAT,CAAqBpG,OAArB,EAA8B;AAC5B81B,WAAO91B,OAAP,GAAiB,8BAAaA,OAAb,CAAjB;AACD;;AAED;;;;;;;;;AASA,WAAS+1B,UAAT,GAAuB;AACrB,WAAOD,OAAO91B,OAAd;AACD;;AAED,QAAM4zB,MAAM;AACVmC,cADU;AAEV3vB,cAFU;AAGV1F,YAHU;AAIVwF,YAJU;AAKV,QAAInqB,IAAJ,GAAY;AACV,aAAO+5C,OAAO1tC,MAAP,CAAcrM,IAArB;AACD,KAPS;AAQV,QAAIoC,EAAJ,GAAU;AACR,aAAO23C,OAAO1tC,MAAP,CAAcjK,EAArB;AACD,KAVS;AAWV,QAAI7K,IAAJ,GAAY;AACV,aAAOwiD,OAAO1tC,MAAP,CAAc9U,IAArB;AACD;AAbS,GAAZ;;AAgBA;AACA,OAAK,MAAM0sC,MAAX,IAAqBjtB,qBAArB,EAAiC;AAC/B6gC,QAAI5T,MAAJ,IAAckW,QAAQlW,MAAR,EAAgBjtB,sBAAWitB,MAAX,CAAhB,CAAd;AACD;;AAED;AACA;AACA;AACA,QAAMqW,UAAU,CAACjjD,OAAD,EAAU89C,IAAV,KAAmBgF,QAAQhF,KAAK1c,KAAb,EAAoBnhB,oBAApB,EAA+B,EAAEijC,OAAOpF,IAAT,EAA/B,EAAgD99C,OAAhD,CAAnC;AACA,QAAMmjD,WAAW,CAACnjD,OAAD,EAAU89C,IAAV,KAAmBgF,QAAQ,MAAR,EAAgB1jC,qBAAUI,IAA1B,EAAgC,EAAE0jC,OAAOpF,IAAT,EAAhC,EAAiD99C,OAAjD,CAApC;AACA,QAAMkjD,QAAQ,qBAAYD,OAAZ,EAAqBE,QAArB,CAAd;;AAEA,oCACK3C,GADL,EAEK0C,KAFL;AAID,C;;;;;;;;;;;;kBClJuBE,W;;AAXxB;;AAEA;;;;;;;;;AASe,SAASA,WAAT,CAAsBh+C,GAAtB,EAA2B0a,IAA3B,EAAiC;AAC9C;AACA;AACA,gCAAa1a,GAAb;AACA,gCAAa0a,IAAb;;AAEA;;;;AAIA,QAAMujC,SAAS,EAAf;;AAEA;;;;;;AAMA,WAASC,IAAT,CAAepjD,IAAf,EAAqB;AACnB,UAAM+0C,MAAMD,KAAKC,GAAL,EAAZ;AACA;AACA,UAAM6I,OAAO;AACX1c,aAAO,MADI;AAEXlhC;AAFW,KAAb;;AAKA,QAAImjD,OAAO79C,cAAP,CAAsBtF,IAAtB,CAAJ,EAAiC;AAC/B49C,WAAKyF,KAAL,GAAaF,OAAOnjD,IAAP,CAAb;AACA4f,WAAM,SAAQ5f,IAAK,mBAAnB,EAAuC49C,IAAvC;AACD,KAHD,MAGO;AACL;AACAuF,aAAOnjD,IAAP,IAAe+0C,GAAf;;AAEA6I,WAAKyF,KAAL,GAAatO,GAAb;AACA7vC,UAAK,SAAQlF,IAAK,WAAlB,EAA8B49C,IAA9B;AACD;AACF;;AAED;;;;;AAKA,WAAS0F,OAAT,CAAkBtjD,IAAlB,EAAwB;AACtB,UAAM+0C,MAAMD,KAAKC,GAAL,EAAZ;AACA;AACA,UAAM6I,OAAO;AACX1c,aAAO,SADI;AAEXlhC,UAFW;AAGXqjD,aAAOF,OAAOnjD,IAAP;AAHI,KAAb;;AAMA,QAAImjD,OAAO79C,cAAP,CAAsBtF,IAAtB,CAAJ,EAAiC;AAC/B,YAAMqjD,QAAQF,OAAOnjD,IAAP,CAAd;AACA;AACA,aAAOmjD,OAAOnjD,IAAP,CAAP;;AAEA,YAAMujD,UAAUxO,MAAMsO,KAAtB;AACAzF,WAAK4F,GAAL,GAAWzO,GAAX;AACA6I,WAAK2F,OAAL,GAAeA,OAAf;;AAEAr+C,UAAK,SAAQlF,IAAK,kBAAiBujD,OAAQ,KAA3C,EAAiD3F,IAAjD;AACD,KAVD,MAUO;AACLh+B,WAAM,SAAQ5f,IAAK,wBAAnB,EAA4C49C,IAA5C;AACD;AACF;;AAED;;;;;;AAMA,WAASmF,OAAT,CAAkB/iD,IAAlB,EAAwB;AACtB,UAAM+0C,MAAMD,KAAKC,GAAL,EAAZ;AACA;AACA,UAAM6I,OAAO;AACX1c,aAAO,SADI;AAEXlhC,UAFW;AAGXqjD,aAAOF,OAAOnjD,IAAP;AAHI,KAAb;;AAMA,QAAImjD,OAAO79C,cAAP,CAAsBtF,IAAtB,CAAJ,EAAiC;AAC/B,YAAMujD,UAAUxO,MAAMoO,OAAOnjD,IAAP,CAAtB;AACA49C,WAAK17C,KAAL,GAAa6yC,GAAb;AACA6I,WAAK2F,OAAL,GAAeA,OAAf;;AAEAr+C,UAAK,SAAQlF,IAAK,cAAaujD,OAAQ,YAAvC,EAAoD3F,IAApD;AACD,KAND,MAMO;AACLh+B,WAAM,SAAQ5f,IAAK,wBAAnB,EAA4C49C,IAA5C;AACD;AACF;;AAED,SAAO;AACLwF,QADK;AAELE,WAFK;AAGLP;AAHK,GAAP;AAKD,C;;;;;;;;;;;;kBCtGuBT,iB;;AAPxB;;;;;;AACA;;;;;;AAMe,SAASA,iBAAT,CAA4B3mB,KAA5B,EAAmC;AAChD,MAAI,EAAE+Q,MAAF,KAAa/Q,KAAjB;;AAEA;AACA;AACA,MAAI+Q,OAAOhiC,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AAC3BgiC,aAAS,OAAT;AACD;;AAED,QAAM+W,kBAAkB,4BAAoB9nB,KAApB,CAAxB;AACA,QAAM+nB,OAAO/nB,MAAMtL,QAAN,CAAevB,KAAf,CAAqB,CAArB,CAAb;AACA7pB,UAAQynC,MAAR,EAAgB+W,eAAhB,EAAiC,GAAGC,IAApC;AACD,C;;;;;;;;;;;;kBC6BuBvnB,oB;AAhDxB;;;;AAIA,SAASwnB,QAAT,CAAmBhoB,KAAnB,EAA0B;AACxB,QAAM,EAAEC,SAAF,EAAaxtB,KAAb,KAAuButB,KAA7B;AACA,QAAMI,UAAW,GAAEH,SAAU,eAAcxtB,KAAM,EAAjD;;AAEA,MAAI,CAACw1C,OAAD,EAAUj7C,OAAV,IAAqBgzB,MAAMtL,QAA/B;;AAEA,MAAI1qB,MAAJ;AACA,MAAI88B,QAAQ,EAAZ;AACA,MAAImhB,QAAQl5C,QAAR,CAAiB,OAAjB,CAAJ,EAA+B;AAC7B;AACA/E,aAAU,GAAEo2B,OAAQ,MAAK6nB,QAAQjxB,WAAR,EAAsB,EAA/C;AACD,GAHD,MAGO,IAAIixB,QAAQl5C,QAAR,CAAiB,OAAjB,KAA6Bk5C,QAAQl5C,QAAR,CAAiB,SAAjB,CAA7B,IAA4Dk5C,QAAQl5C,QAAR,CAAiB,OAAjB,CAAhE,EAA2F;AAChG;AACA/E,aAAU,GAAEg2B,MAAMtL,QAAN,CAAe,CAAf,CAAkB,KAAIsL,MAAMtL,QAAN,CAAe,CAAf,CAAkB,EAApD;AACAoS,YAAQ9G,MAAMtL,QAAN,CAAe,CAAf,CAAR;AACA1nB,cAAUgzB,MAAMtL,QAAN,CAAe,CAAf,CAAV;AACD,GALM,MAKA,IAAIuzB,QAAQl5C,QAAR,CAAiB,SAAjB,CAAJ,EAAiC;AACtC;AACA/E,aAAU,GAAEg2B,MAAMtL,QAAN,CAAe,CAAf,CAAkB,KAAIsL,MAAMtL,QAAN,CAAe,CAAf,CAAkB,EAApD;AACAoS,YAAQ9G,MAAMtL,QAAN,CAAe,CAAf,CAAR;AACA1nB,cAAW,GAAEgzB,MAAMtL,QAAN,CAAe,CAAf,CAAkB,IAAGsL,MAAMtL,QAAN,CAAe,CAAf,CAAkB,IAAGsL,MAAMtL,QAAN,CAAe,CAAf,CAAkB,EAAzE;AACD,GALM,MAKA,IAAIuzB,QAAQl5C,QAAR,CAAiB,SAAjB,CAAJ,EAAiC;AACtC;AACA/E,aAAU,GAAEo2B,OAAQ,YAApB;AACApzB,cAAU,EAAV;AACD,GAJM,MAIA;AACL;AACAhD,aAAU,GAAEo2B,OAAQ,MAAKpzB,QAAQF,IAAK,MAAKm7C,OAAQ,EAAnD;AACD;;AAED,SAAO,EAAEj+C,MAAF,EAAU88B,KAAV,EAAiB95B,OAAjB,EAAP;AACD;;AAED;;;;;;;;;;;AAWe,SAASwzB,oBAAT,CAA+BR,KAA/B,EAAsC;AACnD;AACA,MAAI,CAAC,OAAD,EAAU,gBAAV,EAA4BjxB,QAA5B,CAAqCixB,MAAM+Q,MAA3C,CAAJ,EAAwD;AACtDznC,YAAQ02B,MAAM+Q,MAAd,EAAsB,GAAG/Q,MAAMtL,QAA/B;AACA;AACD,GAHD,MAGO,IAAIsL,MAAM+Q,MAAN,KAAiB,UAArB,EAAiC;AACtCznC,YAAQ4a,QAAR;AACA;AACD;;AAED,QAAM,EAAEla,MAAF,EAAU88B,KAAV,EAAiB95B,OAAjB,KAA6Bg7C,SAAShoB,KAAT,CAAnC;AACA12B,UAAQ02B,MAAM+Q,MAAd,EAAsB/mC,MAAtB,EAA8B88B,KAA9B,EAAqC95B,OAArC;AACD,C;;;;;;AC5DD,WAAW,mBAAO,CAAC,CAAqB;AACxC,uCAAuC,4BAA4B;AACnE,yCAAyC;AACzC;AACA;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2FAA2F,aAAa;AACxG;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uEAAuE,aAAa;AACpF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA,0EAA0E,aAAa;AACvF;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;;AC5pBnB;;;;AACA;;;;AACA;;;;;;AAEA;;;;kBAIe,CACb,EAAE3I,MAAM,MAAR,EAAgBu+C,IAAI9hB,gBAApB,EADa,EAEb,EAAEz8B,MAAM,QAAR,EAAkBu+C,IAAI98C,gBAAtB,EAFa,EAGb,EAAEzB,MAAM,QAAR,EAAkBu+C,IAAItY,gBAAtB,EAHa,C;;;;;;;;;;;;;;;;;;;;;kBCwBS4d,S;;AApBxB;;;;AACA;;;;AACA;;IAAYvyC,O;;AAEZ;;AACA;;AACA;;;;AAGA;;AACA;;AAGA;;AACA;;AACA;;AAGA;;;;;;AANA;;;AAJA;AApBA;;;;;;;;;;;AAWA;A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gwB,0BAAP;AACD,C;;;;;;AClID;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,+CAA+C;;AAE/C;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,GAAW;AACjC;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC,uCAAuC;AACvC;;AAEA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,6BAA6B;AAClD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,8EAA8E;AAC9E,GAAG;AACH;;AAEA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;;;;;AC3HA,cAAc,mBAAO,CAAC,GAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AA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CA,CAAC;AACD;;AAEA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q,2CAA2C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAE/M;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,iDAAiD,SAAS,uBAAuB,EAAE;AACnF;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,CAAC,EAAE,0DAA0D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,CAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG,cAAc;AACvH;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA,gDAAgD;AAChD;AACA;AACA,yDAAyD,sBAAsB,IAAI;AACnF;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA,CAAC,EAAE,iBAAiB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,CAAC,EAAE,sBAAsB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;;AAEA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q,2CAA2C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAE/M;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,KAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,CAAC,EAAE,uDAAuD;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,CAAC,GAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,cAAc;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA,2FAA2F,aAAa;AACxG;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,2BAA2B,gBAAgB,gDAAgD;AAC3F;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,EAAE,cAAc;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAE/M;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,GAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA,CAAC,GAAG;;AAEJ,CAAC,GAAG;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,0BAA0B;AAC1B;AACA;AACA;AACA,yDAAyD;AACzD,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,CAAC,GA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CA,YAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mCAAmC;AACnC;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA,eAAe,oCAAoC;AACnD;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA,iDAAiD;AACjD;;AAEA;AACA;;;AAGA,sB;;;;;;;AC3Ia;AACb,mBAAmB,mBAAO,CAAC,GAAa;AACxC,OAAO,yCAAyC,GAAG,mBAAO,CAAC,GAAgB;AAC3E;AACA;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,GAAQ;;AAEpB,OAAO,QAAQ;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,eAAe;AACzD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oEAAoE,OAAO,KAAK;AAChF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,wBAAwB;AACxC;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA,aAAa,mBAAO,CAAC,GAAa;AAClC;;AAEA;AACA;;AAEA;;AAEA,sBAAsB;AACtB;AACA,sBAAsB,2CAA2C,EAAE;AACnE;;AAEA;;;;;;;;ACpOA,8CAAa;;AAEb;AACA;AACA,kBAAkB,cAAc;AAChC;;AAEA;AACA;AACA,kBAAkB,aAAa,EAAE,EAAE,KAAK;AACxC;;AAEA;AACA;AACA,kBAAkB,aAAa,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO;AAC9D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;;AAEA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,GAAe;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B,qBAAqB,SAAS;AAC9B;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;AClKD,oBAAoB,mBAAO,CAAC,GAAe;AAC3C,cAAc,mBAAO,CAAC,GAAS;;AAE/B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wDAAwD,uCAAuC;AAC/F,sDAAsD,qCAAqC;;AAE3F;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF,CAAC;;AAED;;;;;;;;AChFY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvJA,oBAAoB,mBAAO,CAAC,GAAe;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B;;AAE3B;;AAEA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,SAAS;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;AC/Fa;AACb;AACA;AACA;AACA;;;;;;;;ACJa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACtCa;AACb,0CAA0C,EAAE,GAAG,QAAQ,IAAI,EAAE,WAAW,EAAE,UAAU,uEAAuE;AAC3J;AACA;AACA,qCAAqC,EAAE,EAAE,QAAQ,KAAK,WAAW,EAAE;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,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","file":"kandy.cpaas.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Kandy\"] = factory();\n\telse\n\t\troot[\"Kandy\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 205);\n","import { TASK_CANCEL, TERMINATE, SAGA_LOCATION, SAGA_ACTION, IO, SELF_CANCELLATION } from '@redux-saga/symbols';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { array, notUndef, pattern, multicast, channel, undef, effect, task, func, buffer, string, object } from '@redux-saga/is';\nimport delayP from '@redux-saga/delay-p';\n\nvar konst = function konst(v) {\n  return function () {\n    return v;\n  };\n};\nvar kTrue =\n/*#__PURE__*/\nkonst(true);\n\nvar noop = function noop() {};\n\nif (process.env.NODE_ENV !== 'production' && typeof Proxy !== 'undefined') {\n  noop =\n  /*#__PURE__*/\n  new Proxy(noop, {\n    set: function set() {\n      throw internalErr('There was an attempt to assign a property to internal `noop` function.');\n    }\n  });\n}\nvar identity = function identity(v) {\n  return v;\n};\nvar hasSymbol = typeof Symbol === 'function';\nvar asyncIteratorSymbol = hasSymbol && Symbol.asyncIterator ? Symbol.asyncIterator : '@@asyncIterator';\nfunction check(value, predicate, error) {\n  if (!predicate(value)) {\n    throw new Error(error);\n  }\n}\nvar assignWithSymbols = function assignWithSymbols(target, source) {\n  _extends(target, source);\n\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(source).forEach(function (s) {\n      target[s] = source[s];\n    });\n  }\n};\nvar flatMap = function flatMap(mapper, arr) {\n  var _ref;\n\n  return (_ref = []).concat.apply(_ref, arr.map(mapper));\n};\nfunction remove(array, item) {\n  var index = array.indexOf(item);\n\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nfunction once(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    fn();\n  };\n}\n\nvar kThrow = function kThrow(err) {\n  throw err;\n};\n\nvar kReturn = function kReturn(value) {\n  return {\n    value: value,\n    done: true\n  };\n};\n\nfunction makeIterator(next, thro, name) {\n  if (thro === void 0) {\n    thro = kThrow;\n  }\n\n  if (name === void 0) {\n    name = 'iterator';\n  }\n\n  var iterator = {\n    meta: {\n      name: name\n    },\n    next: next,\n    throw: thro,\n    return: kReturn,\n    isSagaIterator: true\n  };\n\n  if (typeof Symbol !== 'undefined') {\n    iterator[Symbol.iterator] = function () {\n      return iterator;\n    };\n  }\n\n  return iterator;\n}\nfunction logError(error, _ref2) {\n  var sagaStack = _ref2.sagaStack;\n\n  /*eslint-disable no-console*/\n  console.error(error);\n  console.error(sagaStack);\n}\nvar internalErr = function internalErr(err) {\n  return new Error(\"\\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\\n  in redux-saga code and not yours. Thanks for reporting this in the project's github repo.\\n  Error: \" + err + \"\\n\");\n};\nvar createSetContextWarning = function createSetContextWarning(ctx, props) {\n  return (ctx ? ctx + '.' : '') + \"setContext(props): argument \" + props + \" is not a plain object\";\n};\nvar FROZEN_ACTION_ERROR = \"You can't put (a.k.a. dispatch from saga) frozen actions.\\nWe have to define a special non-enumerable property on those actions for scheduling purposes.\\nOtherwise you wouldn't be able to communicate properly between sagas & other subscribers (action ordering would become far less predictable).\\nIf you are using redux and you care about this behaviour (frozen actions),\\nthen you might want to switch to freezing actions in a middleware rather than in action creator.\\nExample implementation:\\n\\nconst freezeActions = store => next => action => next(Object.freeze(action))\\n\"; // creates empty, but not-holey array\n\nvar createEmptyArray = function createEmptyArray(n) {\n  return Array.apply(null, new Array(n));\n};\nvar wrapSagaDispatch = function wrapSagaDispatch(dispatch) {\n  return function (action) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(action, function (ac) {\n        return !Object.isFrozen(ac);\n      }, FROZEN_ACTION_ERROR);\n    }\n\n    return dispatch(Object.defineProperty(action, SAGA_ACTION, {\n      value: true\n    }));\n  };\n};\nvar shouldTerminate = function shouldTerminate(res) {\n  return res === TERMINATE;\n};\nvar shouldCancel = function shouldCancel(res) {\n  return res === TASK_CANCEL;\n};\nvar shouldComplete = function shouldComplete(res) {\n  return shouldTerminate(res) || shouldCancel(res);\n};\nfunction createAllStyleChildCallbacks(shape, parentCallback) {\n  var keys = Object.keys(shape);\n  var totalCount = keys.length;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(totalCount, function (c) {\n      return c > 0;\n    }, 'createAllStyleChildCallbacks: get an empty array or object');\n  }\n\n  var completedCount = 0;\n  var completed;\n  var results = array(shape) ? createEmptyArray(totalCount) : {};\n  var childCallbacks = {};\n\n  function checkEnd() {\n    if (completedCount === totalCount) {\n      completed = true;\n      parentCallback(results);\n    }\n  }\n\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || shouldComplete(res)) {\n        parentCallback.cancel();\n        parentCallback(res, isErr);\n      } else {\n        results[key] = res;\n        completedCount++;\n        checkEnd();\n      }\n    };\n\n    chCbAtKey.cancel = noop;\n    childCallbacks[key] = chCbAtKey;\n  });\n\n  parentCallback.cancel = function () {\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCallbacks[key].cancel();\n      });\n    }\n  };\n\n  return childCallbacks;\n}\nfunction getMetaInfo(fn) {\n  return {\n    name: fn.name || 'anonymous',\n    location: getLocation(fn)\n  };\n}\nfunction getLocation(instrumented) {\n  return instrumented[SAGA_LOCATION];\n}\n\nvar BUFFER_OVERFLOW = \"Channel's Buffer overflow!\";\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\nvar ON_OVERFLOW_EXPAND = 4;\nvar zeroBuffer = {\n  isEmpty: kTrue,\n  put: noop,\n  take: noop\n};\n\nfunction ringBuffer(limit, overflowAction) {\n  if (limit === void 0) {\n    limit = 10;\n  }\n\n  var arr = new Array(limit);\n  var length = 0;\n  var pushIndex = 0;\n  var popIndex = 0;\n\n  var push = function push(it) {\n    arr[pushIndex] = it;\n    pushIndex = (pushIndex + 1) % limit;\n    length++;\n  };\n\n  var take = function take() {\n    if (length != 0) {\n      var it = arr[popIndex];\n      arr[popIndex] = null;\n      length--;\n      popIndex = (popIndex + 1) % limit;\n      return it;\n    }\n  };\n\n  var flush = function flush() {\n    var items = [];\n\n    while (length) {\n      items.push(take());\n    }\n\n    return items;\n  };\n\n  return {\n    isEmpty: function isEmpty() {\n      return length == 0;\n    },\n    put: function put(it) {\n      if (length < limit) {\n        push(it);\n      } else {\n        var doubledLimit;\n\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n\n          case ON_OVERFLOW_SLIDE:\n            arr[pushIndex] = it;\n            pushIndex = (pushIndex + 1) % limit;\n            popIndex = pushIndex;\n            break;\n\n          case ON_OVERFLOW_EXPAND:\n            doubledLimit = 2 * limit;\n            arr = flush();\n            length = arr.length;\n            pushIndex = arr.length;\n            popIndex = 0;\n            arr.length = doubledLimit;\n            limit = doubledLimit;\n            push(it);\n            break;\n\n          default: // DROP\n\n        }\n      }\n    },\n    take: take,\n    flush: flush\n  };\n}\n\nvar none = function none() {\n  return zeroBuffer;\n};\nvar fixed = function fixed(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_THROW);\n};\nvar dropping = function dropping(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_DROP);\n};\nvar sliding = function sliding(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_SLIDE);\n};\nvar expanding = function expanding(initialSize) {\n  return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);\n};\n\nvar buffers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  none: none,\n  fixed: fixed,\n  dropping: dropping,\n  sliding: sliding,\n  expanding: expanding\n});\n\nvar TAKE = 'TAKE';\nvar PUT = 'PUT';\nvar ALL = 'ALL';\nvar RACE = 'RACE';\nvar CALL = 'CALL';\nvar CPS = 'CPS';\nvar FORK = 'FORK';\nvar JOIN = 'JOIN';\nvar CANCEL = 'CANCEL';\nvar SELECT = 'SELECT';\nvar ACTION_CHANNEL = 'ACTION_CHANNEL';\nvar CANCELLED = 'CANCELLED';\nvar FLUSH = 'FLUSH';\nvar GET_CONTEXT = 'GET_CONTEXT';\nvar SET_CONTEXT = 'SET_CONTEXT';\n\nvar effectTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  TAKE: TAKE,\n  PUT: PUT,\n  ALL: ALL,\n  RACE: RACE,\n  CALL: CALL,\n  CPS: CPS,\n  FORK: FORK,\n  JOIN: JOIN,\n  CANCEL: CANCEL,\n  SELECT: SELECT,\n  ACTION_CHANNEL: ACTION_CHANNEL,\n  CANCELLED: CANCELLED,\n  FLUSH: FLUSH,\n  GET_CONTEXT: GET_CONTEXT,\n  SET_CONTEXT: SET_CONTEXT\n});\n\nvar TEST_HINT = '\\n(HINT: if you are getting these errors in tests, consider using createMockTask from @redux-saga/testing-utils)';\n\nvar makeEffect = function makeEffect(type, payload) {\n  var _ref;\n\n  return _ref = {}, _ref[IO] = true, _ref.combinator = false, _ref.type = type, _ref.payload = payload, _ref;\n};\n\nvar isForkEffect = function isForkEffect(eff) {\n  return effect(eff) && eff.type === FORK;\n};\n\nvar detach = function detach(eff) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(eff, isForkEffect, 'detach(eff): argument must be a fork effect');\n  }\n\n  return makeEffect(FORK, _extends({}, eff.payload, {\n    detached: true\n  }));\n};\nfunction take(patternOrChannel, multicastPattern) {\n  if (patternOrChannel === void 0) {\n    patternOrChannel = '*';\n  }\n\n  if (process.env.NODE_ENV !== 'production' && arguments.length) {\n    check(arguments[0], notUndef, 'take(patternOrChannel): patternOrChannel is undefined');\n  }\n\n  if (pattern(patternOrChannel)) {\n    return makeEffect(TAKE, {\n      pattern: patternOrChannel\n    });\n  }\n\n  if (multicast(patternOrChannel) && notUndef(multicastPattern) && pattern(multicastPattern)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel,\n      pattern: multicastPattern\n    });\n  }\n\n  if (channel(patternOrChannel)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    throw new Error(\"take(patternOrChannel): argument \" + patternOrChannel + \" is not valid channel or a valid pattern\");\n  }\n}\nvar takeMaybe = function takeMaybe() {\n  var eff = take.apply(void 0, arguments);\n  eff.payload.maybe = true;\n  return eff;\n};\nfunction put(channel$1, action) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      check(channel$1, notUndef, 'put(channel, action): argument channel is undefined');\n      check(channel$1, channel, \"put(channel, action): argument \" + channel$1 + \" is not a valid channel\");\n      check(action, notUndef, 'put(channel, action): argument action is undefined');\n    } else {\n      check(channel$1, notUndef, 'put(action): argument action is undefined');\n    }\n  }\n\n  if (undef(action)) {\n    action = channel$1; // `undefined` instead of `null` to make default parameter work\n\n    channel$1 = undefined;\n  }\n\n  return makeEffect(PUT, {\n    channel: channel$1,\n    action: action\n  });\n}\nvar putResolve = function putResolve() {\n  var eff = put.apply(void 0, arguments);\n  eff.payload.resolve = true;\n  return eff;\n};\nfunction all(effects) {\n  var eff = makeEffect(ALL, effects);\n  eff.combinator = true;\n  return eff;\n}\nfunction race(effects) {\n  var eff = makeEffect(RACE, effects);\n  eff.combinator = true;\n  return eff;\n} // this match getFnCallDescriptor logic\n\nvar validateFnDescriptor = function validateFnDescriptor(effectName, fnDescriptor) {\n  check(fnDescriptor, notUndef, effectName + \": argument fn is undefined or null\");\n\n  if (func(fnDescriptor)) {\n    return;\n  }\n\n  var context = null;\n  var fn;\n\n  if (array(fnDescriptor)) {\n    context = fnDescriptor[0];\n    fn = fnDescriptor[1];\n    check(fn, notUndef, effectName + \": argument of type [context, fn] has undefined or null `fn`\");\n  } else if (object(fnDescriptor)) {\n    context = fnDescriptor.context;\n    fn = fnDescriptor.fn;\n    check(fn, notUndef, effectName + \": argument of type {context, fn} has undefined or null `fn`\");\n  } else {\n    check(fnDescriptor, func, effectName + \": argument fn is not function\");\n    return;\n  }\n\n  if (context && string(fn)) {\n    check(context[fn], func, effectName + \": context arguments has no such method - \\\"\" + fn + \"\\\"\");\n    return;\n  }\n\n  check(fn, func, effectName + \": unpacked fn argument (from [context, fn] or {context, fn}) is not a function\");\n};\n\nfunction getFnCallDescriptor(fnDescriptor, args) {\n  var context = null;\n  var fn;\n\n  if (func(fnDescriptor)) {\n    fn = fnDescriptor;\n  } else {\n    if (array(fnDescriptor)) {\n      context = fnDescriptor[0];\n      fn = fnDescriptor[1];\n    } else {\n      context = fnDescriptor.context;\n      fn = fnDescriptor.fn;\n    }\n\n    if (context && string(fn) && func(context[fn])) {\n      fn = context[fn];\n    }\n  }\n\n  return {\n    context: context,\n    fn: fn,\n    args: args\n  };\n}\n\nvar isNotDelayEffect = function isNotDelayEffect(fn) {\n  return fn !== delay;\n};\n\nfunction call(fnDescriptor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    var arg0 = typeof args[0] === 'number' ? args[0] : 'ms';\n    check(fnDescriptor, isNotDelayEffect, \"instead of writing `yield call(delay, \" + arg0 + \")` where delay is an effect from `redux-saga/effects` you should write `yield delay(\" + arg0 + \")`\");\n    validateFnDescriptor('call', fnDescriptor);\n  }\n\n  return makeEffect(CALL, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction apply(context, fn, args) {\n  if (args === void 0) {\n    args = [];\n  }\n\n  var fnDescriptor = [context, fn];\n\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('apply', fnDescriptor);\n  }\n\n  return makeEffect(CALL, getFnCallDescriptor([context, fn], args));\n}\nfunction cps(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('cps', fnDescriptor);\n  }\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return makeEffect(CPS, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction fork(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('fork', fnDescriptor);\n    check(fnDescriptor, function (arg) {\n      return !effect(arg);\n    }, 'fork: argument must not be an effect');\n  }\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return makeEffect(FORK, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction spawn(fnDescriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateFnDescriptor('spawn', fnDescriptor);\n  }\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  return detach(fork.apply(void 0, [fnDescriptor].concat(args)));\n}\nfunction join(taskOrTasks) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      throw new Error('join(...tasks) is not supported any more. Please use join([...tasks]) to join multiple tasks.');\n    }\n\n    if (array(taskOrTasks)) {\n      taskOrTasks.forEach(function (t) {\n        check(t, task, \"join([...tasks]): argument \" + t + \" is not a valid Task object \" + TEST_HINT);\n      });\n    } else {\n      check(taskOrTasks, task, \"join(task): argument \" + taskOrTasks + \" is not a valid Task object \" + TEST_HINT);\n    }\n  }\n\n  return makeEffect(JOIN, taskOrTasks);\n}\nfunction cancel(taskOrTasks) {\n  if (taskOrTasks === void 0) {\n    taskOrTasks = SELF_CANCELLATION;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (arguments.length > 1) {\n      throw new Error('cancel(...tasks) is not supported any more. Please use cancel([...tasks]) to cancel multiple tasks.');\n    }\n\n    if (array(taskOrTasks)) {\n      taskOrTasks.forEach(function (t) {\n        check(t, task, \"cancel([...tasks]): argument \" + t + \" is not a valid Task object \" + TEST_HINT);\n      });\n    } else if (taskOrTasks !== SELF_CANCELLATION && notUndef(taskOrTasks)) {\n      check(taskOrTasks, task, \"cancel(task): argument \" + taskOrTasks + \" is not a valid Task object \" + TEST_HINT);\n    }\n  }\n\n  return makeEffect(CANCEL, taskOrTasks);\n}\nfunction select(selector) {\n  if (selector === void 0) {\n    selector = identity;\n  }\n\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  if (process.env.NODE_ENV !== 'production' && arguments.length) {\n    check(arguments[0], notUndef, 'select(selector, [...]): argument selector is undefined');\n    check(selector, func, \"select(selector, [...]): argument \" + selector + \" is not a function\");\n  }\n\n  return makeEffect(SELECT, {\n    selector: selector,\n    args: args\n  });\n}\n/**\n  channel(pattern, [buffer])    => creates a proxy channel for store actions\n**/\n\nfunction actionChannel(pattern$1, buffer$1) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(pattern$1, pattern, 'actionChannel(pattern,...): argument pattern is not valid');\n\n    if (arguments.length > 1) {\n      check(buffer$1, notUndef, 'actionChannel(pattern, buffer): argument buffer is undefined');\n      check(buffer$1, buffer, \"actionChannel(pattern, buffer): argument \" + buffer$1 + \" is not a valid buffer\");\n    }\n  }\n\n  return makeEffect(ACTION_CHANNEL, {\n    pattern: pattern$1,\n    buffer: buffer$1\n  });\n}\nfunction cancelled() {\n  return makeEffect(CANCELLED, {});\n}\nfunction flush(channel$1) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(channel$1, channel, \"flush(channel): argument \" + channel$1 + \" is not valid channel\");\n  }\n\n  return makeEffect(FLUSH, channel$1);\n}\nfunction getContext(prop) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(prop, string, \"getContext(prop): argument \" + prop + \" is not a string\");\n  }\n\n  return makeEffect(GET_CONTEXT, prop);\n}\nfunction setContext(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(props, object, createSetContextWarning(null, props));\n  }\n\n  return makeEffect(SET_CONTEXT, props);\n}\nvar delay =\n/*#__PURE__*/\ncall.bind(null, delayP);\n\nexport { apply as $, ALL as A, logError as B, CALL as C, wrapSagaDispatch as D, identity as E, FORK as F, GET_CONTEXT as G, buffers as H, detach as I, JOIN as J, take as K, fork as L, cancel as M, call as N, actionChannel as O, PUT as P, sliding as Q, RACE as R, SELECT as S, TAKE as T, delay as U, race as V, effectTypes as W, takeMaybe as X, put as Y, putResolve as Z, all as _, CPS as a, cps as a0, spawn as a1, join as a2, select as a3, cancelled as a4, flush as a5, getContext as a6, setContext as a7, CANCEL as b, check as c, ACTION_CHANNEL as d, expanding as e, CANCELLED as f, FLUSH as g, SET_CONTEXT as h, internalErr as i, getMetaInfo as j, kTrue as k, createAllStyleChildCallbacks as l, createEmptyArray as m, none as n, once as o, assignWithSymbols as p, makeIterator as q, remove as r, shouldComplete as s, noop as t, flatMap as u, getLocation as v, createSetContextWarning as w, asyncIteratorSymbol as x, shouldCancel as y, shouldTerminate as z };\n","import '@redux-saga/symbols';\nimport '@babel/runtime/helpers/esm/extends';\nimport { channel, stringableFunc, func, notUndef } from '@redux-saga/is';\nimport { q as makeIterator, K as take, L as fork, M as cancel, N as call, O as actionChannel, Q as sliding, U as delay, V as race, c as check } from './io-6de156f3.js';\nexport { O as actionChannel, _ as all, $ as apply, N as call, M as cancel, a4 as cancelled, a0 as cps, U as delay, W as effectTypes, a5 as flush, L as fork, a6 as getContext, a2 as join, Y as put, Z as putResolve, V as race, a3 as select, a7 as setContext, a1 as spawn, K as take, X as takeMaybe } from './io-6de156f3.js';\nimport '@redux-saga/delay-p';\n\nvar done = function done(value) {\n  return {\n    done: true,\n    value: value\n  };\n};\n\nvar qEnd = {};\nfunction safeName(patternOrChannel) {\n  if (channel(patternOrChannel)) {\n    return 'channel';\n  }\n\n  if (stringableFunc(patternOrChannel)) {\n    return String(patternOrChannel);\n  }\n\n  if (func(patternOrChannel)) {\n    return patternOrChannel.name;\n  }\n\n  return String(patternOrChannel);\n}\nfunction fsmIterator(fsm, startState, name) {\n  var stateUpdater,\n      errorState,\n      effect,\n      nextState = startState;\n\n  function next(arg, error) {\n    if (nextState === qEnd) {\n      return done(arg);\n    }\n\n    if (error && !errorState) {\n      nextState = qEnd;\n      throw error;\n    } else {\n      stateUpdater && stateUpdater(arg);\n      var currentState = error ? fsm[errorState](error) : fsm[nextState]();\n      nextState = currentState.nextState;\n      effect = currentState.effect;\n      stateUpdater = currentState.stateUpdater;\n      errorState = currentState.errorState;\n      return nextState === qEnd ? done(arg) : effect;\n    }\n  }\n\n  return makeIterator(next, function (error) {\n    return next(null, error);\n  }, name);\n}\n\nfunction takeEvery(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action,\n      setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q1',\n        effect: yFork(action)\n      };\n    }\n  }, 'q1', \"takeEvery(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction takeLatest(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yCancel = function yCancel(task) {\n    return {\n      done: false,\n      value: cancel(task)\n    };\n  };\n\n  var task, action;\n\n  var setTask = function setTask(t) {\n    return task = t;\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return task ? {\n        nextState: 'q3',\n        effect: yCancel(task)\n      } : {\n        nextState: 'q1',\n        effect: yFork(action),\n        stateUpdater: setTask\n      };\n    },\n    q3: function q3() {\n      return {\n        nextState: 'q1',\n        effect: yFork(action),\n        stateUpdater: setTask\n      };\n    }\n  }, 'q1', \"takeLatest(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction takeLeading(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yCall = function yCall(ac) {\n    return {\n      done: false,\n      value: call.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action;\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q1',\n        effect: yCall(action)\n      };\n    }\n  }, 'q1', \"takeLeading(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nfunction throttle(delayLength, pattern, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action, channel;\n  var yActionChannel = {\n    done: false,\n    value: actionChannel(pattern, sliding(1))\n  };\n\n  var yTake = function yTake() {\n    return {\n      done: false,\n      value: take(channel)\n    };\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yDelay = {\n    done: false,\n    value: delay(delayLength)\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setChannel = function setChannel(ch) {\n    return channel = ch;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yActionChannel,\n        stateUpdater: setChannel\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q3',\n        effect: yTake(),\n        stateUpdater: setAction\n      };\n    },\n    q3: function q3() {\n      return {\n        nextState: 'q4',\n        effect: yFork(action)\n      };\n    },\n    q4: function q4() {\n      return {\n        nextState: 'q2',\n        effect: yDelay\n      };\n    }\n  }, 'q1', \"throttle(\" + safeName(pattern) + \", \" + worker.name + \")\");\n}\n\nfunction retry(maxTries, delayLength, fn) {\n  var counter = maxTries;\n\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var yCall = {\n    done: false,\n    value: call.apply(void 0, [fn].concat(args))\n  };\n  var yDelay = {\n    done: false,\n    value: delay(delayLength)\n  };\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yCall,\n        errorState: 'q10'\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: qEnd\n      };\n    },\n    q10: function q10(error) {\n      counter -= 1;\n\n      if (counter <= 0) {\n        throw error;\n      }\n\n      return {\n        nextState: 'q1',\n        effect: yDelay\n      };\n    }\n  }, 'q1', \"retry(\" + fn.name + \")\");\n}\n\nfunction debounceHelper(delayLength, patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action, raceOutput;\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n  var yRace = {\n    done: false,\n    value: race({\n      action: take(patternOrChannel),\n      debounce: delay(delayLength)\n    })\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yNoop = function yNoop(value) {\n    return {\n      done: false,\n      value: value\n    };\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setRaceOutput = function setRaceOutput(ro) {\n    return raceOutput = ro;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: 'q2',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: 'q3',\n        effect: yRace,\n        stateUpdater: setRaceOutput\n      };\n    },\n    q3: function q3() {\n      return raceOutput.debounce ? {\n        nextState: 'q1',\n        effect: yFork(action)\n      } : {\n        nextState: 'q2',\n        effect: yNoop(raceOutput.action),\n        stateUpdater: setAction\n      };\n    }\n  }, 'q1', \"debounce(\" + safeName(patternOrChannel) + \", \" + worker.name + \")\");\n}\n\nvar validateTakeEffect = function validateTakeEffect(fn, patternOrChannel, worker) {\n  check(patternOrChannel, notUndef, fn.name + \" requires a pattern or channel\");\n  check(worker, notUndef, fn.name + \" requires a saga parameter\");\n};\n\nfunction takeEvery$1(patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeEvery$1, patternOrChannel, worker);\n  }\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return fork.apply(void 0, [takeEvery, patternOrChannel, worker].concat(args));\n}\nfunction takeLatest$1(patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeLatest$1, patternOrChannel, worker);\n  }\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  return fork.apply(void 0, [takeLatest, patternOrChannel, worker].concat(args));\n}\nfunction takeLeading$1(patternOrChannel, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeLeading$1, patternOrChannel, worker);\n  }\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    args[_key3 - 2] = arguments[_key3];\n  }\n\n  return fork.apply(void 0, [takeLeading, patternOrChannel, worker].concat(args));\n}\nfunction throttle$1(ms, pattern, worker) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(pattern, notUndef, 'throttle requires a pattern');\n    check(worker, notUndef, 'throttle requires a saga parameter');\n  }\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {\n    args[_key4 - 3] = arguments[_key4];\n  }\n\n  return fork.apply(void 0, [throttle, ms, pattern, worker].concat(args));\n}\nfunction retry$1(maxTries, delayLength, worker) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 3 ? _len5 - 3 : 0), _key5 = 3; _key5 < _len5; _key5++) {\n    args[_key5 - 3] = arguments[_key5];\n  }\n\n  return call.apply(void 0, [retry, maxTries, delayLength, worker].concat(args));\n}\nfunction debounce(delayLength, pattern, worker) {\n  for (var _len6 = arguments.length, args = new Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {\n    args[_key6 - 3] = arguments[_key6];\n  }\n\n  return fork.apply(void 0, [debounceHelper, delayLength, pattern, worker].concat(args));\n}\n\nexport { debounce, retry$1 as retry, takeEvery$1 as takeEvery, takeLatest$1 as takeLatest, takeLeading$1 as takeLeading, throttle$1 as throttle };\n","export * from '@redux-saga/core/effects';\n","import createManager from 'kandy-logger'\nimport defaultOptions from './config'\n\n// Logs generated as a result of invoking the public API will contain this tag\nexport const API_LOG_TAG = 'API invoked: '\n\n/**\n * Create the LogManager right away so that it is available. The SDK has not\n *    been instantiated yet, so we have to use the default options until we get\n *    the application's configs.\n */\n/**\n * TODO: There is a technical debt associated with having a loggerManager along with it's\n * loggers created at the global scope. Multiple instances of the SDK would end up sharing\n * the log manager and therefore loggers.\n */\nconst manager = createManager(defaultOptions)\nexport const logManager = manager\n","var _ = require('./lodash.min').runInContext();\nmodule.exports = require('./fp/_baseConvert')(_, _);\n","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};","import { TASK, SAGA_ACTION, MULTICAST, IO } from '@redux-saga/symbols';\n\nvar undef = function undef(v) {\n  return v === null || v === undefined;\n};\nvar notUndef = function notUndef(v) {\n  return v !== null && v !== undefined;\n};\nvar func = function func(f) {\n  return typeof f === 'function';\n};\nvar number = function number(n) {\n  return typeof n === 'number';\n};\nvar string = function string(s) {\n  return typeof s === 'string';\n};\nvar array = Array.isArray;\nvar object = function object(obj) {\n  return obj && !array(obj) && typeof obj === 'object';\n};\nvar promise = function promise(p) {\n  return p && func(p.then);\n};\nvar iterator = function iterator(it) {\n  return it && func(it.next) && func(it.throw);\n};\nvar iterable = function iterable(it) {\n  return it && func(Symbol) ? func(it[Symbol.iterator]) : array(it);\n};\nvar task = function task(t) {\n  return t && t[TASK];\n};\nvar sagaAction = function sagaAction(a) {\n  return Boolean(a && a[SAGA_ACTION]);\n};\nvar observable = function observable(ob) {\n  return ob && func(ob.subscribe);\n};\nvar buffer = function buffer(buf) {\n  return buf && func(buf.isEmpty) && func(buf.take) && func(buf.put);\n};\nvar pattern = function pattern(pat) {\n  return pat && (string(pat) || symbol(pat) || func(pat) || array(pat) && pat.every(pattern));\n};\nvar channel = function channel(ch) {\n  return ch && func(ch.take) && func(ch.close);\n};\nvar stringableFunc = function stringableFunc(f) {\n  return func(f) && f.hasOwnProperty('toString');\n};\nvar symbol = function symbol(sym) {\n  return Boolean(sym) && typeof Symbol === 'function' && sym.constructor === Symbol && sym !== Symbol.prototype;\n};\nvar multicast = function multicast(ch) {\n  return channel(ch) && ch[MULTICAST];\n};\nvar effect = function effect(eff) {\n  return eff && eff[IO];\n};\n\nexport { array, buffer, channel, effect, func, iterable, iterator, multicast, notUndef, number, object, observable, pattern, promise, sagaAction, string, stringableFunc, symbol, task, undef };\n","var createSymbol = function createSymbol(name) {\n  return \"@@redux-saga/\" + name;\n};\n\nvar CANCEL =\n/*#__PURE__*/\ncreateSymbol('CANCEL_PROMISE');\nvar CHANNEL_END_TYPE =\n/*#__PURE__*/\ncreateSymbol('CHANNEL_END');\nvar IO =\n/*#__PURE__*/\ncreateSymbol('IO');\nvar MATCH =\n/*#__PURE__*/\ncreateSymbol('MATCH');\nvar MULTICAST =\n/*#__PURE__*/\ncreateSymbol('MULTICAST');\nvar SAGA_ACTION =\n/*#__PURE__*/\ncreateSymbol('SAGA_ACTION');\nvar SELF_CANCELLATION =\n/*#__PURE__*/\ncreateSymbol('SELF_CANCELLATION');\nvar TASK =\n/*#__PURE__*/\ncreateSymbol('TASK');\nvar TASK_CANCEL =\n/*#__PURE__*/\ncreateSymbol('TASK_CANCEL');\nvar TERMINATE =\n/*#__PURE__*/\ncreateSymbol('TERMINATE');\nvar SAGA_LOCATION =\n/*#__PURE__*/\ncreateSymbol('LOCATION');\n\nexport { CANCEL, CHANNEL_END_TYPE, IO, MATCH, MULTICAST, SAGA_ACTION, SAGA_LOCATION, SELF_CANCELLATION, TASK, TASK_CANCEL, TERMINATE };\n","/**\n * The Basic Error object. Provides information about an error that occurred in the SDK.\n * @public\n * @static\n * @typedef {Object} BasicError\n * @memberof api\n * @property {string} code The code of the error. If no code is known, this will be 'NO_CODE'.\n * @property {string} message A human-readable message to describe the error. If no message is known, this will be 'An error occurred'.\n */\n\nexport {\n  authCodes,\n  callCodes,\n  callHistoryCodes,\n  groupsCodes,\n  messagingCodes,\n  mwiCodes,\n  sipEventCodes,\n  clickToCallCodes,\n  bridgeCodes,\n  subscriptionCodes,\n  presenceCodes,\n  usersCodes,\n  webrtcCodes\n} from './codes'\n\nexport default class BasicError {\n  constructor ({ message, code }) {\n    this.name = 'BasicError'\n    this.code = code || 'NO_CODE'\n    this.message = message ? `${message}` : 'An error occurred.'\n  }\n}\n","export const platforms = {\n  LINK: 'link',\n  UC: 'uc',\n  CPAAS: 'cpaas'\n}\n\nexport const notificationTypes = {\n  WEBSOCKET: 'websocket',\n  PUSH: 'push'\n}\n\nexport const connCheckResponsibility = {\n  CLIENT: 'client',\n  SERVER: 'server'\n}\n\nexport const connCheckMethods = {\n  KEEP_ALIVE: 'keepAlive',\n  PING_PONG: 'pingPong'\n}\n","var core = module.exports = { version: '2.6.12' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","import { cloneDeep } from 'lodash/fp'\nimport { SUBSCRIPTION_STATE } from '../constants'\nimport { platforms } from '../../constants'\n\n/*\n * Redux-saga selector functions.\n * Used with the `select` effect in sagas to Retrieves\n *      specific portions of the state.\n */\n\n/**\n * Retrieves the config options provided by the auth plugin.\n * @method getAuthConfig\n * @return {Object}\n */\nexport function getAuthConfig (state) {\n  return cloneDeep(state.config.authentication)\n}\n\n/**\n * Retrieves the subscription information of a platform.\n * @method getSubscriptionInfo\n * @param  {string} [platform] - The backend platform in use.\n * @return {Object}\n */\nexport function getSubscriptionInfo (state, platform) {\n  if (!platform) {\n    platform = getPlatform(state)\n  }\n\n  if (state.authentication.subscription) {\n    return cloneDeep(state.authentication.subscription[platform])\n  } else {\n    return undefined\n  }\n}\n\n/**\n * Retrieves the connection information of a platform.\n * Includes the info needed to make requests to that platform.\n * @method getConnectionInfo\n * @param  {string} [platform] - The backend platform in use.\n * @return {Object}\n */\nexport function getConnectionInfo (state, platform) {\n  if (!platform) {\n    platform = getPlatform(state)\n  }\n\n  if (state.authentication.connection) {\n    return cloneDeep(state.authentication.connection[platform])\n  } else {\n    return undefined\n  }\n}\n\n/**\n * Retrieves the domain of the callee address information of a platform.\n * @method getDomain\n * @return {string}\n */\nexport function getDomain (state) {\n  const { username = '', identity = username } = getUserInfo(state)\n  const [, domain = ''] = identity.split('@')\n  return domain\n}\n\n/**\n * Retrieves the identity of the currently logged-in user.\n * The identity is of the form: <userName>@<domain>\n * @method getIdentity\n * @return {string}\n */\nexport function getIdentity (state) {\n  const userInfo = getUserInfo(state)\n  return userInfo.identity || userInfo.username || ''\n}\n\n/**\n * Retrieves the user information.\n * @method getUserInfo\n * @return {Object} An object whose properties are: accessToken, identity & username. Identity is user's primary contact address.\n */\nexport function getUserInfo (state) {\n  return cloneDeep(state.authentication.userInfo) || {}\n}\n\n/**\n * Retrieves a flag from the store representing if the login scenario was SSO or not.\n * @method getAuthScenario\n * @return {boolean}\n */\nexport function getAuthScenario (state) {\n  return cloneDeep(state.authentication.isSSO)\n}\n\n/**\n * Retrieves information about the services that the user is subscribed for.\n * @method getServices\n * @return {Object}\n */\nexport function getServices (state, platform) {\n  const subscription = getSubscriptionInfo(state, platform)\n\n  if (subscription && subscription.servicesInfo) {\n    return subscription.servicesInfo\n  } else {\n    return {\n      // TODO: Have default as part of the reducer.\n      requested: [],\n      received: [],\n      missing: [],\n      status: SUBSCRIPTION_STATE.NONE,\n      services: {}\n    }\n  }\n}\n\n/**\n * Retrieves the name of the backend platform the user is currently subscribed to.\n * @method getPlatform\n * @return {string}\n */\nexport function getPlatform (state) {\n  let platform = state.authentication.platform\n\n  /**\n   * Link and UC set the platform in auth state after setting credentials /\n   *    connecting, but CPaaS does not (because the idea was to move away from\n   *    needing the platform). So if there isn't a platform, but there is a\n   *    CPaaS-specific identity, then assume the platform is CPaaS.\n   * This was needed for the request plugin to get the right platform when using\n   *    the `getRequestInfo` selector below.\n   * This is a workaround for bad design.\n   */\n  if (!platform && getUserInfo(state).identity) {\n    platform = 'cpaas'\n  }\n\n  return platform\n}\n\n/**\n * Retrieves info needed to make a REST request for the different platforms.\n * @method getRequestInfo\n * @return {Object}\n */\nexport function getRequestInfo (state, platform) {\n  if (!platform) {\n    platform = getPlatform(state)\n  }\n\n  const { subscription, clientCorrelator } = getAuthConfig(state)\n  let { server } = getAuthConfig(state)\n  let { userInfo } = cloneDeep(state.authentication)\n\n  // For backwards compatibility, we need to fall back to\n  // subscription for the server connection details\n  if (!server) {\n    server = {\n      protocol: subscription.protocol,\n      base: subscription.server,\n      port: subscription.port,\n      version: subscription.version\n    }\n  }\n\n  // If user info does not exist yet, use an empty object. Requests will still fail, but they will be handled.\n  if (!userInfo) {\n    userInfo = {}\n  }\n\n  let requestInfo\n\n  if (platform === platforms.CPAAS) {\n    requestInfo = {\n      baseURL: `${server.protocol}://${server.base}:${server.port}`,\n      version: server.version,\n      username: userInfo.username,\n      // TODO: Token doesn't need to be here if its in requestOptions.\n      token: userInfo.accessToken,\n      clientCorrelator,\n      // TODO: DO NOT hardcode this here (?). The original idea was that this\n      //    is set in state after connection.\n      options: {\n        headers: {\n          Accept: 'application/json',\n          Authorization: `Bearer ${userInfo.accessToken}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    }\n  } else if (platform === platforms.UC) {\n    requestInfo = {\n      baseURL: `${subscription.protocol}://${subscription.server}:${subscription.port}`,\n      version: subscription.version,\n      username: userInfo.username\n    }\n  } else if (platform === platforms.LINK) {\n    requestInfo = {\n      baseURL: `${server.protocol}://${server.base}:${server.port}`,\n      version: server.version,\n      username: userInfo.username\n    }\n\n    /*\n     * If the requested platform was Link but the platform set in state is\n     *    UC, and so we're using UC but making a request for SPiDR.\n     * Change the requestInfo provided to ensure the URL will be valid for\n     *    SPiDR and authentication will be valid for CIM.\n     */\n    const setPlatform = getPlatform(state)\n    if (setPlatform === platforms.UC) {\n      requestInfo.version = '1'\n\n      const connInfo = getConnectionInfo(state, setPlatform)\n      if (connInfo && connInfo.requestOptions) {\n        requestInfo.requestOptions = connInfo.requestOptions\n      }\n      return requestInfo\n    }\n  } else {\n    // Platform is not supported\n    return {}\n  }\n\n  const connInfo = getConnectionInfo(state, platform)\n  if (connInfo && connInfo.requestOptions) {\n    requestInfo.requestOptions = connInfo.requestOptions\n  }\n\n  return requestInfo\n}\n","// Libraries.\nimport { mergeAllWith, isArray, isPlainObject } from 'lodash/fp'\nimport paramParser from 'query-string'\nimport { call, put } from 'redux-saga/effects'\n\n/**\n * Deeply merges the values of multiple objects. Objects on the left receive the values from objects on their right.\n * Unlike lodash's default merge behavior this doesn't merge arrays.\n *\n * @name mergeValues\n * @param {...Object} objects - Objects to merge\n * @return {Object} A new object containing the merged values.\n */\nexport function mergeValues (...objects) {\n  return mergeAllWith((leftValue, rightValue) => {\n    // Overwrite the default behavior of lodash's merge for arrays and simply\n    // clobber what's on the left so we don't end up with merged arrays.\n    if (isArray(leftValue)) {\n      return rightValue\n    }\n  }, objects)\n}\n\n/**\n * Utility function to convert an object to a query string.\n *\n * @param {Object} params An object of query parameters to be parsed and converted for use in a URL string\n * @param {Object} [options] Options to be passed to the query-string library\n * * @param {String} [options.arrayFormat] Format in which to compose array values which were passed as query parameters\n */\nexport function toQueryString (params = {}, options = {}) {\n  if (Object.keys(params).length > 0) {\n    const stringifiedParams = paramParser.stringify(params, options)\n    return '?' + stringifiedParams\n  }\n  return ''\n}\n\n/**\n * Higher-order function to auto-restart sagas when they crash.\n * Based on: https://github.com/redux-saga/redux-saga/pull/644#issuecomment-266454875\n * @method autoRestart\n * @param  {Generator} saga The saga to wrap.\n * @return {Generator} Wrapped saga.\n */\nexport function autoRestart (saga) {\n  return function * autoRestarting (...args) {\n    // Only restart the saga if it crashed; avoid restarting it if\n    //      it returned normally.\n    let shouldRestart = false\n    do {\n      try {\n        yield call(saga, ...args)\n        shouldRestart = false\n      } catch (e) {\n        // TODO: Re-add this log line.\n        // Importing the LogManager in this file breaks tests for an unknown\n        //    reason. Should find out why so that we can log in our utils.\n        // log.error(`Unhandled error in saga ${saga.name}.`, e)\n        console.log(`Unhandled error in saga ${saga.name}.`, e)\n        shouldRestart = true\n      }\n    } while (shouldRestart)\n  }\n}\n\n/**\n * Forwards the actions by directly dispatching them.\n * For example, this can be used with a takeEvery effect to grab actions from a channel and dispatch them.\n * @param {Object} action The action to be forwarded.\n * @example\n * const channel = eventChannel(...)\n * yield takeEvery(channel, forwardAction)\n */\nexport function * forwardAction (action) {\n  yield put(action)\n}\n\n/**\n * Ensures that services are in the same format understood by the server regardless,\n * of whether the client provides services as strings or objects.\n * @param {Array} services The list of services requested by the client.\n * @return {Array} A normalized list of services requested by the client.\n */\nexport function normalizeServices (services = []) {\n  return services.map(service => {\n    if (isPlainObject(service) && service.hasOwnProperty('service')) {\n      return service\n    }\n    return { service: service }\n  })\n}\n\n/**\n * A deferred promise\n * Don't use this unless you know what you are doing:\n *  <https://github.com/petkaantonov/bluebird/wiki/Promise-anti-patterns#the-deferred-anti-pattern>\n * @returns An object a with promise property and functions to resolve and reject\n */\nexport function defer () {\n  const d = {}\n  d.promise = new Promise((resolve, reject) => {\n    d.resolve = resolve\n    d.reject = reject\n  })\n  return d\n}\n","const prefix = '@@KANDY/WEBRTC/'\n\n/**\n * Device action types.\n */\nexport const DEVICES_CHANGE = prefix + 'DEVICES/CHANGE'\nexport const INITIALIZE_DEVICES = prefix + 'INITIALIZE_DEVICES'\nexport const INITIALIZE_DEVICES_FINISH = prefix + 'INITIALIZE_DEVICES_FINISH'\n\n/**\n * Track action types.\n */\nconst trackPrefix = prefix + 'TRACK/'\n\nexport const TRACK_ADDED = trackPrefix + 'ADDED'\nexport const TRACK_REMOVED = trackPrefix + 'REMOVED'\n\nexport const RENDER_TRACKS = trackPrefix + 'RENDER'\nexport const RENDER_TRACKS_FINISH = trackPrefix + 'RENDER_FINISH'\n\nexport const REMOVE_TRACKS = trackPrefix + 'REMOVE'\nexport const REMOVE_TRACKS_FINISH = trackPrefix + 'REMOVE_FINISH'\n\nexport const MUTE_TRACKS = trackPrefix + 'MUTE'\nexport const MUTE_TRACKS_FINISH = trackPrefix + 'MUTE_FINISH'\nexport const UNMUTE_TRACKS = trackPrefix + 'UNMUTE'\nexport const UNMUTE_TRACKS_FINISH = trackPrefix + 'UNMUTE_FINISH'\n\nexport const TRACK_SOURCE_MUTED = trackPrefix + 'SOURCE_MUTED'\nexport const TRACK_SOURCE_UNMUTED = trackPrefix + 'SOURCE_UNMUTED'\n\n/**\n * Session action types.\n */\nconst sessionPrefix = prefix + 'SESSION/'\n\nexport const SESSION_ADDED = sessionPrefix + 'ADDED'\nexport const SESSION_REMOVED = sessionPrefix + 'REMOVED'\n\nexport const SESSION_NEW_TRACK = sessionPrefix + 'NEW_TRACK'\nexport const SESSION_TRACK_REMOVED = sessionPrefix + 'TRACK_REMOVED'\nexport const SESSION_TRACK_ENDED = sessionPrefix + 'TRACK_ENDED'\nexport const SESSION_CHANGE = sessionPrefix + 'CHANGE'\nexport const SESSION_TRACK_REPLACED = sessionPrefix + 'TRACK_REPLACED'\n\n// Peer events\nexport const SESSION_ICE_CONNECTION_STATE_CHANGE = sessionPrefix + 'ICE_CONNECTION_STATE_CHANGE'\nexport const SESSION_ICE_GATHERING_STATE_CHANGE = sessionPrefix + 'ICE_GATHERING_STATE_CHANGE'\nexport const SESSION_ICE_CANDIDATE_COLLECTED = sessionPrefix + 'ICE_CANDIDATE_COLLECTED'\nexport const SESSION_ICE_COLLECTION_SCHEDULED_CHECK = sessionPrefix + 'ICE_CANDIDATE_SCHEDULED_CHECK'\n\n/**\n * Media action types.\n */\nconst mediaPrefix = prefix + 'MEDIA/'\n\nexport const MEDIA_NEW = mediaPrefix + 'NEW'\nexport const MEDIA_REMOVED = mediaPrefix + 'REMOVED'\nexport const MEDIA_CHANGE = mediaPrefix + 'CHANGE'\n\nexport const MEDIA_NEW_TRACK = mediaPrefix + 'NEW_TRACK'\nexport const MEDIA_TRACK_REMOVED = mediaPrefix + 'TRACK_REMOVED'\nexport const MEDIA_TRACK_ENDED = mediaPrefix + 'TRACK_ENDED'\n\n/**\n * Misc. action types.\n */\nexport const SET_BROWSER_DETAILS = prefix + 'SET_BROWSER_DETAILS'\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","export default (function (value) {\n  return typeof value === 'function';\n});","export default (function (value) {\n  return typeof value === 'symbol' || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Symbol]';\n});","export default (function (value) {\n  return value.length === 0;\n});","export default (function (value) {\n  return value.toString();\n});","export default (function (value) {\n  return typeof value === 'string';\n});","export var DEFAULT_NAMESPACE = '/';\nexport var ACTION_TYPE_DELIMITER = '||';","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport isSymbol from './utils/isSymbol';\nimport isEmpty from './utils/isEmpty';\nimport toString from './utils/toString';\nimport isString from './utils/isString';\nimport { ACTION_TYPE_DELIMITER } from './constants';\n\nfunction isValidActionType(type) {\n  return isString(type) || isFunction(type) || isSymbol(type);\n}\n\nfunction isValidActionTypes(types) {\n  if (isEmpty(types)) {\n    return false;\n  }\n\n  return types.every(isValidActionType);\n}\n\nexport default function combineActions() {\n  for (var _len = arguments.length, actionsTypes = new Array(_len), _key = 0; _key < _len; _key++) {\n    actionsTypes[_key] = arguments[_key];\n  }\n\n  invariant(isValidActionTypes(actionsTypes), 'Expected action types to be strings, symbols, or action creators');\n  var combinedActionType = actionsTypes.map(toString).join(ACTION_TYPE_DELIMITER);\n  return {\n    toString: function toString() {\n      return combinedActionType;\n    }\n  };\n}","export default (function (value) {\n  return value;\n});","export default (function (value) {\n  return value === null;\n});","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport identity from './utils/identity';\nimport isNull from './utils/isNull';\nexport default function createAction(type, payloadCreator, metaCreator) {\n  if (payloadCreator === void 0) {\n    payloadCreator = identity;\n  }\n\n  invariant(isFunction(payloadCreator) || isNull(payloadCreator), 'Expected payloadCreator to be a function, undefined or null');\n  var finalPayloadCreator = isNull(payloadCreator) || payloadCreator === identity ? identity : function (head) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return head instanceof Error ? head : payloadCreator.apply(void 0, [head].concat(args));\n  };\n  var hasMeta = isFunction(metaCreator);\n  var typeString = type.toString();\n\n  var actionCreator = function actionCreator() {\n    var payload = finalPayloadCreator.apply(void 0, arguments);\n    var action = {\n      type: type\n    };\n\n    if (payload instanceof Error) {\n      action.error = true;\n    }\n\n    if (payload !== undefined) {\n      action.payload = payload;\n    }\n\n    if (hasMeta) {\n      action.meta = metaCreator.apply(void 0, arguments);\n    }\n\n    return action;\n  };\n\n  actionCreator.toString = function () {\n    return typeString;\n  };\n\n  return actionCreator;\n}","export default (function (value) {\n  if (typeof value !== 'object' || value === null) return false;\n  var proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n});","export default (function (value) {\n  return Array.isArray(value);\n});","export default (function (value) {\n  return value === null || value === undefined;\n});","export default (function (array) {\n  return array[array.length - 1];\n});","import camelCase from 'to-camel-case';\nvar namespacer = '/';\nexport default (function (type) {\n  return type.indexOf(namespacer) === -1 ? camelCase(type) : type.split(namespacer).map(camelCase).join(namespacer);\n});","export default (function (array, callback) {\n  return array.reduce(function (partialObject, element) {\n    return callback(partialObject, element);\n  }, {});\n});","export default (function (value) {\n  return typeof Map !== 'undefined' && value instanceof Map;\n});","import isMap from './isMap';\nexport default function ownKeys(object) {\n  if (isMap(object)) {\n    // We are using loose transforms in babel. Here we are trying to convert an\n    // interable to an array. Loose mode expects everything to already be an\n    // array. The problem is that our eslint rules encourage us to prefer\n    // spread over Array.from.\n    //\n    // Instead of disabling loose mode we simply disable the warning.\n    // eslint-disable-next-line unicorn/prefer-spread\n    return Array.from(object.keys());\n  }\n\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    return Reflect.ownKeys(object);\n  }\n\n  var keys = Object.getOwnPropertyNames(object);\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    keys = keys.concat(Object.getOwnPropertySymbols(object));\n  }\n\n  return keys;\n}","import isMap from './isMap';\nexport default function get(key, x) {\n  return isMap(x) ? x.get(key) : x[key];\n}","import { DEFAULT_NAMESPACE, ACTION_TYPE_DELIMITER } from '../constants';\nimport ownKeys from './ownKeys';\nimport get from './get';\nexport default (function (predicate) {\n  return function flatten(map, _temp, partialFlatMap, partialFlatActionType) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$namespace = _ref.namespace,\n        namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace,\n        prefix = _ref.prefix;\n\n    if (partialFlatMap === void 0) {\n      partialFlatMap = {};\n    }\n\n    if (partialFlatActionType === void 0) {\n      partialFlatActionType = '';\n    }\n\n    function connectNamespace(type) {\n      var _ref2;\n\n      if (!partialFlatActionType) return type;\n      var types = type.toString().split(ACTION_TYPE_DELIMITER);\n      var partials = partialFlatActionType.split(ACTION_TYPE_DELIMITER);\n      return (_ref2 = []).concat.apply(_ref2, partials.map(function (p) {\n        return types.map(function (t) {\n          return \"\" + p + namespace + t;\n        });\n      })).join(ACTION_TYPE_DELIMITER);\n    }\n\n    function connectPrefix(type) {\n      if (partialFlatActionType || !prefix || prefix && new RegExp(\"^\" + prefix + namespace).test(type)) {\n        return type;\n      }\n\n      return \"\" + prefix + namespace + type;\n    }\n\n    ownKeys(map).forEach(function (type) {\n      var nextNamespace = connectPrefix(connectNamespace(type));\n      var mapValue = get(type, map);\n\n      if (predicate(mapValue)) {\n        flatten(mapValue, {\n          namespace: namespace,\n          prefix: prefix\n        }, partialFlatMap, nextNamespace);\n      } else {\n        partialFlatMap[nextNamespace] = mapValue;\n      }\n    });\n    return partialFlatMap;\n  };\n});","import isPlainObject from './isPlainObject';\nimport flattenWhenNode from './flattenWhenNode';\nexport default flattenWhenNode(isPlainObject);","import { DEFAULT_NAMESPACE } from '../constants';\nimport isEmpty from './isEmpty';\nimport camelCase from './camelCase';\nexport default function unflattenActionCreators(flatActionCreators, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace,\n      prefix = _ref.prefix;\n\n  function unflatten(flatActionType, partialNestedActionCreators, partialFlatActionTypePath) {\n    var nextNamespace = camelCase(partialFlatActionTypePath.shift());\n\n    if (isEmpty(partialFlatActionTypePath)) {\n      partialNestedActionCreators[nextNamespace] = flatActionCreators[flatActionType];\n    } else {\n      if (!partialNestedActionCreators[nextNamespace]) {\n        partialNestedActionCreators[nextNamespace] = {};\n      }\n\n      unflatten(flatActionType, partialNestedActionCreators[nextNamespace], partialFlatActionTypePath);\n    }\n  }\n\n  var nestedActionCreators = {};\n  Object.getOwnPropertyNames(flatActionCreators).forEach(function (type) {\n    var unprefixedType = prefix ? type.replace(\"\" + prefix + namespace, '') : type;\n    return unflatten(type, nestedActionCreators, unprefixedType.split(namespace));\n  });\n  return nestedActionCreators;\n}","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isFunction from './utils/isFunction';\nimport identity from './utils/identity';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isNil from './utils/isNil';\nimport getLastElement from './utils/getLastElement';\nimport camelCase from './utils/camelCase';\nimport arrayToObject from './utils/arrayToObject';\nimport flattenActionMap from './utils/flattenActionMap';\nimport unflattenActionCreators from './utils/unflattenActionCreators';\nimport createAction from './createAction';\nimport { DEFAULT_NAMESPACE } from './constants';\nexport default function createActions(actionMap) {\n  for (var _len = arguments.length, identityActions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    identityActions[_key - 1] = arguments[_key];\n  }\n\n  var options = isPlainObject(getLastElement(identityActions)) ? identityActions.pop() : {};\n  invariant(identityActions.every(isString) && (isString(actionMap) || isPlainObject(actionMap)), 'Expected optional object followed by string action types');\n\n  if (isString(actionMap)) {\n    return actionCreatorsFromIdentityActions([actionMap].concat(identityActions), options);\n  }\n\n  return _objectSpread({}, actionCreatorsFromActionMap(actionMap, options), actionCreatorsFromIdentityActions(identityActions, options));\n}\n\nfunction actionCreatorsFromActionMap(actionMap, options) {\n  var flatActionMap = flattenActionMap(actionMap, options);\n  var flatActionCreators = actionMapToActionCreators(flatActionMap);\n  return unflattenActionCreators(flatActionCreators, options);\n}\n\nfunction actionMapToActionCreators(actionMap, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      prefix = _ref.prefix,\n      _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? DEFAULT_NAMESPACE : _ref$namespace;\n\n  function isValidActionMapValue(actionMapValue) {\n    if (isFunction(actionMapValue) || isNil(actionMapValue)) {\n      return true;\n    }\n\n    if (isArray(actionMapValue)) {\n      var _actionMapValue$ = actionMapValue[0],\n          payload = _actionMapValue$ === void 0 ? identity : _actionMapValue$,\n          meta = actionMapValue[1];\n      return isFunction(payload) && isFunction(meta);\n    }\n\n    return false;\n  }\n\n  return arrayToObject(Object.keys(actionMap), function (partialActionCreators, type) {\n    var _objectSpread2;\n\n    var actionMapValue = actionMap[type];\n    invariant(isValidActionMapValue(actionMapValue), 'Expected function, undefined, null, or array with payload and meta ' + (\"functions for \" + type));\n    var prefixedType = prefix ? \"\" + prefix + namespace + type : type;\n    var actionCreator = isArray(actionMapValue) ? createAction.apply(void 0, [prefixedType].concat(actionMapValue)) : createAction(prefixedType, actionMapValue);\n    return _objectSpread({}, partialActionCreators, (_objectSpread2 = {}, _objectSpread2[type] = actionCreator, _objectSpread2));\n  });\n}\n\nfunction actionCreatorsFromIdentityActions(identityActions, options) {\n  var actionMap = arrayToObject(identityActions, function (partialActionMap, type) {\n    var _objectSpread3;\n\n    return _objectSpread({}, partialActionMap, (_objectSpread3 = {}, _objectSpread3[type] = identity, _objectSpread3));\n  });\n  var actionCreators = actionMapToActionCreators(actionMap, options);\n  return arrayToObject(Object.keys(actionCreators), function (partialActionCreators, type) {\n    var _objectSpread4;\n\n    return _objectSpread({}, partialActionCreators, (_objectSpread4 = {}, _objectSpread4[camelCase(type)] = actionCreators[type], _objectSpread4));\n  });\n}","import curry from 'just-curry-it';\nimport createAction from './createAction';\nexport default (function (type, payloadCreator) {\n  return curry(createAction(type, payloadCreator), payloadCreator.length);\n});","export default (function (value) {\n  return value === undefined;\n});","import invariant from 'invariant';\nimport isFunction from './utils/isFunction';\nimport isPlainObject from './utils/isPlainObject';\nimport identity from './utils/identity';\nimport isNil from './utils/isNil';\nimport isUndefined from './utils/isUndefined';\nimport toString from './utils/toString';\nimport { ACTION_TYPE_DELIMITER } from './constants';\nexport default function handleAction(type, reducer, defaultState) {\n  if (reducer === void 0) {\n    reducer = identity;\n  }\n\n  var types = toString(type).split(ACTION_TYPE_DELIMITER);\n  invariant(!isUndefined(defaultState), \"defaultState for reducer handling \" + types.join(', ') + \" should be defined\");\n  invariant(isFunction(reducer) || isPlainObject(reducer), 'Expected reducer to be a function or object with next and throw reducers');\n\n  var _ref = isFunction(reducer) ? [reducer, reducer] : [reducer.next, reducer.throw].map(function (aReducer) {\n    return isNil(aReducer) ? identity : aReducer;\n  }),\n      nextReducer = _ref[0],\n      throwReducer = _ref[1];\n\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    var actionType = action.type;\n\n    if (!actionType || types.indexOf(toString(actionType)) === -1) {\n      return state;\n    }\n\n    return (action.error === true ? throwReducer : nextReducer)(state, action);\n  };\n}","export default (function () {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var initialState = typeof args[args.length - 1] !== 'function' && args.pop();\n  var reducers = args;\n\n  if (typeof initialState === 'undefined') {\n    throw new TypeError('The initial state may not be undefined. If you do not want to set a value for this reducer, you can use null instead of undefined.');\n  }\n\n  return function (prevState, value) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    var prevStateIsUndefined = typeof prevState === 'undefined';\n    var valueIsUndefined = typeof value === 'undefined';\n\n    if (prevStateIsUndefined && valueIsUndefined && initialState) {\n      return initialState;\n    }\n\n    return reducers.reduce(function (newState, reducer) {\n      return reducer.apply(undefined, [newState, value].concat(args));\n    }, prevStateIsUndefined && !valueIsUndefined && initialState ? initialState : prevState);\n  };\n});","import ownKeys from './ownKeys';\nexport default function hasGeneratorInterface(handler) {\n  var keys = ownKeys(handler);\n  var hasOnlyInterfaceNames = keys.every(function (ownKey) {\n    return ownKey === 'next' || ownKey === 'throw';\n  });\n  return keys.length && keys.length <= 2 && hasOnlyInterfaceNames;\n}","import isPlainObject from './isPlainObject';\nimport isMap from './isMap';\nimport hasGeneratorInterface from './hasGeneratorInterface';\nimport flattenWhenNode from './flattenWhenNode';\nexport default flattenWhenNode(function (node) {\n  return (isPlainObject(node) || isMap(node)) && !hasGeneratorInterface(node);\n});","import reduceReducers from 'reduce-reducers';\nimport invariant from 'invariant';\nimport isPlainObject from './utils/isPlainObject';\nimport isMap from './utils/isMap';\nimport ownKeys from './utils/ownKeys';\nimport flattenReducerMap from './utils/flattenReducerMap';\nimport handleAction from './handleAction';\nimport get from './utils/get';\nexport default function handleActions(handlers, defaultState, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  invariant(isPlainObject(handlers) || isMap(handlers), 'Expected handlers to be a plain object.');\n  var flattenedReducerMap = flattenReducerMap(handlers, options);\n  var reducers = ownKeys(flattenedReducerMap).map(function (type) {\n    return handleAction(type, get(type, flattenedReducerMap), defaultState);\n  });\n  var reducer = reduceReducers.apply(void 0, reducers.concat([defaultState]));\n  return function (state, action) {\n    if (state === void 0) {\n      state = defaultState;\n    }\n\n    return reducer(state, action);\n  };\n}","import combineActions from './combineActions';\nimport createAction from './createAction';\nimport createActions from './createActions';\nimport createCurriedAction from './createCurriedAction';\nimport handleAction from './handleAction';\nimport handleActions from './handleActions';\nexport { combineActions, createAction, createActions, createCurriedAction, handleAction, handleActions };","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","import * as actionTypes from './actionTypes'\n\n/**\n * Add an action-to-event mapping\n * @param  {Object} mapping A mapping object\n * @return {action}          A redux action.\n */\nexport function mapEvents (mapping) {\n  return {\n    type: actionTypes.MAP_EVENTS,\n    payload: mapping\n  }\n}\n\n/* Interface actions */\n\n/**\n * Add a listener for a specified event type.\n *\n * @param {string} type The event type to add the listener on.\n * @param {Function} listener The event listener to be added.\n * @return {Action} action A redux action.\n */\nexport function on (type, listener) {\n  return {\n    type: actionTypes.EVENTS_ON,\n    payload: {\n      eventType: type,\n      listener: listener\n    }\n  }\n}\n\n/**\n * Remove a listener from a specified event type.\n *\n * @param {string} type The event type to remove the listener from.\n * @param {Function} listener The event listener to be removed.\n * @return {Action} action A redux action.\n */\nexport function off (type, listener) {\n  return {\n    type: actionTypes.EVENTS_OFF,\n    payload: {\n      eventType: type,\n      listener: listener\n    }\n  }\n}\n\n/**\n * Add a global event listener.\n *\n * @param {Function} listener The event listener to be added.\n * @return {Action} action A redux action.\n */\nexport function subscribe (listener) {\n  return {\n    type: actionTypes.EVENTS_SUBSCRIBE,\n    payload: listener\n  }\n}\n\n/**\n * Remove a global event listener.\n *\n * @param {Function} listener The event listener to be removed.\n * @return {Action} action A redux action.\n */\nexport function unsubscribe (listener) {\n  return {\n    type: actionTypes.EVENTS_UNSUBSCRIBE,\n    payload: listener\n  }\n}\n\n/* Internal actions */\n\n/**\n * Emits an event of the specified type.\n *\n * @method emitEvent\n * @param {Object} payload Information of the event to emit.\n * @throws {Error} Invalid event type\n * @return action An EVENTS_EMIT action.\n */\nexport function emitEvent (type, ...args) {\n  if (type === undefined) {\n    throw Error('Attempted to emit an event without a type.')\n  }\n\n  return {\n    type: actionTypes.EVENTS_EMIT,\n    payload: { eventType: type, args }\n  }\n}\n\n/**\n * Define an alias for an event type.\n *\n * @method alias\n * @param {string} type The event type for which to add an alias.\n * @param {string} alias The alias name for the event type.\n */\nexport function aliasEvent (type, alias) {\n  if (type === undefined || alias === undefined) {\n    throw Error('Invalid attempt to alias an event.')\n  }\n\n  return {\n    type: actionTypes.EVENTS_ALIAS,\n    payload: { eventType: type, alias }\n  }\n}\n","// Call plugin.\nimport { CALL_STATES } from '../constants'\n\n// Webrtc plugin.\nimport { getSessionById } from '../../webrtc/interface/selectors'\n\n/**\n * Call selectors.\n * Handles retrieving data from the `state.call.calls` substate.\n */\n\n/**\n * Helper function for adding track information to call state.\n * @method addTracksToCall\n * @param  {Object} state\n * @param  {Object} callState\n * @return {Object} Track augmented call state.\n */\nfunction addTracksToCall (state, callState) {\n  const session = getSessionById(state, callState.webrtcSessionId)\n  if (session) {\n    return {\n      ...callState,\n      localTracks: session.localTracks,\n      remoteTracks: session.remoteTracks\n    }\n  } else {\n    return {\n      ...callState,\n      localTracks: [],\n      remoteTracks: []\n    }\n  }\n}\n\n/**\n * Get the list of all calls this session.\n * @method getCalls\n * @param  {Object} state Redux state.\n * @return {Array} A list of all call objects.\n */\nexport function getCalls (state) {\n  // TODO: cloneDeep?\n  return state.call.calls.map(callState => addTracksToCall(state, callState))\n}\n\n/**\n * Retrieves the list of all on-going calls.\n * @method getActiveCalls\n * @param {Object} state Redux state.\n * @return {Array} A list of call objects.\n */\nexport function getActiveCalls (state) {\n  const endedStates = [CALL_STATES.ENDED, CALL_STATES.CANCELLED]\n\n  return getCalls(state).filter(call => !endedStates.includes(call.state))\n}\n\n/**\n * Get the call object of a specific call.\n * @method getCallById\n * @param  {Object} state Redux state.\n * @param  {string} callId The call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallById (state, callId) {\n  return getCalls(state).find(call => call.id === callId)\n}\n\n/**\n * Get the call object with a specific wrtcsSessionId (backend ID).\n * @method getCallByWrtcsSessionId\n * @param  {Object} state Redux state.\n * @param  {string} wrtcsSessionId The call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallByWrtcsSessionId (state, wrtcsSessionId) {\n  return getCalls(state).find(call => call.wrtcsSessionId === wrtcsSessionId)\n}\n\n/**\n * Get the call object with a specific webrtcSessionId.\n * @method getCallByWebrtcSessionId\n * @param  {Object} state Redux state.\n * @param  {string} webrtcSessionId The call to retrieve.\n * @return {Object} A call object.\n */\nexport function getCallByWebrtcSessionId (state, webrtcSessionId) {\n  return getCalls(state).find(call => call.webrtcSessionId === webrtcSessionId)\n}\n\n/**\n * Retrieve the call plugin's options.\n * @method getOptions\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getOptions (state) {\n  return state.config.call\n}\n\n/**\n * Retrieve TURN server/credential information.\n */\nexport function getTurnInfo (state) {\n  return state.call.turn\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/promise\"), __esModule: true };","import { mapKeys } from 'lodash/fp'\n\n/**\n * Helper function. Converts an object so that its keys are the same as its values.\n * @method mapValuesToKeys\n * @param  {Object} source\n * @return {Object}\n */\nfunction mapValuesToKeys (source) {\n  return mapKeys(function (value) {\n    return source[value]\n  })(source)\n}\n\n/**\n * Enum of FCS call states.\n * Key is the \"code\" that FCS uses, and value is the text representation.\n * These are taken from FCS callManager.js, but inversed.\n *      See `fcs.call.States`.\n * @type {Object}\n */\nexport const FCS_CALL_STATES = {\n  0: 'IN_CALL',\n  1: 'ON_HOLD',\n  2: 'RINGING',\n  3: 'ENDED',\n  4: 'REJECTED',\n  5: 'OUTGOING',\n  6: 'INCOMING',\n  7: 'ANSWERING',\n  8: 'JOINED',\n  9: 'RENEGOTIATION',\n  10: 'TRANSFERRED',\n  11: 'ON_REMOTE_HOLD',\n  12: 'CALL_IN_PROGRESS',\n  13: 'EARLY_MEDIA',\n  14: 'TRANSFER_FAILURE',\n  15: 'REPLACING'\n}\n\n/**\n * Call states.\n * Same as FCS_CALL_STATES, except both key and value are the text representation.\n * @name CALL_STATES_FCS\n */\nexport const CALL_STATES_FCS = mapValuesToKeys(FCS_CALL_STATES)\n\n/**\n * Call states\n * Call states used in the cpaas and link call plugins\n * @name CALL_STATES\n */\nexport const CALL_STATES = {\n  INITIATING: 'Initiating',\n  INITIATED: 'Initiated',\n  EARLY_MEDIA: 'Early Media',\n  RINGING: 'Ringing',\n  CANCELLED: 'Cancelled',\n  CONNECTED: 'Connected',\n  ON_HOLD: 'On Hold',\n  ENDED: 'Ended'\n}\n\n/**\n * Possible states a call's media can be in.\n * Describes whether media is flowing or if an endpoint is preventing media flow.\n * @name CALL_MEDIA_STATES\n * @type {Object}\n * @property {string} CONNECTED Both call endpoints allow for media to flow.\n * @property {string} LOCAL_HOLD Local endpoint disallows media from flowing.\n * @property {string} REMOTE_HOLD Remote endpoint disallows media from flowing.\n * @property {string} DUAL_HOLD Both endpoints disallow media from flowing.\n */\nexport const CALL_MEDIA_STATES = {\n  CONNECTED: 'Connected',\n  LOCAL_HOLD: 'Local Hold',\n  REMOTE_HOLD: 'Remote Hold',\n  DUAL_HOLD: 'Dual Hold'\n}\n\n/**\n * Possible states for a Call's media connection.\n * @name CALL_MEDIA_CONNECTION_STATES\n */\nexport const CALL_MEDIA_CONNECTION_STATES = {\n  NEW: 'new',\n  CHECKING: 'checking',\n  CONNECTED: 'connected',\n  COMPLETED: 'completed',\n  FAILED: 'failed',\n  DISCONNECTED: 'disconnected',\n  CLOSED: 'closed'\n}\n\n/**\n * Call operations that require negotiation.\n * @name OPERATIONS\n * @type {Object}\n * @property {string} CHANGE_MEDIA Media flow remains the same, includes non-flow related media changes.\n * @property {string} HOLD_MEDIA   Media flow stops. May include non-flow related media changes.\n * @property {string} UNHOLD_MEDIA Media flow restarts. May include non-flow related media changes.\n * @property {string} MUSIC_ON_HOLD Media flow changes to sendonly.\n */\nexport const OPERATIONS = {\n  CHANGE_MEDIA: 'Change Media',\n  HOLD_MEDIA: 'Hold Media',\n  UNHOLD_MEDIA: 'Unhold Media',\n  MUSIC_ON_HOLD: 'Music on hold'\n}\n\n/**\n * Complex call operations.\n * @name COMPLEX_OPERATIONS\n * @type {Object}\n * @property {string} DIRECT_TRANSFER\n * @property {string} CONSULTATIVE_TRANSFER\n * @property {string} JOIN\n */\nexport const COMPLEX_OPERATIONS = {\n  DIRECT_TRANSFER: 'Direct Transfer',\n  CONSULTATIVE_TRANSFER: 'Consultative Transfer',\n  JOIN: 'Join'\n}\n\n/**\n * Complex call operation messages.\n * @name COMPLEX_OPERATION_MESSAGES\n * @type {Object}\n * @property {string} DIRECT_TRANSFER_SUCCESS Success message for direct transfer.\n * @property {string} CONSULTATIVE_TRANSFER_SUCCESS Success message for consultative transfer (matches reasonText from notification).\n * @property {string} JOIN_SUCCESS Success message for join.\n * @property {string} DIRECT_TRANSFER_FAILURE Failure message for direct transfer.\n * @property {string} CONSULTATIVE_TRANSFER_FAILURE Failure message for consultative transfer.\n * @property {string} JOIN_FAILURE Failure message for join.\n */\nexport const COMPLEX_OPERATION_MESSAGES = {\n  DIRECT_TRANSFER_SUCCESS: 'Direct Transfer Successful',\n  CONSULTATIVE_TRANSFER_SUCCESS: 'Transfer Successful',\n  JOIN_SUCCESS: 'Join Successful',\n  DIRECT_TRANSFER_FAILURE: 'Direct Transfer Failed',\n  CONSULTATIVE_TRANSFER_FAILURE: 'Transfer Failed',\n  JOIN_FAILURE: 'Join Failed'\n}\n\n/**\n * Status codes that match success messages.\n * @name STATUS_CODES\n * @type {Object}\n * @property {number} DIRECT_TRANSFER_SUCCESS Status code for successful direct transfer.\n * @property {number} CONSULTATIVE_TRANSFER_SUCCESS Status code for successful consultative transfer.\n * @property {number} JOIN_SUCCESS Status code for successful join.\n * @property {number} DIRECT_TRANSFER_FAILURE Status code for failed direct transfer.\n * @property {number} CONSULTATIVE_TRANSFER_FAILURE Status code for failed consultative transfer.\n * @property {number} JOIN_FAILURE Status code for failed join.\n */\nexport const STATUS_CODES = {\n  DIRECT_TRANSFER_SUCCESS: 9905,\n  CONSULTATIVE_TRANSFER_SUCCESS: 9905,\n  JOIN_SUCCESS: 9906,\n  DIRECT_TRANSFER_FAILURE: -1,\n  CONSULTATIVE_TRANSFER_FAILURE: -1,\n  JOIN_FAILURE: -2\n}\n\n/**\n * Call direction\n * Indication of which direction the call is going\n * @name CALL_DIRECTION\n */\nexport const CALL_DIRECTION = {\n  INCOMING: 'incoming',\n  OUTGOING: 'outgoing'\n}\n\n/*\n * A conversion from MediaDeviceInfo.kind values to their more common terms.\n * See: https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/kind\n */\nexport const WEBRTC_DEVICE_KINDS = {\n  audioinput: 'microphone',\n  videoinput: 'camera',\n  audiooutput: 'speaker'\n}\n\n/**\n * Enum of ICE media states.\n * These are taken from FCS call, but inversed.\n *      See `fcs.call.MediaStates`.\n * @name FCS_ICE_MEDIA_STATES\n * @type {Object}\n */\nexport const FCS_ICE_MEDIA_STATES = {\n  0: 'NEW',\n  1: 'CHECKING',\n  2: 'CONNECTED',\n  3: 'COMPLETED',\n  4: 'FAILED',\n  5: 'DISCONNECTED',\n  6: 'CLOSED'\n}\n\n/**\n * ICE media states.\n * Same as FCS_ICE_MEDIA_STATES, except both key and value are the text representation.\n * @name ICE_MEDIA_STATES\n */\nexport const ICE_MEDIA_STATES = mapValuesToKeys(FCS_ICE_MEDIA_STATES)\n\n/**\n * Result types for the Ice Collection Check Function.\n * @name ICE_COLLECTION_RESULT_TYPES\n */\nexport const ICE_COLLECTION_RESULT_TYPES = {\n  START_CALL: 'StartCall',\n  WAIT: 'Wait',\n  ERROR: 'Error'\n}\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","import createManager from 'kandy-logger'\n\nconst manager = createManager({ level: 'DEBUG' })\nexport const logManager = manager\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };","import * as deviceActionsImport from './devices'\nimport * as trackActionsImport from './tracks'\nimport * as sessionActionsImport from './sessions'\nimport * as mediaActionsImport from './media'\nimport * as miscActionsImport from './misc'\n\n// Apparently the following doesn't work:\n//      export * as newName from './place';\n// So import everything from each file, then re-export.\nexport const deviceActions = deviceActionsImport\nexport const trackActions = trackActionsImport\nexport const sessionActions = sessionActionsImport\nexport const mediaActions = mediaActionsImport\nexport const miscActions = miscActionsImport\n","import * as actionTypes from './actionTypes'\nimport { sanitizeSdesFromSdp, modifySdpBandwidth } from '../../callstack/utils'\nimport { createCodecRemover } from '@kandy-io/sdp-handlers'\n\n/**\n * Add or update a specific key within the store.config.\n *\n * @param {Object} values The values that will be placed in the store.\n * @param {string} [pluginName] The plugin name of the config being set.\n * @return {Action} action A redux action.\n */\nexport function update (values, pluginName = '') {\n  var payload\n  // Use the plugin name as a substate key, if present.\n  if (pluginName) {\n    payload = {\n      [pluginName]: values\n    }\n  } else {\n    payload = values\n  }\n\n  return {\n    type: actionTypes.CONFIG_UPDATE,\n    payload: payload\n  }\n}\n\n/**\n * Updates the SDP Handlers in the call plugin configs\n *\n * @method setSdpHandlers\n * @param {Array<call.SdpHandlerFunction>} sdpHandlers The list of SDP handler to set in the config.\n * @param {Object}                         options     Options to configure extra sdp handlers\n * @returns {Object} A flux standard action.\n */\nexport function setSdpHandlers (sdpHandlers, options) {\n  /*\n   * Set SDP handlers to be used for every operation:\n   *\n   * 1. Application provided SDP handlers.\n   *\n   * 2. Disable DTLS-SDES crypto method (ie. delete the line) if there's a better\n   *    crypto method enabled. WebRTC only allows one method to be enabled.\n   *    This is needed for interoperability with non-browser endpoints that include\n   *    SDES as a fallback method.\n   *\n   * 3. [optional] Disable H264 Codecs for video calls, used to reduce SDP size\n   *\n   * 4. Modify sdp and add bandwidth limits on it if bandwidth controls are provided.\n   */\n  if (options.removeH264Codecs) {\n    sdpHandlers.push(createCodecRemover(['H264']))\n  }\n  sdpHandlers.push(sanitizeSdesFromSdp)\n  sdpHandlers.push(modifySdpBandwidth)\n\n  return {\n    type: actionTypes.SET_SDP_HANDLERS,\n    payload: {\n      sdpHandlers\n    }\n  }\n}\n","/**\n * Constants relating to the Peer model.\n */\nexport const PEER = {\n  TRICKLE_ICE: {\n    FULL: 'FULL',\n    HALF: 'HALF',\n    NONE: 'NONE'\n  },\n  // Defined by the RTCPeerConnection.iceGatheringState spec.\n  ICE_GATHERING_STATE: {\n    NEW: 'new',\n    GATHERING: 'gathering',\n    COMPLETE: 'complete'\n  },\n  ENDPOINT: {\n    LOCAL: 'local',\n    REMOTE: 'remote'\n  },\n  SDP_SEMANTICS: {\n    PLAN_B: 'plan-b',\n    UNIFIED_PLAN: 'unified-plan'\n  }\n}\n\n/**\n * SDP constants for media direction.\n * @type {Object}\n */\nexport const MEDIA_DIR = {\n  INACTIVE: 'inactive',\n  SEND_ONLY: 'sendonly',\n  RECV_ONLY: 'recvonly',\n  SEND_RECV: 'sendrecv'\n}\n\n/**\n * Reasons for calling the Ice Collection Check function.\n * @name ICE_COLLECTION_CHECK_REASONS\n */\nexport const ICE_COLLECTION_CHECK_REASONS = {\n  ICE_GATHERING_STATE_CHANGE: 'IceGatheringStateChanged',\n  NEW_CANDIDATE: 'NewCandidate',\n  SCHEDULED: 'Scheduled'\n}\n\n/**\n * Result types for the Ice Collection Check Function.\n * @name ICE_COLLECTION_RESULT_TYPES\n */\nexport const ICE_COLLECTION_RESULT_TYPES = {\n  START_CALL: 'StartCall',\n  WAIT: 'Wait',\n  ERROR: 'Error'\n}\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import * as callActionsImport from './call'\nimport * as turnActionsImport from './turn'\n\n// Apparently the following doesn't work:\n//      export * as newName from './place';\n// So import everything from each file, then re-export.\nexport const callActions = callActionsImport\nexport const turnActions = turnActionsImport\n","// Requests plugin.\nimport { RESPONSE } from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport { getCommonOptions } from './utils'\n\n// Libraries.\nimport { mergeValues } from '../common/utils'\nimport { get } from 'lodash/fp'\nimport { put, take, call } from 'redux-saga/effects'\n\n/**\n * Creates an effect description that instructs the middleware to perform a request with the provided options.\n * This effect is blocking and will yield a RESPONSE action on completion.\n *\n * @param {Object} options See https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n * @param {string} options.url The url to perform the request on.\n * @param {string} options.method The HTTP method to use for the request.\n * @param {Object} options.headers Object literal of headers you want to add to the request.\n * @param {Object} [options.queryParams] The parameters to be added to the query string\n * @param {string} [options.responseType] The data type assumed to be received in the response body\n * @param {Blob|BufferSource|FormData|UrlSearchParams|string} [options.body] Any body that you want to add to your request.\n * @return A blocking redux-saga effect that will instruct the middleware to wait for the request to be fulfilled or until it fails.\n */\nexport default function request (options, commonOptions) {\n  return call(requestSaga, options, commonOptions)\n}\n\n/*\n * The saga backing the request effect.\n */\nexport function * requestSaga (options, manualOptions) {\n  /*\n   * Some requests can have special-cases where they don't want to use the\n   *    \"common\" options. Allow them to pass in \"manual\" options that should be\n   *    used instead.\n   * For example, the CPaaS \"upload file\" request cannot use the \"common\"\n   *    Content-Type header.\n   */\n  if (manualOptions) {\n    options = mergeValues(options, manualOptions)\n  } else {\n    // Get the common request options that should be used for all requests.\n    const commonOptions = yield call(getCommonOptions, options.url)\n\n    options = mergeValues(options, commonOptions)\n  }\n\n  // Dispatch the request action for the sagas to process.\n  const requestAction = yield put(actions.request(options))\n  const responseAction = yield take(\n    action => action.type === RESPONSE && get('meta.requestId', action) === requestAction.meta.requestId\n  )\n\n  return responseAction\n}\n","import { cloneDeep } from 'lodash/fp'\n\n// Auth selectors for backwards compatibility.\nimport { getSubscriptionInfo as getAuthSubscriptionInfo } from '../../auth/interface/selectors'\n\n// Utilities.\nimport { mergeValues } from '../../common/utils'\n\n/**\n * Retrieves the config options provided by the subscription plugin.\n * NOTE: This is only used by CPaaS currently and won't work with\n * the old auth/subscription config on link.  It will work with the new\n * auth/subscription config on link.\n * @method getSubscriptionConfig\n * @return {Object}\n */\nexport function getSubscriptionConfig (state) {\n  return cloneDeep(state.config.subscription)\n}\n\n/**\n * Retrieves the list of services that plugins have registered for.\n * @method getRegisteredServices\n * @return {Array}\n */\nexport function getRegisteredServices (state) {\n  return cloneDeep(state.subscription.registeredServices)\n}\n\n/**\n * Retrieves the open notifications channels' info and their active subscriptions.\n * @method getNotificationChannels\n * @return {Object}\n */\n// TODO: Rename this selector. It gets more than notification channels.\nexport function getNotificationChannels (state) {\n  return cloneDeep({\n    notificationChannels: state.subscription.notificationChannels,\n    subscriptions: state.subscription.subscriptions\n  })\n}\n\n/**\n * Retrieve the list of services with current subscriptions.\n * @method getSubscribedServices\n * @param {string} type the type of subscription we want to get specifically\n * @return {Array}\n */\nexport function getSubscribedServices (state, type) {\n  const info = getSubscriptionInfo(state)\n  // For backwards compatibility, make sure that this is an array. It isn't when\n  //    the old Auth plugin is being used (eg. Link v3.X).\n  let subscriptions = Array.isArray(info) ? info : [info]\n\n  // If a type was specified, filter out subscriptions of other types.\n  if (type) {\n    subscriptions = subscriptions.filter(subscription => subscription.channelType === type)\n  }\n\n  // Massage the subscriptions to be a list of service names.\n\n  // For Link, subscription.service is an array of strings (all services).\n  // For CPaaS, subscription.service is a string (single service).\n  // Process the subscriptions in a way that will provide an array of strings in\n  //    both cases.\n  return subscriptions.reduce((acc, currentSub) => {\n    return acc.concat(currentSub.service)\n  }, [])\n}\n\n/**\n * Retrieves the subscription information.\n * @method getSubscriptionInfo\n * @return {Object}\n */\nexport function getSubscriptionInfo (state) {\n  if (state.subscription) {\n    return cloneDeep(state.subscription.subscriptions)\n  } else {\n    // For backwards compatibility, also check if the authentication substate\n    //    has subscription info. It will have the info when the oldAuth plugin\n    //    is being used (eg. Link v3.X).\n    // Warning: This returns an object, unlike the above which returns an array.\n    return cloneDeep(getAuthSubscriptionInfo(state))\n  }\n}\n\n/**\n * Retrieve the list of subscriptions matching a given channel type and service name.\n * @method getSubscriptions\n * @param {string} service the name of the service we want to get specifically (e.g. smsinbound)\n * @param {string} type the type of communication channel we want to get specifically (e.g. websocket)\n * @return {Array}\n */\nexport function getSubscriptions (state, service, type) {\n  let subscriptions = state.subscription.subscriptions\n  subscriptions = subscriptions.filter(\n    subscription => subscription.service === service && subscription.channelType === type\n  )\n  return cloneDeep(subscriptions)\n}\n\n/**\n * Retrieve the subscription expiry time from config.\n * @method getSubscriptionExpiry\n * @return {number}\n */\nexport function getSubscriptionExpiry (state) {\n  const subConfig = state.config.subscription\n  const authConfig = state.config.authentication\n\n  // In order to maintain backwards compatibility with the auth plugin config\n  // we need to first check if this setting is provided in the authentication plugin\n  // config, and if not use the one from subscription plugin.  We need to check\n  // authentication config first because if no value is provided in the subscription\n  // plugin, a default value will be used and we don't want that if one is provided in\n  // the authentication plugin.\n  const expires =\n    authConfig.subscription && authConfig.subscription.expires ? authConfig.subscription.expires : subConfig.expires\n\n  return expires\n}\n\n/**\n * Retrieve the websocket info from config. We merge the websocket config\n * from auth plugin with the one from subscription plugin giving precedence to\n * the websocket config in auth plugin since we need to maintain backwards compatibility\n * with the old format config.\n * @method getSubscriptionExpiry\n * @return {number}\n */\nexport function getWebsocketConfig (state) {\n  const subConfig = state.config.subscription\n  const authConfig = state.config.authentication\n\n  // In order to support legacy configurations, we need to do the following:\n  // Take the values (including defaults) from subscription config.  Merge into\n  // that any client provided values from the authentication config.  All keys existing\n  // in authentication config will overwrite those from subscription config.  However,\n  // since defaults are not set for websocket in the authentication plugin, only client\n  // provided values for websocket will be used from authentication config and defaults\n  // will come from the subscription plugin.\n  return mergeValues(subConfig.websocket, authConfig.websocket)\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","function deferred() {\n  var def = {};\n  def.promise = new Promise(function (resolve, reject) {\n    def.resolve = resolve;\n    def.reject = reject;\n  });\n  return def;\n}\nfunction arrayOfDeferred(length) {\n  var arr = [];\n\n  for (var i = 0; i < length; i++) {\n    arr.push(deferred());\n  }\n\n  return arr;\n}\n\nexport default deferred;\nexport { arrayOfDeferred };\n","import { CHANNEL_END_TYPE, MULTICAST, MATCH, SAGA_ACTION, CANCEL, SELF_CANCELLATION, TERMINATE, TASK, TASK_CANCEL, IO } from '@redux-saga/symbols';\nexport { CANCEL, SAGA_LOCATION } from '@redux-saga/symbols';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { string as string$1, array as array$1, stringableFunc, func, symbol as symbol$1, buffer, notUndef, promise, iterator, undef, object, channel as channel$1 } from '@redux-saga/is';\nimport { k as kTrue, e as expanding, c as check, o as once, r as remove, n as none, i as internalErr, T as TAKE, P as PUT, A as ALL, R as RACE, C as CALL, a as CPS, F as FORK, J as JOIN, b as CANCEL$1, S as SELECT, d as ACTION_CHANNEL, f as CANCELLED$1, g as FLUSH, G as GET_CONTEXT, h as SET_CONTEXT, j as getMetaInfo, l as createAllStyleChildCallbacks, m as createEmptyArray, p as assignWithSymbols, q as makeIterator, s as shouldComplete, t as noop, u as flatMap, v as getLocation, w as createSetContextWarning, x as asyncIteratorSymbol, y as shouldCancel, z as shouldTerminate, B as logError, D as wrapSagaDispatch, E as identity } from './io-6de156f3.js';\nexport { H as buffers, I as detach } from './io-6de156f3.js';\nimport { compose } from 'redux';\nimport deferred from '@redux-saga/deferred';\nimport '@redux-saga/delay-p';\n\nvar queue = [];\n/**\n  Variable to hold a counting semaphore\n  - Incrementing adds a lock and puts the scheduler in a `suspended` state (if it's not\n    already suspended)\n  - Decrementing releases a lock. Zero locks puts the scheduler in a `released` state. This\n    triggers flushing the queued tasks.\n**/\n\nvar semaphore = 0;\n/**\n  Executes a task 'atomically'. Tasks scheduled during this execution will be queued\n  and flushed after this task has finished (assuming the scheduler endup in a released\n  state).\n**/\n\nfunction exec(task) {\n  try {\n    suspend();\n    task();\n  } finally {\n    release();\n  }\n}\n/**\n  Executes or queues a task depending on the state of the scheduler (`suspended` or `released`)\n**/\n\n\nfunction asap(task) {\n  queue.push(task);\n\n  if (!semaphore) {\n    suspend();\n    flush();\n  }\n}\n/**\n * Puts the scheduler in a `suspended` state and executes a task immediately.\n */\n\nfunction immediately(task) {\n  try {\n    suspend();\n    return task();\n  } finally {\n    flush();\n  }\n}\n/**\n  Puts the scheduler in a `suspended` state. Scheduled tasks will be queued until the\n  scheduler is released.\n**/\n\nfunction suspend() {\n  semaphore++;\n}\n/**\n  Puts the scheduler in a `released` state.\n**/\n\n\nfunction release() {\n  semaphore--;\n}\n/**\n  Releases the current lock. Executes all queued tasks if the scheduler is in the released state.\n**/\n\n\nfunction flush() {\n  release();\n  var task;\n\n  while (!semaphore && (task = queue.shift()) !== undefined) {\n    exec(task);\n  }\n}\n\nvar array = function array(patterns) {\n  return function (input) {\n    return patterns.some(function (p) {\n      return matcher(p)(input);\n    });\n  };\n};\nvar predicate = function predicate(_predicate) {\n  return function (input) {\n    return _predicate(input);\n  };\n};\nvar string = function string(pattern) {\n  return function (input) {\n    return input.type === String(pattern);\n  };\n};\nvar symbol = function symbol(pattern) {\n  return function (input) {\n    return input.type === pattern;\n  };\n};\nvar wildcard = function wildcard() {\n  return kTrue;\n};\nfunction matcher(pattern) {\n  // prettier-ignore\n  var matcherCreator = pattern === '*' ? wildcard : string$1(pattern) ? string : array$1(pattern) ? array : stringableFunc(pattern) ? string : func(pattern) ? predicate : symbol$1(pattern) ? symbol : null;\n\n  if (matcherCreator === null) {\n    throw new Error(\"invalid pattern: \" + pattern);\n  }\n\n  return matcherCreator(pattern);\n}\n\nvar END = {\n  type: CHANNEL_END_TYPE\n};\nvar isEnd = function isEnd(a) {\n  return a && a.type === CHANNEL_END_TYPE;\n};\nvar CLOSED_CHANNEL_WITH_TAKERS = 'Cannot have a closed channel with pending takers';\nvar INVALID_BUFFER = 'invalid buffer passed to channel factory function';\nvar UNDEFINED_INPUT_ERROR = \"Saga or channel was provided with an undefined action\\nHints:\\n  - check that your Action Creator returns a non-undefined value\\n  - if the Saga was started using runSaga, check that your subscribe source provides the action to its listeners\";\nfunction channel(buffer$1) {\n  if (buffer$1 === void 0) {\n    buffer$1 = expanding();\n  }\n\n  var closed = false;\n  var takers = [];\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(buffer$1, buffer, INVALID_BUFFER);\n  }\n\n  function checkForbiddenStates() {\n    if (closed && takers.length) {\n      throw internalErr(CLOSED_CHANNEL_WITH_TAKERS);\n    }\n\n    if (takers.length && !buffer$1.isEmpty()) {\n      throw internalErr('Cannot have pending takers with non empty buffer');\n    }\n  }\n\n  function put(input) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(input, notUndef, UNDEFINED_INPUT_ERROR);\n    }\n\n    if (closed) {\n      return;\n    }\n\n    if (takers.length === 0) {\n      return buffer$1.put(input);\n    }\n\n    var cb = takers.shift();\n    cb(input);\n  }\n\n  function take(cb) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(cb, func, \"channel.take's callback must be a function\");\n    }\n\n    if (closed && buffer$1.isEmpty()) {\n      cb(END);\n    } else if (!buffer$1.isEmpty()) {\n      cb(buffer$1.take());\n    } else {\n      takers.push(cb);\n\n      cb.cancel = function () {\n        remove(takers, cb);\n      };\n    }\n  }\n\n  function flush(cb) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(cb, func, \"channel.flush' callback must be a function\");\n    }\n\n    if (closed && buffer$1.isEmpty()) {\n      cb(END);\n      return;\n    }\n\n    cb(buffer$1.flush());\n  }\n\n  function close() {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n    }\n\n    if (closed) {\n      return;\n    }\n\n    closed = true;\n    var arr = takers;\n    takers = [];\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      var taker = arr[i];\n      taker(END);\n    }\n  }\n\n  return {\n    take: take,\n    put: put,\n    flush: flush,\n    close: close\n  };\n}\nfunction eventChannel(subscribe, buffer) {\n  if (buffer === void 0) {\n    buffer = none();\n  }\n\n  var closed = false;\n  var unsubscribe;\n  var chan = channel(buffer);\n\n  var close = function close() {\n    if (closed) {\n      return;\n    }\n\n    closed = true;\n\n    if (func(unsubscribe)) {\n      unsubscribe();\n    }\n\n    chan.close();\n  };\n\n  unsubscribe = subscribe(function (input) {\n    if (isEnd(input)) {\n      close();\n      return;\n    }\n\n    chan.put(input);\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(unsubscribe, func, 'in eventChannel: subscribe should return a function to unsubscribe');\n  }\n\n  unsubscribe = once(unsubscribe);\n\n  if (closed) {\n    unsubscribe();\n  }\n\n  return {\n    take: chan.take,\n    flush: chan.flush,\n    close: close\n  };\n}\nfunction multicastChannel() {\n  var _ref;\n\n  var closed = false;\n  var currentTakers = [];\n  var nextTakers = currentTakers;\n\n  function checkForbiddenStates() {\n    if (closed && nextTakers.length) {\n      throw internalErr(CLOSED_CHANNEL_WITH_TAKERS);\n    }\n  }\n\n  var ensureCanMutateNextTakers = function ensureCanMutateNextTakers() {\n    if (nextTakers !== currentTakers) {\n      return;\n    }\n\n    nextTakers = currentTakers.slice();\n  };\n\n  var close = function close() {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n    }\n\n    closed = true;\n    var takers = currentTakers = nextTakers;\n    nextTakers = [];\n    takers.forEach(function (taker) {\n      taker(END);\n    });\n  };\n\n  return _ref = {}, _ref[MULTICAST] = true, _ref.put = function put(input) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n      check(input, notUndef, UNDEFINED_INPUT_ERROR);\n    }\n\n    if (closed) {\n      return;\n    }\n\n    if (isEnd(input)) {\n      close();\n      return;\n    }\n\n    var takers = currentTakers = nextTakers;\n\n    for (var i = 0, len = takers.length; i < len; i++) {\n      var taker = takers[i];\n\n      if (taker[MATCH](input)) {\n        taker.cancel();\n        taker(input);\n      }\n    }\n  }, _ref.take = function take(cb, matcher) {\n    if (matcher === void 0) {\n      matcher = wildcard;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkForbiddenStates();\n    }\n\n    if (closed) {\n      cb(END);\n      return;\n    }\n\n    cb[MATCH] = matcher;\n    ensureCanMutateNextTakers();\n    nextTakers.push(cb);\n    cb.cancel = once(function () {\n      ensureCanMutateNextTakers();\n      remove(nextTakers, cb);\n    });\n  }, _ref.close = close, _ref;\n}\nfunction stdChannel() {\n  var chan = multicastChannel();\n  var put = chan.put;\n\n  chan.put = function (input) {\n    if (input[SAGA_ACTION]) {\n      put(input);\n      return;\n    }\n\n    asap(function () {\n      put(input);\n    });\n  };\n\n  return chan;\n}\n\nvar RUNNING = 0;\nvar CANCELLED = 1;\nvar ABORTED = 2;\nvar DONE = 3;\n\nfunction resolvePromise(promise, cb) {\n  var cancelPromise = promise[CANCEL];\n\n  if (func(cancelPromise)) {\n    cb.cancel = cancelPromise;\n  }\n\n  promise.then(cb, function (error) {\n    cb(error, true);\n  });\n}\n\nvar current = 0;\nvar nextSagaId = (function () {\n  return ++current;\n});\n\nvar _effectRunnerMap;\n\nfunction getIteratorMetaInfo(iterator, fn) {\n  if (iterator.isSagaIterator) {\n    return {\n      name: iterator.meta.name\n    };\n  }\n\n  return getMetaInfo(fn);\n}\n\nfunction createTaskIterator(_ref) {\n  var context = _ref.context,\n      fn = _ref.fn,\n      args = _ref.args;\n\n  // catch synchronous failures; see #152 and #441\n  try {\n    var result = fn.apply(context, args); // i.e. a generator function returns an iterator\n\n    if (iterator(result)) {\n      return result;\n    }\n\n    var resolved = false;\n\n    var next = function next(arg) {\n      if (!resolved) {\n        resolved = true; // Only promises returned from fork will be interpreted. See #1573\n\n        return {\n          value: result,\n          done: !promise(result)\n        };\n      } else {\n        return {\n          value: arg,\n          done: true\n        };\n      }\n    };\n\n    return makeIterator(next);\n  } catch (err) {\n    // do not bubble up synchronous failures for detached forks\n    // instead create a failed task. See #152 and #441\n    return makeIterator(function () {\n      throw err;\n    });\n  }\n}\n\nfunction runPutEffect(env, _ref2, cb) {\n  var channel = _ref2.channel,\n      action = _ref2.action,\n      resolve = _ref2.resolve;\n\n  /**\n   Schedule the put in case another saga is holding a lock.\n   The put will be executed atomically. ie nested puts will execute after\n   this put has terminated.\n   **/\n  asap(function () {\n    var result;\n\n    try {\n      result = (channel ? channel.put : env.dispatch)(action);\n    } catch (error) {\n      cb(error, true);\n      return;\n    }\n\n    if (resolve && promise(result)) {\n      resolvePromise(result, cb);\n    } else {\n      cb(result);\n    }\n  }); // Put effects are non cancellables\n}\n\nfunction runTakeEffect(env, _ref3, cb) {\n  var _ref3$channel = _ref3.channel,\n      channel = _ref3$channel === void 0 ? env.channel : _ref3$channel,\n      pattern = _ref3.pattern,\n      maybe = _ref3.maybe;\n\n  var takeCb = function takeCb(input) {\n    if (input instanceof Error) {\n      cb(input, true);\n      return;\n    }\n\n    if (isEnd(input) && !maybe) {\n      cb(TERMINATE);\n      return;\n    }\n\n    cb(input);\n  };\n\n  try {\n    channel.take(takeCb, notUndef(pattern) ? matcher(pattern) : null);\n  } catch (err) {\n    cb(err, true);\n    return;\n  }\n\n  cb.cancel = takeCb.cancel;\n}\n\nfunction runCallEffect(env, _ref4, cb, _ref5) {\n  var context = _ref4.context,\n      fn = _ref4.fn,\n      args = _ref4.args;\n  var task = _ref5.task;\n\n  // catch synchronous failures; see #152\n  try {\n    var result = fn.apply(context, args);\n\n    if (promise(result)) {\n      resolvePromise(result, cb);\n      return;\n    }\n\n    if (iterator(result)) {\n      // resolve iterator\n      proc(env, result, task.context, current, getMetaInfo(fn),\n      /* isRoot */\n      false, cb);\n      return;\n    }\n\n    cb(result);\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runCPSEffect(env, _ref6, cb) {\n  var context = _ref6.context,\n      fn = _ref6.fn,\n      args = _ref6.args;\n\n  // CPS (ie node style functions) can define their own cancellation logic\n  // by setting cancel field on the cb\n  // catch synchronous failures; see #152\n  try {\n    var cpsCb = function cpsCb(err, res) {\n      if (undef(err)) {\n        cb(res);\n      } else {\n        cb(err, true);\n      }\n    };\n\n    fn.apply(context, args.concat(cpsCb));\n\n    if (cpsCb.cancel) {\n      cb.cancel = cpsCb.cancel;\n    }\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runForkEffect(env, _ref7, cb, _ref8) {\n  var context = _ref7.context,\n      fn = _ref7.fn,\n      args = _ref7.args,\n      detached = _ref7.detached;\n  var parent = _ref8.task;\n  var taskIterator = createTaskIterator({\n    context: context,\n    fn: fn,\n    args: args\n  });\n  var meta = getIteratorMetaInfo(taskIterator, fn);\n  immediately(function () {\n    var child = proc(env, taskIterator, parent.context, current, meta, detached, undefined);\n\n    if (detached) {\n      cb(child);\n    } else {\n      if (child.isRunning()) {\n        parent.queue.addTask(child);\n        cb(child);\n      } else if (child.isAborted()) {\n        parent.queue.abort(child.error());\n      } else {\n        cb(child);\n      }\n    }\n  }); // Fork effects are non cancellables\n}\n\nfunction runJoinEffect(env, taskOrTasks, cb, _ref9) {\n  var task = _ref9.task;\n\n  var joinSingleTask = function joinSingleTask(taskToJoin, cb) {\n    if (taskToJoin.isRunning()) {\n      var joiner = {\n        task: task,\n        cb: cb\n      };\n\n      cb.cancel = function () {\n        if (taskToJoin.isRunning()) remove(taskToJoin.joiners, joiner);\n      };\n\n      taskToJoin.joiners.push(joiner);\n    } else {\n      if (taskToJoin.isAborted()) {\n        cb(taskToJoin.error(), true);\n      } else {\n        cb(taskToJoin.result());\n      }\n    }\n  };\n\n  if (array$1(taskOrTasks)) {\n    if (taskOrTasks.length === 0) {\n      cb([]);\n      return;\n    }\n\n    var childCallbacks = createAllStyleChildCallbacks(taskOrTasks, cb);\n    taskOrTasks.forEach(function (t, i) {\n      joinSingleTask(t, childCallbacks[i]);\n    });\n  } else {\n    joinSingleTask(taskOrTasks, cb);\n  }\n}\n\nfunction cancelSingleTask(taskToCancel) {\n  if (taskToCancel.isRunning()) {\n    taskToCancel.cancel();\n  }\n}\n\nfunction runCancelEffect(env, taskOrTasks, cb, _ref10) {\n  var task = _ref10.task;\n\n  if (taskOrTasks === SELF_CANCELLATION) {\n    cancelSingleTask(task);\n  } else if (array$1(taskOrTasks)) {\n    taskOrTasks.forEach(cancelSingleTask);\n  } else {\n    cancelSingleTask(taskOrTasks);\n  }\n\n  cb(); // cancel effects are non cancellables\n}\n\nfunction runAllEffect(env, effects, cb, _ref11) {\n  var digestEffect = _ref11.digestEffect;\n  var effectId = current;\n  var keys = Object.keys(effects);\n\n  if (keys.length === 0) {\n    cb(array$1(effects) ? [] : {});\n    return;\n  }\n\n  var childCallbacks = createAllStyleChildCallbacks(effects, cb);\n  keys.forEach(function (key) {\n    digestEffect(effects[key], effectId, childCallbacks[key], key);\n  });\n}\n\nfunction runRaceEffect(env, effects, cb, _ref12) {\n  var digestEffect = _ref12.digestEffect;\n  var effectId = current;\n  var keys = Object.keys(effects);\n  var response = array$1(effects) ? createEmptyArray(keys.length) : {};\n  var childCbs = {};\n  var completed = false;\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || shouldComplete(res)) {\n        // Race Auto cancellation\n        cb.cancel();\n        cb(res, isErr);\n      } else {\n        cb.cancel();\n        completed = true;\n        response[key] = res;\n        cb(response);\n      }\n    };\n\n    chCbAtKey.cancel = noop;\n    childCbs[key] = chCbAtKey;\n  });\n\n  cb.cancel = function () {\n    // prevents unnecessary cancellation\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCbs[key].cancel();\n      });\n    }\n  };\n\n  keys.forEach(function (key) {\n    if (completed) {\n      return;\n    }\n\n    digestEffect(effects[key], effectId, childCbs[key], key);\n  });\n}\n\nfunction runSelectEffect(env, _ref13, cb) {\n  var selector = _ref13.selector,\n      args = _ref13.args;\n\n  try {\n    var state = selector.apply(void 0, [env.getState()].concat(args));\n    cb(state);\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runChannelEffect(env, _ref14, cb) {\n  var pattern = _ref14.pattern,\n      buffer = _ref14.buffer;\n  var chan = channel(buffer);\n  var match = matcher(pattern);\n\n  var taker = function taker(action) {\n    if (!isEnd(action)) {\n      env.channel.take(taker, match);\n    }\n\n    chan.put(action);\n  };\n\n  var close = chan.close;\n\n  chan.close = function () {\n    taker.cancel();\n    close();\n  };\n\n  env.channel.take(taker, match);\n  cb(chan);\n}\n\nfunction runCancelledEffect(env, data, cb, _ref15) {\n  var task = _ref15.task;\n  cb(task.isCancelled());\n}\n\nfunction runFlushEffect(env, channel, cb) {\n  channel.flush(cb);\n}\n\nfunction runGetContextEffect(env, prop, cb, _ref16) {\n  var task = _ref16.task;\n  cb(task.context[prop]);\n}\n\nfunction runSetContextEffect(env, props, cb, _ref17) {\n  var task = _ref17.task;\n  assignWithSymbols(task.context, props);\n  cb();\n}\n\nvar effectRunnerMap = (_effectRunnerMap = {}, _effectRunnerMap[TAKE] = runTakeEffect, _effectRunnerMap[PUT] = runPutEffect, _effectRunnerMap[ALL] = runAllEffect, _effectRunnerMap[RACE] = runRaceEffect, _effectRunnerMap[CALL] = runCallEffect, _effectRunnerMap[CPS] = runCPSEffect, _effectRunnerMap[FORK] = runForkEffect, _effectRunnerMap[JOIN] = runJoinEffect, _effectRunnerMap[CANCEL$1] = runCancelEffect, _effectRunnerMap[SELECT] = runSelectEffect, _effectRunnerMap[ACTION_CHANNEL] = runChannelEffect, _effectRunnerMap[CANCELLED$1] = runCancelledEffect, _effectRunnerMap[FLUSH] = runFlushEffect, _effectRunnerMap[GET_CONTEXT] = runGetContextEffect, _effectRunnerMap[SET_CONTEXT] = runSetContextEffect, _effectRunnerMap);\n\n/**\n Used to track a parent task and its forks\n In the fork model, forked tasks are attached by default to their parent\n We model this using the concept of Parent task && main Task\n main task is the main flow of the current Generator, the parent tasks is the\n aggregation of the main tasks + all its forked tasks.\n Thus the whole model represents an execution tree with multiple branches (vs the\n linear execution tree in sequential (non parallel) programming)\n\n A parent tasks has the following semantics\n - It completes if all its forks either complete or all cancelled\n - If it's cancelled, all forks are cancelled as well\n - It aborts if any uncaught error bubbles up from forks\n - If it completes, the return value is the one returned by the main task\n **/\n\nfunction forkQueue(mainTask, onAbort, cont) {\n  var tasks = [];\n  var result;\n  var completed = false;\n  addTask(mainTask);\n\n  var getTasks = function getTasks() {\n    return tasks;\n  };\n\n  function abort(err) {\n    onAbort();\n    cancelAll();\n    cont(err, true);\n  }\n\n  function addTask(task) {\n    tasks.push(task);\n\n    task.cont = function (res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      remove(tasks, task);\n      task.cont = noop;\n\n      if (isErr) {\n        abort(res);\n      } else {\n        if (task === mainTask) {\n          result = res;\n        }\n\n        if (!tasks.length) {\n          completed = true;\n          cont(result);\n        }\n      }\n    };\n  }\n\n  function cancelAll() {\n    if (completed) {\n      return;\n    }\n\n    completed = true;\n    tasks.forEach(function (t) {\n      t.cont = noop;\n      t.cancel();\n    });\n    tasks = [];\n  }\n\n  return {\n    addTask: addTask,\n    cancelAll: cancelAll,\n    abort: abort,\n    getTasks: getTasks\n  };\n}\n\n// there can be only a single saga error created at any given moment\n\nfunction formatLocation(fileName, lineNumber) {\n  return fileName + \"?\" + lineNumber;\n}\n\nfunction effectLocationAsString(effect) {\n  var location = getLocation(effect);\n\n  if (location) {\n    var code = location.code,\n        fileName = location.fileName,\n        lineNumber = location.lineNumber;\n    var source = code + \"  \" + formatLocation(fileName, lineNumber);\n    return source;\n  }\n\n  return '';\n}\n\nfunction sagaLocationAsString(sagaMeta) {\n  var name = sagaMeta.name,\n      location = sagaMeta.location;\n\n  if (location) {\n    return name + \"  \" + formatLocation(location.fileName, location.lineNumber);\n  }\n\n  return name;\n}\n\nfunction cancelledTasksAsString(sagaStack) {\n  var cancelledTasks = flatMap(function (i) {\n    return i.cancelledTasks;\n  }, sagaStack);\n\n  if (!cancelledTasks.length) {\n    return '';\n  }\n\n  return ['Tasks cancelled due to error:'].concat(cancelledTasks).join('\\n');\n}\n\nvar crashedEffect = null;\nvar sagaStack = [];\nvar addSagaFrame = function addSagaFrame(frame) {\n  frame.crashedEffect = crashedEffect;\n  sagaStack.push(frame);\n};\nvar clear = function clear() {\n  crashedEffect = null;\n  sagaStack.length = 0;\n}; // this sets crashed effect for the soon-to-be-reported saga frame\n// this slightly streatches the singleton nature of this module into wrong direction\n// as it's even less obvious what's the data flow here, but it is what it is for now\n\nvar setCrashedEffect = function setCrashedEffect(effect) {\n  crashedEffect = effect;\n};\n/**\n  @returns {string}\n\n  @example\n  The above error occurred in task errorInPutSaga {pathToFile}\n  when executing effect put({type: 'REDUCER_ACTION_ERROR_IN_PUT'}) {pathToFile}\n      created by fetchSaga {pathToFile}\n      created by rootSaga {pathToFile}\n*/\n\nvar toString = function toString() {\n  var firstSaga = sagaStack[0],\n      otherSagas = sagaStack.slice(1);\n  var crashedEffectLocation = firstSaga.crashedEffect ? effectLocationAsString(firstSaga.crashedEffect) : null;\n  var errorMessage = \"The above error occurred in task \" + sagaLocationAsString(firstSaga.meta) + (crashedEffectLocation ? \" \\n when executing effect \" + crashedEffectLocation : '');\n  return [errorMessage].concat(otherSagas.map(function (s) {\n    return \"    created by \" + sagaLocationAsString(s.meta);\n  }), [cancelledTasksAsString(sagaStack)]).join('\\n');\n};\n\nfunction newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont) {\n  var _task;\n\n  if (cont === void 0) {\n    cont = noop;\n  }\n\n  var status = RUNNING;\n  var taskResult;\n  var taskError;\n  var deferredEnd = null;\n  var cancelledDueToErrorTasks = [];\n  var context = Object.create(parentContext);\n  var queue = forkQueue(mainTask, function onAbort() {\n    cancelledDueToErrorTasks.push.apply(cancelledDueToErrorTasks, queue.getTasks().map(function (t) {\n      return t.meta.name;\n    }));\n  }, end);\n  /**\n   This may be called by a parent generator to trigger/propagate cancellation\n   cancel all pending tasks (including the main task), then end the current task.\n    Cancellation propagates down to the whole execution tree held by this Parent task\n   It's also propagated to all joiners of this task and their execution tree/joiners\n    Cancellation is noop for terminated/Cancelled tasks tasks\n   **/\n\n  function cancel() {\n    if (status === RUNNING) {\n      // Setting status to CANCELLED does not necessarily mean that the task/iterators are stopped\n      // effects in the iterator's finally block will still be executed\n      status = CANCELLED;\n      queue.cancelAll(); // Ending with a TASK_CANCEL will propagate the Cancellation to all joiners\n\n      end(TASK_CANCEL, false);\n    }\n  }\n\n  function end(result, isErr) {\n    if (!isErr) {\n      // The status here may be RUNNING or CANCELLED\n      // If the status is CANCELLED, then we do not need to change it here\n      if (result === TASK_CANCEL) {\n        status = CANCELLED;\n      } else if (status !== CANCELLED) {\n        status = DONE;\n      }\n\n      taskResult = result;\n      deferredEnd && deferredEnd.resolve(result);\n    } else {\n      status = ABORTED;\n      addSagaFrame({\n        meta: meta,\n        cancelledTasks: cancelledDueToErrorTasks\n      });\n\n      if (task.isRoot) {\n        var sagaStack = toString(); // we've dumped the saga stack to string and are passing it to user's code\n        // we know that it won't be needed anymore and we need to clear it\n\n        clear();\n        env.onError(result, {\n          sagaStack: sagaStack\n        });\n      }\n\n      taskError = result;\n      deferredEnd && deferredEnd.reject(result);\n    }\n\n    task.cont(result, isErr);\n    task.joiners.forEach(function (joiner) {\n      joiner.cb(result, isErr);\n    });\n    task.joiners = null;\n  }\n\n  function setContext(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(props, object, createSetContextWarning('task', props));\n    }\n\n    assignWithSymbols(context, props);\n  }\n\n  function toPromise() {\n    if (deferredEnd) {\n      return deferredEnd.promise;\n    }\n\n    deferredEnd = deferred();\n\n    if (status === ABORTED) {\n      deferredEnd.reject(taskError);\n    } else if (status !== RUNNING) {\n      deferredEnd.resolve(taskResult);\n    }\n\n    return deferredEnd.promise;\n  }\n\n  var task = (_task = {}, _task[TASK] = true, _task.id = parentEffectId, _task.meta = meta, _task.isRoot = isRoot, _task.context = context, _task.joiners = [], _task.queue = queue, _task.cancel = cancel, _task.cont = cont, _task.end = end, _task.setContext = setContext, _task.toPromise = toPromise, _task.isRunning = function isRunning() {\n    return status === RUNNING;\n  }, _task.isCancelled = function isCancelled() {\n    return status === CANCELLED || status === RUNNING && mainTask.status === CANCELLED;\n  }, _task.isAborted = function isAborted() {\n    return status === ABORTED;\n  }, _task.result = function result() {\n    return taskResult;\n  }, _task.error = function error() {\n    return taskError;\n  }, _task);\n  return task;\n}\n\nfunction proc(env, iterator$1, parentContext, parentEffectId, meta, isRoot, cont) {\n  if (process.env.NODE_ENV !== 'production' && iterator$1[asyncIteratorSymbol]) {\n    throw new Error(\"redux-saga doesn't support async generators, please use only regular ones\");\n  }\n\n  var finalRunEffect = env.finalizeRunEffect(runEffect);\n  /**\n    Tracks the current effect cancellation\n    Each time the generator progresses. calling runEffect will set a new value\n    on it. It allows propagating cancellation to child effects\n  **/\n\n  next.cancel = noop;\n  /** Creates a main task to track the main flow */\n\n  var mainTask = {\n    meta: meta,\n    cancel: cancelMain,\n    status: RUNNING\n  };\n  /**\n   Creates a new task descriptor for this generator.\n   A task is the aggregation of it's mainTask and all it's forked tasks.\n   **/\n\n  var task = newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont);\n  var executingContext = {\n    task: task,\n    digestEffect: digestEffect\n  };\n  /**\n    cancellation of the main task. We'll simply resume the Generator with a TASK_CANCEL\n  **/\n\n  function cancelMain() {\n    if (mainTask.status === RUNNING) {\n      mainTask.status = CANCELLED;\n      next(TASK_CANCEL);\n    }\n  }\n  /**\n    attaches cancellation logic to this task's continuation\n    this will permit cancellation to propagate down the call chain\n  **/\n\n\n  if (cont) {\n    cont.cancel = task.cancel;\n  } // kicks up the generator\n\n\n  next(); // then return the task descriptor to the caller\n\n  return task;\n  /**\n   * This is the generator driver\n   * It's a recursive async/continuation function which calls itself\n   * until the generator terminates or throws\n   * @param {internal commands(TASK_CANCEL | TERMINATE) | any} arg - value, generator will be resumed with.\n   * @param {boolean} isErr - the flag shows if effect finished with an error\n   *\n   * receives either (command | effect result, false) or (any thrown thing, true)\n   */\n\n  function next(arg, isErr) {\n    try {\n      var result;\n\n      if (isErr) {\n        result = iterator$1.throw(arg); // user handled the error, we can clear bookkept values\n\n        clear();\n      } else if (shouldCancel(arg)) {\n        /**\n          getting TASK_CANCEL automatically cancels the main task\n          We can get this value here\n           - By cancelling the parent task manually\n          - By joining a Cancelled task\n        **/\n        mainTask.status = CANCELLED;\n        /**\n          Cancels the current effect; this will propagate the cancellation down to any called tasks\n        **/\n\n        next.cancel();\n        /**\n          If this Generator has a `return` method then invokes it\n          This will jump to the finally block\n        **/\n\n        result = func(iterator$1.return) ? iterator$1.return(TASK_CANCEL) : {\n          done: true,\n          value: TASK_CANCEL\n        };\n      } else if (shouldTerminate(arg)) {\n        // We get TERMINATE flag, i.e. by taking from a channel that ended using `take` (and not `takem` used to trap End of channels)\n        result = func(iterator$1.return) ? iterator$1.return() : {\n          done: true\n        };\n      } else {\n        result = iterator$1.next(arg);\n      }\n\n      if (!result.done) {\n        digestEffect(result.value, parentEffectId, next);\n      } else {\n        /**\n          This Generator has ended, terminate the main task and notify the fork queue\n        **/\n        if (mainTask.status !== CANCELLED) {\n          mainTask.status = DONE;\n        }\n\n        mainTask.cont(result.value);\n      }\n    } catch (error) {\n      if (mainTask.status === CANCELLED) {\n        throw error;\n      }\n\n      mainTask.status = ABORTED;\n      mainTask.cont(error, true);\n    }\n  }\n\n  function runEffect(effect, effectId, currCb) {\n    /**\n      each effect runner must attach its own logic of cancellation to the provided callback\n      it allows this generator to propagate cancellation downward.\n       ATTENTION! effect runners must setup the cancel logic by setting cb.cancel = [cancelMethod]\n      And the setup must occur before calling the callback\n       This is a sort of inversion of control: called async functions are responsible\n      of completing the flow by calling the provided continuation; while caller functions\n      are responsible for aborting the current flow by calling the attached cancel function\n       Library users can attach their own cancellation logic to promises by defining a\n      promise[CANCEL] method in their returned promises\n      ATTENTION! calling cancel must have no effect on an already completed or cancelled effect\n    **/\n    if (promise(effect)) {\n      resolvePromise(effect, currCb);\n    } else if (iterator(effect)) {\n      // resolve iterator\n      proc(env, effect, task.context, effectId, meta,\n      /* isRoot */\n      false, currCb);\n    } else if (effect && effect[IO]) {\n      var effectRunner = effectRunnerMap[effect.type];\n      effectRunner(env, effect.payload, currCb, executingContext);\n    } else {\n      // anything else returned as is\n      currCb(effect);\n    }\n  }\n\n  function digestEffect(effect, parentEffectId, cb, label) {\n    if (label === void 0) {\n      label = '';\n    }\n\n    var effectId = nextSagaId();\n    env.sagaMonitor && env.sagaMonitor.effectTriggered({\n      effectId: effectId,\n      parentEffectId: parentEffectId,\n      label: label,\n      effect: effect\n    });\n    /**\n      completion callback and cancel callback are mutually exclusive\n      We can't cancel an already completed effect\n      And We can't complete an already cancelled effectId\n    **/\n\n    var effectSettled; // Completion callback passed to the appropriate effect runner\n\n    function currCb(res, isErr) {\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      cb.cancel = noop; // defensive measure\n\n      if (env.sagaMonitor) {\n        if (isErr) {\n          env.sagaMonitor.effectRejected(effectId, res);\n        } else {\n          env.sagaMonitor.effectResolved(effectId, res);\n        }\n      }\n\n      if (isErr) {\n        setCrashedEffect(effect);\n      }\n\n      cb(res, isErr);\n    } // tracks down the current cancel\n\n\n    currCb.cancel = noop; // setup cancellation logic on the parent cb\n\n    cb.cancel = function () {\n      // prevents cancelling an already completed effect\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      currCb.cancel(); // propagates cancel downward\n\n      currCb.cancel = noop; // defensive measure\n\n      env.sagaMonitor && env.sagaMonitor.effectCancelled(effectId);\n    };\n\n    finalRunEffect(effect, effectId, currCb);\n  }\n}\n\nvar RUN_SAGA_SIGNATURE = 'runSaga(options, saga, ...args)';\nvar NON_GENERATOR_ERR = RUN_SAGA_SIGNATURE + \": saga argument must be a Generator function!\";\nfunction runSaga(_ref, saga) {\n  var _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,\n      dispatch = _ref.dispatch,\n      getState = _ref.getState,\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? {} : _ref$context,\n      sagaMonitor = _ref.sagaMonitor,\n      effectMiddlewares = _ref.effectMiddlewares,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? logError : _ref$onError;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(saga, func, NON_GENERATOR_ERR);\n  }\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var iterator$1 = saga.apply(void 0, args);\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(iterator$1, iterator, NON_GENERATOR_ERR);\n  }\n\n  var effectId = nextSagaId();\n\n  if (sagaMonitor) {\n    // monitors are expected to have a certain interface, let's fill-in any missing ones\n    sagaMonitor.rootSagaStarted = sagaMonitor.rootSagaStarted || noop;\n    sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || noop;\n    sagaMonitor.effectResolved = sagaMonitor.effectResolved || noop;\n    sagaMonitor.effectRejected = sagaMonitor.effectRejected || noop;\n    sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || noop;\n    sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || noop;\n    sagaMonitor.rootSagaStarted({\n      effectId: effectId,\n      saga: saga,\n      args: args\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (notUndef(dispatch)) {\n      check(dispatch, func, 'dispatch must be a function');\n    }\n\n    if (notUndef(getState)) {\n      check(getState, func, 'getState must be a function');\n    }\n\n    if (notUndef(effectMiddlewares)) {\n      var MIDDLEWARE_TYPE_ERROR = 'effectMiddlewares must be an array of functions';\n      check(effectMiddlewares, array$1, MIDDLEWARE_TYPE_ERROR);\n      effectMiddlewares.forEach(function (effectMiddleware) {\n        return check(effectMiddleware, func, MIDDLEWARE_TYPE_ERROR);\n      });\n    }\n\n    check(onError, func, 'onError passed to the redux-saga is not a function!');\n  }\n\n  var finalizeRunEffect;\n\n  if (effectMiddlewares) {\n    var middleware = compose.apply(void 0, effectMiddlewares);\n\n    finalizeRunEffect = function finalizeRunEffect(runEffect) {\n      return function (effect, effectId, currCb) {\n        var plainRunEffect = function plainRunEffect(eff) {\n          return runEffect(eff, effectId, currCb);\n        };\n\n        return middleware(plainRunEffect)(effect);\n      };\n    };\n  } else {\n    finalizeRunEffect = identity;\n  }\n\n  var env = {\n    channel: channel,\n    dispatch: wrapSagaDispatch(dispatch),\n    getState: getState,\n    sagaMonitor: sagaMonitor,\n    onError: onError,\n    finalizeRunEffect: finalizeRunEffect\n  };\n  return immediately(function () {\n    var task = proc(env, iterator$1, context, effectId, getMetaInfo(saga),\n    /* isRoot */\n    true, undefined);\n\n    if (sagaMonitor) {\n      sagaMonitor.effectResolved(effectId, task);\n    }\n\n    return task;\n  });\n}\n\nfunction sagaMiddlewareFactory(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? {} : _ref$context,\n      _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,\n      sagaMonitor = _ref.sagaMonitor,\n      options = _objectWithoutPropertiesLoose(_ref, [\"context\", \"channel\", \"sagaMonitor\"]);\n\n  var boundRunSaga;\n\n  if (process.env.NODE_ENV !== 'production') {\n    check(channel, channel$1, 'options.channel passed to the Saga middleware is not a channel');\n  }\n\n  function sagaMiddleware(_ref2) {\n    var getState = _ref2.getState,\n        dispatch = _ref2.dispatch;\n    boundRunSaga = runSaga.bind(null, _extends({}, options, {\n      context: context,\n      channel: channel,\n      dispatch: dispatch,\n      getState: getState,\n      sagaMonitor: sagaMonitor\n    }));\n    return function (next) {\n      return function (action) {\n        if (sagaMonitor && sagaMonitor.actionDispatched) {\n          sagaMonitor.actionDispatched(action);\n        }\n\n        var result = next(action); // hit reducers\n\n        channel.put(action);\n        return result;\n      };\n    };\n  }\n\n  sagaMiddleware.run = function () {\n    if (process.env.NODE_ENV !== 'production' && !boundRunSaga) {\n      throw new Error('Before running a Saga, you must mount the Saga middleware on the Store using applyMiddleware');\n    }\n\n    return boundRunSaga.apply(void 0, arguments);\n  };\n\n  sagaMiddleware.setContext = function (props) {\n    if (process.env.NODE_ENV !== 'production') {\n      check(props, object, createSetContextWarning('sagaMiddleware', props));\n    }\n\n    assignWithSymbols(context, props);\n  };\n\n  return sagaMiddleware;\n}\n\nexport default sagaMiddlewareFactory;\nexport { END, channel, eventChannel, isEnd, multicastChannel, runSaga, stdChannel };\n","import createSagaMiddleware__default from '@redux-saga/core';\nexport * from '@redux-saga/core';\n\n\n\nexport default createSagaMiddleware__default;\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/values\"), __esModule: true };","/**\n * This wrapper generates error messages from v8n Validation Errors. https://imbrn.github.io/v8n/api/#validationerror\n * They are logged using LogManager as a warning to our customers when they mess up arguments.\n * To use: `import { enums, validation as v8n, parse } from '<relativePath>/common/validation'`.\n * Build up your validation using v8n.string, v8n.number, v8n.schema, enums, etc.\n * Enums is not part of the v8n library, but provided here for ease of use\n * const v8nValidation = v8n.schema({\n      sdpSemantics: enums(['unified-plan', 'plan-b']),\n      iceServers: v8n.array(),\n      iceCollectionIdealTimeout: v8n.positive(),\n      serverTurnCredentials: v8n.boolean(),\n      iceCollectionCheckFunction: v8n.optional(v8n.function())\n    })\n * Create a validator like this: `const parseOptions = parse('nameOfArg', v8nValidation)`\n * Run that validator against the actual values: `parseOptions(options)`\n * Returns the input either way and logs errors, in the future will throw errors on invalid data.\n */\nimport { __, concat, flatMap, isArray, isEmpty, join, map, partial } from 'lodash/fp'\nimport { logManager } from '../../logs'\nimport v8n from 'v8n'\n\n// Custom v8n Rules - https://imbrn.github.io/v8n/api/#extend\nv8n.extend({\n  function: () => value => typeof value === 'function'\n})\n\n// EXPORTS / IO\nexport const validation = v8n()\n\n// TODO: Add an enums function to the v8n library\n// Use as such: `prop: enums( [ 'red', 'blue', 'green' ] )\nexport const enums = values => {\n  // Map iteratee isn't just `v8n().exact` due to v8n() returning a new ProxyContext each time\n  const v8nExact = value => v8n().exact(value)\n  const exactValues = map(v8nExact)(values)\n  return v8n().passesAnyOf(...exactValues)\n}\n\n// Name -> v8nRule -> Input -> [String]\nexport const errorMessages = name => v8nRule => input =>\n  flatMap(validationErrorMessages(name))(validationResults(v8nRule)(input))\n\nexport const validationResults = v8nRule => input => v8nRule.testAll(input)\n\n// (Name, v8nRule) -> Input -> IO Input\nexport const parse = (name, v8nRule) => input => {\n  const errors = errorMessages(name)(v8nRule)(input)\n\n  if (isEmpty(errors)) {\n    return input\n  } else {\n    const log = logManager.getLogger('VALIDATION')\n    log.info(prettyPrint(errors)) // This is an IO side-effect\n    return input\n  }\n}\n\n// DEFINITIONS\n\n// Name -> ValidationError -> [String]\n// https://imbrn.github.io/v8n/api/#validationerror\nconst validationErrorMessages = name => validationError => {\n  const startingPath = []\n  return validationErrorMessageHelper(startingPath)(name)(validationError)\n}\n\n// [String] -> Name -> ValidationError -> [String]\nconst validationErrorMessageHelper = acc => name => ({ cause, rule, target, value }) => {\n  const path = concat(acc)(target || name)\n  if (isArray(cause)) {\n    const newVEM = validationErrorMessageHelper(path)(target)\n    return flatMap(newVEM)(cause)\n  } else {\n    return `${join('.')(path)} has value of '${value}', but it should be ${ruleMessage(rule)}`\n  }\n}\n\n// Rule -> String\n// https://imbrn.github.io/v8n/api/#rule\nconst ruleMessage = ({ name, args }) => {\n  switch (name) {\n    case 'schema':\n      return 'Schema'\n\n    case 'passesAnyOf':\n      return `any of '${join(\"', '\")(map(enumName)(args))}'`\n\n    case 'between':\n      return `between ${args.join(', ')}`\n\n    default:\n      return `${aOrAn(name)} ${name}`\n  }\n}\n\n// HELPERS\nconst enumName = arg => arg.chain[0].args // v8n internals\nconst prettyPrint = partial(JSON.stringify)([__, null, 4])\n// https://dictionary.cambridge.org/grammar/british-grammar/a-an-and-the\nconst aOrAn = string => (/[aeiou]/i.test(string[0]) ? 'an' : 'a')\n","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseParams = parser.parseParams;\nexports.parseFmtpConfig = parser.parseFmtpConfig; // Alias of parseParams().\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","const callPrefix = '@@KANDY/CALL/'\n\n/**\n * Basic call operation actions.\n */\nexport const MAKE_CALL = callPrefix + 'MAKE'\nexport const PENDING_MAKE_CALL = callPrefix + 'PENDING_MAKE'\nexport const SESSION_CREATED = callPrefix + 'SESSION_CREATED'\nexport const MAKE_CALL_FINISH = callPrefix + 'MAKE_FINISH'\n\nexport const MAKE_ANONYMOUS_CALL = callPrefix + 'MAKE_ANONYMOUS_CALL'\nexport const MAKE_ANONYMOUS_CALL_FINISH = callPrefix + 'MAKE_ANONYMOUS_CALL_FINISH'\n\nexport const CALL_INCOMING = callPrefix + 'INCOMING'\n\nexport const SEND_RINGING_FEEDBACK = callPrefix + 'SEND_RINGING_FEEDBACK'\nexport const SEND_RINGING_FEEDBACK_FINISH = callPrefix + 'SEND_RINGING_FEEDBACK_FINISH'\n\nexport const CALL_RINGING = callPrefix + 'RINGING'\nexport const SESSION_PROGRESS = callPrefix + 'SESSION_PROGRESS'\nexport const CALL_CANCELLED = callPrefix + 'CANCELLED'\n\nexport const ANSWER_CALL = callPrefix + 'ANSWER'\nexport const ANSWER_CALL_FINISH = callPrefix + 'ANSWER_FINISH'\n\nexport const REJECT_CALL = callPrefix + 'REJECT'\nexport const REJECT_CALL_FINISH = callPrefix + 'REJECT_FINISH'\n\nexport const IGNORE_CALL = callPrefix + 'IGNORE'\nexport const IGNORE_CALL_FINISH = callPrefix + 'IGNORE_FINISH'\n\nexport const CALL_ACCEPTED = callPrefix + 'ACCEPTED'\n\nexport const END_CALL = callPrefix + 'END'\nexport const END_CALL_FINISH = callPrefix + 'END_FINISH'\n\nexport const FORWARD_CALL = callPrefix + 'FORWARD_CALL'\nexport const FORWARD_CALL_FINISH = callPrefix + 'FORWARD_CALL_FINISH'\n\nexport const PENDING_OPERATION = callPrefix + 'PENDING_OPERATION'\n\n/**\n * Mid-call operation actions.\n */\n\nexport const UPDATE_CALL = callPrefix + 'UPDATE_CALL'\n\nexport const CALL_HOLD = callPrefix + 'HOLD'\nexport const CALL_HOLD_FINISH = callPrefix + 'HOLD_FINISH'\n\nexport const CALL_UNHOLD = callPrefix + 'UNHOLD'\nexport const CALL_UNHOLD_FINISH = callPrefix + 'UNHOLD_FINISH'\n\nexport const SET_CUSTOM_PARAMETERS = callPrefix + 'SET_CUSTOM_PARAMETERS'\n\nexport const SEND_CUSTOM_PARAMETERS = callPrefix + 'SEND_CUSTOM_PARAMETERS'\nexport const SEND_CUSTOM_PARAMETERS_FINISH = callPrefix + 'SEND_CUSTOM_PARAMETERS_FINISH'\n\nexport const ADD_MEDIA = callPrefix + 'ADD_MEDIA'\nexport const ADD_MEDIA_FINISH = callPrefix + 'ADD_MEDIA_FINISH'\nexport const ADD_BASIC_MEDIA = callPrefix + 'ADD_BASIC_MEDIA'\n\nexport const REMOVE_MEDIA = callPrefix + 'REMOVE_MEDIA'\nexport const REMOVE_MEDIA_FINISH = callPrefix + 'REMOVE_MEDIA_FINISH'\nexport const REMOVE_BASIC_MEDIA = callPrefix + 'REMOVE_BASIC_MEDIA'\n\nexport const RENEGOTIATE = callPrefix + 'RENEGOTIATE'\nexport const RENEGOTIATE_FINISH = callPrefix + 'RENEGOTIATE_FINISH'\n\nexport const MUSIC_ON_HOLD = callPrefix + 'MUSIC_ON_HOLD'\n\nexport const SEND_DTMF = callPrefix + 'SEND_DTMF'\nexport const SEND_DTMF_FINISH = callPrefix + 'SEND_DTMF_FINISH'\n\nexport const GET_STATS = callPrefix + 'GET_STATS'\nexport const GET_STATS_FINISH = callPrefix + 'GET_STATS_FINISH'\n\nexport const CONSULTATIVE_TRANSFER = callPrefix + 'CONSULTATIVE_TRANSFER'\nexport const PENDING_CONSULTATIVE_TRANSFER = callPrefix + 'PENDING_CONSULTATIVE_TRANSFER'\nexport const CONSULTATIVE_TRANSFER_FINISH = callPrefix + 'CONSULTATIVE_TRANSFER_FINISH'\n\nexport const DIRECT_TRANSFER = callPrefix + 'DIRECT_TRANSFER'\nexport const DIRECT_TRANSFER_FINISH = callPrefix + 'DIRECT_TRANSFER_FINISH'\n\nexport const JOIN = callPrefix + 'JOIN'\nexport const JOIN_START = callPrefix + 'JOIN_START'\nexport const PENDING_JOIN = callPrefix + 'PENDING_JOIN'\nexport const JOIN_FINISH = callPrefix + 'JOIN_FINISH'\n\nexport const REPLACE_TRACK = callPrefix + 'REPLACE_TRACK'\nexport const REPLACE_TRACK_FINISH = callPrefix + 'REPLACE_TRACK_FINISH'\n\nexport const MEDIA_RESTART = callPrefix + 'MEDIA_RESTART'\nexport const MEDIA_RESTART_FINISH = callPrefix + 'MEDIA_RESTART_FINISH'\n\n/**\n * Miscellaneous call actions\n */\nexport const CUSTOM_PARAMETERS_RECEIVED = callPrefix + 'CUSTOM_PARAMETERS_RECEIVED'\nexport const GET_AVAILABLE_CODECS = callPrefix + 'GET_AVAILABLE_CODECS'\nexport const AVAILABLE_CODECS_RETRIEVED = callPrefix + 'AVAILABLE_CODECS_RETRIEVED'\n\n/**\n * Remote operation actions.\n */\nexport const CALL_REMOTE_HOLD_FINISH = callPrefix + 'REMOTE_HOLD_FINISH'\nexport const CALL_REMOTE_UNHOLD_FINISH = callPrefix + 'REMOTE_UNHOLD_FINISH'\nexport const REMOTE_ADD_MEDIA_FINISH = callPrefix + 'REMOTE_ADD_MEDIA_FINISH'\nexport const REMOTE_REMOVE_MEDIA_FINISH = callPrefix + 'REMOTE_REMOVE_MEDIA_FINISH'\nexport const REMOTE_START_MOH_FINISH = callPrefix + 'REMOTE_START_MOH_FINISH'\nexport const REMOTE_STOP_MOH_FINISH = callPrefix + 'REMOTE_STOP_MOH_FINISH'\nexport const REMOTE_SLOW_START = callPrefix + 'REMOTE_SLOW_START'\n\n/**\n * Turn action types.\n */\nconst turnPrefix = callPrefix + 'TURN/'\n\nexport const TURN_CHANGED = turnPrefix + 'CHANGED'\n\n/**\n * Track action types.\n */\nconst trackPrefix = callPrefix + 'TRACK/'\n\nexport const TRACK_ADDED = trackPrefix + 'ADDED'\nexport const TRACK_REMOVED = trackPrefix + 'REMOVED'\n","const prefix = '@@KANDY/'\n\nexport const PROCESS_NOTIFICATION = prefix + 'PROCESS_NOTIFICATION'\nexport const PROCESS_NOTIFICATION_FINISH = prefix + 'PROCESS_NOTIFICATION_FINISH'\nexport const NOTIFICATION_RECEIVED = prefix + 'NOTIFICATION_RECEIVED'\n\nexport const ENABLE_NOTIFICATION_CHANNEL = prefix + 'ENABLE_NOTIFICATION_CHANNEL'\nexport const ENABLE_NOTIFICATION_CHANNEL_FINISH = prefix + 'ENABLE_NOTIFICATION_CHANNEL_FINISH'\n\nexport const REGISTER_APPLE_PUSH_NOTIFICATION = prefix + 'REGISTER_APPLE_PUSH_NOTIFICATION'\nexport const REGISTER_ANDROID_PUSH_NOTIFICATION = prefix + 'REGISTER_ANDROID_PUSH_NOTIFICATION'\n\nexport const UNREGISTER_APPLE_PUSH_NOTIFICATION = prefix + 'UNREGISTER_APPLE_PUSH_NOTIFICATION'\nexport const UNREGISTER_ANDROID_PUSH_NOTIFICATION = prefix + 'UNREGISTER_ANDROID_PUSH_NOTIFICATION'\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/map\"), __esModule: true };","import * as actionTypes from './actionTypes'\n\n/**\n * Helper function for formatting actions.\n * Ensures that actions follow an expectable format.\n * @method actionFormatter\n * @param  {string}  actionType   [description]\n * @param  {Object} [payload={}] The action payload.\n * @param  {BasicError} [payload.error] For an error action, the error should be provided.\n * @param  {Object} [meta={}] The action meta data.\n * @return {Object}\n */\nfunction actionFormatter (actionType, payload = {}, meta = {}) {\n  return {\n    type: actionType,\n    payload: {\n      ...payload\n    },\n    error: !!payload.error,\n    meta: {\n      ...meta\n    }\n  }\n}\n\n/**\n * Represents a request to subscribe to services and connect to a notification\n * channel.\n * @method subscribe\n * @param  {Array}   services  An array containing the request services.\n * @param {Object} [options] Any parameters that aren't credentials.\n * @return {Object}            A flux standard action.\n */\nexport function subscribe (services = [], options) {\n  return actionFormatter(actionTypes.SUBSCRIBE, { services, ...options })\n}\n\n/**\n * Indicates that the subscription process has finished.\n * @method subscribeFinished\n * @param  {Object}  subscriptions  An object representing the subscriptions.\n * @param  {string}  type                 The type of notificationChannel for this subscription.\n * @param  {Object}  error                An error object.\n * @param  {Object}  platform             The platform being used.\n * @return {Object}                       A flux standard action.\n */\nexport function subscribeFinished ({ subscriptions, type, error }, platform) {\n  return actionFormatter(actionTypes.SUBSCRIBE_FINISHED, { subscriptions, type, error }, { platform })\n}\n\n/**\n * A request to unsubscribe from services.\n * @method unsubscribe\n * @param  {Array} services A list of services.\n * @param  {string} type The type of notificationChannel.\n * @return {Object} A flux standard action.\n */\nexport function unsubscribe (services = [], type) {\n  return actionFormatter(actionTypes.UNSUBSCRIBE, { services, type })\n}\n\n/**\n * A notice that unsubscription has finished.\n * @method unsubscribeFinished\n * @param  {string} type The type of notificationChannel.\n * @param  {Object} [error] An error object.\n * @param  {string} [reason] The reason for the unsubscribe, if abnormal.\n * @param  {Object}  platform             The platform being used.\n * @return {Object} A flux standard action.\n */\nexport function unsubscribeFinished ({ type, error, reason, retryAfter }, platform) {\n  const payload = retryAfter ? { type, error, reason, retryAfter } : { type, error, reason }\n  return actionFormatter(actionTypes.UNSUBSCRIBE_FINISHED, payload, { platform })\n}\n\n/**\n * Action creator representing the finish of a resubscription request.\n * Payload mirrors a resubscription finished action.\n *\n * @method resubscribeFinished\n * @param {Object} $0\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} [$0.attemptNum] The attempt number of this resubscription.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function resubscribeFinished ({ error, attemptNum }, platform) {\n  var action = {\n    type: actionTypes.RESUBSCRIPTION_FINISHED,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n    action.payload.attemptNum = attemptNum\n  } else {\n    action.payload = {\n      attemptNum\n    }\n  }\n\n  return action\n}\n\n/**\n * Signifies that a plugin has subscription logic for certain services.\n * @method registerService\n * @param  {Array}  [services=[]] A list of services.\n * @return {Object} A flux standard action.\n */\nexport function registerService (services = []) {\n  return actionFormatter(actionTypes.REGISTER_SUB_SERVICE, { services })\n}\n\n/**\n * Indicates that the subscription plugin expects plugins to subscribe\n * for the specified services.\n * @method doPluginSubscriptions\n * @param  {Array<Object>}  services The list of services that should be subscribed to.\n * @param  {string} type The type of notification channel for these subscriptions.\n * @return {Object} A flux standard action.\n */\nexport function doPluginSubscriptions (services, type) {\n  return actionFormatter(actionTypes.PLUGIN_SUBSCRIPTION, { services, type })\n}\n\n/**\n * Indicates that a plugin has finished a subscription for the specified service.\n * @method reportSubscriptionFinished\n * @param  {Object} params\n * @param  {string} params.service The service that the subscription was for.\n * @param  {string} params.type The type of notification channel for this subscription.\n * @param  {Object} params.subscription The subscription response from the backend.\n * @param  {BasicError} [params.error] An error object.\n * @return {Object} A flux standard action.\n */\nexport function reportSubscriptionFinished ({ service, type, subscription, error }) {\n  const subscriptionId = subscription ? subscription.resourceURL.split('/subscriptions/')[1] : null\n  return actionFormatter(actionTypes.PLUGIN_SUBSCRIPTION_FINISHED, {\n    ...subscription,\n    subscriptionId: subscriptionId,\n    service,\n    channelType: type,\n    error\n  })\n}\n\n/**\n * Indicates that the subscription plugin expects plugins to unsubscribe\n * for the specified services.\n * @method doPluginUnsubscriptions\n * @param  {Array}  services The list of services that should be unsubscribed.\n * @param  {string} type The type of notification channel for these unsubscriptions.\n * @return {Object} A flux standard action.\n */\nexport function doPluginUnsubscriptions (services, type) {\n  return actionFormatter(actionTypes.PLUGIN_UNSUBSCRIPTION, { services, type })\n}\n\n/**\n * Indicates that a plugin has finished an unsubscription for the specified service.\n * @method reportUnsubscriptionFinished\n * @param  {Object} params\n * @param  {string} params.service The service that the unsubscription was for.\n * @param  {string} params.type The type of notification channel for this unsubscription.\n * @param  {BasicError} [params.error] An error object.\n * @return {Object} A flux standard action.\n */\nexport function reportUnsubscriptionFinished ({ service, type, error }) {\n  return actionFormatter(actionTypes.PLUGIN_UNSUBSCRIPTION_FINISHED, {\n    service,\n    channelType: type,\n    error\n  })\n}\n\n/**\n * Indicates that a notification channel has been opened / created.\n * @method channelOpened\n * @param {Object} channelInfo Data about the notification channel.\n * @param {string} type The type of notification channel.\n * @return {Object} A flux standard action.\n */\nexport function channelOpened (channelInfo, type) {\n  return actionFormatter(actionTypes.CHANNEL_OPENED, { ...channelInfo }, { type })\n}\n\n/**\n * Indicates that a notification channel has been closed / deleted.\n * @method channelClosed\n * @param {string} type The type of notification channel.\n * @return {Object} A flux standard action.\n */\nexport function channelClosed (type) {\n  return actionFormatter(actionTypes.CHANNEL_CLOSED, {}, { type })\n}\n","const prefix = '@@KANDY/SUBSCRIPTION/'\n\nexport const SUBSCRIBE = prefix + 'SUBSCRIBE'\nexport const SUBSCRIBE_FINISHED = prefix + 'SUBSCRIBE_FINISHED'\n\nexport const UNSUBSCRIBE = prefix + 'UNSUBSCRIBE'\nexport const UNSUBSCRIBE_FINISHED = prefix + 'UNSUBSCRIBE_FINISHED'\n\nexport const RESUBSCRIPTION_FINISHED = prefix + 'RESUBSCRIPTION_FINISHED'\n\nexport const REGISTER_SUB_SERVICE = prefix + 'REGISTER_SUB_SERVICE'\nexport const PLUGIN_SUBSCRIPTION = prefix + 'PLUGIN_SUBSCRIPTION'\nexport const PLUGIN_SUBSCRIPTION_FINISHED = prefix + 'PLUGIN_SUBSCRIPTION_FINISHED'\nexport const PLUGIN_UNSUBSCRIPTION = prefix + 'PLUGIN_UNSUBSCRIPTION'\nexport const PLUGIN_UNSUBSCRIPTION_FINISHED = prefix + 'PLUGIN_UNSUBSCRIPTION_FINISHED'\n\nexport const CHANNEL_OPENED = prefix + 'CHANNEL_OPENED'\nexport const CHANNEL_CLOSED = prefix + 'CHANNEL_CLOSED'\n","const prefix = '@@KANDY/CONN/'\n\n// Actions to tell connectivity plugin what to do\nexport const WS_ATTEMPT_CONNECT = prefix + 'WS_ATTEMPT_CONNECT'\nexport const WS_CONNECT_FINISHED = prefix + 'WS_CONNECT_FINISHED'\nexport const WS_DISCONNECT = prefix + 'WS_DISCONNECT'\nexport const WS_DISCONNECT_FINISHED = prefix + 'WS_DISCONNECT_FINISHED'\nexport const WS_RECONNECT_FAILED = prefix + 'WS_RECONNECT_FAILED'\n\n// actions for hooking into connectivity plugin behaviour\nexport const WS_CLOSED = prefix + 'WS_CLOSED'\nexport const WS_ERROR = prefix + 'WS_ERROR'\n\nexport const LOST_CONNECTION = prefix + 'LOST_CONNECTION'\n\nexport const RECEIVE_SERVER_PING = prefix + 'RECEIVE_SERVER_PING'\nexport const RECEIVE_SERVER_PONG = prefix + 'RECEIVE_SERVER_PONG'\n\nexport const CHANGE_CONNECTIVITY_CHECKING = prefix + 'CHANGE_CONNECTIVITY_CHECKING'\nexport const CHANGE_PING_INTERVAL = prefix + 'CHANGE_PING_INTERVAL'\n","// Statuses we receive from the REST responses/websocket messages\nexport const DeliveryStatuses = {\n  DeliveredToNetwork: 'Pending',\n  DeliveredToTerminal: 'Delivered',\n  DeliveryImpossible: 'Failed',\n  Unknown: 'Unknown'\n}\n\n/**\n * Chat types\n * Chat types used in the cpaas messaging plugin\n * @name chatTypes\n */\nexport const chatTypes = {\n  SMS: 'sms',\n  ONETOONE: 'chat-oneToOne',\n  GROUP: 'chat-group'\n}\n\n// Aliases for chatTypes to allow previous chat types such as 'im', and 'group'\n// to be used as well as 'chat-oneToOne' and 'chat-group'.\nexport const chatTypeAliases = {\n  sms: chatTypes.SMS,\n  'chat-oneToOne': chatTypes.ONETOONE,\n  im: chatTypes.ONETOONE,\n  'chat-group': chatTypes.GROUP,\n  group: chatTypes.GROUP\n}\n","const prefix = '@@KANDY/'\n\n/**\n * Contact Actions\n *\n * Action types associated with the operations of methods on the contacts namespace\n */\nexport const ADD_CONTACT = prefix + 'ADD_CONTACT'\nexport const ADD_CONTACT_FINISH = prefix + 'ADD_CONTACT_FINISH'\n\nexport const REFRESH_CONTACTS = prefix + 'REFRESH_CONTACTS'\nexport const REFRESH_CONTACTS_FINISH = prefix + 'REFRESH_CONTACTS_FINISH'\n\nexport const REMOVE_CONTACT = prefix + 'REMOVE_CONTACT'\nexport const REMOVE_CONTACT_FINISH = prefix + 'REMOVE_CONTACT_FINISH'\n\nexport const UPDATE_CONTACT = prefix + 'UPDATE_CONTACT'\nexport const UPDATE_CONTACT_FINISH = prefix + 'UPDATE_CONTACT_FINISH'\n\nexport const FETCH_CONTACT = prefix + 'FETCH_CONTACT'\nexport const FETCH_CONTACT_FINISH = prefix + 'FETCH_CONTACT_FINISH'\n\n/**\n * User Actions\n *\n * Action types associated with the operations of methods on the users namespace\n */\nexport const FETCH_USER = prefix + 'FETCH_USER'\nexport const FETCH_USER_FINISH = prefix + 'FETCH_USER_FINISH'\n\nexport const FETCH_SELF_INFO = prefix + 'FETCH_SELF_INFO'\nexport const FETCH_SELF_INFO_FINISH = prefix + 'FETCH_SELF_INFO_FINISH'\n\nexport const SEARCH_DIRECTORY = prefix + 'SEARCH_DIRECTORY'\nexport const SEARCH_DIRECTORY_FINISH = prefix + 'SEARCH_DIRECTORY_FINISH'\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };","import { PEER } from '../constants'\nimport { values } from 'lodash/fp'\n\n/**\n * Checks whether the current sdp semantics is unified-plan\n * @method isUnifiedPlan\n * @param {String} sdpSemantics The current sdp semantics being used\n * @return {Boolean}\n */\nexport function isUnifiedPlan (sdpSemantics) {\n  return sdpSemantics === PEER.SDP_SEMANTICS.UNIFIED_PLAN\n}\n\n/**\n * Generates a list of sdp semantics.\n * @method getSdpSemanticsList\n * @return {Array}\n */\nexport function getSdpSemanticsList () {\n  return values(PEER.SDP_SEMANTICS)\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","module.exports = true;\n","exports.f = {}.propertyIsEnumerable;\n","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","module.exports = {};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","/**\n * Returns the version of the currently running SDK.\n *\n * It must be used by any plugins (including the factory) as the unique source of truth when it comes to determine the current SDK version.\n * The actual version value is provided by the build process scripts (aka webpack.config.***.js) which simply do a string substitution\n * for the @@ tag below with actual version value.\n */\nexport function getVersion () {\n  return '4.37.0-beta.835'\n}\n","/**\n * Log levels supported by Loggers.\n * When a level is set, all logs of that level and higher will be logged.\n * @type {Object}\n */\nexport const logLevels = {\n  TRACE: 'TRACE',\n  DEBUG: 'DEBUG',\n  INFO: 'INFO',\n  WARN: 'WARN',\n  ERROR: 'ERROR',\n  SILENT: 'SILENT'\n}\n\n/**\n * Numeric values for each log level.\n * When a level is set, all logs of that level and higher will be logged.\n * @type {Object}\n */\nexport const levelValues = {\n  TRACE: 0,\n  DEBUG: 1,\n  INFO: 2,\n  WARN: 3,\n  ERROR: 4,\n  SILENT: 5\n}\n\n/**\n * Supported Log methods and their set log level; `<logMethod>: <logLevel>`\n * Used to construct the logging methods on a Logger.\n * @type {Object}\n */\nexport const logMethods = {\n  // Standard methods.\n  trace: logLevels.TRACE,\n  debug: logLevels.DEBUG,\n  info: logLevels.INFO,\n  warn: logLevels.WARN,\n  error: logLevels.ERROR,\n  // Extra console methods.\n  log: logLevels.DEBUG,\n  group: logLevels.DEBUG,\n  groupEnd: logLevels.DEBUG,\n  groupCollapsed: logLevels.DEBUG\n}\n\n/**\n * The log level for all timer methods.\n * @type {string}\n */\nexport const timeLevel = logLevels.DEBUG\n","/**\n * Blocking operations that can be performed on a call.\n * ie. no two of these operations, either local or remote,\n *    can be performed at the same time.\n * TODO: Should all operations just be listed here? Probably.\n */\nexport const OPERATIONS = {\n  // Establishment.\n  MAKE: 'MAKE',\n  ANSWER: 'ANSWER',\n  REJECT: 'REJECT',\n  IGNORE: 'IGNORE',\n  END: 'END',\n  SEND_RINGING_FEEDBACK: 'SEND_RINGING_FEEDBACK',\n  // TODO: Make sure these constants and actionTypes are in-sync with each\n  //    other. Use one to build the other.\n  FORWARD_CALL: 'FORWARD_CALL',\n  // Midcall.\n  HOLD: 'HOLD',\n  UNHOLD: 'UNHOLD',\n  SEND_CUSTOM_PARAMETERS: 'SEND_CUSTOM_PARAMETERS',\n  ADD_MEDIA: 'ADD_MEDIA',\n  ADD_BASIC_MEDIA: 'ADD_BASIC_MEDIA',\n  REMOVE_MEDIA: 'REMOVE_MEDIA',\n  REMOVE_BASIC_MEDIA: 'REMOVE_BASIC_MEDIA',\n  RENEGOTIATE: 'RENEGOTIATE',\n  GET_STATS: 'GET_STATS',\n  SEND_DTMF: 'SEND_DTMF',\n  CONSULTATIVE_TRANSFER: 'CONSULTATIVE_TRANSFER',\n  DIRECT_TRANSFER: 'DIRECT_TRANSFER',\n  JOIN: 'JOIN',\n  REPLACE_TRACK: 'REPLACE_TRACK',\n  MEDIA_RESTART: 'MEDIA_RESTART',\n  // Remote-only.\n  START_MOH: 'START_MOH',\n  STOP_MOH: 'STOP_MOH',\n  SLOW_START: 'SLOW_START'\n}\n\n/*\n * Endpoints that can perform operations.\n */\nexport const ENDPOINTS = {\n  LOCAL: 'LOCAL',\n  REMOTE: 'REMOTE'\n  // SERVER: 'SERVER' ?\n}\n\n/*\n * Statuses of an operation.\n */\nexport const OP_STATUS = {\n  ONGOING: 'ONGOING', // The operation is ongoing locally.\n  PENDING: 'PENDING' // The operation is pending remotely.\n}\n\n/*\n * Transitions of an operation.\n */\nexport const OP_TRANSITIONS = {\n  START: 'START', // The operation is starting.\n  UPDATE: 'UPDATE', // The operation is ongoing.\n  FINISH: 'FINISH' // The operation has finished.\n}\n\n/*\n * Operations that don't have a corresponding finish operation\n */\nexport const NO_FINISH_OPS = [OPERATIONS.ADD_BASIC_MEDIA, OPERATIONS.REMOVE_BASIC_MEDIA]\n","export { handleRequestError } from './handleRequestError'\n","// Callstack plugin.\nimport runPipeline from '../sdp/pipeline'\nimport { getTrackDscpMapping } from '../utils/dscp'\n\n// Other Plugins\nimport { logManager } from '../../logs'\nimport BasicError, { callCodes } from '../../errors'\nimport { getOptions, getCallByWebrtcSessionId } from '../../call/interfaceNew/selectors'\n\n// WebRTC operations.\nimport * as mediaOps from './media'\n\n// Libraries\nimport { call, all, select } from 'redux-saga/effects'\nimport { isEmpty, isUndefined } from 'lodash/fp'\n\nconst log = logManager.getLogger('CALLSTACK')\n\n/**\n * Recreates the internal Peer of a Session.\n * @method recreatePeer\n * @param {Object} webRTC    The WebRTC stack.\n * @param {string} sessionId The Session to act on.\n */\nexport function * recreatePeer (webRTC, sessionId) {\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n  if (!session) {\n    log.debug(`webRTC session ${sessionId} not found.`)\n    return\n  }\n\n  yield call([session, 'recreatePeer'])\n}\n\n/**\n * Performs the webRTC session functions associated with closing a call\n *\n * @method closeCall\n * @param {Object} webRTC A WebRTC instance\n * @param {string} sessionId the local webRTC session id, used to lookup the session object\n */\nexport function * closeCall (webRTC, sessionId) {\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n  if (!session) {\n    log.debug(`webRTC session ${sessionId} not found.`)\n    return\n  }\n\n  yield all(session.localTracks.map(track => call([track, 'cleanup'])))\n\n  yield call([session, 'end'])\n}\n\n/**\n * Performs webRTC portions of receiving an \"offer\" Session Description Protocol\n *\n * @method handleOffer\n * @param  {Object} deps\n * @param  {Object} deps.webRTC      The WebRTC stack.\n * @param  {string} offer Session Description protocol offer\n * @param  {string} webrtcSessionId local webrtc session id\n * @param {BandwidthControls} bandwidth bandwidth configurations to use\n * @returns {Object}\n */\nexport function * handleOffer (deps, offer, webrtcSessionId, bandwidth) {\n  const { webRTC } = deps\n  const session = yield call([webRTC.sessionManager, 'get'], webrtcSessionId)\n\n  if (!session) {\n    log.debug(`webRTC session ${webrtcSessionId} not found.`)\n    return\n  }\n\n  const { id: callId } = yield select(getCallByWebrtcSessionId, webrtcSessionId)\n\n  /*\n   * Run the remote SDP offer through any SDP handlers provided, then set it\n   *    as the Session's remote description.\n   * This is the \"pre set remote\" stage.\n   */\n  const callConfigOptions = yield select(getOptions)\n  offer = yield call(runPipeline, callConfigOptions.sdpHandlers, offer, {\n    callId,\n    type: 'offer',\n    step: 'set',\n    endpoint: 'remote'\n  })\n\n  let answer\n  try {\n    // TODO: Make sure the session is in the correct signaling state to process an offer.\n    const error = yield call([session, 'processOffer'], {\n      type: 'offer',\n      sdp: offer\n    })\n\n    if (error) {\n      return { error }\n    }\n\n    /*\n     * Create the local SDP answer, run it through any provided SDP handlers,\n     *    then set it as the Session's local description.\n     */\n    answer = yield call([session, 'createAnswer'])\n\n    // This is the \"pre set local\" stage.\n    answer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, answer.sdp, {\n      callId,\n      type: answer.type,\n      step: 'set',\n      endpoint: 'local',\n      bandwidth\n    })\n\n    answer = yield call([session, 'setLocalDescription'], answer)\n  } catch (e) {\n    return {\n      error: new BasicError({\n        message: e.message,\n        code: callCodes.GENERIC_ERROR\n      }),\n      answerSDP: null\n    }\n  }\n\n  // Run the SDP through the Pipeline again before we send it to the remote side.\n  //    This is the \"pre send local\" stage.\n  // Assign it to a new variable because some browsers enforce the read-only\n  //    properties of a RTCSessionDescription object. The object from\n  //    setLocalDescription is enforced read-only, but the `offer` before that\n  //    is not enforced.\n  const newSdp = yield call(runPipeline, callConfigOptions.sdpHandlers, answer.sdp, {\n    callId,\n    type: answer.type,\n    step: 'send',\n    endpoint: 'local',\n    bandwidth\n  })\n\n  return {\n    answerSDP: newSdp\n  }\n}\n\n/**\n * Performs the webRTC session functions associated with creating an SDP offer\n *\n * @method generateOffer\n * @param {Object} deps\n * @param {Object} deps.webRTC      The WebRTC stack.\n * @param {string} sessionId the local webRTC session id, used to lookup the session object\n * @param {Object} mediaDirections\n * @param {string} mediaDirections.audio mode of audio add to the sdp offer\n * @param {string} mediaDirections.video mode of video add to the sdp offer\n * @param {BandwidthControls} bandwidth bandwidth configurations to use\n * @return {Object} offer object containing a Session Description Protocol\n */\nexport function * generateOffer (deps, sessionId, mediaDirections, bandwidth) {\n  const { webRTC } = deps\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n\n  if (!session) {\n    log.debug(`webRTC session ${sessionId} not found.`)\n    return\n  }\n\n  const { id: callId } = yield select(getCallByWebrtcSessionId, sessionId)\n\n  /*\n   * Create the local SDP offer, run it through any provided SDP handlers,\n   *    then set it as the Session's local description.\n   */\n  // TODO: Make sure the session is in the correct signaling state to start a\n  //    renegotiation operation.\n  let offer, callConfigOptions\n\n  try {\n    offer = yield call([session, 'createOffer'], {\n      mediaDirections\n    })\n    callConfigOptions = yield select(getOptions)\n    // This is the \"pre set local\" stage.\n    offer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n      callId,\n      type: offer.type,\n      step: 'set',\n      endpoint: 'local',\n      bandwidth\n    })\n\n    offer = yield call([session, 'setLocalDescription'], offer)\n  } catch (e) {\n    return {\n      error: new BasicError({\n        message: e.message,\n        code: callCodes.GENERIC_ERROR\n      }),\n      type: null,\n      sdp: null\n    }\n  }\n  // This is the \"pre send local\" stage.\n  // Assign it to a new variable because some browsers enforce the read-only\n  //    properties of a RTCSessionDescription object. The object from\n  //    setLocalDescription is enforced read-only, but the `offer` before that\n  //    is not enforced.\n  const newSdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'send',\n    endpoint: 'local',\n    bandwidth\n  })\n\n  return { type: offer.type, sdp: newSdp }\n}\n\n/**\n * Performs the webRTC responsibilities for adding media\n *\n * @param {Object} deps\n * @param {Object} deps.webRTC      The WebRTC stack.\n * @param  {Object} mediaConstraints Video and audio media constraints\n * @param  {boolean} mediaConstraints.audio Whether to enable audio or not\n * @param  {boolean} mediaConstraints.video Whether to enable video or not\n * @param  {Object} sessionOptions\n * @param  {string} sessionOptions.sessionId the local webrtc session id\n * @param  {Object} [sessionOptions.bandwidth] Contains configuration details for setting bandwidth\n * @return {Object} Object\n * @return {string} Object.sdp An offer in the form of a Session Description Protocol\n * @return {Object} Object.media media object containing tracks\n */\nexport function * webRtcAddMedia (deps, mediaConstraints, sessionOptions) {\n  const { webRTC } = deps\n  const { medias, error } = yield call(mediaOps.createLocal, webRTC, mediaConstraints)\n  const { sessionId, bandwidth, dscpControls } = sessionOptions\n\n  if (error) {\n    return { error }\n  }\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n  const { id: callId } = yield select(getCallByWebrtcSessionId, sessionId)\n\n  let screenTracks = []\n  let audioTracks = []\n  let videoTracks = []\n  let allTracks = []\n\n  for (const eachMedia of medias) {\n    const tracks = yield call([eachMedia.media, 'getTracks'])\n    if (eachMedia.type === 'screen') {\n      screenTracks = [...screenTracks, ...tracks]\n    } else if (eachMedia.type === 'audio') {\n      audioTracks = [...audioTracks, ...tracks]\n    } else if (eachMedia.type === 'video') {\n      videoTracks = [...videoTracks, ...tracks]\n    }\n    allTracks = [...allTracks, ...tracks]\n  }\n\n  const dscpTrackMapping = getTrackDscpMapping(audioTracks, videoTracks, screenTracks, dscpControls)\n\n  yield call([session, 'addTracks'], allTracks, dscpTrackMapping)\n\n  /*\n   * Create the local SDP offer, run it through any provided SDP handlers,\n   *    then set it as the Session's local description.\n   */\n  // TODO: Make sure the session is in the correct signaling state to start a\n  //    renegotiation operation.\n  let offer, callConfigOptions\n  try {\n    offer = yield call([session, 'createOffer'])\n    callConfigOptions = yield select(getOptions)\n    // This is the \"pre set local\" stage.\n    offer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n      callId,\n      type: offer.type,\n      step: 'set',\n      endpoint: 'local',\n      bandwidth\n    })\n\n    offer = yield call([session, 'setLocalDescription'], offer)\n  } catch (e) {\n    return {\n      error: new BasicError({\n        message: e.message,\n        code: callCodes.GENERIC_ERROR\n      }),\n      medias: null,\n      sdp: null\n    }\n  }\n\n  // This is the \"pre send local\" stage.\n  // Assign it to a new variable because some browsers enforce the read-only\n  //    properties of a RTCSessionDescription object. The object from\n  //    setLocalDescription is enforced read-only, but the `offer` before that\n  //    is not enforced.\n  const newSdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'send',\n    endpoint: 'local',\n    bandwidth\n  })\n\n  let mediaStates = []\n\n  for (const eachMedia of medias) {\n    const mediaState = yield call([eachMedia.media, 'getState'])\n\n    mediaStates = [...mediaStates, mediaState]\n  }\n\n  return { error: false, medias: mediaStates, sdp: newSdp }\n}\n\n/**\n * Performs the webRTC responsibilities for removing media\n *\n * @param {Object} deps\n * @param {Object} deps.webRTC      The WebRTC stack.\n * @param {Object} sessionOptions\n * @param  {string} sessionOptions.sessionId The local webrtc session id\n * @param {Array} sessionOptions.tracks A list of track IDs to remove\n * @param  {Object} [sessionOptions.bandwidth] Contains configuration details for setting bandwidth\n * @return {Object} Object\n * @return {string} Object.sdp An offer in the form of a Session Description Protocol\n */\nexport function * webRtcRemoveMedia (deps, sessionOptions) {\n  const { webRTC } = deps\n  const { sessionId, tracks, bandwidth } = sessionOptions\n\n  // Get the tracks that we want to remove\n  const localTracksToRemove = yield call([webRTC.track, 'getTracks'], tracks)\n  // Get the indexes of undefined tracks.\n  const invalidIndexes = localTracksToRemove.reduce((acc, cur, ind) => {\n    return isUndefined(cur) ? acc.concat(ind) : acc\n  }, [])\n  // Get the track IDs of those indexes.\n  const invalidTracks = invalidIndexes.map(ind => tracks[ind])\n\n  if (!isEmpty(invalidTracks)) {\n    const message = `The following invalid track ids were provided: ${invalidTracks.join(', ')}`\n    log.debug(message)\n    return {\n      error: new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message\n      })\n    }\n  }\n\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n  const { id: callId } = yield select(getCallByWebrtcSessionId, sessionId)\n\n  // Removes tracks from peer (Will stop tracks from being sent to remote participant).\n  // Does NOT end the tracks.\n  yield call([session, 'removeTracks'], tracks)\n\n  // TODO: This should only cleanup the removed tracks, shouldn't it?\n  // Ends the tracks.\n  // Clean-up the local tracks.\n  yield all(localTracksToRemove.map(track => call([track, 'cleanup'])))\n\n  /*\n   * Create the local SDP offer, run it through any provided SDP handlers,\n   *    then set it as the Session's local description.\n   */\n  // TODO: Make sure the session is in the correct signaling state to start a\n  //    renegotiation operation.\n  let offer, callConfigOptions\n  try {\n    offer = yield call([session, 'createOffer'])\n    callConfigOptions = yield select(getOptions)\n    // This is the \"pre set local\" stage.\n    offer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n      callId,\n      type: offer.type,\n      step: 'set',\n      endpoint: 'local',\n      bandwidth\n    })\n\n    offer = yield call([session, 'setLocalDescription'], offer)\n  } catch (e) {\n    return {\n      error: new BasicError({\n        message: e.message,\n        code: callCodes.GENERIC_ERROR\n      }),\n      sdp: null\n    }\n  }\n  // This is the \"pre send local\" stage.\n  // Assign it to a new variable because some browsers enforce the read-only\n  //    properties of a RTCSessionDescription object. The object from\n  //    setLocalDescription is enforced read-only, but the `offer` before that\n  //    is not enforced.\n  const newSdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'send',\n    endpoint: 'local',\n    bandwidth\n  })\n\n  return {\n    sdp: newSdp\n  }\n}\n\n/**\n * Performs the webRTC responsibilities for replacing a track\n *\n * @param {Object} webRTC A WebRTC instance\n * @param {Object} params\n * @param {string} params.sessionId The id of the session to replace the track of\n * @param {string} params.trackId The id of the track to replace\n * @param  {Object} params.mediaConstraints Video or audio media constraints\n * @param  {Object|boolean} params.mediaConstraints.audio Audio configs\n * @param  {Object|boolean} params.mediaConstraints.video Video configs\n * @param  {Object|boolean} params.mediaConstraints.screenShare Screen sharing configs\n * @returns {Object} replaceTrackResult The result of the track replace operation\n * @returns {BasicError} [replaceTrackResult.error] Error object\n * @returns {string} newTrackId The ID of the new track that we used to replace the old one.\n * @returns {Object} replaceTrackResult.oldTrackState The state of the old track before it was replaced.\n */\nexport function * webRtcReplaceTrack (webRTC, params) {\n  const { sessionId, trackId, mediaConstraints } = params\n\n  let noOfTruthyTrackTypes = 0\n  let newTrackKind\n  Object.entries(mediaConstraints).forEach(([key, value]) => {\n    if (value) {\n      noOfTruthyTrackTypes++\n      newTrackKind = key\n    }\n  })\n\n  // Need to handle both cases as valid media constraints, for example:\n  //   mediaConstraints = {video: true, audio: false, screenShare: false}\n  //   mediaConstraints = {video: true}\n  if (noOfTruthyTrackTypes !== 1) {\n    // We require exactly one new track to be provided by API.\n    return {\n      error: new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message: `Require exactly one new track type to be specified. Found ${noOfTruthyTrackTypes} track types.`\n      }),\n      newTrackId: undefined\n    }\n  }\n\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n  const oldTrack = session.localTracks.find(track => track.id === trackId)\n\n  if (!oldTrack) {\n    return {\n      error: new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message: `Old track ${trackId} not found.`\n      }),\n      newTrackId: undefined\n    }\n  }\n\n  const oldTrackState = yield call([oldTrack, 'getState'])\n  const oldTrackKind = oldTrackState.kind\n\n  // At the moment, only video & screen share are compatible tracks that can replace each other.\n  // (That's because screen share is sent as a video track to remote peer)\n  // Otherwise, the exact media type is required in order to allow a track replacement.\n  const compatibleTrackKinds =\n    (oldTrackKind === 'audio' && newTrackKind === 'audio') ||\n    (oldTrackKind === 'video' && ['video', 'screenShare'].includes(newTrackKind))\n\n  if (!compatibleTrackKinds) {\n    return {\n      error: new BasicError({\n        code: callCodes.INVALID_PARAM,\n        message: `Media constraints incompatible for old track kind: ${oldTrackKind}.`\n      }),\n      newTrackId: undefined\n    }\n  }\n\n  // Create Media\n  const { medias: newMedias, error: createLocalError } = yield call(mediaOps.createLocal, webRTC, mediaConstraints)\n  if (createLocalError) {\n    return { error: createLocalError, newTrackId: undefined }\n  }\n\n  let allNewTracks = []\n\n  // Find the new track that matches the old track we want to replace.\n  for (const eachMedia of newMedias) {\n    const newTracks = yield call([eachMedia.media, 'getTracks'])\n    allNewTracks = [...allNewTracks, ...newTracks]\n  }\n\n  let newTrack\n  for (const track of allNewTracks) {\n    // Matching the track is done this way because we need to yield to getState,\n    //    but we can't yield inside of a `.find(func)` or similar. So iterate\n    //    over the new tracks \"manually\".\n    const state = yield call([track, 'getState'])\n    if (state.kind === oldTrackKind) {\n      newTrack = track\n      break\n    }\n  }\n\n  if (!newTrack) {\n    return {\n      error: new BasicError({\n        code: callCodes.USER_MEDIA_ERROR,\n        message: `${oldTrackKind} track not found`\n      }),\n      newTrackId: undefined\n    }\n  }\n\n  // Replaces the track\n  const replaceTrackError = yield call([session, 'replaceTrack'], newTrack, { trackId })\n  if (replaceTrackError) {\n    // If cannot replace old track, cleanup the newly created track\n    yield call([newTrack, 'cleanup'])\n    return {\n      error: new BasicError({\n        code: callCodes.GENERIC_ERROR,\n        message: replaceTrackError.message\n      }),\n      newTrackId: undefined\n    }\n  }\n\n  // cleanup old track\n  yield call([oldTrack, 'cleanup'])\n\n  return {\n    newTrackId: newTrack.id,\n    oldTrackState\n  }\n}\n","import { cloneDeep } from 'lodash/fp'\nimport name from './name'\n\nexport function getConnectionState (state, platform) {\n  if (state[name][platform]) {\n    return cloneDeep(state[name][platform])\n  } else {\n    return new Error('No sockets are up. Have you attempted to connect?')\n  }\n}\n\n/**\n * Retrieves the config options provided by the connectivity plugin.\n * @method getConnectivityConfig\n * @return {Object}\n */\nexport function getConnectivityConfig (state) {\n  return state.config[name]\n}\n\n/**\n * Retrieves the pingInterval property from state\n * @method getPingInterval\n * @param {Object} state Redux state.\n * @return {Object}\n */\nexport function getPingInterval (state) {\n  return state[name].pingInterval\n}\n\n/**\n * Retrieves the checkConnectivity property from state\n * @method getCheckConnectivity\n * @param {Object} state Redux state.\n * @return {Object}\n */\nexport function getCheckConnectivity (state) {\n  return state[name].checkConnectivity\n}\n","const PREFIX = '@@KANDY/'\n\nexport const CREATE_CONVERSATION = PREFIX + 'CREATE_CONVERSATION'\nexport const SEND_MESSAGE = PREFIX + 'SEND_MESSAGE'\nexport const SEND_MESSAGE_FINISH = PREFIX + 'SEND_MESSAGE_FINISH'\nexport const MESSAGE_RECEIVED = PREFIX + 'MESSAGE_RECEIVED'\nexport const INCOMING_MESSAGE_READ = PREFIX + 'INCOMING_MESSAGE_READ'\nexport const SEND_MESSAGE_READ = PREFIX + 'SEND_MESSAGE_READ'\nexport const SEND_MESSAGE_READ_FINISH = PREFIX + 'SEND_MESSAGE_READ_FINISH'\n\nexport const CLEAR_MESSAGES = PREFIX + 'CLEAR_MESSAGES'\nexport const CLEAR_MESSAGES_FINISH = PREFIX + 'CLEAR_MESSAGES_FINISH'\n\nexport const DELETE_CONVERSATION = PREFIX + 'DELETE_CONVERSATION'\nexport const DELETE_CONVERSATION_FINISH = PREFIX + 'DELETE_CONVERSATION_FINISH'\n\nexport const DELETE_MESSAGE = PREFIX + 'DELETE_MESSAGES'\nexport const DELETE_MESSAGE_FINISH = PREFIX + 'DELETE_MESSAGES_FINISH'\n\nexport const FETCH_CONVERSATIONS = PREFIX + 'FETCH_CONVERSATIONS'\nexport const FETCH_CONVERSATIONS_FINISHED = PREFIX + 'FETCH_CONVERSATIONS_FINISHED'\n\nexport const UPDATE_CONVERSATION = PREFIX + 'UPDATE_CONVERSATION'\n\nexport const FETCH_MESSAGES = PREFIX + 'FETCH_MESSAGES'\nexport const FETCH_MESSAGES_FINISHED = PREFIX + 'FETCH_MESSAGES_FINISHED'\n\nexport const RECEIVE_DELIVERY_RECEIPT = PREFIX + 'RECEIVE_DELIVERY_RECEIPT'\n\nexport const FILE_UPLOAD_FAIL = PREFIX + 'FILE_UPLOAD_FAIL'\n\nexport const SET_IS_TYPING = PREFIX + 'SET_IS_TYPING'\nexport const SET_IS_TYPING_FINISHED = PREFIX + 'SET_IS_TYPING_FINISHED'\n\nexport const GET_IMAGE_LINKS = PREFIX + 'GET_IMAGE_LINKS'\nexport const GET_IMAGE_LINKS_FINISH = PREFIX + 'GET_IMAGE_LINKS_FINISH'\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","import createManager from './logManager'\nimport defaultLogFormatter from './logFormatter'\nimport { logLevels as levelImport } from './constants'\n\n/**\n * Package main.\n */\n\n// Main export is the manager's factory function.\nexport default createManager\n\n// Named export for the log level constants the package uses / expects.\nexport const logLevels = levelImport\n\n// Default log formatter used by the defaultLogHandler\nexport const logFormatter = defaultLogFormatter\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","const prefix = '@@KANDY/LOGS/'\n\nexport const SET_LEVEL = prefix + 'SET_LEVEL'\nexport const LEVELS_CHANGE = prefix + 'LEVELS_CHANGE'\n\nexport const SET_HANDLER = prefix + 'SET_HANDLER'\nexport const HANDLERS_CHANGE = prefix + 'HANDLERS_CHANGE'\n","/**\n * Possible subscription states.\n * @name SUBSCRIPTION_STATE\n * @type {Object}\n */\nexport const SUBSCRIPTION_STATE = {\n  FULL: 'FULL',\n  PARTIAL: 'PARTIAL',\n  NONE: 'NONE'\n}\n\n/**\n * Possible disconnect reasons.\n * @name DISCONNECT_REASONS\n * @type {Object}\n */\nexport const DISCONNECT_REASONS = {\n  GONE: 'GONE',\n  LOST_CONNECTION: 'LOST_CONNECTION'\n}\n","/**\n * Retrieves media devices available on the system.\n * @method getDevices\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getDevices (state) {\n  return state.webrtc.devices\n}\n\n/**\n * Session selectors.\n */\nexport function getSessions (state) {\n  return state.webrtc.sessions\n}\n\nexport function getSessionById (state, sessionId) {\n  return getSessions(state).find(session => session.id === sessionId)\n}\n\n/**\n * Track selectors.\n */\nexport function getTracks (state) {\n  return state.webrtc.tracks\n}\n\nexport function getTrackById (state, trackId) {\n  return getTracks(state).find(track => track.trackId === trackId)\n}\n\n/**\n * Media selectors.\n * Handles retrieving data from the `state.webrtc.media` substate.\n */\n\n/**\n * Get the list of all media this session.\n * @method getMedia\n * @param  {Object} state Redux state.\n * @return {Array} A list of all media objects.\n */\nexport function getMedia (state) {\n  return state.webrtc.media\n}\n\n/**\n * Get a specific media object.\n * @method getMediaById\n * @param  {Object} state Redux state.\n * @param  {string} mediaId The media to retrieve.\n * @return {Object} A media object.\n */\nexport function getMediaById (state, mediaId) {\n  return getMedia(state).find(media => media.id === mediaId)\n}\n\n/**\n * Retrieves information about the browser.\n * @method getBrowserDetails\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getBrowserDetails (state) {\n  return state.webrtc.browser\n}\n","/**\n * Error codes for the Auth plugin.\n * @name authCodes\n */\nexport const authCodes = {\n  INVALID_CREDENTIALS: 'authentication:1',\n  CONNECT_FAIL_WS_ERROR: 'authentication:2',\n  LINK_UNSUBSCRIBE_FAIL: 'authentication:3',\n  LINK_SUBSCRIBE_FAIL: 'authentication:4',\n  LINK_EXTEND_SUBSCRIPTION_FAIL: 'authentication:5',\n  LINK_UPDATE_SUBSCRIPTION_FAIL: 'authentication:6',\n  UC_SUBSCRIBE_FAIL: 'authentication:7',\n  UC_REFRESH_TOKEN_FAIL: 'authentication:8',\n  UC_CREATE_TOKEN_FAIL: 'authentication:9',\n  UC_EXTEND_SUBSCRIPTION_FAIL: 'authentication:10',\n  UC_DISCONNECT_FAIL: 'authentication:11',\n  MISSING_SERVICE: 'authentication:12'\n}\n\n/**\n * Error codes for the Call plugin.\n * @name callCodes\n */\nexport const callCodes = {\n  UNKNOWN_ERROR: 'call:1',\n  GENERIC_ERROR: 'call:2',\n  INIT_MEDIA_FAILED: 'call:3',\n  USER_MEDIA_ERROR: 'call:4',\n  NOT_SUPPORTED: 'call:5',\n  // The call is in the wrong state.\n  INVALID_STATE: 'call:6',\n  // A provided parameter is not valid.\n  INVALID_PARAM: 'call:7',\n  // There is a desync between components' state.\n  STATE_DESYNC: 'call:8',\n  // Offer could not be generated\n  INVALID_OFFER: 'call:9',\n  // No ICE candidates found\n  NO_ICE_CANDIDATES: 'call:10',\n  // Failed to recieve answer due to media mismatch\n  SESSION_MISMATCH: 'call:11'\n}\n\n/**\n * Error codes for the Call History plugin.\n * @name callHistoryCodes\n */\nexport const callHistoryCodes = {\n  UNKNOWN_ERROR: 'callHistory:1',\n  BAD_REQUEST: 'callHistory:2',\n  NOT_FOUND: 'callHistory:3',\n  NOT_AUTHENTICATED: 'callHistory:4',\n  FORBIDDEN: 'callHistory:5'\n}\n/**\n * @name clickToCallCodes\n */\nexport const clickToCallCodes = {\n  MISSING_ARGS: 'clickToCall:1',\n  RESPONSE_ERROR: 'clickToCall:2'\n}\n/**\n * Error codes for the Groups plugin.\n * @name groupsCodes\n */\nexport const groupsCodes = {\n  UNKNOWN_ERROR: 'groups:1',\n  GENERIC_ERROR: 'groups:2',\n  MISSING_PARAMETERS: 'groups:3'\n}\n\n/**\n * Error codes for the Message plugin.\n * @name messagingCodes\n */\nexport const messagingCodes = {\n  CREATE_GROUP_FAIL: 'messaging:1',\n  MARK_READ_FAIL: 'messaging:2',\n  REMOVE_MEMBERS_FAIL: 'messaging:3',\n  ADD_MEMBERS_FAIL: 'messaging:4',\n  SEND_MESSAGE_FAIL: 'messaging:5',\n  FETCH_MESSAGES_FAIL: 'messaging:6',\n  FILE_UPLOAD_FAIL: 'messaging:7',\n  FETCH_CONVERSATIONS_FAIL: 'messaging:8',\n  INVALID_DESTINATION: 'messaging:9',\n  INVALID_FILE_PARTS: 'messaging:10',\n  SET_IS_TYPING_FAIL: 'messaging:11'\n}\n\n/**\n * Error codes for the Message Waiting Indicator plugin.\n * @name mwiCodes\n */\nexport const mwiCodes = {\n  FETCH_MWI_FAIL: 'mwi:1'\n}\n\n/**\n * Error codes from the Sip Events plugin.\n * @name sipEventCodes\n */\nexport const sipEventCodes = {\n  UNKNOWN_ERROR: 'sipEvents:1',\n  // The user did not subscribe/connect for the specified sip event service.\n  NOT_PROVISIONED: 'sipEvents:2',\n  // The user is not subscribed for the specified sip event.\n  NOT_SUBSCRIBED: 'sipEvents:3'\n}\n\n/**\n * Error codes for the audio bridge portion of the call plugin.\n * @name bridgeCodes\n */\nexport const bridgeCodes = {\n  UNKNOWN_ERROR: 'audioBridge:1',\n  // TODO: Make \"invalid input\" (and others) a generic code.\n  INVALID_INPUT: 'audioBridge:2',\n  ALREADY_EXISTS: 'audioBridge:3',\n  NOT_FOUND: 'audioBridge:4',\n  NOT_SUPPORTED: 'audioBridge:5',\n  MEDIA_NOT_FOUND: 'audioBridge:6',\n  INVALID_STATE: 'audioBridge:7'\n}\n\n/**\n * Error codes for the subscription plugin.\n * @name subscriptionCodes\n */\nexport const subscriptionCodes = {\n  WS_CONNECTION_ERROR: 'subscription:1',\n  CPAAS_WSREQUEST_FAIL: 'subscription:2',\n  CPAAS_WSREVOKE_FAIL: 'subscription:3',\n  CPAAS_WSREFRESH_FAIL: 'subscription:4',\n  CPAAS_SERVICE_SUB_FAIL: 'subscription:5',\n  CPAAS_SERVICE_UNSUB_FAIL: 'subscription:6',\n  CPAAS_UNSUBSCRIBE_FAIL: 'subscription:7'\n}\n/**\n * Error codes for the Presence plugin.\n * @name presenceCodes\n */\nexport const presenceCodes = {\n  INVALID_STATUS: 'presence:1',\n  INVALID_ACTIVITY: 'presence:2'\n}\n\n/**\n * Error codes for the Users plugin\n * @name usersCodes\n */\nexport const usersCodes = {\n  UNKNOWN: 'users:1',\n  REFRESH_CONTACTS_FAIL: 'users:2',\n  DIRECTORY_REQUEST_FAIL: 'users:3',\n  INVALID_PARAM: 'users:4'\n}\n\n/**\n * Error codes for the Webrtc plugin\n * @name webrtcCodes\n */\nexport const webrtcCodes = {\n  INVALID_PARAM: 'webrtc:1'\n}\n","import adapter from 'webrtc-adapter/out/adapter_no_edge'\nimport { mergeAllWith, isArray } from 'lodash/fp'\n\n// TODO: This function was copied from Kandy, we should eventually create a common project that\n// can contain all of these utils that are useful in multiple packages.\n\n/**\n * Deeply merges the values of multiple objects. Objects on the left receive the values from objects on their right.\n * Unlike lodash's default merge behavior this doesn't merge arrays.\n *\n * @name mergeValues\n * @param {...Object} objects - Objects to merge\n * @return {Object} A new object containing the merged values.\n */\nexport function mergeValues (...objects) {\n  return mergeAllWith((leftValue, rightValue) => {\n    // Overwrite the default behavior of lodash's merge for arrays and simply\n    // clobber what's on the left so we don't end up with merged arrays.\n    if (isArray(leftValue)) {\n      return rightValue\n    }\n  }, objects)\n}\n\nexport function makeSafeForCSS (name) {\n  if (!name) {\n    return name\n  } else {\n    return name.replace(/[^a-z0-9]/g, '')\n  }\n}\n\n/**\n * @returns The browser details as provided by webrtc-adapter\n */\nexport function getBrowserDetails () {\n  return adapter.browserDetails\n}\n","// Libraries.\nimport sdpTransform from 'sdp-transform'\nimport { cloneDeep, isArray, isFunction } from 'lodash/fp'\n\nimport { logManager } from '../logs'\nconst log = logManager.getLogger('SdpPipeline')\n\n/**\n * Basic SDP pipeline runner.\n * Does not include any default handlers.\n * @method sdpPipeline\n * @param  {Array}      handlers       List of functions that transform the SDP.\n * @param  {String}     sdp            The session description.\n * @param  {RTCSdpType} info           Information about the session description.\n * @param  {RTCSdpType} info.type      The session description's type.\n * @param  {String}     info.endpoint  Which end of the connection created the SDP.\n * @param  {Boolean}    info.isInitiator Whether this session initiated the connection or not.\n * @return {String}     The modified session description.\n\n */\nexport function runPipeline (handlers, sdp, info) {\n  const objectSdp = sdpTransform.parse(sdp)\n\n  const originalSdp = Object.freeze(objectSdp)\n  let newSdp = cloneDeep(originalSdp)\n\n  if (isArray(handlers)) {\n    handlers.forEach(handler => {\n      if (isFunction(handler)) {\n        newSdp = handler(newSdp, info, originalSdp)\n      } else {\n        log.error('SDP handler not a function; skipping.')\n      }\n    })\n  }\n\n  return sdpTransform.write(newSdp)\n}\n\n/**\n * Create an instance of the SDP pipeline.\n * Allows for persistent SDP handlers to be set and implicitly used.\n * @method createPipeline\n * @return {Object} An SDP pipeline.\n */\nfunction createPipeline () {\n  /**\n   * SDP handlers that should be included with every pipeline run.\n   * @type {Array}\n   */\n  let defaultHandlers = []\n\n  /**\n   * Use the pipeline to process an SDP.\n   * @method run\n   * @param  {Array}      handlers      List of functions that transform the SDP.\n   * @param  {String}     sdp           The session description.\n   * @param  {RTCSdpType} info          Information about the session description.\n   * @param  {RTCSdpType} info.type     The session description's type.\n   * @param  {String}     info.endpoint Which end of the connection created the SDP.\n   * @return {String}     The modified session description.\n   */\n  function run (handlers = [], sdp, info) {\n    return runPipeline(handlers.concat(defaultHandlers), sdp, info)\n  }\n\n  /**\n   * Set the SDP handlers that should be included with every pipeline run.\n   * @method setHandlers\n   * @param  {Array} handlers List of SDP handler functions.\n   */\n  function setHandlers (handlers) {\n    if (isArray(handlers)) {\n      defaultHandlers = defaultHandlers.concat(handlers)\n    }\n  }\n\n  /**\n   * Get the SDP handlers that are included with every pipeline run.\n   * @method getHandlers\n   * @return {Array} List of SDP handler functions.\n   */\n  function getHandlers () {\n    return defaultHandlers\n  }\n\n  return {\n    run,\n    setHandlers,\n    getHandlers\n  }\n}\n\n// Export an instance of the pipeline to be used by everything.\nexport default createPipeline()\n","const PREFIX = '@@KANDY/'\n\nexport const REQUEST = PREFIX + 'REQUEST'\nexport const RESPONSE = PREFIX + 'RESPONSE'\n\nexport const AUTHORIZATION_ERROR = PREFIX + 'AUTHORIZATION_ERROR'\n","// Other plugins.\nimport { logManager } from '../../logs'\nimport { logLevels } from 'kandy-logger'\n\n// Libraries.\nimport sdpTransform from 'sdp-transform'\nimport { cloneDeep, compose, isArray, isFunction, join, map, trimCharsStart, trimEnd } from 'lodash/fp'\nimport diff from 'variable-diff'\n\nconst log = logManager.getLogger('SDP')\n\n/**\n * Basic SDP pipeline runner that logs the functions in Yaml.\n * @method sdpPipeline\n * @param  {Array}      handlers       List of functions that transform the SDP.\n * @param  {string}     sdp            The session description.\n * @param  {Object}     info           Information about the session description.\n * @param  {string}     info.callId    The id corresponding to the call on which this pipeline is being run.\n * @param  {RTCSdpType} info.type      The session description's type.\n * @param  {string}     info.step      The step that will occur after the Pipeline is run.\n *    Will be either 'set' (the SDP will be set locally) or 'send' (the SDP will be sent\n *    to the remote endpoint).\n * @param  {string}     info.endpoint  Which end of the connection created the SDP.\n * @param  {BandwidthControls} [info.bandwidth] Information about bandwidth controls.\n * @return {string}     The modified session description.\n */\nexport default function runPipeline (handlers, sdp, info) {\n  const logLevel = log.getLevel()\n  const isDebug = logLevel === logLevels.DEBUG || logLevel === logLevels.TRACE\n  const pipelineFunc = isDebug ? runPipelineYaml : runPipelineDefault\n\n  return pipelineFunc(handlers, sdp, info)\n}\n\nfunction runPipelineDefault (handlers, sdp, info) {\n  const objectSdp = sdpTransform.parse(sdp)\n\n  const originalSdp = Object.freeze(objectSdp)\n  let newSdp = cloneDeep(originalSdp)\n\n  if (isArray(handlers)) {\n    handlers.forEach(handler => {\n      const name = formattedFunctionName(handler)\n\n      if (isFunction(handler)) {\n        try {\n          newSdp = handler(newSdp, info, originalSdp)\n        } catch (error) {\n          log.info(\n            `Currently running pipeline to ${info.step} ${info.endpoint} ${info.type} for callId: ${info.callId}`\n          )\n          log.error(`Error running SDP handler: ${name}`, error)\n        }\n      } else {\n        log.error('SDP handler not a function; skipping.')\n      }\n    })\n  }\n\n  return sdpTransform.write(newSdp)\n}\n\nfunction runPipelineYaml (handlers, sdp, info) {\n  const objectSdp = sdpTransform.parse(sdp)\n\n  if (!isArray(handlers)) {\n    return sdpTransform.write(objectSdp)\n  }\n\n  const originalSdp = Object.freeze(objectSdp)\n  let newSdp = cloneDeep(originalSdp)\n\n  /**\n   * For each sdpHandler function we want to log the changes\n   * it makes to the SDP and present a yaml report of the diffs.\n   * So that each diff doesn't contain all previous changes\n   * we need to diff the sdp at it's current stage of transformation.\n   * Only perform this work if we're in debug logging mode.\n   */\n  let diffed\n  let oldNewSdp\n  const results = []\n\n  handlers.forEach(handler => {\n    const name = formattedFunctionName(handler)\n\n    if (isFunction(handler)) {\n      log.debug(`Running SDP handler ${name}.`)\n\n      try {\n        oldNewSdp = cloneDeep(newSdp)\n        newSdp = handler(newSdp, info, originalSdp)\n        diffed = diff(oldNewSdp, newSdp)\n        results.push({ name, diff: diffed.text })\n      } catch (error) {\n        log.info(`Currently running pipeline to ${info.step} ${info.endpoint} ${info.type} for callId: ${info.callId}`)\n        log.error(`Error running SDP handler: ${name}`, error)\n      }\n    } else {\n      log.error('SDP handler not a function; skipping.')\n      results.push({ name, diff: 'No diff, not a function.' })\n    }\n  })\n\n  diffed = diff(originalSdp, newSdp)\n  const yamlFormat = sdpToYaml(info)(originalSdp)(newSdp)(results)(diffed)\n  log.debug(`SDP Handler changes: ${yamlFormat}`)\n\n  return sdpTransform.write(newSdp)\n}\n\nconst sdpToYaml = info => originalSdp => newSdp => results => finalDiffObject =>\n  `\n---\nsdp-pipeline-run:\n  info:\n    callId: ${info.callId}\n    type: ${info.type}\n    step: ${info.step}\n    endpoint: ${info.endpoint}\n    bandwidth: ${displayBandwidth(info.bandwidth)}\n  sdp: |\n    ${displaySdp(fourSpaces)(originalSdp)}\n  handlers:\n    ${displayHandlers(results)}\n  final:\n    diff: |\n      ${displayDiffs(sixSpaces)(finalDiffObject.text)}\n    sdp: |\n      ${finalDiffObject.changed ? displaySdp(sixSpaces)(newSdp) : 'No changes to the SDP'}\n...\n`\n\n// Display helper functions\nconst displayBandwidth = bandwidth =>\n  bandwidth &&\n  JSON.stringify(bandwidth, null, ' ')\n    .replace(/\\n/g, ' ')\n    .replace(/ {2}/g, ' ')\n\nconst displaySdp = indentation => sdp =>\n  sdpTransform\n    .write(sdp)\n    .replace(/\\n/g, `\\n${indentation}`)\n    .trimEnd()\n\nconst handlerToYaml = ({ name, diff }) =>\n  // replacing newlines in case the name is the function.\n  `${fourSpaces}- name: ${name.replace(/\\n/g, '')}\n      diff: |\n        ${displayDiffs(eightSpaces)(diff)}\n`\n\nconst displayHandlers = compose([trimEnd, trimCharsStart(' \\n'), join(''), map(handlerToYaml)])\n\nconst displayDiffs = indentation => diffed => (diffed ? diffed.replace(/\\n/g, `\\n${indentation}`) : 'No changes found')\n\n// If the function is anonymous give the function body as the 'name'\nconst formattedFunctionName = handler =>\n  handler.name ||\n  handler\n    .toString()\n    .slice(0, 120)\n    .replace(/\\n/g, '')\n\n// Space constants\nconst fourSpaces = '    '\nconst sixSpaces = '      '\nconst eightSpaces = '        '\n","import * as actionTypes from './actionTypes'\n// Constants\nimport { platforms } from '../../constants'\n\n/**\n * @param {string} type\n */\nfunction createWsAction (type) {\n  /**\n   * @param {any=} payload\n   * @param {string=} platform\n   * @param {boolean=} [isReconnect] flag to signify if we are reconnecting or not.\n   */\n  function action (payload, platform = platforms.LINK, isReconnect = false) {\n    return {\n      type,\n      // TODO: This must check for basic error eventually instead.\n      error: payload instanceof Error,\n      payload,\n      meta: { platform, isReconnect }\n    }\n  }\n  return action\n}\n\nexport const wsAttemptConnect = createWsAction(actionTypes.WS_ATTEMPT_CONNECT)\nexport const wsDisconnect = createWsAction(actionTypes.WS_DISCONNECT)\nexport const wsConnectFinished = createWsAction(actionTypes.WS_CONNECT_FINISHED)\nexport const wsDisconnectFinished = createWsAction(actionTypes.WS_DISCONNECT_FINISHED)\nexport const wsReconnectFailed = createWsAction(actionTypes.WS_RECONNECT_FAILED)\n\nexport const wsClosed = createWsAction(actionTypes.WS_CLOSED)\nexport const wsError = createWsAction(actionTypes.WS_ERROR)\n\nexport const lostConnection = createWsAction(actionTypes.LOST_CONNECTION)\n\nexport const receiveServerPing = createWsAction(actionTypes.RECEIVE_SERVER_PING)\nexport const receiveServerPong = createWsAction(actionTypes.RECEIVE_SERVER_PONG)\n\nexport const changeConnectivityChecking = createWsAction(actionTypes.CHANGE_CONNECTIVITY_CHECKING)\nexport const changePingInterval = createWsAction(actionTypes.CHANGE_PING_INTERVAL)\n","import { cloneDeep, isEqual } from 'lodash/fp'\nimport { chatTypes } from '../../mappings'\n\n/*\n * Redux-saga selector functions.\n * Used with the `select` effect in sagas to retrieve\n *      specific portions of the state.\n */\n\n/**\n * Retrieves the config options provided by the messaging plugin.\n * @method getMessagingConfig\n * @param  {Object} state Redux state.\n * @return {Object} config\n */\nexport function getMessagingConfig (state) {\n  return cloneDeep(state.config.messaging)\n}\n\n/**\n * Retrieves conversations from the store pertaining to messaging.\n * @method getConversations\n * @param  {Object} state Redux state.\n * @return {Array} A list of conversation objects.\n */\nexport function getConversations (state) {\n  return cloneDeep(state.messaging.conversations)\n}\n\n/**\n * Retrieves the messages from the store pertaining to a specific messaging\n * conversation.\n * @method getMessages\n * @param  {Object} state Redux state.\n * @param  {string} conversationId The conversation identifier.\n * @return {Array}  A list of message objects.\n */\nexport function getMessages (state, conversationId) {\n  return cloneDeep(state.messaging.conversations[conversationId].messages)\n}\n\n/**\n * Searches for a conversation by its destination and type. The destination represents\n * the destination for all messages being sent to this conversation from this instance of the SDK\n *\n * @method findConversation\n * @param  {Object} state Redux state.\n * @param {Array} destination A subscriber handle or a comma-separated list\n * of subscriber handles\n * @param {string} type The type of conversation: can be one of 'chat-oneToOne', 'chat-group' or 'sms'\n * @returns {Object} A conversation object.\n */\nexport function findConversation (state, destination, type = chatTypes.ONETOONE) {\n  return cloneDeep(\n    state.messaging.conversations.find(conversation => {\n      return isEqual(conversation.destination, destination) && conversation.type === type\n    })\n  )\n}\n\n/**\n * Searches for a member in a conversation and returns their name\n *\n * @method findMember\n * @param  {Object} state Redux state.\n * @param {string} destination A subscriber handle or a comma-separated list\n * of subscriber handles\n * @param id {number} User ID for the specific conversation member for whom we are searching\n * @returns {Object} A member object.\n */\nexport function findMember (state, destination, id) {\n  const conv = state.messaging.conversations.find(conversation => conversation.destination[0] === destination)\n  if (conv) {\n    return cloneDeep(conv.members.find(member => member.id === id))\n  }\n}\n","const prefix = '@@KANDY/PRESENCE/'\n\nexport const UPDATE = prefix + 'UPDATE'\nexport const UPDATE_FINISH = prefix + 'UPDATE_FINISH'\nexport const GET = prefix + 'GET'\nexport const GET_FINISH = prefix + 'GET_FINISH'\nexport const SUBSCRIBE = prefix + 'SUBSCRIBE'\nexport const SUBSCRIBE_FINISH = prefix + 'SUBSCRIBE_FINISH'\nexport const UNSUBSCRIBE = prefix + 'UNSUBSCRIBE'\nexport const UNSUBSCRIBE_FINISH = prefix + 'UNSUBSCRIBE_FINISH'\nexport const RECEIVED = prefix + 'RECEIVED'\nexport const CREATE_PRESENCE_LIST = prefix + 'CREATE_PRESENCE_LIST'\nexport const CREATE_PRESENCE_LIST_FINISH = prefix + 'CREATE_PRESENCE_LIST_FINISH'\nexport const DELETE_PRESENCE_LIST = prefix + 'DELETE_PRESENCE_LIST'\nexport const GET_PRESENCE_LIST = prefix + 'GET_PRESENCE_LIST'\n","const prefix = '@@KANDY/GROUPS/'\n\n// Admin actions\nexport const ADD_PARTICIPANT = prefix + 'ADD_PARTICIPANT'\nexport const ADD_PARTICIPANT_FINISH = prefix + 'ADD_PARTICIPANT_FINISH'\nexport const REMOVE_PARTICIPANT = prefix + 'REMOVE_PARTICIPANT'\nexport const REMOVE_PARTICIPANT_FINISH = prefix + 'REMOVE_PARTICIPANT_FINISH'\nexport const DELETE_GROUP = prefix + 'DELETE_GROUP'\nexport const DELETE_GROUP_FINISH = prefix + 'DELETE_GROUP_FINISH'\n\n// User actions\nexport const FETCH_GROUPS = prefix + 'FETCH_GROUPS'\nexport const FETCH_GROUPS_FINISH = prefix + 'FETCH_GROUPS_FINISH'\nexport const CREATE_GROUP = prefix + 'CREATE_GROUP'\nexport const CREATE_GROUP_FINISH = prefix + 'CREATE_GROUP_FINISH'\nexport const LEAVE_GROUP = prefix + 'LEAVE_GROUP'\nexport const LEAVE_GROUP_FINISH = prefix + 'LEAVE_GROUP_FINISH'\n\n// Invitations\nexport const ACCEPT_INVITATION = prefix + 'ACCEPT_INVITATION'\nexport const ACCEPT_INVITATION_FINISH = prefix + 'ACCEPT_INVITATION_FINISH'\nexport const REJECT_INVITATION = prefix + 'REJECT_INVITATION'\nexport const REJECT_INVITATION_FINISH = prefix + 'REJECT_INVITATION_FINISH'\n\n// event notification actions\nexport const INVITATION_RECEIVED = prefix + 'INVITATION_RECEIVED'\nexport const STATUS_NOTIFICATION_RECEIVED = prefix + 'STATUS_NOTIFICATION_RECEIVED'\nexport const EVENT_NOTIFICATION_RECEIVED = prefix + 'EVENT_NOTIFICATION_RECEIVED'\n","import { CANCEL } from '@redux-saga/symbols';\n\nfunction delayP(ms, val) {\n  if (val === void 0) {\n    val = true;\n  }\n\n  var timeoutId;\n  var promise = new Promise(function (resolve) {\n    timeoutId = setTimeout(resolve, ms, val);\n  });\n\n  promise[CANCEL] = function () {\n    clearTimeout(timeoutId);\n  };\n\n  return promise;\n}\n\nexport default delayP;\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n});\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","exports.f = Object.getOwnPropertySymbols;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function isObject(arg) {\n  var type = typeof arg;\n  return Boolean(arg) && (type === 'object' || type === 'function');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","exports.f = require('./_wks');\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","import { logLevels } from './constants'\n\n/**\n * Helper function to validate a \"log level\" string before its used in the library.\n * @method checkLevel\n * @param  {string} level A log level provided by a user.\n * @return {string}       The log level as expected by the library.\n * @throws Will throw an error if the `level` parameter is invalid.\n */\nexport function checkLevel (level) {\n  // Ensure: is defined and is a string.\n  const upperLevel = level && level.toUpperCase && level.toUpperCase()\n\n  // Ensure: is a supported log level.\n  if (upperLevel && logLevels[upperLevel]) {\n    return logLevels[upperLevel]\n  } else {\n    throw new Error('Provided level is not a valid log level.')\n  }\n}\n\n/**\n * Helper function to validate a \"log handler\".\n * Basically just \"is function\" that throws an error if false.\n * @method checkHandler\n * @param  {Function} handler A log handler function, ideally.\n * @return {Function}         The same log handler function, ideally.\n * @throws Will throw an error if the `handler` provided is not a function.\n */\nexport function checkHandler (handler) {\n  if (handler && typeof handler === 'function') {\n    return handler\n  } else {\n    throw new Error('Provided log handler is not a function.')\n  }\n}\n","// Logs plugin.\nimport * as actionTypes from './actionTypes'\n\n/**\n * Action for setting a Logger's level.\n * @method setLevel\n * @param  {string} level  The level to be set.\n * @param  {string} [type] The type of Logger to set it for.\n */\nexport function setLevel (level, type) {\n  return {\n    type: actionTypes.SET_LEVEL,\n    payload: { level, type }\n  }\n}\n\n/**\n * Action for setting all of the Loggers' log level.\n * @method levelsChanged\n * @param  {Object} levelMap Mapping of logger type to level.\n * @return {Object}\n */\nexport function levelsChanged (levelMap) {\n  return {\n    type: actionTypes.LEVELS_CHANGE,\n    payload: levelMap\n  }\n}\n\n/**\n * Action for setting a Logger's handler.\n * @method setHandler\n * @param  {Function} handler A LogHandler function.\n * @param  {string}   [type]  The type of Logger to set it for.\n */\nexport function setHandler (handler, type) {\n  return {\n    type: actionTypes.SET_HANDLER,\n    payload: { handler, type }\n  }\n}\n\n/**\n * Action for setting all of the Loggers' log handler.\n * @method handlersChanged\n * @param  {Object} handlerMap Mapping of logger type to handler.\n * @return {Object}\n */\nexport function handlersChanged (handlerMap) {\n  return {\n    type: actionTypes.HANDLERS_CHANGE,\n    payload: handlerMap\n  }\n}\n","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n","// Other plugins.\nimport { logManager } from '../../logs'\n\nconst log = logManager.getLogger('SDPHANDLER')\n\n/**\n * SDP handler function that should be passed into session object's `processOffer` and `processAnswer` function.\n * This function disables old media encryption method SDES (Modifies sdp by removing crypto).\n * However, if only SDES is available, don't disable it.\n *\n * @method sanitizeSdesFromSdp\n * @param {Object} newSdp The SDP so far (could have been modified by previous handlers).\n * @param {Object} info Information about the session description.\n * @param {RTCSdpType} info.type The session description's type.\n * @param {string} info.step The step that will occur after the Pipeline is run.\n * @param {string} info.endpoint Which end of the connection created the SDP.\n * @param {Object} originalSdp The SDP in its initial state.\n * @return {Object} The sanitized SDP with crypto removed (if fingerprint exists)\n */\nexport function sanitizeSdesFromSdp (newSdp, info, originalSdp) {\n  for (const mLine of newSdp.media) {\n    if (mLine.crypto && mLine.fingerprint) {\n      log.debug('Removing SDES line from SDP media section.')\n      delete mLine.crypto\n    }\n  }\n  return newSdp\n}\n\n/**\n * Function generator for an SDP handler function that changes the DTLS role of the SDP.\n * @method changeDtlsRoleTo\n * @param  {string} role\n * @return {Function} SDP handler.\n */\nexport function changeDtlsRoleTo (role) {\n  return function changeDtlsRole (newSdp, info, originalSdp) {\n    // Grab the original DTLS role for logging purposes.\n    //    Assumed that the DTLS role is the same in every media section.\n    const original = newSdp.media[0].setup\n    log.debug(`Changing SDP DTLS role from ${original} to ${role}.`)\n\n    // Change the DTLS role in every media section.\n    newSdp.media.map(media => {\n      media.setup = role\n      return media\n    })\n\n    return newSdp\n  }\n}\n\n/**\n * An SDP handler that adds bandwidth options to the SDP.\n * Supports Chrome & Firefox by generating 2 types of configs:\n *  - 'AS' for Chrome in kilobits per second\n *  - 'TIAS' for Firefox in bits per second\n * @method modifySdpBandwidth\n * @param {BandwidthControls} bandwidthControls\n * @return {Function} SDP handler.\n */\nexport function modifySdpBandwidth (newSdp, info, originalSdp) {\n  /**\n   * Generates bandwidth configs that Chrome & Firefox can recognize.\n   * @param {number} limit The bandwidth limit in kilobits per second.\n   */\n  function generateBandwidthConfigs (limit) {\n    return [\n      {\n        type: 'AS', // Chrome supports this (in kilobits per second)\n        limit\n      },\n      {\n        type: 'TIAS', // Firefox supports this (in bits per second)\n        limit: limit * 1000\n      }\n    ]\n  }\n\n  if (info.bandwidth) {\n    // For more details on bandwidth controls, see here https://webrtchacks.com/limit-webrtc-bandwidth-sdp/.\n\n    if (info.bandwidth.call) {\n      // Set session level bandwidth limit\n      newSdp.bandwidth = generateBandwidthConfigs(info.bandwidth.call)\n    }\n\n    if (info.bandwidth.audio) {\n      // Set audio bandwidth limit\n      newSdp.media\n        .filter(media => media.type === 'audio')\n        .forEach(media => {\n          media.bandwidth = generateBandwidthConfigs(info.bandwidth.audio)\n        })\n    }\n\n    if (info.bandwidth.video) {\n      // Set video bandwidth limit\n      newSdp.media\n        .filter(media => media.type === 'video')\n        .forEach(media => {\n          media.bandwidth = generateBandwidthConfigs(info.bandwidth.video)\n        })\n    }\n  }\n  return newSdp\n}\n\n/**\n * Generates extra informational parameters for ending a call.\n *\n * @method generateEndParams\n * @param {string}  currentCallState The state of the current call, before it was ended.\n * @param {boolean} isLocal Specifies if end operation was caused by the local side.\n * @param {Object}  params Extra context information related to the call.\n * @param {string}  [params.reasonText]  Human-readable explanation for the call change.\n * @param {string}  [params.statusCode] Code representing the reason for the call change.\n * @param {string}  params.remoteName   Name of the remote participant.\n * @param {string}  params.remoteNumber Number of the remote participant.\n */\nexport function generateEndParams (currentCallState, isLocal, params) {\n  const endParams = {\n    isLocal,\n    remoteParticipant: {\n      displayNumber: params.remoteNumber,\n      displayName: params.remoteName\n    },\n    transition: {\n      prevState: currentCallState\n    }\n  }\n  if (params.statusCode) {\n    endParams.transition.statusCode = params.statusCode\n  }\n  if (params.reasonText) {\n    endParams.transition.reasonText = params.reasonText\n  }\n  return endParams\n}\n","const PREFIX = '@@KANDY/'\n\nexport const EVENTS_ON = PREFIX + 'EVENTS_ON'\nexport const EVENTS_OFF = PREFIX + 'EVENTS_OFF'\nexport const EVENTS_SUBSCRIBE = PREFIX + 'EVENTS_SUBSCRIBE'\nexport const EVENTS_UNSUBSCRIBE = PREFIX + 'EVENTS_UNSUBSCRIBE'\nexport const EVENTS_ALIAS = PREFIX + 'EVENTS_ALIAS'\nexport const EVENTS_EMIT = PREFIX + 'EVENTS_EMIT'\nexport const MAP_EVENTS = PREFIX + 'MAP_EVENTS'\n","const prefix = '@@KANDY/'\n\nexport const CONNECT = prefix + 'CONNECT'\nexport const SET_CONNECTION_INFO = prefix + 'SET_CONNECTION_INFO'\nexport const CONNECTION_OCCURRED = prefix + 'CONNECTION_OCCURRED'\nexport const CONNECT_FINISHED = prefix + 'CONNECT_FINISHED'\nexport const GET_USER_DETAILS = prefix + 'GET_USER_DETAILS'\nexport const USER_DETAILS_RECEIVED = prefix + 'USER_DETAILS_RECEIVED'\nexport const DISCONNECT = prefix + 'DISCONNECT'\nexport const DISCONNECT_FINISHED = prefix + 'DISCONNECT_FINISHED'\nexport const RESUBSCRIPTION_FINISHED = prefix + 'RESUBSCRIPTION_FINISHED'\nexport const REFRESH_TOKENS = prefix + 'REFRESH_TOKENS'\nexport const REFRESH_TOKENS_FINISHED = prefix + 'REFRESH_TOKENS_FINISHED'\n\nexport const UPDATE_SUBSCRIPTION = prefix + 'UPDATE_SUBSCRIPTION'\nexport const UPDATE_SUBSCRIPTION_FINISH = prefix + 'UPDATE_SUBSCRIPTION_FINISH'\n\nexport const SET_TOKEN = prefix + 'SET_TOKEN'\n\nexport const SET_CREDENTIALS = prefix + 'SET_CREDENTIALS'\nexport const SET_CREDENTIALS_FINISH = prefix + 'SET_CREDENTIALS_FINISH'\n\nexport const AUTHORIZATION_ERROR = prefix + 'AUTHORIZATION_ERROR'\n\nexport const UPDATE_HMAC_TOKEN = prefix + 'UPDATE_HMAC_TOKEN'\n","module.exports = { \"default\": require(\"core-js/library/fn/object/freeze\"), __esModule: true };","import { logManager } from '../logs'\n// Constants.\nimport { MEDIA_DIR } from '../constants'\n\nconst log = logManager.getLogger('SdpPipeline')\n\n/**\n * SDP handler to remove the trickle ICE option from media groups.\n * Modifies the SDP so it claims to not support trickle ICE.\n * @method removeTrickleIce\n * @param  {Object} sdp\n * @param  {Object} info\n * @param  {String} info.type\n * @param  {String} info.endpoint\n * @param  {Object} originalSdp\n * @return {Object}\n */\nexport function removeTrickleIce (sdp, info, originalSdp) {\n  sdp.media.forEach(media => {\n    if (media.iceOptions === 'trickle') {\n      log.debug(`Removing trickle ICE option from ${media.type} media.`)\n      delete media.iceOptions\n    }\n  })\n\n  return sdp\n}\n\n/**\n * SDP handler to delete the bundle groupings line from the SDP.\n * PeerConnections do not have an option to completely disable bundling, so\n *    manually removing the line from the SDP is needed to prevent bundling.\n * @method removeBundling\n * @param  {Object}     sdp           The session description.\n * @param  {Object}     info          Information about the session description.\n * @param  {RTCSdpType} info.type     The session description's type.\n * @param  {String}     info.endpoint Which end of the connection created the SDP.\n * @param  {Object}     originalSdp   The original SDP before any modifications.\n * @return {Object}\n */\nexport function removeBundling (sdp, info, originalSdp) {\n  if (sdp.groups) {\n    log.debug('Removing SDP bundling groups.')\n    delete sdp.groups\n  }\n\n  return sdp\n}\n\n/**\n * Currying function to create an SDP handler.\n * The SDP handler modifies the SDP to change the direction of media.\n * @method changeMediaDirection\n * @param  {Object} mediaDirections\n * @param  {string} [audio] Direction to set for audio.\n * @param  {string} [video] Direction to set for video.\n * @return {Function} SDP handler.\n */\nexport function changeMediaDirection ({ audio, video }) {\n  function isValid (direction) {\n    return Object.values(MEDIA_DIR).includes(direction)\n  }\n\n  /**\n   * SDP handler to change the direction of media a-lines.\n   */\n  return (sdp, info, originalSdp) => {\n    sdp.media.forEach(media => {\n      if (media.type === 'audio' && isValid(audio)) {\n        media.direction = audio\n      } else if (media.type === 'video' && isValid(video)) {\n        media.direction = video\n      }\n    })\n    return sdp\n  }\n}\n\n/**\n * SDP handler to modify the DTLS role of a locally generated answer SDP.\n *\n * The point of this SDP handler is to avoid a DTLS role conflict during a\n *    renegotiation. A role conflict occurs when DTLS roles have been selected\n *    during initial negotiation, but during renegotiation, the answerer selects\n *    the opposite role than previously used.\n *\n * This handler only needs to be used when the Peer is generating an answer SDP.\n *    That is the only point when a conflicting role can be chosen.\n *\n * This handler prevents the role changing by comparing the SDP's role with the\n *    role that the Peer previously selected. If they conflict, the Peer's\n *    previous role is used.\n *\n * Related stories: KAA-1426, KAA-1562.\n * References: https://groups.google.com/forum/#!topic/discuss-webrtc/gsw3OEAwNKo\n * @method preventDtlsRoleChange\n * @param  {Object}     newSdp          The session description.\n * @param  {Object}     info            Information about the session description.\n * @param  {RTCSdpType} info.type       The session description's type.\n * @param  {string}     info.endpoint   Which end of the connection created the SDP.\n * @param  {string}     [info.dtlsRole] The previously select DTLS role of the Peer.\n * @param  {Object}     originalSdp     The sdp in its initial state.\n * @return {Object}                     The modified SDP.\n */\nexport function preventDtlsRoleChange (newSdp, info, originalSdp) {\n  /**\n   * This SDP handler only affects local answer SDPs.\n   *  - Only local because we are trying to prevent role conflict issues caused\n   *        by the answerer choosing the \"wrong\" role during a renegotiation.\n   *  - Only answer because offers are always actpass.\n   */\n  if (info.endpoint === 'local' && info.type === 'answer') {\n    for (const mLine of newSdp.media) {\n      /**\n       * If the generated DTLS role is different than what the Peer expects,\n       *    replace it. The Peer expects the DTLS role to stay the same\n       *    throughout renegotiations.\n       */\n      if (mLine.setup && info.dtlsRole && mLine.setup !== info.dtlsRole) {\n        log.debug(`Changing DTLS role from ${mLine.setup} to ${info.dtlsRole}.`)\n        mLine.setup = info.dtlsRole\n      }\n    }\n  }\n  return newSdp\n}\n","// Request plugin.\nimport { injectAgentVersionHeader, customAgentVersionHeaderSuffix } from '../interface/selectors'\n\n// Other plugins.\nimport { getPlatform, getRequestInfo } from '../../auth/interface/selectors'\nimport { logManager } from '../../logs'\n\n// Utils.\nimport { getVersion } from '../../common/version'\nimport { toQueryString } from '../../common/utils'\nimport { platforms } from '../../constants'\n\n// Libraries.\nimport { select } from 'redux-saga/effects'\nimport { cloneDeep } from 'lodash/fp'\n\nconst log = logManager.getLogger('REQUEST')\n\n/**\n * Helper function to compile the common headers/options for a REST request.\n * @method getCommonOptions\n * @param  {string} url The URL to be used for the request.\n * @return {Object}\n */\nexport function * getCommonOptions (url) {\n  const platform = yield select(getPlatform)\n  const requestInfo = yield select(getRequestInfo, platform)\n  const useCustomHeader = yield select(injectAgentVersionHeader)\n  const customSuffix = yield select(customAgentVersionHeaderSuffix)\n\n  // Start off with whatever options were set by the Auth plugin.\n  //    The authentication headers / token will be there if they are set.\n  let options\n  if (platform === 'cpaas') {\n    // For some reason, CPaaS has this property as `options` where the other\n    //    SDKs have it as `requestOptions`. Workaround that here.\n    options = requestInfo.options || {}\n  } else {\n    options = requestInfo.requestOptions || {}\n  }\n\n  // Ensure there is a headers object.\n  options.headers = options.headers || {}\n\n  // Add the common headers.\n  options.headers['Content-Type'] = 'application/json'\n  options.headers.Accept = 'application/json'\n\n  // If enabled, add the 'Agent Version' header to the options.\n  if (useCustomHeader) {\n    let headerValue = getCpaasAgentHeaderValue(platform, url)\n    if (customSuffix) {\n      // If a custom suffix value was provided as well, then use it.\n      headerValue += ' ' + customSuffix\n    }\n    options.headers['X-Cpaas-Agent'] = headerValue\n  }\n\n  return options\n}\n\n/**\n * Determine and return the current SDK platform and version string to be used\n * with the x-Cpaas-Agent network request header field.\n * @method getCpaasAgentHeaderValue\n * @param  {string}  platform Which platform is currently being used.\n * @param  {string}  url The url for the request being made.\n * @return {string}  A string representation of the platform and version the SDK is using.\n */\nexport function getCpaasAgentHeaderValue (platform, url) {\n  // Assume request is for CPaaS platform, by default.\n  let headerValue = `cpaas-js-sdk/${getVersion()}`\n\n  // Check if request is for callMe service, otherwise determine the appropriate platform.\n  // (callMe service uses Link platform for call requests)\n  if (url && url.includes('/anonymous/')) {\n    headerValue = `callme-js-sdk/${getVersion()}`\n  } else {\n    // Check the actual platform used\n    if (platform === platforms.UC) {\n      headerValue = `uc-js-sdk/${getVersion()}`\n    } else if (platform === platforms.LINK) {\n      headerValue = `link-js-sdk/${getVersion()}`\n    }\n  }\n  return headerValue\n}\n\n/**\n * Prepares a REST request options object for logging by removing passwords\n * and parses the body string into an object that can be interacted with in console.\n * @method sanitizeRequest\n * @param {Object} options An object containing any custom settings that you want to\n *                         apply to the request. See [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n *                         or a full description and defaults.\n * @return {Object} A sanitized REST request options object that can be safely logged.\n */\nexport function sanitizeRequest (options) {\n  const logOptions = cloneDeep(options)\n  // When logging the Auth header, cut it off so that we can see the type of\n  //    token but not the token itself. Depending on the type, it can contain\n  //    a password.\n  const authHeader = logOptions.headers && logOptions.headers.Authorization\n  if (authHeader) {\n    logOptions.headers.Authorization = authHeader.substring(0, 6) + '...'\n  }\n\n  // If the rest request body is a string, try to parse it as JSON and store\n  // it as an object so it can be interacted with in the console\n  const body = logOptions.body\n  if (body) {\n    try {\n      logOptions.body = JSON.parse(body)\n    } catch (e) {\n      // Noop, leave the body in whatever format it was in.\n    }\n  }\n\n  return logOptions\n}\n\n/**\n * Send a REST request to Link with the appropriate configuration.\n * @method fetchResource\n * @param {string} resource The path of the resource to fetch from the underlying service. This path will be appended\n *                          to the base URL according to SDK configuration.\n * @param {Object} requestInfo An object containing any custom settings that you want to apply to the request. See [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n *                             for a full description and defaults.\n * @return {Promise<Response>} A promise for a [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) object.\n */\nexport async function fetchResource (resource, requestInfo, module) {\n  const { requestOptions } = requestInfo\n\n  // If the app doesn't prepend the '/' we should add it.\n  if (resource.charAt() !== '/') {\n    resource = `/${resource}`\n  }\n\n  const url = `${requestInfo.baseURL}${resource}`\n  const logOptions = sanitizeRequest(requestOptions)\n  log.debug('Making REST request', logOptions)\n\n  const queryParams = requestInfo.requestOptions.queryParams || {}\n  let queryString = toQueryString(queryParams)\n  // Check resource passed in for any existing query params\n  if (resource.includes('?')) {\n    queryString = queryString.replace('?', '&')\n  }\n  const response = await fetch(url + queryString, requestOptions)\n\n  log.debug('Received REST response', response)\n\n  return response\n}\n","import BasicError from '../../errors'\n\n/**\n * The CPaaS handleRequestError helper is intended to parse \"response\" actions\n *    representing error responses for REST requests. CPaaS provides consistent\n *    error responses, so a single parser is able to handle most scenarios.\n * @method handleRequestError\n * @param  {Object}     response    A \"response\" action.\n * @param  {string}     [operation] The name of the operation that was performed.\n * @return {BasicError}\n */\nexport function handleRequestError (response, operation) {\n  let message = (operation ? `${operation} request` : 'Request') + ' failed: '\n  let code\n\n  if (response && response.payload) {\n    /**\n     * Extract the data from the action.\n     *    The `body` is the REST response body (if present).\n     *    The `result` is meta-info about the REST request (always present).\n     *\n     * An expected body looks like:\n     *    body: {\n     *      requestError: {\n     *        <exceptionType>: {\n     *          messageId, text, variables\n     *        }\n     *      }\n     *    }\n     */\n    const { body, result } = response.payload\n    /**\n     * Scenario: CPaaS provided a nice error object. Figure out the type of\n     *    error and parse out the error information it has.\n     */\n    if (body && body.requestError) {\n      // Possible errors are serviceException or policyException.\n      const { serviceException, policyException } = body.requestError\n      // There should only ever be one or the other.\n      const exception = serviceException || policyException\n\n      // Format the information in the except to be a proper sentence.\n      message = formatString(exception.text, exception.variables)\n\n      // TODO: Do we want to wrap the backend's error codes?\n      code = exception.messageId\n    } else {\n      /**\n       * Scenario: CPaaS provided a response body with the error, but with an\n       *    unexpected format. Revert to using the information from the\n       *    REST request \"result\" instead of the body.\n       */\n      message += result.message\n      code = result.code\n    }\n  } else {\n    /**\n     * Scenario: Something really wrong happened, where the response action\n     *    doesn't even have a payload.\n     */\n    message += 'Unknown error.'\n    // TODO: Real code.\n    code = 4\n  }\n\n  return new BasicError({ message, code })\n}\n\n/**\n * Utility function for formatting a CPaaS error response.\n * // TODO: Move this to a more common/utils location.\n */\nfunction formatString (text, variables) {\n  return text.replace(/%(\\d+)/g, function (_, m) {\n    return variables[--m]\n  })\n}\n","// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport { getOptions } from '../../call/interfaceNew/selectors'\n\n// Helpers\nimport { logManager } from '../../logs'\nimport runPipeline from '../sdp/pipeline'\nimport { getTrackDscpMapping } from '../utils/dscp'\nimport BasicError, { callCodes } from '../../errors'\n\n// WebRTC operations.\nimport * as mediaOps from './media'\n\n// Libraries.\nimport { all, call, put, select } from 'redux-saga/effects'\nimport sdpTransform from 'sdp-transform'\n\n/**\n * Performs the WebRTC portion necessary for establishing outgoing calls\n *\n * @method setupCall\n * @param  {Object} deps\n * @param  {Object} deps.webRTC      The WebRTC stack.\n * @param  {Object} mediaConstraints Video and audio media constraints\n * @param  {boolean} mediaConstraints.audio Whether to enable audio or not\n * @param  {boolean} mediaConstraints.video Whether to enable video or not\n * @param  {Object} sessionOptions\n * @param  {Object} sessionOptions.callId The id of the call\n * @param  {Object} sessionOptions.sdpSemantics Semantics for Real Time Communication configurations\n * @param  {Object} sessionOptions.turnInfo Contains information required for setting up ICE servers\n * @param  {string} sessionOptions.trickleIceMode What mode to be used for trickle ICE\n * @param  {Object} [sessionOptions.bandwidth] Contains configuration details for setting bandwidth\n * @return {Object} Object\n * @return {string} Object.offerSdp Session Description Protocol for a call offer\n * @return {string} Object.sessionId session identifier\n * @return {Array}  Object.mediaIds call identifiers\n */\nexport function * setupCall (deps, mediaConstraints, sessionOptions) {\n  const { webRTC } = deps\n\n  const log = logManager.getLogger('CALL', sessionOptions.callId)\n  log.info('Setting up local WebRTC portions of call.')\n\n  const {\n    defaultPeerConfig,\n    turnInfo,\n    trickleIceMode,\n    bandwidth,\n    dscpControls,\n    callId,\n    removeBundling\n  } = sessionOptions\n\n  const { medias, error } = yield call(mediaOps.createLocal, webRTC, mediaConstraints)\n\n  if (error) {\n    log.debug('Failed to get media requested for the call.')\n    return { error }\n  }\n\n  let session\n  try {\n    // Create a webRTC session to represent this call.\n    session = yield call([webRTC.sessionManager, 'create'], {\n      peer: {\n        rtcConfig: {\n          ...defaultPeerConfig,\n          iceServers: turnInfo.servers\n        },\n        trickleIceMode,\n        removeBundling\n      }\n    })\n    log.debug('Created WebRTC Session for Call.', { webrtcSessionId: session.id })\n  } catch (error) {\n    log.debug('Failed to create WebRTC Session for Call.', error.message)\n    return {\n      error: new BasicError({\n        message: error.message,\n        code: callCodes.GENERIC_ERROR\n      })\n    }\n  }\n\n  // Trigger a new action specifying that the session has been created\n  yield put(\n    callActions.sessionCreated(callId, {\n      webrtcSessionId: session.id\n    })\n  )\n\n  // Add the tracks to the session.\n  let screenTracks = []\n  let audioTracks = []\n  let videoTracks = []\n  let allTracks = []\n\n  for (const eachMedia of medias) {\n    const tracks = yield call([eachMedia.media, 'getTracks'])\n    if (eachMedia.type === 'screen') {\n      screenTracks = [...screenTracks, ...tracks]\n    } else if (eachMedia.type === 'audio') {\n      audioTracks = [...audioTracks, ...tracks]\n    } else if (eachMedia.type === 'video') {\n      videoTracks = [...videoTracks, ...tracks]\n    }\n    allTracks = [...allTracks, ...tracks]\n  }\n\n  const dscpTrackMapping = getTrackDscpMapping(audioTracks, videoTracks, screenTracks, dscpControls)\n\n  yield call([session, 'addTracks'], allTracks, dscpTrackMapping)\n\n  /*\n   * Create the local SDP offer, run it through any provided SDP handlers,\n   *    then set it as the Session's local description.\n   */\n  let offer, callConfigOptions\n  try {\n    offer = yield call([session, 'createOffer'])\n\n    callConfigOptions = yield select(getOptions)\n\n    // Run the SDP through the Pipeline before we set it locally.\n    //    This is the \"pre set local\" stage.\n    offer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n      callId,\n      type: offer.type,\n      step: 'set',\n      endpoint: 'local',\n      bandwidth\n    })\n    offer = yield call([session, 'setLocalDescription'], offer)\n  } catch (e) {\n    return {\n      error: new BasicError({\n        message: e.message,\n        code: callCodes.GENERIC_ERROR\n      }),\n      offerSdp: null,\n      sessionId: null,\n      mediaIds: null\n    }\n  }\n  // Run the SDP through the Pipeline again before we send it to the remote side.\n  //    This is the \"pre send local\" stage.\n  // Assign it to a new variable because some browsers enforce the read-only\n  //    properties of a RTCSessionDescription object. The object from\n  //    setLocalDescription is enforced read-only, but the `offer` before that\n  //    is not enforced.\n  const newSdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'send',\n    endpoint: 'local',\n    bandwidth\n  })\n\n  // Check if we have candidates here\n  const hasNoCandidates = sdp => sdp.media.every(m => !m.candidates || m.candidates.length === 0)\n  const parsedSdp = sdpTransform.parse(newSdp)\n  if (hasNoCandidates(parsedSdp)) {\n    // Close call functionality\n    yield all(session.localTracks.map(track => call([track, 'cleanup'])))\n    yield call([session, 'end'])\n\n    return {\n      error: new BasicError({\n        message: 'No ICE Candidates were found so media cannot flow.',\n        code: callCodes.NO_ICE_CANDIDATES\n      }),\n      offerSdp: null,\n      sessionId: null,\n      mediaIds: null\n    }\n  }\n\n  log.info('Finished setting up local WebRTC portions of call.')\n  return {\n    error: false,\n    offerSdp: newSdp,\n    sessionId: session.id,\n    mediaIds: medias.map(media => media.media.id)\n  }\n}\n\n/**\n * Prepares the WebRTC portions of setting up an incoming call.\n *\n * @method setupIncomingCall\n * @param  {Object} deps\n * @param  {Object} deps.webRTC      The WebRTC stack.\n * @param  {Object} sessionOptions\n * @param  {string} sessionOptions.callId the local call id.\n * @param  {Object} sessionOptions.sdpSemantics semantics for the SDP to use (`'unified-plan'` or `'plan-b'`). It implies video and audio constraints.\n * @param  {Object} sessionOptions.turnInfo TURN information, contains server info.\n * @param  {string} sessionOptions.trickleIceMode the mode to enable for Trickle ICE.\n * @param  {Object} sessionOptions.offer an offer containing an SDP.\n * @return {Object} Object\n * @return {string} Object.sessionId an identifier for the session.\n */\nexport function * setupIncomingCall (deps, sessionOptions) {\n  const { webRTC } = deps\n  const { defaultPeerConfig, turnInfo, trickleIceMode, callId, removeBundling } = sessionOptions\n  const offer = sessionOptions.offer\n\n  const log = logManager.getLogger('CALL', callId)\n  log.info('Setting up remote WebRTC portions of call.')\n\n  let session\n  try {\n    session = yield call([webRTC.sessionManager, 'create'], {\n      peer: {\n        rtcConfig: {\n          ...defaultPeerConfig,\n          iceServers: turnInfo.servers\n        },\n        trickleIceMode,\n        removeBundling\n      }\n    })\n  } catch (error) {\n    log.debug('Failed to create WebRTC Session for incoming Call.', error.message)\n    return {\n      error: new BasicError({\n        message: error.message,\n        code: callCodes.GENERIC_ERROR\n      })\n    }\n  }\n\n  // Trigger a new action specifying that the session has been created\n  yield put(\n    callActions.sessionCreated(callId, {\n      webrtcSessionId: session.id\n    })\n  )\n\n  /*\n   * Run the remote SDP offer through any SDP handlers provided, then set it\n   *    as the Session's remote description.\n   * This is the \"pre set remote\" stage.\n   */\n  const callConfigOptions = yield select(getOptions)\n  offer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, offer.sdp, {\n    callId,\n    type: offer.type,\n    step: 'set',\n    endpoint: 'remote'\n  })\n\n  try {\n    yield call([session, 'processOffer'], {\n      type: 'offer',\n      sdp: offer.sdp\n    })\n  } catch (error) {\n    return {\n      sessionId: null,\n      error\n    }\n  }\n\n  log.info('Finished setting up remote WebRTC portions of call.')\n  return {\n    sessionId: session.id,\n    error: null\n  }\n}\n\n/**\n * Prepares the WebRTC portions of answering a call\n *\n * @method answerWebrtcSession\n * @param  {Object} deps\n * @param  {Object} deps.webRTC      The WebRTC stack.\n * @param  {Object} mediaConstraints Video and audio media constraints\n * @param  {boolean} mediaConstraints.audio Whether to enable audio or not\n * @param  {boolean} mediaConstraints.video Whether to enable video or not\n * @param  {Object} sessionOptions\n * @param  {string} sessionOptions.sessionId the local webrtc session id\n * @param  {string} sessionOptions.callId the local call id\n * @param  {Object} [sessionOptions.bandwidth] Contains configuration details for setting bandwidth\n * @return {Object} Object\n * @return {string} Object.answerSDP Session Description Protocol for answer\n * @return {string} Object.mediaId an identifier for media\n */\nexport function * answerWebrtcSession (deps, mediaConstraints, sessionOptions) {\n  const { webRTC } = deps\n  const { sessionId, bandwidth, dscpControls, callId } = sessionOptions\n\n  const log = logManager.getLogger('CALL', callId)\n  log.info('Setting up local WebRTC portions of call.')\n\n  // Get the webRTC session that represents this call.\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n\n  if (!session) {\n    log.error(`Error: webRTC session ${sessionId} not found.`)\n    return\n  }\n\n  const { medias, error } = yield call(mediaOps.createLocal, webRTC, mediaConstraints)\n\n  if (error) {\n    log.debug('Failed to get media requested for the call.')\n    return { error }\n  }\n\n  let screenTracks = []\n  let audioTracks = []\n  let videoTracks = []\n  let allTracks = []\n\n  // Add the tracks to the session.\n  for (const eachMedia of medias) {\n    const tracks = yield call([eachMedia.media, 'getTracks'])\n    if (eachMedia.type === 'screen') {\n      screenTracks = [...screenTracks, ...tracks]\n    } else if (eachMedia.type === 'audio') {\n      audioTracks = [...audioTracks, ...tracks]\n    } else if (eachMedia.type === 'video') {\n      videoTracks = [...videoTracks, ...tracks]\n    }\n    allTracks = [...allTracks, ...tracks]\n  }\n\n  const dscpTrackMapping = getTrackDscpMapping(audioTracks, videoTracks, screenTracks, dscpControls)\n\n  yield call([session, 'addTracks'], allTracks, dscpTrackMapping)\n\n  /*\n   * Create the local SDP answer, run it through any provided SDP handlers,\n   *    then set it as the Session's local description.\n   */\n  let answer, callConfigOptions\n  try {\n    answer = yield call([session, 'createAnswer'])\n    callConfigOptions = yield select(getOptions)\n    // This is the \"pre set local\" stage.\n    answer.sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, answer.sdp, {\n      callId,\n      type: answer.type,\n      step: 'set',\n      endpoint: 'local',\n      bandwidth\n    })\n    answer = yield call([session, 'setLocalDescription'], answer)\n  } catch (e) {\n    return {\n      error: new BasicError({\n        message: e.message,\n        code: callCodes.GENERIC_ERROR\n      }),\n      answerSDP: null,\n      mediaIds: null\n    }\n  }\n\n  // Run the SDP through the Pipeline again before we send it to the remote side.\n  //    This is the \"pre send local\" stage.\n  // Assign it to a new variable because some browsers enforce the read-only\n  //    properties of a RTCSessionDescription object. The object from\n  //    setLocalDescription is enforced read-only, but the `offer` before that\n  //    is not enforced.\n  const newSdp = yield call(runPipeline, callConfigOptions.sdpHandlers, answer.sdp, {\n    callId,\n    type: answer.type,\n    step: 'send',\n    endpoint: 'local',\n    bandwidth\n  })\n\n  // Check if we have candidates here\n  const hasNoCandidates = sdp => sdp.media.every(m => !m.candidates || m.candidates.length === 0)\n  const parsedSdp = sdpTransform.parse(newSdp)\n  if (hasNoCandidates(parsedSdp)) {\n    return {\n      error: new BasicError({\n        message: 'No ICE Candidates were found so media cannot flow.',\n        code: callCodes.NO_ICE_CANDIDATES\n      }),\n      answerSDP: null,\n      mediaIds: null\n    }\n  }\n\n  log.info('Finished setting up local WebRTC portions of call.')\n\n  return {\n    error: false,\n    answerSDP: newSdp,\n    mediaIds: medias.map(media => media.media.id)\n  }\n}\n","// Subscription plugin.\nimport { registerService as registerServiceAction } from './actions'\nimport { PLUGIN_SUBSCRIPTION, PLUGIN_UNSUBSCRIPTION } from './actionTypes'\n\n// Helpers.\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { put, takeEvery, call } from 'redux-saga/effects'\nimport { isFunction } from 'lodash/fp'\n\nconst log = logManager.getLogger('SUBSCRIPTION')\n\n/**\n * Effect for plugins to register a service with the subscription plugin.\n * @method registerService\n * @param  {string} service The name of the service.\n * @param  {Saga} subscribe The saga to be called when subscription is requested.\n * @param  {Saga} unsubscribe The saga to be called when unsubscription is requested.\n */\nexport function * registerService (service, subscribeSaga, unsubscribeSaga) {\n  // \"Register\" the service with the subscription plugin, so it knows a plugin\n  //    has subscription/unsubscription logic for it.\n  yield put(registerServiceAction(service))\n\n  // Redux-saga take() pattern.\n  function serviceSubscribePattern (action) {\n    if (action.type === PLUGIN_SUBSCRIPTION) {\n      return action.payload.services.some(serviceConfig => {\n        return serviceConfig.service === service\n      })\n    }\n  }\n  // Redux-saga take() pattern.\n  function serviceUnsubscribePattern (action) {\n    return action.type === PLUGIN_UNSUBSCRIPTION && action.payload.services.indexOf(service) !== -1\n  }\n\n  // Intermediate saga to extract and pass only relevant service config from the payload to the subscribe saga\n  function * extractConfigAndSubscribe (action) {\n    const serviceConfig = action.payload.services.find(serviceConfig => serviceConfig.service === service)\n    yield call(subscribeSaga, serviceConfig, action.payload.type)\n  }\n\n  // Ensure that `takeEvery` is only called when an actual function/saga is provided.\n  //    Otherwise it may cause infinite loop error issues.\n  if (isFunction(subscribeSaga)) {\n    // Perform subscription logic when triggered by the action.\n    yield takeEvery(serviceSubscribePattern, extractConfigAndSubscribe)\n  } else {\n    log.error(`Registering ${service} service without subscribe functionality.`)\n  }\n\n  if (isFunction(unsubscribeSaga)) {\n    // Perform unsubscription logic when triggered by the action.\n    yield takeEvery(serviceUnsubscribePattern, unsubscribeSaga)\n  } else {\n    log.error(`Registering ${service} service without unsubscribe functionality.`)\n  }\n}\n","import * as actionTypes from './actionTypes'\n// Constants\nimport { platforms } from '../../constants'\n\n/**\n * Helper function for funneling all notification types into a single action.\n * @method notificationHelper\n * @param  {string} channel - The channel that the notification came from.\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nfunction notificationHelper (channel, notification, platform) {\n  return {\n    type: actionTypes.PROCESS_NOTIFICATION,\n    payload: notification,\n    meta: {\n      platform,\n      channel\n    }\n  }\n}\n\n/**\n * Represents an application request to process a websocket notification.\n * @method websocketNotification\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nexport function websocketNotification (notification, platform = platforms.LINK) {\n  return notificationHelper('WEBSOCKET', notification, platform)\n}\n\n/**\n * Represents an application request to process an external notification.\n * @method externalNotification\n * @param  {Object} notification\n * @param  {string} [channel='PUSH'] - The channel that the notification came from.\n * @return {Object} A flux standard action.\n */\nexport function externalNotification (notification, channel = 'PUSH', platform) {\n  // TODO: Are external notifications _only_ for Link?\n  return notificationHelper(channel.toUpperCase(), notification, platform)\n}\n\n/**\n * Represents a received notification.\n * @method notificationReceived\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nexport function notificationReceived (notification, platform, channel) {\n  return {\n    type: actionTypes.NOTIFICATION_RECEIVED,\n    payload: notification,\n    error: notification instanceof Error,\n    meta: {\n      platform,\n      channel\n    }\n  }\n}\n\n/**\n * Represents a received notification.\n * @method processNotificationFinish\n * @param  {Object} notification\n * @param  {string} platform\n * @return {Object} A flux standard action.\n */\nexport function processNotificationFinish (notification, platform) {\n  return {\n    type: actionTypes.PROCESS_NOTIFICATION_FINISH,\n    payload: notification,\n    error: notification instanceof Error,\n    meta: {\n      platform\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method enableNotificationChannel\n * @param  {string} channel - The notification channel being affected.\n * @param  {Object} params\n * @param  {boolean} params.channelEnabled - Whether to enable the channel or not.\n * @return {Object} A flux standard action.\n */\nexport function enableNotificationChannel (channel, params = {}) {\n  return {\n    type: actionTypes.ENABLE_NOTIFICATION_CHANNEL,\n    payload: {\n      ...params\n    },\n    meta: {\n      channel\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method registerApplePushNotification\n * @param  {Object} params\n * @return {Object} A flux standard action.\n */\nexport function registerApplePushNotification (params, deferred) {\n  return {\n    type: actionTypes.REGISTER_APPLE_PUSH_NOTIFICATION,\n    payload: {\n      ...params,\n      pushProvider: 'apple'\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method registerAndroidPushNotification\n * @param  {Object} params\n * @return {Object} A flux standard action.\n */\nexport function registerAndroidPushNotification (params, deferred) {\n  return {\n    type: actionTypes.REGISTER_ANDROID_PUSH_NOTIFICATION,\n    payload: {\n      ...params,\n      pushProvider: 'google'\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method unregisterApplePushNotification\n * @param  {string} registration\n * @return {Object} A flux standard action.\n */\nexport function unregisterApplePushNotification (registration, deferred) {\n  return {\n    type: actionTypes.UNREGISTER_APPLE_PUSH_NOTIFICATION,\n    payload: {\n      registration\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents a request to change a notification channel status.\n * @method unregisterAndroidPushNotification\n * @param  {string} registration\n * @return {Object} A flux standard action.\n */\nexport function unregisterAndroidPushNotification (registration, deferred) {\n  return {\n    type: actionTypes.UNREGISTER_ANDROID_PUSH_NOTIFICATION,\n    payload: {\n      registration\n    },\n    meta: {\n      deferred\n    }\n  }\n}\n\n/**\n * Represents the response of a change in a notification channel status.\n * @method enableNotificationChannelFinish\n * @param  {string} channel - The notification channel being affected.\n * @param  {Object} $1\n * @param  {Object} $1.params - Information about the channel change.\n * @param  {Object} $1.params.channelEnabled - Whether the channel was enabled or not.\n * @param  {Object} $1.error - Error object, in the case of an error.\n * @return {Object} A flux standard action.\n */\nexport function enableNotificationChannelFinish (channel, { params, error } = {}) {\n  var action = {\n    type: actionTypes.ENABLE_NOTIFICATION_CHANNEL_FINISH,\n    meta: {\n      channel\n    }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = new Error(error)\n    action.payload.channelEnabled = params.channelEnabled\n  } else {\n    action.payload = {\n      ...params\n    }\n  }\n\n  return action\n}\n","import * as messageActionsImport from './messages'\nimport * as convoActionsImport from './conversations'\n// Apparently the following doesn't work:\n//      export * as newName from './place';\n// So import everything from each file, then re-export.\n\n/**\n * The messaging plugin's actions are organized into two types:\n *  - message actions: those which act on message object,\n *  - convo actions: those which act on conversation objects,\n */\nexport const messageActions = messageActionsImport\nexport const convoActions = convoActionsImport\n","/**\n * The valid status values\n * @name STATUS\n * @type {Object}\n */\nexport const STATUS = {\n  OPEN: 'Open',\n  CLOSED: 'Closed'\n}\n\n/**\n * The valid activities values\n * @name ACTIVITY\n * @type {Object}\n */\nexport const ACTIVITY = {\n  AVAILABLE: 'Available',\n  BUSY: 'Busy',\n  LUNCH: 'Lunch',\n  VACATION: 'Vacation',\n  ON_THE_PHONE: 'OnThePhone',\n  ACTIVITIES_UNKNOWN: 'ActivitiesUnknown',\n  ACTIVITIES_OTHER: 'ActivitiesOther'\n}\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","\nvar space = require('to-space-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toCamelCase\n\n/**\n * Convert a `string` to camel case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toCamelCase(string) {\n  return space(string).replace(/\\s(\\w)/g, function (matches, letter) {\n    return letter.toUpperCase()\n  })\n}\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var isArray = require('@stamp/is/array');\nvar isFunction = require('@stamp/is/function');\nvar isObject = require('@stamp/is/object');\nvar isStamp = require('@stamp/is/stamp');\nvar isComposable = require('@stamp/is/composable');\n\nvar assign = require('@stamp/core/assign');\nvar merge = require('@stamp/core/merge');\n\nvar slice = Array.prototype.slice;\n\n/**\n * Creates new factory instance.\n * @returns {Function} The new factory function.\n */\nfunction createFactory() {\n  return function Stamp(options) {\n    var descriptor = Stamp.compose || {};\n    // Next line was optimized for most JS VMs. Please, be careful here!\n    var obj = {__proto__: descriptor.methods}; // jshint ignore:line\n\n    merge(obj, descriptor.deepProperties);\n    assign(obj, descriptor.properties);\n    Object.defineProperties(obj, descriptor.propertyDescriptors || {});\n\n    if (!descriptor.initializers || descriptor.initializers.length === 0) return obj;\n\n    if (options === undefined) options = {};\n    var inits = descriptor.initializers;\n    var length = inits.length;\n    for (var i = 0; i < length; i += 1) {\n      var initializer = inits[i];\n      if (isFunction(initializer)) {\n        var returnedValue = initializer.call(obj, options,\n          {instance: obj, stamp: Stamp, args: slice.apply(arguments)});\n        obj = returnedValue === undefined ? obj : returnedValue;\n      }\n    }\n\n    return obj;\n  };\n}\n\n/**\n * Returns a new stamp given a descriptor and a compose function implementation.\n * @param {Descriptor} [descriptor={}] The information about the object the stamp will be creating.\n * @param {Compose} composeFunction The \"compose\" function implementation.\n * @returns {Stamp}\n */\nfunction createStamp(descriptor, composeFunction) {\n  var Stamp = createFactory();\n\n  if (descriptor.staticDeepProperties) {\n    merge(Stamp, descriptor.staticDeepProperties);\n  }\n  if (descriptor.staticProperties) {\n    assign(Stamp, descriptor.staticProperties);\n  }\n  if (descriptor.staticPropertyDescriptors) {\n    Object.defineProperties(Stamp, descriptor.staticPropertyDescriptors);\n  }\n\n  var composeImplementation = isFunction(Stamp.compose) ? Stamp.compose : composeFunction;\n  Stamp.compose = function _compose() {\n    'use strict'; // to make sure `this` is not pointing to `global` or `window`\n    return composeImplementation.apply(this, arguments);\n  };\n  assign(Stamp.compose, descriptor);\n\n  return Stamp;\n}\n\nfunction concatAssignFunctions(dstObject, srcArray, propName) {\n  if (!isArray(srcArray)) return;\n\n  var length = srcArray.length;\n  var dstArray = dstObject[propName] || [];\n  dstObject[propName] = dstArray;\n  for (var i = 0; i < length; i += 1) {\n    var fn = srcArray[i];\n    if (isFunction(fn) && dstArray.indexOf(fn) < 0) {\n      dstArray.push(fn);\n    }\n  }\n}\n\n\nfunction combineProperties(dstObject, srcObject, propName, action) {\n  if (!isObject(srcObject[propName])) return;\n  if (!isObject(dstObject[propName])) dstObject[propName] = {};\n  action(dstObject[propName], srcObject[propName]);\n}\n\nfunction deepMergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, merge);\n}\nfunction mergeAssign(dstObject, srcObject, propName) {\n  combineProperties(dstObject, srcObject, propName, assign);\n}\n\n/**\n * Mutates the dstDescriptor by merging the srcComposable data into it.\n * @param {Descriptor} dstDescriptor The descriptor object to merge into.\n * @param {Composable} [srcComposable] The composable\n * (either descriptor or stamp) to merge data form.\n */\nfunction mergeComposable(dstDescriptor, srcComposable) {\n  var srcDescriptor = (srcComposable && srcComposable.compose) || srcComposable;\n\n  mergeAssign(dstDescriptor, srcDescriptor, 'methods');\n  mergeAssign(dstDescriptor, srcDescriptor, 'properties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'propertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticProperties');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'staticDeepProperties');\n  mergeAssign(dstDescriptor, srcDescriptor, 'staticPropertyDescriptors');\n  mergeAssign(dstDescriptor, srcDescriptor, 'configuration');\n  deepMergeAssign(dstDescriptor, srcDescriptor, 'deepConfiguration');\n  concatAssignFunctions(dstDescriptor, srcDescriptor.initializers, 'initializers');\n  concatAssignFunctions(dstDescriptor, srcDescriptor.composers, 'composers');\n}\n\n/**\n * Given the list of composables (stamp descriptors and stamps) returns\n * a new stamp (composable factory function).\n * @typedef {Function} Compose\n * @param {...(Composable)} [arguments] The list of composables.\n * @returns {Stamp} A new stamp (aka composable factory function)\n */\nmodule.exports = function compose() {\n  'use strict'; // to make sure `this` is not pointing to `global` or `window`\n  var descriptor = {};\n  var composables = [];\n  if (isComposable(this)) {\n    mergeComposable(descriptor, this);\n    composables.push(this);\n  }\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n    if (isComposable(arg)) {\n      mergeComposable(descriptor, arg);\n      composables.push(arg);\n    }\n  }\n\n  var stamp = createStamp(descriptor, compose);\n\n  var composers = descriptor.composers;\n  if (isArray(composers) && composers.length > 0) {\n    for (var j = 0; j < composers.length; j += 1) {\n      var composer = composers[j];\n      var returnedValue = composer({stamp: stamp, composables: composables});\n      stamp = isStamp(returnedValue) ? returnedValue : stamp;\n    }\n  }\n\n  return stamp;\n};\n\n\n/**\n * The Stamp Descriptor\n * @typedef {Function|Object} Descriptor\n * @returns {Stamp} A new stamp based on this Stamp\n * @property {Object} [methods] Methods or other data used as object instances' prototype\n * @property {Array<Function>} [initializers] List of initializers called for each object instance\n * @property {Array<Function>} [composers] List of callbacks called each time a composition happens\n * @property {Object} [properties] Shallow assigned properties of object instances\n * @property {Object} [deepProperties] Deeply merged properties of object instances\n * @property {Object} [staticProperties] Shallow assigned properties of Stamps\n * @property {Object} [staticDeepProperties] Deeply merged properties of Stamps\n * @property {Object} [configuration] Shallow assigned properties of Stamp arbitrary metadata\n * @property {Object} [deepConfiguration] Deeply merged properties of Stamp arbitrary metadata\n * @property {Object} [propertyDescriptors] ES5 Property Descriptors applied to object instances\n * @property {Object} [staticPropertyDescriptors] ES5 Property Descriptors applied to Stamps\n */\n\n/**\n * The Stamp factory function\n * @typedef {Function} Stamp\n * @returns {*} Instantiated object\n * @property {Descriptor} compose - The Stamp descriptor and composition function\n */\n\n/**\n * A composable object - stamp or descriptor\n * @typedef {Stamp|Descriptor} Composable\n */\n\n","module.exports = Array.isArray;\n","module.exports = function isFunction(arg) {\n  return typeof arg === 'function';\n};\n","module.exports = require('./_hide');\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","/**\n * Default function for the SDK to use for log formatting.\n *    Uses entry information to form a prefix.\n * @method defaultLogFormatter\n * @param  {LogEntry} entry\n */\nexport default function defaultLogFormatter (entry) {\n  // Compile the meta info of the log for a prefix.\n  const { timestamp, level, target } = entry\n\n  // Find a short name to reference which Logger this log is from.\n  //    This is mostly to cut down the ID if it's too long for a human to read.\n  const shortId = target.id && target.id.length > 8 ? target.id.substring(0, 6) : target.id\n  const shortName = shortId ? `${target.type}/${shortId}` : target.type\n\n  const logInfo = `${timestamp} - ${shortName} - ${level}`\n\n  // Assume that the first message parameter is a string.\n  const log = entry.messages[0]\n\n  return `${logInfo} - ${log}`\n}\n","import defaultActionHandler from './actions/actionHandler'\n\n/**\n * Configuration options for the Logs feature.\n *\n * The SDK will log information about the operations it is performing. The\n *    amount of information will depend on how the Logs feature is configured.\n *\n * The format of logs can also be customized by providing a\n *    {@link logger.LogHandler LogHandler}. This function will receive a\n *    {@link logger.LogEntry LogEntry} which it can handle as it sees fit. By\n *    default, the SDK will log information to the console. For more\n *    information, see the {@link logger Logs feature} description.\n *\n * @public\n * @static\n * @name config.logs\n * @memberof config\n * @requires logs\n * @instance\n * @param {Object} logs Logs configs.\n * @param {string} [logs.logLevel='debug'] Log level to be set. See {@link logger.levels}.\n * @param {logger.LogHandler} [logs.handler] The function to receive log entries from the\n *    SDK. If not provided, a default handler will be used that logs entries\n *    to the console.\n * @param  {boolean} [logs.enableFcsLogs=true] Enable the detailed call logger\n *    for v3.X. Requires log level debug.\n * @param {Object|boolean} [logs.logActions=false] Options specifically for action logs when\n *    logLevel is at DEBUG+ levels. Set this to false to not output action logs.\n * @param {logger.LogHandler} [logs.logActions.handler] The function to receive action\n *    log entries from the SDK. If not provided, a default handler will be used\n *    that logs actions to the console.\n * @param {boolean} [logs.logActions.actionOnly=false] Only output information\n *    about the action itself. Omits the SDK context for when it occurred.\n * @param {boolean} [logs.logActions.collapsed=false] Whether logs should be\n *    minimized when initially output. The full log is still output and can be\n *    inspected on the console.\n * @param {boolean} [logs.logActions.diff=false] Include a diff of what SDK\n *    context was changed by the action.\n * @param {string}  [logs.logActions.level='debug'] Log level to be set\n *    on the action logs\n * @param {boolean} [logs.logActions.exposePayloads=true] Allow action payloads\n *    to be exposed in the logs, potentially displaying sensitive information.\n */\nexport const defaultOptions = {\n  logLevel: 'debug',\n  handler: undefined,\n  enableFcsLogs: true,\n  logActions: false\n}\n\nexport const partialDefaultLogActions = {\n  handler: defaultActionHandler,\n  actionOnly: false,\n  collapsed: false,\n  diff: false,\n  level: 'debug',\n  exposePayloads: true\n}\n/*\n * TODO: Figure out a way to work around this.\n * Can't use validation in logging because validation uses logging to output errors.\n * Circular dependency, have to refactor.\n * Code:\n ```javascript\n// Parse and/or Validate\n// import { enums, validation as v8n, parse } from '../common/validation'\nconst defaultValidation = v8n.schema({\n  logLevel: enums(['silent', 'error', 'warn', 'info', 'debug']),\n  handler: v8n.optional(v8n.function()),\n  enableFcsLogs: v8n.boolean(),\n  logActions: v8n.optional(\n    v8n.passesAnyOf(\n      v8n.schema({\n        handler: v8n.optional(v8n.function()),\n        actionOnly: v8n.boolean(),\n        collapsed: v8n.boolean(),\n        diff: v8n.boolean(),\n        exposePayloads: v8n.boolean()\n      }),\n      // OR\n      v8n.boolean()\n    )\n  )\n})\n\nexport const parseLogConfig = parse('logger', defaultValidation)\n```\n*/\n","// Libraries.\nimport { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves the log level for a specified logger type, or the default level.\n * @method getLevel\n * @param  {Object} state            SDK redux state.\n * @param  {String} [type='DEFAULT'] A type of Logger.\n * @return {string} A log level.\n */\nexport function getLevel (state, type = 'DEFAULT') {\n  const clonedState = cloneDeep(state)\n  return clonedState.logs[type]\n}\n\n/**\n * Retrieves a list of all of the SDK's Logger types.\n * @method getTypes\n * @param  {Object} state  SDK redux state.\n * @return {Array<string>}\n */\nexport function getTypes (state) {\n  const clonedState = cloneDeep(state)\n  return Object.keys(clonedState.logs)\n}\n","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar meta = require('./_meta');\nvar fails = require('./_fails');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar setToStringTag = require('./_set-to-string-tag');\nvar dP = require('./_object-dp').f;\nvar each = require('./_array-methods')(0);\nvar DESCRIPTORS = require('./_descriptors');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  if (!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function (target, iterable) {\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base();\n      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','), function (KEY) {\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if (KEY in proto && !(IS_WEAK && KEY == 'clear')) hide(C.prototype, KEY, function (a, b) {\n        anInstance(this, C, KEY);\n        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    IS_WEAK || dP(C.prototype, 'size', {\n      get: function () {\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = require('./_classof');\nvar from = require('./_array-from-iterable');\nmodule.exports = function (NAME) {\n  return function toJSON() {\n    if (classof(this) != NAME) throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};\n","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { of: function of() {\n    var length = arguments.length;\n    var A = new Array(length);\n    while (length--) A[length] = arguments[length];\n    return new this(A);\n  } });\n};\n","'use strict';\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar ctx = require('./_ctx');\nvar forOf = require('./_for-of');\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n    var mapFn = arguments[1];\n    var mapping, A, n, cb;\n    aFunction(this);\n    mapping = mapFn !== undefined;\n    if (mapping) aFunction(mapFn);\n    if (source == undefined) return new this();\n    A = [];\n    if (mapping) {\n      n = 0;\n      cb = ctx(mapFn, arguments[2], 2);\n      forOf(source, false, function (nextItem) {\n        A.push(cb(nextItem, n++));\n      });\n    } else {\n      forOf(source, false, A.push, A);\n    }\n    return new this(A);\n  } });\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };","const PREFIX = '@@KANDY/'\n\nexport const CONFIG_UPDATE = PREFIX + 'CONFIG_UPDATE'\n\nexport const SET_SDP_HANDLERS = PREFIX + 'SET_SDP_HANDLERS'\n","// Other plugins.\nimport { logManager } from '../logs'\n\n// Helpers.\nimport { mergeValues } from '../common/utils'\nimport { getVersion } from '../common/version'\nimport { getDefaultCollectionFunction } from './utils/defaults'\n\n// Parse and/or Validate\nimport { validation as v8n, parse, enums } from '../common/validation'\n\nconst log = logManager.getLogger('CALL')\n\n/*\n * JsDoc documentation for call configs are found in the Call plugin indexes,\n *    since they are slightly different for Link vs. CPaaS.\n */\nconst defaultOptions = {\n  // Native Peer configs.\n  defaultPeerConfig: {\n    sdpSemantics: 'unified-plan',\n    iceServers: []\n  },\n\n  // ICE collection configs.\n  iceCollectionIdealTimeout: 1000,\n  iceCollectionMaxTimeout: 3000,\n  serverTurnCredentials: true,\n\n  // SDP manipulation configs.\n  sdpHandlers: [],\n  removeH264Codecs: true,\n  removeBundling: false,\n\n  // Other.\n  earlyMedia: false,\n  resyncOnConnect: false,\n  mediaBrokerOnly: false,\n  trickleIceMode: 'NONE',\n  normalizeDestination: true,\n  ringingFeedbackMode: 'auto',\n  callAuditTimer: 25000,\n  mediaConnectionRetryDelay: 3000\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  // Native Peer configs.\n  defaultPeerConfig: v8n.schema({\n    sdpSemantics: enums(['unified-plan', 'plan-b']),\n    // Validation for currently supported properties of an RTCPeerConfiguration,\n    // as specified at: https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection\n    // If more params are supported in the future, then we need to extend this validation.\n    iceServers: v8n.array(),\n    iceCandidatePoolSize: v8n.optional(v8n.positive()),\n    iceTransportPolicy: v8n.optional(enums(['all', 'public', 'relay'])),\n    bundlePolicy: v8n.optional(enums(['balanced', 'max-compat', 'max-bundle'])),\n    certificates: v8n.optional(\n      v8n.array().every.schema({\n        expires: v8n.string()\n      })\n    ),\n    peerIdentity: v8n.optional(v8n.string()),\n    rtcpMuxPolicy: v8n.optional(enums(['negotiate', 'require']))\n  }),\n\n  // ICE collection configs.\n  iceCollectionIdealTimeout: v8n.positive(),\n  iceCollectionMaxTimeout: v8n.positive(),\n  iceCollectionCheckFunction: v8n.optional(v8n.function()),\n  serverTurnCredentials: v8n.boolean(),\n\n  // SDP manipulation configs.\n  sdpHandlers: v8n.array(),\n  removeH264Codecs: v8n.boolean(),\n  removeBundling: v8n.boolean(),\n\n  // Other\n  earlyMedia: v8n.boolean(),\n  resyncOnConnect: v8n.boolean(),\n  mediaBrokerOnly: v8n.boolean(),\n  trickleIceMode: v8n.string(),\n  normalizeDestination: v8n.boolean(),\n  ringingFeedbackMode: enums(['auto', 'manual']),\n  callAuditTimer: v8n.positive(),\n  mediaConnectionRetryDelay: v8n.positive()\n})\nconst parseOptions = parse('call', v8nValidation)\n\n/**\n * Helper function to format the Call configs as the plugins expect it to be.\n * @method parseConfigs\n * @param {Object} options Call configs provided by application.\n * @returns {Object} Call configs re-formatted as needed.\n */\nexport default function parseConfigs (options = {}) {\n  // Only parse the configs for v4+.\n  const majorVersion = getVersion()[0]\n  if (majorVersion < 4) {\n    return options\n  }\n\n  /*\n   * For backwards compatibility between doubly old ICE config and old config.\n   * iceserver --> iceServers\n   */\n  if (options.iceserver && !options.iceServers) {\n    log.warn('Call configuration `iceserver` is being replaced by `iceServers`. Please update your configuration.')\n    options.iceServers = options.iceserver\n    delete options.iceserver\n  }\n\n  // If user did not provide this new way of configuration, create it.\n  if (!options.defaultPeerConfig) {\n    options.defaultPeerConfig = {}\n  }\n\n  /*\n   * For backwards-compat, update config to move sdpSemantics into defaultPeerConfig.\n   * sdpSemantics --> defaultPeerConfig.sdpSemantics\n   */\n  if (options.sdpSemantics) {\n    // .. and if new way is not present, then use old way but store it in the new config.\n    if (!options.defaultPeerConfig.sdpSemantics) {\n      log.warn(\n        'Call configuration `sdpSemantics` has been moved to `defaultPeerConfig.sdpSemantics`. Please update your configuration.'\n      )\n      // save the old config item under the new way\n      options.defaultPeerConfig.sdpSemantics = options.sdpSemantics\n    }\n\n    // No longer need the old config item\n    delete options.sdpSemantics\n  }\n\n  /*\n   * For backwards-compat, update config to move iceServers into defaultPeerConfig.\n   * iceServers --> defaultPeerConfig.iceServers\n   */\n  if (options.iceServers) {\n    if (!options.defaultPeerConfig.iceServers) {\n      // save the old config item under the new way\n      options.defaultPeerConfig.iceServers = options.iceServers\n    }\n\n    // No longer need the old config item\n    delete options.iceServers\n  }\n\n  /*\n   * For backwards-compat, make sure all iceServers use urls (not url).\n   * iceServer.url --> iceServer.urls\n   */\n  if (options.defaultPeerConfig.iceServers) {\n    options.defaultPeerConfig.iceServers.forEach(iceServer => {\n      if (iceServer.url) {\n        log.warn(\n          'Call configuration `iceServers.url` is being replaced by `iceServers.urls`, plural. Please update your configuration.'\n        )\n        iceServer.urls = iceServer.url\n        delete iceServer.url\n      }\n    })\n  }\n\n  if (options.ringingFeedbackMode && !['auto', 'manual'].includes(options.ringingFeedbackMode)) {\n    log.warn('Call configuration `ringingFeedbackMode` invalid. Switching to `auto`.')\n    options.ringingFeedbackMode = 'auto'\n  }\n\n  // For backwards compatiblilty, if `iceCollectionDelay` and `maxIceTimeout` were provided, and `iceCollectionIdealTimeout`\n  //  and `iceCollectionMaxTimeout` were not, we will use the `iceCollectionDelay` as the ideal timeout, and `maxIceTimeout`\n  //  as the max.\n  if (options.iceCollectionDelay) {\n    if (!options.iceCollectionIdealTimeout) {\n      options.iceCollectionIdealTimeout = options.iceCollectionDelay\n    }\n    delete options.iceCollectionDelay\n  }\n  if (options.maxIceTimeout && !options.iceCollectionMaxTimeout) {\n    if (!options.iceCollectionMaxTimeout) {\n      options.iceCollectionMaxTimeout = options.maxIceTimeout\n    }\n    delete options.maxIceTimeout\n  }\n  return options\n}\n\n/**\n * Helper function to merge the default Call configs into the application-provided\n *   configs and validate them.\n * @param  {Object} options Call configs with expected formatting.\n * @return {Object} Call configs with defaults included.\n */\nexport function mergeDefaults (options = {}) {\n  options = mergeValues(defaultOptions, options)\n  // If no ice collection check function was provided, get the default one and use any set/default values for the timeouts\n  if (!options.iceCollectionCheckFunction) {\n    options.iceCollectionCheckFunction = getDefaultCollectionFunction(\n      options.iceCollectionIdealTimeout,\n      options.iceCollectionMaxTimeout\n    )\n  }\n  parseOptions(options)\n\n  return options\n}\n","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{\n    // o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly...\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  // k: [{}], // outdated thing ignored\n  t: [{\n    // t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{\n    // c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{\n    // b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{\n    // m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    {\n      // a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding)\n          ? 'rtpmap:%d %s/%s/%s'\n          : o.rate\n            ? 'rtpmap:%d %s/%s'\n            : 'rtpmap:%d %s';\n      }\n    },\n    {\n      // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      // a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    {\n      // a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    {\n      // a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null)\n          ? 'rtcp:%d %s IP%d %s'\n          : 'rtcp:%d';\n      }\n    },\n    {\n      // a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%s trr-int %d'\n    },\n    {\n      // a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null)\n          ? 'rtcp-fb:%s %s %s'\n          : 'rtcp-fb:%s %s';\n      }\n    },\n    {\n      // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      // a=extmap:1/recvonly URI-gps-string\n      // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],\n      format: function (o) {\n        return (\n          'extmap:%d' +\n          (o.direction ? '/%s' : '%v') +\n          (o['encrypt-uri'] ? ' %s' : '%v') +\n          ' %s' +\n          (o.config ? ' %s' : '')\n        );\n      }\n    },\n    {\n      // a=extmap-allow-mixed\n      name: 'extmapAllowMixed',\n      reg: /^(extmap-allow-mixed)/\n    },\n    {\n      // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null)\n          ? 'crypto:%d %s %s %s'\n          : 'crypto:%d %s %s';\n      }\n    },\n    {\n      // a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    {\n      // a=connection:new\n      name: 'connectionType',\n      reg: /^connection:(new|existing)/,\n      format: 'connection:%s'\n    },\n    {\n      // a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    {\n      // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    {\n      // a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'ptime:%d'\n    },\n    {\n      // a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'maxptime:%d'\n    },\n    {\n      // a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    {\n      // a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    {\n      // a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    {\n      // a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    {\n      // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    {\n      // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    {\n      // a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    {\n      // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    {\n      // a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    {\n      // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    {\n      // a=ssrc-group:FEC 1 2\n      // a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    {\n      // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    {\n      // a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    {\n      // a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    {\n      // a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    {\n      // a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null)\n          ? 'sctpmap:%s %s %s'\n          : 'sctpmap:%s %s';\n      }\n    },\n    {\n      // a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    {\n      // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    {\n      // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      // a=imageattr:* send [x=800,y=640] recv *\n      // a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        // a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        // recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      // a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        // a=simulcast:\n        '^simulcast:' +\n        // send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        // space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        // end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // old simulcast draft 03 (implemented by Firefox)\n      //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      // a=simulcast: recv pt=97;98 send pt=97\n      // a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      // a=framerate:25\n      // a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    {\n      // RFC4570\n      // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    {\n      // a=bundle-only\n      name: 'bundleOnly',\n      reg: /^(bundle-only)/\n    },\n    {\n      // a=label:1\n      name: 'label',\n      reg: /^label:(.+)/,\n      format: 'label:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n      name: 'sctpPort',\n      reg: /^sctp-port:(\\d+)$/,\n      format: 'sctp-port:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n      name: 'maxMessageSize',\n      reg: /^max-message-size:(\\d+)$/,\n      format: 'max-message-size:%s'\n    },\n    {\n      // RFC7273\n      // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37\n      push:'tsRefClocks',\n      reg: /^ts-refclk:([^\\s=]*)(?:=(\\S*))?/,\n      names: ['clksrc', 'clksrcExt'],\n      format: function (o) {\n        return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');\n      }\n    },\n    {\n      // RFC7273\n      // a=mediaclk:direct=963214424\n      name:'mediaClk',\n      reg: /^mediaclk:(?:id=(\\S*))? *([^\\s=]*)(?:=(\\S*))?(?: *rate=(\\d+)\\/(\\d+))?/,\n      names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],\n      format: function (o) {\n        var str = 'mediaclk:';\n        str += (o.id != null ? 'id=%s %s' : '%v%s');\n        str += (o.mediaClockValue != null ? '=%s' : '');\n        str += (o.rateNumerator != null ? ' rate=%s' : '');\n        str += (o.rateDenominator != null ? '/%s' : '');\n        return str;\n      }\n    },\n    {\n      // a=keywds:keywords\n      name: 'keywords',\n      reg: /^keywds:(.+)$/,\n      format: 'keywds:%s'\n    },\n    {\n      // a=content:main\n      name: 'content',\n      reg: /^content:(.+)/,\n      format: 'content:%s'\n    },\n    // BFCP https://tools.ietf.org/html/rfc4583\n    {\n      // a=floorctrl:c-s\n      name: 'bfcpFloorCtrl',\n      reg: /^floorctrl:(c-only|s-only|c-s)/,\n      format: 'floorctrl:%s'\n    },\n    {\n      // a=confid:1\n      name: 'bfcpConfId',\n      reg: /^confid:(\\d+)/,\n      format: 'confid:%s'\n    },\n    {\n      // a=userid:1\n      name: 'bfcpUserId',\n      reg: /^userid:(\\d+)/,\n      format: 'userid:%s'\n    },\n    {\n      // a=floorid:1\n      name: 'bfcpFloorId',\n      reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,\n      names: ['id', 'mStream'],\n      format: 'floorid:%s mstrm:%s'\n    },\n    {\n      // any a= that we don't understand is kept verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n","/**\n * The media devices available for use have changed.\n *\n * Information about the available media devices can be retrieved using the\n *    {@link media.getDevices} API.\n *\n * @public\n * @static\n * @memberof media\n * @event devices:change\n * @example\n * // Listen for changes to available media devices.\n * client.on('devices:change', function () {\n *    // Retrieve the latest media device lists.\n *    const devices = client.media.getDevices()\n * })\n */\nexport const DEVICES_CHANGED = 'devices:change'\n\n/**\n * An error occurred while trying to access media devices.\n *\n * The most common causes of this error are when the browser does not have\n *    permission from the end-user to access the devices, or when the browser\n *    cannot find a media device that fulfills the\n *    {@link call.MediaConstraint MediaConstraint(s)} that was provided.\n *\n * @public\n * @static\n * @memberof media\n * @event devices:error\n * @param {Object} params\n * @param {Error} params.error The Basic error object.\n */\nexport const INITIALIZE_DEVICES_ERROR = 'devices:error'\n\n/**\n * The specified Tracks have been muted.\n *\n * A Track can be muted using the {@link media.muteTracks} API.\n * @public\n * @memberof media\n * @event media:muted\n * @param {Object} params\n * @param {Array<string>} params.tracks The list of Tracks that were muted.\n */\nexport const TRACKS_MUTED = 'media:muted'\n\n/**\n * The specified Tracks have been unmuted.\n *\n * A Track can be unmuted using the {@link media.unmuteTracks}\n *    API.\n * @public\n * @memberof media\n * @event media:unmuted\n * @param {Object} params\n * @param {Array<string>} params.tracks The list of Tracks that were unmuted.\n */\nexport const TRACKS_UNMUTED = 'media:unmuted'\n\n/**\n * The specified Track has had its media source muted.\n *\n * The Track is still active, but is not receiving media any longer. An audio\n *    track will be silent and a video track will be a black frame. It is\n *    possible for the track to start receiving media again (see the\n *    {@link media.event:media:sourceUnmuted media:sourceUnmuted} event).\n *\n * This event is generated outside the control of the SDK. This may happen for a\n *    local track if the browser or end-user stops allowing the SDK to access\n *    the media device, for example. This may happen for a remote track during a\n *    call when the remote endpoint stops sending media during a hold operation,\n *    for example.\n *\n * Handling this event is only required if you are using `unified-plan` as the\n *    `sdpSemantics` setting in the SDK's configuration. This setting will become\n *    the default in an upcoming release.\n * @public\n * @static\n * @memberof media\n * @event media:sourceMuted\n * @param {Object} params\n * @param {string} params.trackId The track that is affected as a result of media source being muted.\n */\nexport const TRACK_SOURCE_MUTED = 'media:sourceMuted'\n\n/**\n * The specified Track has started receiving media from its source once again.\n *\n * The Track returns to the state before it was muted (see the\n *    {@link media.event:media:sourceMuted media:sourceMuted} event), and will\n *    be able to display video or play audio once again.\n *\n * This event is generated outside the control of the SDK, when the cause of the\n *    media source being muted had been undone.\n *\n * Handling this event is only required if you are using `unified-plan` as the\n *    `sdpSemantics` setting in the SDK's configuration. This setting will become\n *    the default in an upcoming release.\n * @public\n * @static\n * @memberof media\n * @event media:sourceUnmuted\n * @param {Object} params\n * @param {string} params.trackId The track that is affected as a result of media source being unmuted.\n */\nexport const TRACK_SOURCE_UNMUTED = 'media:sourceUnmuted'\n\n/**\n * The specified Track has been rendered into an element.\n *\n * @public\n * @static\n * @memberof media\n * @event media:trackRendered\n * @param {Object} params\n * @param {Array<string>} params.trackIds The list of track id's that were rendered.\n * @param {string} params.selector The css selector used to identify the element the track is rendered into.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const TRACK_RENDERED = 'media:trackRendered'\n","// Models.\nimport Track from '../models/track'\nimport Media from '../models/media'\nimport Peer from '../Peer'\n\n// Managers.\nimport MediaManager from '../managers/mediaManager'\nimport PeerManager from '../managers/peerManager'\nimport SessionManager from '../managers/sessionManager'\nimport DeviceManager from '../managers/deviceManager'\nimport TrackManager from '../managers/trackManager'\nimport WebRTCManager from '../managers/webrtcManager'\n\nimport { logManager } from '../logs'\n\n// SDP helpers.\nimport sdpPipeline from '../sdpUtils/pipeline'\nimport * as sdpHandlers from '../sdpUtils/handlers'\n\n// Utils\nimport { getBrowserDetails } from '../utils'\n\n/**\n * @returns An dictionary of features that are supported on this platform.\n */\nexport function getWebRTCSupportCapabilities () {\n  return {\n    mediaDevices: Boolean(navigator.mediaDevices),\n    peerConnection: Boolean(window.RTCPeerConnection)\n  }\n}\n\nexport default function initialize () {\n  const log = logManager.getLogger('WebRTC')\n\n  const browserDetails = getBrowserDetails()\n  if (browserDetails.version) {\n    log.debug(`Browser details: ${browserDetails.browser}, version ${browserDetails.version}.`)\n  } else {\n    log.debug('Browser details: Not supported by webRTC adapter.')\n  }\n\n  const deviceManager = new DeviceManager()\n  const trackManager = new TrackManager()\n  const mediaManager = new MediaManager({ trackManager })\n  const peerManager = new PeerManager({ trackManager })\n  const sessionManager = new SessionManager({\n    peerManager,\n    mediaManager,\n    trackManager\n  })\n  const webrtcManager = new WebRTCManager()\n\n  return {\n    models: {\n      Track,\n      Media,\n      Peer\n    },\n    // TODO: Make naming consistent.\n    managers: {\n      devices: deviceManager,\n      media: mediaManager,\n      peerManager: peerManager,\n      sessionManager,\n      track: trackManager,\n      // Give access to the Log Manager.\n      // TODO: Don't include it under managers. It's here now because of\n      //    ProxyStack annoyingness.\n      logs: logManager,\n      webrtcManager\n    },\n    sdp: {\n      pipeline: sdpPipeline,\n      handlers: sdpHandlers\n    },\n    // Export this on the webRTC stack for backwards compatibility.\n    getBrowserDetails\n  }\n}\n","import { logManager } from '../logs'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\nimport { makeSafeForCSS } from '../utils'\n\n/**\n * Wrapper object for a native MediaStreamTrack object.\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack\n * @method Track\n */\nexport default function Track (mediaTrack, mediaStream) {\n  const log = logManager.getLogger('Track', mediaTrack.id)\n  log.info(`Creating new ${mediaTrack.kind} Track.`)\n\n  // Internal variables.\n  const id = mediaTrack.id\n  const track = mediaTrack\n  let stream = mediaStream\n  let isLocalTrack\n  const containers = []\n  let constraints = {}\n  const emitter = new EventEmitter()\n\n  /**\n   * When a track ends, the Track itself doesn't do anything about it.\n   * It \"bubbles\" the event up to be handled at a higher level.\n   */\n  track.onended = event => {\n    log.debug('Event emitted: ', event)\n    emitter.emit('ended', {\n      trackId: track.id,\n      // If the event is defined:\n      //   The event is triggered either from a remote notification or browser action.\n      //   In case of browser action (e.g. \"Stop sharing\" screenshare on chrome), SDK will (eventually) receive a SESSION_TRACK_REMOVED action.\n      //   This action is dispatched when the session picks up on this ended event and triggers a 'track:ended' event.\n      //   When dispatching this action, we need to tell the SDK to perform renegotiation (but for browser actions only)\n      // If the event is undefined:\n      //   `track.onended` is manually triggered and the saga that eventually triggered this function will handle the renegotiation itself.\n      performRenegotiation: !!event\n    })\n  }\n\n  /**\n   * When a track is muted, we forward this to any listener.\n   * This handler is typically invoked by actions triggered outside the\n   * direct control of the webrtc SDK.\n   */\n  track.onmute = event => {\n    log.debug('Event emitted: ', event)\n    emitter.emit('muted', {\n      trackId: track.id,\n      mediaId: stream.id,\n      isLocal: isLocalTrack\n    })\n  }\n\n  /**\n   * When a track is unmuted, we forward this to any listener.\n   * This handler is typically invoked by actions triggered outside the\n   * direct control of the webrtc SDK.\n   */\n  track.onunmute = event => {\n    log.debug('Event emitted: ', event)\n    emitter.emit('unmuted', {\n      trackId: track.id,\n      mediaId: stream.id,\n      isLocal: isLocalTrack\n    })\n  }\n\n  function setIsLocal (isLocal) {\n    isLocalTrack = isLocal\n  }\n\n  function isLocal () {\n    return isLocalTrack\n  }\n\n  function setStream (newStream) {\n    stream = newStream\n  }\n  function getStream () {\n    return stream\n  }\n\n  /**\n   * Retrieve a snapshot of the Track object's current state.\n   * @method getState\n   * @return {Object}\n   */\n  function getState () {\n    return {\n      id,\n      streamId: stream.id,\n      kind: track.kind,\n      isLocal: isLocalTrack,\n      label: track.label,\n      muted: track.muted,\n      enabled: track.enabled,\n      state: track.readyState,\n      containers: containers.map(element => element.id)\n    }\n  }\n\n  /**\n   * Renders this Track as a subelement of the specified element.\n   * @method renderIn\n   * @param  {HTMLElement|String} container The DOM element to be rendered in,\n   *    or a unique CSS selector for the DOM element.\n   * @param  {String} [speakerId] The device ID to be used for audio output.\n   */\n  function renderIn (container, speakerId) {\n    let element\n    // If a string was provided, use it as a CSS selector to find the element.\n    if (typeof container === 'string') {\n      log.info(`Rendering track in element using selector: ${container}`)\n\n      element = document.querySelector(container)\n      if (!element) {\n        log.error(`Unable to get container with selector: ${container}.`)\n        return false\n      }\n    } else {\n      log.info('Rendering track in provided HTMLElement.')\n\n      element = container\n    }\n\n    // TODO: Proper error checking.\n\n    if (containers.indexOf(element) > -1) {\n      // Already rendered in element.\n      log.info('Failed to render track; already rendered in element.')\n      return\n    }\n\n    containers.push(element)\n\n    const type = track.kind\n    const renderer = document.createElement(type)\n\n    // Make id safe for css (Firefox ids come wrapped in curly braces)\n    // This makes it easier to do other manipulation on the rendering side\n    // as we don't need to escape curly braces when doing element.querySelector (See removeFrom).\n    renderer.id = `${type}-${makeSafeForCSS(id)}`\n    renderer.style.height = '100%'\n    renderer.style.width = '100%'\n\n    try {\n      renderer.srcObject = stream\n    } catch (error) {\n      log.debug('srcObject property not supported; reverting to createObjectURL.')\n      // TODO: AdapterJS handles this, we should remove this.\n      renderer.src = window.URL.createObjectURL(stream)\n    }\n\n    renderer.autoplay = 'true'\n\n    if (type === 'video') {\n      renderer.muted = 'true'\n      // Needed for IOS autoplay.\n      renderer.playsInline = 'true'\n      // Needed for Android.\n      renderer.play().catch(err => {\n        log.debug(`Could not autoplay renderer #${renderer.id}: ${err.message}`)\n      })\n    }\n\n    // Set speaker if it was provided and it's supported.\n    if (speakerId && typeof renderer.setSinkId !== 'undefined') {\n      // TODO: Better then/catch handling.\n      renderer\n        .setSinkId(speakerId)\n        .then(() => {\n          log.debug(`Set to use speaker: ${speakerId}.`)\n        })\n        .catch(error => {\n          log.debug(`Could not set speaker to use ${speakerId}: ${error.message}`)\n        })\n    } else if (speakerId && typeof renderer.setSinkId === 'undefined') {\n      log.info('Failed to set speaker; setSinkId not supported in this browser.')\n    }\n\n    element.appendChild(renderer)\n\n    // TODO: Emit event to notify of changes?\n    return true\n  }\n\n  /**\n   * Stop rendering this Track from the specified element.\n   * @method removeFrom\n   * @param  {HTMLElement} container The DOM element to be removed from, or\n   *     a unique CSS selector for the DOM element.\n   */\n  function removeFrom (container) {\n    let element\n    // If a string was provided, use it as a CSS selector to find the element.\n    if (typeof container === 'string') {\n      log.info(`Removing track from element using selector: ${container}`)\n\n      element = document.querySelector(container)\n      if (!element) {\n        log.error(`Unable to get container with selector: ${container}.`)\n        return false\n      }\n    } else {\n      log.info('Removing track from provided HTMLElement.')\n\n      element = container\n    }\n\n    const index = containers.indexOf(element)\n    if (index === -1) {\n      // Not rendered in element.\n      log.info('Failed to remove track; not rendered in element.')\n      return\n    }\n    containers.splice(index, 1)\n\n    // TODO: This id may not be unique.\n    // Make id safe for css (Firefox ids come wrapped in curly braces)\n    // This makes it easier to do other manipulation on the rendering side\n    // as we don't need to escape curly braces when doing element.querySelector.\n    const rendererId = `${track.kind}-${makeSafeForCSS(id)}`\n    const renderer = element.querySelector(`#${rendererId}`)\n\n    if (renderer.srcObject) {\n      renderer.srcObject = null\n    } else if (renderer.src) {\n      renderer.src = null\n    }\n    element.removeChild(renderer)\n\n    // TODO: Emit event to notify of changes?\n    return true\n  }\n\n  /**\n   * Moves the rendered track to only the specified element.\n   * @method moveTo\n   * @param  {HTMLElement} element The DOM element to be moved to.\n   */\n  function moveTo (element) {\n    // Iterate over the array backwards since `removeFrom` changes the length\n    //    of the array. This ensures that indexes aren't skipped.\n    for (let i = containers.length; i > 0; i--) {\n      removeFrom(containers[i - 1])\n    }\n    renderIn(element)\n  }\n\n  /**\n   * Clean-up the Track by removing it wherever it is rendered and stopping the\n   *    track itself.\n   * @method cleanup\n   */\n  function cleanup () {\n    log.info('Cleaning up track.')\n    // Iterate over the array backwards since `removeFrom` changes the length\n    //    of the array. This ensures that indexes aren't skipped.\n    for (let i = containers.length; i > 0; i--) {\n      removeFrom(containers[i - 1])\n    }\n    // Stop the track if it isn't already stopped.\n    if (track.readyState === 'live') {\n      stop()\n    }\n  }\n\n  /**\n   * Set this Track to be disabled and disallow the Track to render the source stream.\n   * @method mute\n   */\n  function mute () {\n    track.enabled = false\n  }\n\n  /**\n   * Set this Track to be enabled and allow the Track to render the source stream.\n   * @method unmute\n   */\n  function unmute () {\n    track.enabled = true\n  }\n\n  /**\n   * Calls native stop() function to deassociate the source and the track.\n   * @method stop\n   */\n  function stop () {\n    track.stop()\n    /**\n     * Treat stopping the track the same as it being ended.\n     * Normally, onended is not triggered when `stop` is called, only when it is\n     *    \"remotely ended\".\n     */\n    track.onended()\n  }\n\n  /**\n   * Gets the currently set constraints for the track.\n   * @method getConstraints\n   * @return {Object}\n   */\n  function getConstraints () {\n    return constraints\n  }\n\n  /**\n   * Set the values for constrainable properties of the track.\n   * @method applyConstraints\n   * @param  {Object} constraints The list of constrainable properties.\n   */\n  function setConstraints (constr) {\n    constraints = constr\n  }\n\n  /**\n   * Retrieves the list of containers where the Track is rendered.\n   * @method getContainers\n   * @return {Array} List of HTMLElements.\n   */\n  function getContainers () {\n    return containers\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    id,\n    // Track APIs.\n    getState,\n    renderIn,\n    removeFrom,\n    moveTo,\n    cleanup,\n    mute,\n    unmute,\n    stop,\n    getConstraints,\n    setConstraints,\n    getContainers,\n    // Event APIs.\n    on,\n    off,\n    once,\n    // The native track and stream was accessible before, so it was\n    //    used when it probably shouldn't have been.\n    // TODO: Find a better solution.\n    track,\n    setStream,\n    getStream,\n    setIsLocal,\n    isLocal\n  }\n}\n","import { logManager } from '../logs'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Object to represent a \"media\" object.\n * Wraps a MediaStream object.\n * @class Media\n * TODO: Rename to Stream? Would be more straight-forward since Tracks can be\n *    managed directly (with trackManager), instead of through a \"Media\" object.\n */\nexport default function Media (nativeStream, isLocal) {\n  const log = logManager.getLogger('Media', nativeStream.id)\n  log.info(`Creating new ${isLocal ? 'local' : 'remote'} Media.`)\n\n  // Internal variables.\n  const id = nativeStream.id\n  const stream = nativeStream\n  const emitter = new EventEmitter()\n\n  /**\n   * Mapping of the IDs of this Media object's tracks to the Track object.\n   * @type {Map}\n   */\n  const tracks = new Map()\n\n  stream.onremovetrack = event => {\n    tracks.delete(event.track.id)\n    emitter.emit('track:removed', event.track.id)\n  }\n\n  /**\n   * Retrieve a snapshot of the Media object's current state.\n   * @method getState\n   * @return {Object}\n   */\n  function getState () {\n    return {\n      id: id,\n      tracks: Array.from(tracks.values()).map(track => track.getState()),\n      isLocal: isLocal\n    }\n  }\n\n  /**\n   * Add a track to this Media object.\n   * @method addTrack\n   * @param {Track} track The Track object to add to the Media object.\n   */\n  function addTrack (track) {\n    if (tracks.has(track.id)) {\n      log.debug(`Track (${track.id}) is already in Media (${id}).`)\n      return\n    }\n\n    // Add the native MediaStreamTrack to the MediaStream.\n    stream.addTrack(track.track)\n    // Add the Track to the Media object.\n    tracks.set(track.id, track)\n\n    /**\n     * When a track ends, remove it from the Media object then clean it up.\n     */\n    track.on('ended', () => {\n      const removedTrack = removeTrack(track.id)\n      // Might be from old already deleted media which has no tracks anymore.\n      if (removedTrack) {\n        removedTrack.cleanup()\n        emitter.emit('track:ended', {\n          mediaId: id,\n          trackId: removedTrack.id\n        })\n      }\n    })\n    // TODO: Emit event or return result?\n    emitter.emit('track:new', {\n      mediaId: id,\n      trackId: track.id\n    })\n\n    /**\n     * When a track is muted, we generate our own internal event\n     */\n    track.on('muted', event => {\n      const wrappedTrack = getTrack(event.trackId)\n      if (wrappedTrack && wrappedTrack.track && wrappedTrack.track.muted) {\n        // Emit our internal event.\n        // Note that wrappedTrack.id is same as wrappedTrack.track & event.trackId\n        emitter.emit('track:muted', {\n          mediaId: id,\n          trackId: event.trackId\n        })\n      }\n    })\n\n    /**\n     * When a track is unmuted, we generate our own internal event\n     */\n    track.on('unmuted', event => {\n      const wrappedTrack = getTrack(event.trackId)\n      if (wrappedTrack && wrappedTrack.track && wrappedTrack.track.muted === false) {\n        // Emit our internal event.\n        // Note that wrappedTrack.id is same as wrappedTrack.track & event.trackId\n        emitter.emit('track:unmuted', {\n          mediaId: id,\n          trackId: event.trackId\n        })\n      }\n    })\n  }\n\n  /**\n   * Remove a track from the Media object.\n   * @private\n   * @method removeTrack\n   * @param  {string} trackId The Track to remove.\n   */\n  function removeTrack (trackId) {\n    const track = getTrack(trackId)\n    if (track) {\n      tracks.delete(trackId)\n      return track\n    }\n  }\n\n  /**\n   * Render all tracks of this Media object inside the specified element.\n   * @method renderIn\n   * @param  {HTMLElement} element The DOM element to be rendered in.\n   * @param  {String} [speakerId] The device ID to be used for audio output.\n   */\n  function renderIn (element, speakerId) {\n    getTracks().forEach(track => {\n      track.renderIn(element, speakerId)\n    })\n  }\n\n  /**\n   * Stop rendering all tracks of this Media object from the specified element.\n   * @method removeFrom\n   * @param  {HTMLElement} element The DOM element to be removed from.\n   */\n  function removeFrom (element) {\n    getTracks().forEach(track => {\n      track.removeFrom(element)\n    })\n  }\n\n  /**\n   * Moves the rendered Media object to only the specified element.\n   * @method moveTo\n   * @param  {HTMLElement} element The DOM element to be move to.\n   */\n  function moveTo (element) {\n    getTracks().forEach(track => {\n      track.moveTo(element)\n    })\n  }\n\n  /**\n   * Stop all Tracks within this Media object.\n   * @method stop\n   */\n  function stop () {\n    getTracks().forEach(track => {\n      track.stop()\n    })\n    emitter.emit('media:stopped', this.id)\n  }\n\n  /**\n   * Clean-up the Media object by stopping all Tracks and removing any rendered media.\n   * @method cleanup\n   */\n  function cleanup () {\n    getTracks().forEach(track => {\n      track.cleanup()\n    })\n    emitter.emit('media:stopped', this.id)\n  }\n\n  /**\n   * Retrieve the list of Track object this this Media object manages.\n   * @method getTracks\n   * @return {Array} The list of Track objects.\n   */\n  function getTracks () {\n    return Array.from(tracks.values())\n  }\n\n  /**\n   * Retrieve a specific Track object from within the Media object.\n   * @method getTrack\n   * @param  {String} trackId ID of the Track to retrieve.\n   * @return {Track}\n   */\n  function getTrack (trackId) {\n    return tracks.get(trackId)\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    id,\n    tracks,\n    isLocal,\n    // Getter APIs.\n    getState,\n    getTracks,\n    getTrack,\n    // Create APIs.\n    addTrack,\n    // Render APIs.\n    renderIn,\n    removeFrom,\n    moveTo,\n    // Cleanup APIs.\n    stop,\n    cleanup,\n    // Event APIs.\n    on,\n    once,\n    off\n  }\n}\n","/*\n * Wrapper imports.\n * Events, methods, and properties that we want to wrap/add to the native Peer.\n */\nimport events from './events'\nimport methods from './methods'\nimport properties from './properties'\n\nimport { mergeValues } from '../utils'\nimport defaults from './config'\nimport { logManager } from '../logs'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\nimport { createTimer } from './utils/timer'\n\n/**\n * Create a Proxied Peer.\n * This Peer is a native PeerConnection that has had some new functionality\n *    added and some existing functionality \"augmented\". Where an event, a\n *    method, or a property has been defined (see folders), we intercept/add\n *    that functionality.\n * @method peer\n * @return {Peer}\n */\nexport default function peer (id, config = {}, trackManager) {\n  const log = logManager.getLogger('Peer', id)\n  config = mergeValues(defaults, config)\n  log.info('Creating new Peer.')\n\n  const iceTimer = createTimer()\n  const emitter = new EventEmitter()\n\n  // Create the native Peer.\n  log.debug('Creating native PeerConnection.', config.rtcConfig)\n  const nativePeer = new RTCPeerConnection(config.rtcConfig, { optional: [{ googDscp: true }] })\n\n  // Add the event emitter methods to the wrapped methods as well.\n  const customMethods = {\n    ...methods,\n    on: emitter.on.bind(emitter),\n    off: emitter.off.bind(emitter),\n    once: emitter.once.bind(emitter)\n  }\n\n  /**\n   * The Peer model.\n   * @typedef {Peer}\n   * @property {RTCPeerConnection} peer     The native PeerConnection.\n   * @property {string}            id       The unique identifier for the Peer.\n   * @property {boolean}           dtlsRole The DTLS role selected for this PeerConnection. Set after the initial negotiation is completed.\n   * @property {Object}            trackManager Manager that tracks all MediaStreamTracks.\n   * @property {Object}            log      Logger specific to this Peer.\n   * @property {Object}            iceTimer Timer tool (specifically for ICE collection).\n   * @property {EventEmitter}      emitter\n   * @property {Array<RTCIceCandidate>} iceCandidates Gathered candidates.\n   * @property {timeoutID} [iceLoop] Reference to the on-going ICE collection loop.\n   */\n  const base = {\n    nativePeer,\n    proxyPeer: undefined,\n    id,\n    dtlsRole: null,\n    config,\n    trackManager,\n    log,\n    iceTimer,\n    emitter,\n    iceCandidates: [],\n    iceLoop: undefined\n  }\n\n  /**\n   * Create the Proxy object that will be used as the PeerConnection.\n   *\n   * This will intercept all `get` and `set` operations and either forward them\n   *    directly to the real PeerConnection or to our wrapped operations.\n   * This allows us to shim part or all of the PeerConnection's API. We can\n   *    decide which operations we want to intercept while allowing others to\n   *    pass through unchanged.\n   */\n  base.proxyPeer = new Proxy(base, {\n    /**\n     * Intercept \"get\" calls on the Proxy.\n     * This function is called anytime a property on `base` is accessed,\n     *    eg. `base.someProp`\n     * @param {Object} target    base\n     * @param {string} prop      Property being accessed.\n     * @param {Object} receiver  The Proxy object.\n     */\n    get: function (target, prop, receiver) {\n      if (typeof base.nativePeer[prop] === 'function') {\n        /*\n         * If a function is being accessed, determine whether we want to\n         *    return the native function or our own.\n         */\n        if (Object.keys(customMethods).includes(prop)) {\n          // Return our wrapped version of the original function.\n          return customMethods[prop].bind(base)\n        } else {\n          // Return the original function, bound to have the original context.\n          return base.nativePeer[prop].bind(base.nativePeer)\n        }\n      } else if (customMethods[prop] && typeof customMethods[prop] === 'function') {\n        /*\n         * If a non-native function is being accessed, return our custom method.\n         * These are methods that are not on the native RTCPeerConnection\n         *    object, but we added to the old Peer model.\n         */\n        // TODO: Move all of this functionality to a higher level of abstraction.\n        return customMethods[prop].bind(base)\n      } else if (properties[prop]) {\n        /*\n         * If a PeerConnection property is being accessed, and we have a\n         *    wrapping for it, return our wrapper property.\n         */\n        if (typeof properties[prop] === 'function') {\n          // If our property wrapper is a function, call the function and return\n          //    the results.\n          return properties[prop].bind(base)()\n        } else {\n          // Otherwise, just return the original results.\n          return base.nativePeer[prop]\n        }\n      } else if (prop !== 'nativePeer' && base[prop]) {\n        /*\n         * If a Peer model property, other than the peer, is being accessed,\n         *    return it. The Peer model shouldn't have any properties that the\n         *    PeerConnection also has (to avoid conflicts).\n         */\n        return base[prop]\n      } else {\n        // Otherwise, return the property from the PeerConnection itself.\n        return base.nativePeer[prop]\n      }\n    },\n\n    /**\n     * Intercept \"set\" calls on the Proxy.\n     * This function is called anytime a property on `base` is assigned,\n     *    eg. `base.someProp = value`\n     * @method\n     * @param  {Object} target   base\n     * @param  {string} prop     Property being set.\n     * @param  {Any}    value    The value being set.\n     * @param  {Proxy}  receiver The Proxy object.\n     * @return {boolean}         Whether the assignment succeeded or not.\n     */\n    set: function (target, prop, value, receiver) {\n      if (events[prop]) {\n        // If a value is being set on one of our \"wrapped events\", then call\n        //    the \"event function\".\n        return events[prop].bind(base)(value)\n      } else if (prop === 'dtlsRole') {\n        /**\n         * Only allow the `dtlsRole` property of the Peer model be set. The\n         *    Session needs to be able to get/set this property, in the case\n         *    where it recreates the Peer multiple times, so it needs to set the\n         *    role to something specific.\n         * Reference: KAA-1816\n         */\n        base.dtlsRole = value\n        return true\n      } else {\n        // Otherwise, try to set the value on the native Peer.\n        return Reflect.set(base.nativePeer, prop, value)\n      }\n    }\n  })\n\n  /**\n   * For event debugging purposes, start with a dummy listener for every event.\n   *    This ensures our Proxy is listening for the events (in the case nothing\n   *    else is listening), so that debug information from the event wrappers\n   *    are logged.\n   */\n  for (const eventName in events) {\n    base.proxyPeer[eventName] = () => {}\n  }\n\n  return base.proxyPeer\n}\n","/**\n *\n * Util for emitting an event with the necessary peer information for the ice\n * collection scheduled check.\n * @method iceCollectionScheduledCheck\n * @param {Object} proxyBase The \"base\" of the Proxy Peer object.\n */\nexport default function iceCollectionScheduledCheck (proxyBase) {\n  const { proxyPeer, iceTimer, iceCandidates, emitter, config } = proxyBase\n\n  // The time, in milliseconds, that ICE collection has taken so far.\n  const elapsedTime = iceTimer.timeFromStart()\n\n  emitter.emit('scheduledCheck', {\n    iceCollectionDuration: elapsedTime,\n    iceCandidates,\n    iceGatheringState: proxyPeer.iceGatheringState,\n    rtcPeerConnectionConfig: config,\n    rtcLocalSessionDescription: proxyPeer.localDescription\n  })\n}\n","/**\n * Extracts the session ID from the SDP.\n * Session ID is located in the o= line.\n * Ref: https://tools.ietf.org/html/rfc4566#section-5.2\n * @method getSdpSessionId\n * @param  {string} sdp A valid SDP string.\n * @return {string} The SDP's session ID.\n */\nexport function getSdpSessionId (sdp) {\n  const oLine = sdp.match(/o=.*/gm)\n\n  if (oLine && oLine[0]) {\n    return oLine[0].split(' ')[1]\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { isEmpty, isPlainObject } from 'lodash/fp'\n\n/**\n * Helper function for formatting call actions.\n * @method callActionHelper\n * @param  {string} type Action type.\n * @param  {string} id Id of the call being acted on.\n * @param  {Object} [payload={}]\n * @param  {BasicError} [payload.error]\n * @param  {Object} [meta={}]\n * @return {Object} An action.\n */\nexport function callActionHelper (type, id, payload = {}, meta = {}) {\n  /**\n   * Call action format.\n   * Call actions are not FSA-compliant because there are cases where we need\n   *    to provide useful info (for the SDK) and an error object (for the app).\n   *    FSA would require the error object to be the entirety of the payload.\n   * @type {Object}\n   * {\n   *   type,\n   *   payload: {\n   *    ...usefulInfo,\n   *    errorObject\n   *   },\n   *   error,\n   *   meta\n   * }\n   */\n  const action = {\n    type,\n    payload: {\n      ...payload,\n      id\n    }\n  }\n  // Only have meta and error properties on the action if they're needed.\n  if (!isEmpty(meta)) {\n    action.meta = meta\n  }\n  if (payload.error) {\n    action.error = true\n  }\n  return action\n}\n\nexport function makeCall (id, options) {\n  return callActionHelper(actionTypes.MAKE_CALL, id, options)\n}\n\nexport function sessionCreated (id, params) {\n  return callActionHelper(actionTypes.SESSION_CREATED, id, params)\n}\n\nexport function pendingMakeCall (id, options) {\n  return callActionHelper(actionTypes.PENDING_MAKE_CALL, id, options)\n}\n\nexport function makeCallFinish (id, params) {\n  return callActionHelper(actionTypes.MAKE_CALL_FINISH, id, params)\n}\n\nexport function makeAnonymousCall (id, params) {\n  return {\n    type: actionTypes.MAKE_ANONYMOUS_CALL,\n    payload: {\n      id,\n      callee: params.callee,\n      credentials: params.credentials,\n      mediaConstraints: params.mediaConstraints,\n      callOptions: params.callOptions\n    }\n  }\n}\n\nexport function makeAnonymousCallFinish (id, params) {\n  return callActionHelper(actionTypes.MAKE_ANONYMOUS_CALL_FINISH, id, params)\n}\n\nexport function callIncoming (id, params) {\n  return callActionHelper(actionTypes.CALL_INCOMING, id, params)\n}\n\nexport function sendRingingFeedback (id) {\n  return callActionHelper(actionTypes.SEND_RINGING_FEEDBACK, id)\n}\n\nexport function sendRingingFeedbackFinish (id, params) {\n  return callActionHelper(actionTypes.SEND_RINGING_FEEDBACK_FINISH, id, params)\n}\n\nexport function callRinging (id, params) {\n  return callActionHelper(actionTypes.CALL_RINGING, id, params)\n}\n\nexport function sessionProgress (id, params) {\n  return callActionHelper(actionTypes.SESSION_PROGRESS, id, params)\n}\n\nexport function callCancelled (id, params) {\n  return callActionHelper(actionTypes.CALL_CANCELLED, id, params)\n}\n\nexport function answerCall (id, options) {\n  return callActionHelper(actionTypes.ANSWER_CALL, id, options)\n}\n\nexport function answerCallFinish (id, params, meta) {\n  return callActionHelper(actionTypes.ANSWER_CALL_FINISH, id, params, meta)\n}\n\nexport function rejectCall (id, options) {\n  return callActionHelper(actionTypes.REJECT_CALL, id, options)\n}\n\nexport function rejectCallFinish (id, params) {\n  return callActionHelper(actionTypes.REJECT_CALL_FINISH, id, params)\n}\n\nexport function callAccepted (id, params) {\n  return callActionHelper(actionTypes.CALL_ACCEPTED, id, params)\n}\n\nexport function ignoreCall (id, params) {\n  return callActionHelper(actionTypes.IGNORE_CALL, id, params)\n}\n\nexport function ignoreCallFinish (id, params) {\n  return callActionHelper(actionTypes.IGNORE_CALL_FINISH, id, params)\n}\n\nexport function endCall (id, params) {\n  return callActionHelper(actionTypes.END_CALL, id, params)\n}\n\nexport function endCallFinish (id, params) {\n  return callActionHelper(actionTypes.END_CALL_FINISH, id, params)\n}\n\nexport function holdCall (id, options) {\n  return callActionHelper(actionTypes.CALL_HOLD, id, options)\n}\n\nexport function holdCallFinish (id, params) {\n  return callActionHelper(actionTypes.CALL_HOLD_FINISH, id, params)\n}\n\nexport function unholdCall (id, options) {\n  return callActionHelper(actionTypes.CALL_UNHOLD, id, options)\n}\n\nexport function unholdCallFinish (id, params) {\n  return callActionHelper(actionTypes.CALL_UNHOLD_FINISH, id, params)\n}\n\nexport function setCustomParameters (id, customOptions) {\n  const action = {\n    type: actionTypes.SET_CUSTOM_PARAMETERS,\n    payload: {\n      id,\n      // customOptions can either be an array (i.e., just the headers) or an object (i.e., headers and body)\n      customParameters: isPlainObject(customOptions) ? customOptions.customParameters : customOptions,\n      customBodies: isPlainObject(customOptions) ? customOptions.customBodies : undefined\n    }\n  }\n  return action\n}\n\nexport function sendCustomParameters (id, options) {\n  return callActionHelper(actionTypes.SEND_CUSTOM_PARAMETERS, id, options)\n}\n\nexport function sendCustomParametersFinish (id, params) {\n  return callActionHelper(actionTypes.SEND_CUSTOM_PARAMETERS_FINISH, id, params)\n}\n\nexport function customParametersReceived (id, params) {\n  return callActionHelper(actionTypes.CUSTOM_PARAMETERS_RECEIVED, id, params)\n}\n\nexport function addMedia (id, params) {\n  return callActionHelper(actionTypes.ADD_MEDIA, id, params)\n}\n\nexport function addMediaFinish (id, params) {\n  return callActionHelper(actionTypes.ADD_MEDIA_FINISH, id, params)\n}\n\nexport function addBasicMedia (id, params) {\n  return callActionHelper(actionTypes.ADD_BASIC_MEDIA, id, params)\n}\n\nexport function removeMedia (id, params) {\n  return callActionHelper(actionTypes.REMOVE_MEDIA, id, params)\n}\n\nexport function removeMediaFinish (id, params) {\n  return callActionHelper(actionTypes.REMOVE_MEDIA_FINISH, id, params)\n}\n\nexport function removeBasicMedia (id, params) {\n  return callActionHelper(actionTypes.REMOVE_BASIC_MEDIA, id, params)\n}\n\nexport function renegotiate (id, params) {\n  return callActionHelper(actionTypes.RENEGOTIATE, id, params)\n}\n\nexport function renegotiateFinish (id, params) {\n  return callActionHelper(actionTypes.RENEGOTIATE_FINISH, id, params)\n}\n\nexport function sendDTMF (id, params) {\n  return callActionHelper(actionTypes.SEND_DTMF, id, params)\n}\n\nexport function sendDTMFFinish (id, params) {\n  return callActionHelper(actionTypes.SEND_DTMF_FINISH, id, params)\n}\n\nexport function getStats (id, params, deferred) {\n  const action = {\n    type: actionTypes.GET_STATS,\n    payload: {\n      ...params,\n      id\n    },\n    meta: {\n      deferred\n    }\n  }\n\n  return action\n}\n\nexport function getStatsFinish (id, params) {\n  return callActionHelper(actionTypes.GET_STATS_FINISH, id, params)\n}\n\nexport function forwardCall (id, params) {\n  return callActionHelper(actionTypes.FORWARD_CALL, id, params)\n}\n\nexport function forwardCallFinish (id, params) {\n  return callActionHelper(actionTypes.FORWARD_CALL_FINISH, id, params)\n}\n\nexport function consultativeTransfer (id, params) {\n  return callActionHelper(actionTypes.CONSULTATIVE_TRANSFER, id, params)\n}\n\nexport function pendingConsultativeTransfer (id, params) {\n  return callActionHelper(actionTypes.PENDING_CONSULTATIVE_TRANSFER, id, params)\n}\n\nexport function consultativeTransferFinish (id, params) {\n  return callActionHelper(actionTypes.CONSULTATIVE_TRANSFER_FINISH, id, params)\n}\n\nexport function directTransfer (id, params) {\n  return callActionHelper(actionTypes.DIRECT_TRANSFER, id, params)\n}\n\nexport function directTransferFinish (id, params) {\n  return callActionHelper(actionTypes.DIRECT_TRANSFER_FINISH, id, params)\n}\n\nexport function join (id, params) {\n  return callActionHelper(actionTypes.JOIN, id, params)\n}\n\nexport function joinStart (id, params) {\n  return callActionHelper(actionTypes.JOIN_START, id, params)\n}\n\nexport function pendingJoin (id, params) {\n  return callActionHelper(actionTypes.PENDING_JOIN, id, params)\n}\n\nexport function joinFinish (id, params) {\n  return callActionHelper(actionTypes.JOIN_FINISH, id, params)\n}\n\nexport function replaceTrack (id, params) {\n  return callActionHelper(actionTypes.REPLACE_TRACK, id, params)\n}\n\nexport function replaceTrackFinish (id, params) {\n  return callActionHelper(actionTypes.REPLACE_TRACK_FINISH, id, params)\n}\n\nexport function pendingOperation (id, params) {\n  return callActionHelper(actionTypes.PENDING_OPERATION, id, params)\n}\n\nexport function getAvailableCodecs (params, deferred) {\n  const action = {\n    type: actionTypes.GET_AVAILABLE_CODECS,\n    payload: {\n      ...params\n    },\n    meta: {\n      deferred\n    }\n  }\n  return action\n}\n\nexport function availableCodecsRetrieved (params) {\n  return callActionHelper(actionTypes.AVAILABLE_CODECS_RETRIEVED, undefined, params)\n}\n\n/*\n * Remote operations.\n */\n\nexport function remoteHoldFinish (id, params) {\n  return callActionHelper(actionTypes.CALL_REMOTE_HOLD_FINISH, id, params)\n}\n\nexport function remoteUnholdFinish (id, params) {\n  return callActionHelper(actionTypes.CALL_REMOTE_UNHOLD_FINISH, id, params)\n}\n\nexport function remoteAddMediaFinish (id, params) {\n  return callActionHelper(actionTypes.REMOTE_ADD_MEDIA_FINISH, id, params)\n}\n\nexport function remoteRemoveMediaFinish (id, params) {\n  return callActionHelper(actionTypes.REMOTE_REMOVE_MEDIA_FINISH, id, params)\n}\n\nexport function remoteStartMohFinish (id, params) {\n  return callActionHelper(actionTypes.REMOTE_START_MOH_FINISH, id, params)\n}\n\nexport function remoteStopMohFinish (id, params) {\n  return callActionHelper(actionTypes.REMOTE_STOP_MOH_FINISH, id, params)\n}\n\nexport function remoteSlowStart (id, params) {\n  return callActionHelper(actionTypes.REMOTE_SLOW_START, id, params)\n}\n\nexport function restartMedia (id, params) {\n  return callActionHelper(actionTypes.MEDIA_RESTART, id, params)\n}\n\nexport function restartMediaFinish (id, params) {\n  return callActionHelper(actionTypes.MEDIA_RESTART_FINISH, id, params)\n}\n\n// Generic action.\nexport function updateCall (id, params) {\n  return callActionHelper(actionTypes.UPDATE_CALL, id, params)\n}\n","import * as actionTypes from './actionTypes'\n\nvar nextRequestId = 0\nfunction generateRequestId () {\n  return nextRequestId++\n}\n\n/**\n * Creates a request action.\n * @param {Object} options\n * @param {string} options.url The url for the request\n * @param {Object} [options.queryParams] Query parameters to be added to the url string\n * @param {string} [options.responseType] The data type assumed to be received in the response body\n * @param {Blob|BufferSource|FormData|UrlSearchParams|string} [options.body] The request body\n */\nexport function request (options) {\n  return {\n    type: actionTypes.REQUEST,\n    payload: options,\n    meta: {\n      requestId: generateRequestId()\n    }\n  }\n}\n\n/**\n * Creates a response action.\n */\nexport function response (requestId, result, error = false) {\n  return {\n    type: actionTypes.RESPONSE,\n    payload: result,\n    error,\n    meta: {\n      requestId: requestId\n    }\n  }\n}\n\n/**\n * Action to signify a REST request has encountered an authorization error.\n * @param  {BasicError} error\n * @return {Action}\n */\nexport function authorizationError (error) {\n  return {\n    error: true,\n    type: actionTypes.AUTHORIZATION_ERROR,\n    payload: error\n  }\n}\n","// Other plugins.\nimport { getRequestInfo } from '../../../auth/interface/selectors'\n\n// Helpers.\nimport request from '../../../request/effects'\nimport { handleRequestError } from '../../../common/helpers'\nimport { platforms } from '../../../constants'\n\n// Libraries.\nimport { select, call } from 'redux-saga/effects'\n\n/**\n * Creates a webRTC session on the server. CPaaS-specific signalling function.\n *\n * This saga \"starts a call\" between the current user and another, specified\n *    user.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method createSession\n * @param  {Object} callInfo\n * @param  {string} callInfo.participantAddress The user to receive the call.\n * @param  {string} callInfo.offer The local SDP offer to begin negotiation.\n * @param  {string} [callInfo.displayName] A custom display name to use. Not supported in all environments and may use default display name.\n * @return {Object} response Signalling response.\n * @return {string} [response.wrtcsSessionId] ID that the server uses to track this call.\n * @return {Object} [response.error] An error object, if signalling failed.\n */\nexport function * createSession (callInfo) {\n  // Collect the information needed to make the request.\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  const requestBody = {\n    wrtcsSession: {\n      clientCorrelator: requestInfo.clientCorrelator,\n      tParticipantAddress: callInfo.participantAddress,\n      offer: {\n        sdp: callInfo.offer\n      }\n    }\n  }\n  if (callInfo.displayName) {\n    // Default backend configuration does not support this\n    //  so remote side might see default display name instead.\n    // Backend needs to be configured to allow a custom display name.\n    requestBody.wrtcsSession.tParticipantName = callInfo.displayName\n  }\n  const requestOptions = {\n    method: 'POST',\n    url: `${requestInfo.baseURL}/cpaas/webrtcsignaling/${requestInfo.version}/${requestInfo.username}/sessions`,\n    body: JSON.stringify(requestBody)\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Create session')\n    }\n  } else {\n    const sessionInfo = response.payload.body.wrtcsSession\n    return {\n      error: false,\n      wrtcsSessionId: sessionInfo.resourceURL.split('sessions/')[1]\n    }\n  }\n}\n\n/**\n * Updates a webRTC session on the server with an answer.\n * CPaaS-specific signaling function.\n *\n * This saga \"answers a call\" from another user.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method answerSession\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId ID that the server uses to identify the session.\n * @param  {string} callInfo.answer The local SDP to complete negotiation. This may be an offer is performing slow start answer.\n * @return {Object} response Signalling response.\n * @return {Object} [response.error] An error object, if signalling failed.\n */\nexport function * answerSession (callInfo) {\n  // Collect the information needed to make the request.\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  const requestOptions = {\n    method: 'PUT',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `webrtcsignaling/${requestInfo.version}/${requestInfo.username}/` +\n      `sessions/${callInfo.wrtcsSessionId}/answer`,\n    body: JSON.stringify({\n      wrtcsAnswer: {\n        clientCorrelator: requestInfo.clientCorrelator,\n        sdp: callInfo.answer\n      }\n    })\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Answer session')\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Forwards an incoming session to another destination address.\n * Cpaas-specific signaling function.\n *\n * This saga \"forwards\" the server session to a specified destination address.\n * Assumptions:\n *    1. The current user is authenticated.\n *    2. There is an incoming session.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method forwardSession\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @param  {string} callInfo.address The address to forward the session to.\n * @return {Object} response Signalling response.\n * @return {Object} response.error An error object, if signalling failed.\n */\nexport function * forwardSession (callInfo) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  const options = {\n    method: 'PUT',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `webrtcsignaling/${requestInfo.version}/${requestInfo.username}` +\n      `/sessions/${callInfo.wrtcsSessionId}/forward`,\n    body: JSON.stringify({\n      wrtcsForward: {\n        clientCorrelator: requestInfo.clientCorrelator,\n        address: callInfo.address\n      }\n    })\n  }\n\n  const response = yield request(options)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Forward session')\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Direct Transfers an incoming session to another destination address.\n * Cpaas-specific signaling function.\n *\n * This saga \"direct transfers\" the server session to a specified destination address.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method directTransferSession\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @param  {string} callInfo.address The address to forward the session to.\n * @return {Object} response object from the server.\n * @return {Object} [response.error] An error object, if signalling failed.\n */\nexport function * directTransferSession (callInfo) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  const options = {\n    method: 'PUT',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `webrtcsignaling/${requestInfo.version}/${requestInfo.username}` +\n      `/sessions/${callInfo.wrtcsSessionId}/transfer`,\n    body: JSON.stringify({\n      wrtcsTransfer: {\n        clientCorrelator: requestInfo.clientCorrelator,\n        address: callInfo.address\n      }\n    })\n  }\n\n  const response = yield request(options)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Direct transfer session')\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Transfers ongoing sessions into one another.\n * CPaaS-specific signaling function.\n *\n * This saga \"transfers\" the server sessions.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method consultativeTransferSessions\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @param  {string} callInfo.otherWrtcsSessionId The ID the backend uses to track the other session.\n * @param  {string} callInfo.destination The address of the other session to transfer to.\n * @return {Object} response object from the server.\n * @return {Object} [response.error] An error object, if signalling failed.\n * @return {string} [response.newWrtcsSessionId] The back-end session id, if signalling succeeded.\n */\nexport function * consultativeTransferSessions (callInfo) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  const options = {\n    method: 'PUT',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `webrtcsignaling/${requestInfo.version}/${requestInfo.username}` +\n      `/sessions/${callInfo.wrtcsSessionId}/transfer`,\n    body: JSON.stringify({\n      wrtcsTransfer: {\n        clientCorrelator: requestInfo.clientCorrelator,\n        address: callInfo.destination,\n        sessionId: callInfo.otherWrtcsSessionId\n      }\n    })\n  }\n\n  const response = yield request(options)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Consultative transfer session')\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Fetch a set of TURN credentials.\n * @method fetchCredentials\n * @param  {Object} requestInfo\n */\nexport function * fetchCredentials (requestInfo) {\n  const requestOptions = {\n    method: 'POST',\n    url: `${requestInfo.baseURL}/cpaas/` + `webrtcsignaling/${requestInfo.version}/${requestInfo.username}/` + 'turn',\n    body: JSON.stringify({\n      wrtcsTurnCredentials: {\n        clientCorrelator: requestInfo.clientCorrelator\n      }\n    })\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Fetch credentials')\n    }\n  } else {\n    return response.payload.body.wrtcsTurnCredentials\n  }\n}\n\n/**\n * Updates an existing webRTC session on the server.\n * CPaaS-specific signalling function.\n *\n * This saga \"updates a session\" between the current user and another, specified\n *    user.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method updateSession\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId The ID the backend uses to track the session.\n * @param  {string} callInfo.offer The local SDP offer to begin negotiation.\n * @return {Object} response Signalling response.\n * @return {Object} response.error An error object, if signalling failed.\n */\nexport function * updateSession (callInfo) {\n  // Collect the information needed to make the request.\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  const requestOptions = {\n    method: 'PUT',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `webrtcsignaling/${requestInfo.version}/${requestInfo.username}/` +\n      `sessions/${callInfo.wrtcsSessionId}/update`,\n    body: JSON.stringify({\n      wrtcsOffer: {\n        clientCorrelator: requestInfo.clientCorrelator,\n        sdp: callInfo.offer\n      }\n    })\n  }\n\n  const response = yield request(requestOptions)\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Update session')\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Updates a webRTC session on the server with a new state.\n * CPaaS-specific signaling function.\n *\n * The saga updates the server's session to be in a provided state. This can be\n *    used for multiple purposes, such as to indicate ringing or as call audit.\n * Assumptions:\n *    1. The current user is authenticated.\n * Responsibilities:\n *    1. Format parameters as needed for signalling.\n *    2. Perform the REST request.\n *    3. Return the response, formatted.\n * @method updateSessionStatus\n * @param  {Object} callInfo\n * @param  {string} callInfo.wrtcsSessionId ID that the server uses to identify the session.\n * @param  {string} status   The status to put the server session into.\n * @return {Object} response Signalling response.\n * @return {Object} [response.error] An error object, if signalling failed.\n */\nexport function * updateSessionStatus (callInfo, status) {\n  // Collect the information needed to make the request.\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  const requestOptions = {\n    method: 'PUT',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `webrtcsignaling/${requestInfo.version}/${requestInfo.username}/` +\n      `sessions/${callInfo.wrtcsSessionId}/status`,\n    body: JSON.stringify({\n      wrtcsSessionStatus: {\n        clientCorrelator: requestInfo.clientCorrelator,\n        status\n      }\n    })\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    // Assume for most of errors we can retry..\n    let statusVal = 'Retry'\n\n    if (response.payload.result && response.payload.result.code === 404) {\n      // We got a 404 'Not found' error. In this case we can safely assume status is Closed. No need to keep retrying...\n      statusVal = 'Closed'\n    }\n    return {\n      error: handleRequestError(response, 'Session Status Update'),\n      status: statusVal\n    }\n  } else {\n    return {\n      error: false,\n      status: response.payload.body.wrtcsSessionStatus.status\n    }\n  }\n}\n\n/**\n * REST request to end a webRTC session.\n * @method endSession\n * @param  {Object} callInfo\n * @param  {Object} callInfo.wrtcsSessionId ID that the server uses to identify the session.\n * @return {Object} response Signalling response.\n * @return {Object} [response.error] An BasicError object, if signalling failed.\n */\nexport function * endSession (callInfo) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `webrtcsignaling/${requestInfo.version}/${requestInfo.username}/` +\n      `sessions/${callInfo.wrtcsSessionId}`\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'End session')\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * REST request to reject a webRTC session. (Same as ending a webRTC session)\n * @method rejectSession\n * @param  {Object} callInfo\n * @param  {Object} callInfo.wrtcsSessionId ID that the server uses to identify the session.\n * @return {Object} response Signalling response.\n * @return {Object} [response.error] An BasicError object, if signalling failed.\n */\nexport function * rejectSession (callInfo) {\n  return yield call(endSession, callInfo)\n}\n","/**\n * Checks whether the bandwidth controls provided exist and are numbers.\n * @param {BandwidthControls} bandwidthControls The bandwidth controls to check.\n */\nexport function checkBandwidthControls (bandwidthControls) {\n  const finalBandwidthControls = { ...bandwidthControls }\n\n  // If there are no bandwidth limits set or the bandwidth limits provided are not numbers, set them to undefined\n  if (!bandwidthControls || !(bandwidthControls.audio && typeof bandwidthControls.audio === 'number')) {\n    finalBandwidthControls.audio = null\n  }\n  if (!bandwidthControls || !(bandwidthControls.video && typeof bandwidthControls.video === 'number')) {\n    finalBandwidthControls.video = null\n  }\n  return finalBandwidthControls\n}\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","/**\n * Maps media tracks with the dscpControls provided to ensure the correct senders are set up with the\n * proper networkPriority\n * @param {Array<Track>} audioTracks The list of audio tracks\n * @param {Array<Track>} videoTracks The list of video tracks\n * @param {Array<Track>} screenTracks The list of screen tracks\n * @param {Object} dscpControls The DSCP controls provided\n * @return {Object} An object map of track: dscpSetting for all applicable tracks\n */\nexport function getTrackDscpMapping (audioTracks, videoTracks, screenTracks, dscpControls) {\n  const dscpTrackMapping = {}\n  if (dscpControls) {\n    if (dscpControls.screenNetworkPriority) {\n      for (const screenTrack of screenTracks) {\n        dscpTrackMapping[screenTrack.id] = dscpControls.screenNetworkPriority\n      }\n    }\n    if (dscpControls.audioNetworkPriority) {\n      for (const audioTrack of audioTracks) {\n        dscpTrackMapping[audioTrack.id] = dscpControls.audioNetworkPriority\n      }\n    }\n    if (dscpControls.videoNetworkPriority) {\n      for (const videoTrack of videoTracks) {\n        dscpTrackMapping[videoTrack.id] = dscpControls.videoNetworkPriority\n      }\n    }\n  }\n\n  return dscpTrackMapping\n}\n","import { logManager } from '../../logs'\nimport BasicError, { callCodes } from '../../errors'\n\n// Libraries.\nimport { call } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('CALLSTACK')\n\n/**\n * Use the WebRTC stack to create a local Media object.\n * @method createLocal\n * @param  {Object} webRTC           The WebRTC stack.\n * @param  {Object} mediaConstraints The native gUM constraints.\n * @return {Object} Results object, with either `media` or `error` property.\n */\nexport function * createLocal (webRTC, mediaConstraints) {\n  log.debug('Getting media with constraints: ', mediaConstraints)\n\n  // Default return values.\n  const result = { medias: [], error: false }\n\n  try {\n    if (mediaConstraints.screenShare) {\n      const screenShareConstraints = {\n        video: mediaConstraints.screenShare\n      }\n\n      const screenShareMedia = yield call([webRTC.media, 'createLocalScreen'], screenShareConstraints)\n      result.medias.push({\n        type: 'screen',\n        media: screenShareMedia\n      })\n    }\n\n    if (mediaConstraints.audio) {\n      const audioConstraints = {\n        audio: mediaConstraints.audio\n      }\n      const audioMedia = yield call([webRTC.media, 'createLocal'], audioConstraints)\n      result.medias.push({\n        type: 'audio',\n        media: audioMedia\n      })\n    }\n\n    if (mediaConstraints.video) {\n      const videoConstraints = {\n        video: mediaConstraints.video\n      }\n      const videoMedia = yield call([webRTC.media, 'createLocal'], videoConstraints)\n      result.medias.push({\n        type: 'video',\n        media: videoMedia\n      })\n    }\n  } catch (err) {\n    let errMessage\n    if (err.name === 'OverconstrainedError') {\n      errMessage = `Failed to get media due to constraint: ${err.constraint}.`\n    } else {\n      errMessage = `Failed to get media => Name: ${err.name}; Error Message :${err.message}.`\n    }\n\n    log.info(errMessage)\n\n    // Clean up successful media object when there is partial media failure.\n    for (const eachMedia of result.medias) {\n      yield call([eachMedia.media, 'stop'])\n    }\n\n    result.error = new BasicError({\n      message: errMessage,\n      code: callCodes.USER_MEDIA_ERROR\n    })\n  }\n\n  return result\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/object/entries\"), __esModule: true };","const name = 'connectivity'\nexport default name\n","// Connectivity.\nimport { wsAttemptConnect, wsDisconnect } from './actions'\nimport { WS_CONNECT_FINISHED, WS_DISCONNECT_FINISHED, WS_ERROR } from './actionTypes'\nimport { getConnectionState } from './selectors'\n\n// Other plugins.\nimport { getPlatform } from '../../auth/interface/selectors'\nimport { UNSUBSCRIBE_FINISHED } from '../../subscription/interface/actionTypes'\n\n// Libraries.\nimport { delay, put, race, select, take } from 'redux-saga/effects'\n\n/**\n * Custom redux-saga effect.\n * Wraps \"communication\" between the connectivity plugin and another plugin\n *     for connecting to a websocket.\n * @method connectWebsocket\n * @param {Object} websocketInfo Information needed to create the websocket.\n * @param {string} websocketInfo.protocol\n * @param {string} websocketInfo.server\n * @param {string} websocketInfo.port\n * @param {string} websocketInfo.url\n * @param {Object} [websocketInfo.params]\n * @param {string} platform The backend platform being connected to.\n * @return {Object} The response action of type `WS_CONNECT_FINISHED`.\n */\nexport function * connectWebsocket (websocketInfo, platform) {\n  // Dispatch the action that triggers a saga to connect to a websocket.\n  yield put(wsAttemptConnect(websocketInfo, platform))\n\n  // Wait for the action that signifies the result of the above action.\n  const responseAction = yield take(action => {\n    return action.type === WS_CONNECT_FINISHED && action.meta.platform === platform\n  })\n\n  // Return the response.\n  return responseAction\n}\n\n/**\n * Effect for disconnecting a websocket to a platform.\n * @method disconnectWebsocket\n * @param  {Object} payload\n * @param  {string} platform The backend platform being disconnected from.\n * @return {Object} The response action of type `WS_DISCONNECT_FINISHED`.\n */\nexport function * disconnectWebsocket (payload, platform) {\n  // Dispatch the action that triggers a saga to disconnect the websocket.\n  yield put(wsDisconnect(payload, platform))\n\n  // Wait for the action that signifies the result of the above action.\n  const responseAction = yield take(action => {\n    return (action.type === WS_DISCONNECT_FINISHED || action.type === WS_ERROR) && action.meta.platform === platform\n  })\n\n  // Return the response.\n  return responseAction\n}\n\n/**\n * Effect for waiting for the websocket / subscription to reconnect.\n * Assumption is that the websocket is in the middle of reconnect attempts. This\n *    is why the timeout is so long; one of the two scenarios should be guaranteed\n *    to happen before then.\n * @param {number} timeout The time, in milliseconds, to wait before timing out.\n * @return {boolean} Whether the websocket has reconnected or not.\n */\nexport function * waitForReconnect (timeout = 60000) {\n  const platform = yield select(getPlatform)\n  const { connected: isConnected } = yield select(getConnectionState, platform)\n\n  if (isConnected) {\n    return true\n  }\n\n  const { reconnected } = yield race({\n    // If websocket reconnects, then we're reconnected (...duh).\n    reconnected: take(action => action.type === WS_CONNECT_FINISHED && !action.error),\n    // If the user unsubscribes (ie. ws reconnect fails), then we're disconnected.\n    disconnected: take(action => action.type === UNSUBSCRIBE_FINISHED && !action.error),\n    timeout: delay(timeout)\n  })\n\n  return Boolean(reconnected)\n}\n","// Call plugin.\nimport { getCallById } from '../../../call/interfaceNew/selectors'\nimport { CALL_STATES } from '../../constants'\n\n// Other plugins.\nimport BasicError, { callCodes } from '../../../errors'\n\n// Libraries.\nimport { call, select } from 'redux-saga/effects'\nimport { difference, isArray, isObject } from 'lodash/fp'\n\n/**\n * Helper function for sagas that need to perform an operation\n *    on a webRTC session. Checks for common \"error scenarios\".\n * Retrieves information about a \"session\" associated with the\n *    provided call id. \"Session info\" includes the call state\n *    object and webRTC stack session object. Includes an error\n *    if the session is not \"usable\".\n * @method getSessionInfoByCallId\n * @param  {Object} webRTC The webRTC stack.\n * @param  {string} callId The ID of the call.\n * @return {Object} An object with session, targetCall, and/or error objects.\n * @example\n * const callId = action.payload.id\n * const { session, targetCall, error } = yield call(getSessionInfoByCallId, webRTC, callId)\n *\n * if (error) {\n *  // Handle session not being retrievable / common error scenarios.\n * } else if (...) {\n *   // Check for specific error scenarios.\n * } else {\n *   // Operate on session.\n * }\n */\nexport function * getSessionInfoByCallId (webRTC, callId) {\n  const targetCall = yield select(getCallById, callId)\n\n  if (!targetCall) {\n    return {\n      error: new BasicError({\n        message: 'Call state not found: invalid call ID.',\n        code: callCodes.INVALID_PARAM\n      })\n    }\n  } else if (targetCall.state === CALL_STATES.ENDED) {\n    return {\n      targetCall,\n      error: new BasicError({\n        message: 'Call is wrong state: call is already ended.',\n        code: callCodes.INVALID_STATE\n      })\n    }\n  } else if (!targetCall.webrtcSessionId) {\n    return {\n      targetCall,\n      error: new BasicError({\n        message: 'State issue: Call has no webrtcSessionId.',\n        code: callCodes.STATE_DESYNC\n      })\n    }\n  }\n\n  const session = yield call([webRTC.sessionManager, 'get'], targetCall.webrtcSessionId)\n\n  if (!session) {\n    return {\n      targetCall,\n      error: new BasicError({\n        message: 'Session not found: no active webRTC session for call.',\n        code: callCodes.STATE_DESYNC\n      })\n    }\n  }\n\n  return { targetCall, session }\n}\n\n/**\n * Helper function: Check that the call is in an expected state.\n * @method validateCallState\n * @param  {string} callId ID for the call to validate.\n * @param  {Object} expected  Properties that the call state is expected to have.\n * @return {BasicError}\n */\nexport function * validateCallState (callId, expected) {\n  /**\n   * Checks whether set is contained within whole.\n   * Tracks which properties of set are not the same as whole.\n   * @method isSubsetOf\n   * @param  {Object} set\n   * @param  {Object} whole\n   * @return {Array} List of set properties that are not the same as whole.\n   */\n  function isSubsetOf (set, whole) {\n    const differences = []\n    // Ensure that each property in the set is also part of the whole.\n    for (const prop in set) {\n      if (isArray(set[prop])) {\n        // Compare arrays.\n        if (difference(set[prop], whole[prop]).length > 0) {\n          differences.push(prop)\n        }\n      } else if (isObject(set[prop])) {\n        // Compare objects (recursively).\n        if (isSubsetOf(set[prop], whole[prop]).length > 0) {\n          // Don't recursively add to differences.\n          differences.push(prop)\n        }\n      } else {\n        // Compare everything else.\n        if (set[prop] !== whole[prop]) {\n          differences.push(prop)\n        }\n      }\n    }\n\n    return differences\n  }\n\n  const targetCall = yield select(getCallById, callId)\n\n  // Ensure the call state exists.\n  if (!targetCall) {\n    return new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  }\n\n  // Check whether the expected properties are a subset of the call properties.\n  const differences = isSubsetOf(expected, targetCall)\n\n  if (differences.length === 0) {\n    return false\n  } else {\n    const enumerateDiffs = source => differences.map(item => `${item}=${source[item]}`).join(', ')\n    const bad = enumerateDiffs(targetCall)\n    const good = enumerateDiffs(expected)\n    const message = `Call is in an invalid state: ${bad}. It should be: ${good}.`\n\n    return new BasicError({\n      code: callCodes.INVALID_STATE,\n      message\n    })\n  }\n}\n\n/**\n * SDP handler function that should be passed into session object's `processOffer` and `processAnswer` function.\n * This function disables old media encryption method SDES (Modifies sdp by removing crypto).\n * However, if only SDES is available, don't disable it.\n * @method sanitizeSdesFromSdp\n * @param {Object} newSdp The sdp so far (could have been modified by previous handlers).\n * @param {Object} info Information about the session description.\n * @param {RTCSdpType} info.type The session description's type.\n * @param {string} info.step The step that will occur after the Pipeline is run.\n * @param {string} info.endpoint Which end of the connection created the SDP.\n * @param {Object} originalSdp The sdp in its initial state.\n * @return {Object} The sanitized sdp with crypto removed (if fingerprint exists)\n */\nexport function sanitizeSdesFromSdp (newSdp, info, originalSdp) {\n  for (const mLine of newSdp.media) {\n    if (mLine.crypto && mLine.fingerprint) {\n      delete mLine.crypto\n    }\n  }\n  return newSdp\n}\n","/*\n * Compare Media / SDP.\n *\n * These functions aim to determine how a Webrtc operation changed a\n *    PeerConnection's (local) SDP. It does this by comparing two SDPs from the\n *    same PeerConnection, one from before and one from after the operation.\n * The output (a `MediaDiff` object) is a description of how each media\n *    section of the SDP was changed by the operation.\n *\n * This file examines the SDP/media from a webrtc/SDP level, not from a call/SDK\n *    level.\n */\n\n// Other plugins.\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport sdpTransform from 'sdp-transform'\n\nconst log = logManager.getLogger('SDP')\n\n/**\n * Description of how a media line changes from one SDP to the next.\n * @typedef {string} MediaTransition\n */\n\n/**\n * The possible values for media transitions.\n * @enum {MediaTransition}\n */\nexport const MEDIA_TRANSITIONS = {\n  START: 'START',\n  STOP: 'STOP',\n  SAME: 'SAME'\n}\n\n/**\n * Compare two SDPs to determine the differences in their media sections.\n * The SDPs need to have been created by the same source.\n * @method compareSdp\n * @param  {string}  prevSdpString A previous SDP.\n * @param  {string}  sdpString     A new SDP.\n * @param  {boolean} [isNaive=false] Whether to match media sections naively.\n * @return {MediaDiff}\n */\nexport default function compareMedia (prevSdpString, sdpString, isNaive = false) {\n  // Parse the SDP string into an SDP object for easier handling.\n  const prevSdp = sdpTransform.parse(prevSdpString)\n  const sdp = sdpTransform.parse(sdpString)\n\n  // Take out only the parts of the SDP that we are interested in.\n  //    Each \"media\" relates to a media section of the SDP.\n  const prevMedia = summarizeMedia(prevSdp)\n  const currMedia = summarizeMedia(sdp)\n\n  let sortedMedia\n  if (isNaive) {\n    // Match the medias naively, instead of guaranteeing they are\n    //    the same media section.\n    sortedMedia = naiveMatchMedias(prevMedia, currMedia)\n  } else {\n    sortedMedia = matchMedias(prevMedia, currMedia)\n  }\n\n  // Media found in the previous SDP but not the latest SDP were removed.\n  const removed = sortedMedia.prevUnmatched\n  // Media found in the latest SDP but not the previous SDP were added.\n  const added = sortedMedia.currUnmatched\n\n  // Media found in both SDPs may have been changed.\n  const changed = []\n  const unchanged = []\n\n  sortedMedia.matched.forEach(({ previous, current }) => {\n    const changes = compareSummary(previous, current)\n\n    if (changes.sending === MEDIA_TRANSITIONS.SAME && changes.receiving === MEDIA_TRANSITIONS.SAME) {\n      // No changes.\n      unchanged.push(previous)\n    } else {\n      // Changes. Include both the media summary and the changes found.\n      /**\n       * Description of how a media line changed, with the latest summary.\n       * @typedef  {Object}       ChangedMedia\n       * @property {MediaSummary} media        The new summary of the media section.\n       * @property {MediaChanges} changes      The changes that occurred to the media.\n       */\n      changed.push({ media: current, changes })\n    }\n  })\n\n  /**\n   * The computed differences of media sections between two SDPs.\n   * @typedef  {Object}              MediaDiff\n   * @property {Array<MediaSummary>} added     Media sections that are new in the latest SDP.\n   * @property {Array<MediaSummary>} removed   Media sections that are missing in the latest SDP.\n   * @property {Array<ChangedMedia>} changed   Media changes between the two SDPs.\n   * @property {Array<MediaSummary>} unchanged Media sections that remained the same.\n   */\n  return {\n    added,\n    removed,\n    changed,\n    unchanged\n  }\n}\n\n/**\n * Reduce the media information in the SDP to only what we will use.\n * The SDP object provided as input is assumed to use standard values.\n *\n * Only supports SDPs where there is only one track per media section.\n *    eg. Plan-B when there is max 1 track per media type, and Unified-Plan (?).\n *\n * @method summarizeMedia\n * @param  {Object} sdp The full SDP object.\n * @return {Array<MediaSummary>} Summarized media sections from the SDP.\n */\nexport function summarizeMedia (sdp) {\n  const sdpMedia = []\n  sdp.media.forEach(media => {\n    /*\n     * Generate/Find a unique ID for this media section. This will be used to\n     *    compare against another SDP's media sections to find matching\n     *    sections.\n     */\n    const sectionId = media.mid\n\n    if (media.ssrcGroups && media.ssrcGroups.length > 1) {\n      /*\n       * All of the logic in this file assumes that a media section only has 1\n       *    track. If there are more than one, it means that we are using\n       *    Plan-B with more than 1 track of the same media type, which is not\n       *    something that we want to support.\n       */\n      log.debug(`Media section contains multiple ssrc groups. Summary for ${sectionId} will be wrong.`)\n    }\n\n    // If the media section doesn't have a direction, then use the session-level direction.\n    const mediaDirection = media.direction || sdp.direction\n\n    // Whether this media section is sending and/or receiving.\n    let willSend\n    let willReceive\n\n    if (mediaDirection) {\n      willSend = mediaDirection.includes('send')\n      willReceive = mediaDirection.includes('recv')\n    } else {\n      // If there is no media direction attribute at both the media-level and\n      //    session-level, then it is to be assumed the direction is \"sendrecv\".\n      // Ref: RFC 4566, page 26: https://tools.ietf.org/html/rfc4566\n      willSend = true\n      willReceive = true\n    }\n\n    let mediaId, trackId\n    /*\n     * If the media section is sending, then it has information about the track\n     *    that it is sending.\n     *\n     * Note: The media section will never have information about a track it is\n     *    receiving (ie. willReceive), because the SDP only describes the\n     *    \"local\" PeerConnection's situation.\n     */\n    if (willSend) {\n      /**\n       * The SDP should either have a `msid` property (a=msid line) or `ssrc`\n       *    lines with the same information (`a=ssrc:... label:...` and\n       *    `a=ssrc:... mslabel:...`).\n       * If it has nethier, then the SDP says it wants to send a track, but it\n       *    has no track to send.\n       */\n      if (media.msid) {\n        ;[mediaId, trackId] = media.msid.split(' ')\n      } else if (media.ssrcs) {\n        mediaId = media.ssrcs.find(ssrc => ssrc.attribute === 'mslabel').value\n        trackId = media.ssrcs.find(ssrc => ssrc.attribute === 'label').value\n      }\n    } else {\n      // This media section is not sending a track, so there is no information.\n      mediaId = undefined\n      trackId = undefined\n    }\n\n    /**\n     * Summarized information about a media section from an SDP.\n     * @typedef  {Object}  MediaSummary\n     * @property {string}  sectionId   A unique identifier for the media section.\n     * @property {string}  type        The type of media line.\n     * @property {boolean} willSend    Whether the media will send data.\n     * @property {boolean} willReceive Whether the media will receive data.\n     * @property {string}  mediaId     The MediaStream ID of the media.\n     * @property {string}  trackId     The MediaStreamTrack ID of the media.\n     */\n    const summary = {\n      sectionId,\n      type: media.type,\n      willSend,\n      willReceive,\n      mediaId,\n      trackId\n    }\n\n    sdpMedia.push(summary)\n  })\n  return sdpMedia\n}\n\n/**\n * Matches MediaSummary objects between two lists of media.\n *    Finds matches between the lists based on the media's sectionId.\n *    If sectionId is undefined (rare cases), matches based on stream/track Ids.\n * Returns a list of matching medias, and a list of unmatched medias for both\n *    previous and current lists.\n * @param  {Array<MediaSummary>} prevList List of previous media summaries.\n * @param  {Array<MediaSummary>} currList List of current media summaries.\n * @return {Object} Three lists of matched, prevUnmmatched, and currUnmatched.\n */\nexport function matchMedias (prevList, currList) {\n  // Redeclare these lists so we don't modify the originals.\n  const prev = [...prevList]\n  const curr = [...currList]\n\n  const prevUnmatched = []\n  let currUnmatched = []\n  const matched = []\n\n  // Function for matching a single media object to another object from a list.\n  //    Matches by sectionId.\n  const findMatchingSectionId = function (prevM, mediaList) {\n    return mediaList.findIndex(media => media.sectionId === prevM.sectionId)\n  }\n  // Function for matching a single media object to another object from a list.\n  //    Matches by media/track ID.\n  const findMatchingMediaIds = function (prevM, mediaList) {\n    return mediaList.findIndex(media => {\n      return (\n        // One or both of the sectionIds should be undefined, otherwise we shouldn't\n        //    be matching with the media/track ID.\n        (typeof prevM.sectionId === 'undefined' || typeof media.sectionId === 'undefined') &&\n        prevM.mediaId === media.mediaId &&\n        prevM.trackId === media.trackId\n      )\n    })\n  }\n\n  /*\n   * Step 1:\n   * Iterate over previous medias that have a defined sectionId.\n   *    First try to find a matching current media with a sectionId.\n   *    If none, try to find a matching current media with the same media IDs.\n   *    If still none, then consider the prev media to be unmatched.\n   */\n  prev\n    .filter(m => ['number', 'string'].includes(typeof m.sectionId))\n    .forEach(prevM => {\n      const currIndex = findMatchingSectionId(prevM, curr)\n      if (currIndex >= 0) {\n        // If there's a matching sectionId, add the two medias to the matched list.\n        //    Remove currM from its list to ensure nothing else can match with it.\n        const [currM] = curr.splice(currIndex, 1)\n        matched.push({ previous: prevM, current: currM })\n      } else {\n        const currIndex = findMatchingMediaIds(prevM, curr)\n        if (currIndex >= 0) {\n          // If there's a matching media IDs, add the two medias to the matched list.\n          //    Remove currM from its list to ensure nothing else can match with it.\n          const [currM] = curr.splice(currIndex, 1)\n          matched.push({ previous: prevM, current: currM })\n        } else {\n          // If a match still wasn't found, then consider prevM unmatched.\n          prevUnmatched.push(prevM)\n        }\n      }\n    })\n\n  /*\n   * Step 2:\n   * Iterate over previous medias that do not have a defined sectionId.\n   * Media with sectionIds were given priority since that should be 99% of scenarios.\n   *    Try to find a matching current media with the same media IDs.\n   *    If none, then consider the prev media to be unmatched.\n   */\n  prev\n    .filter(m => typeof m.sectionId === 'undefined')\n    .forEach(prevM => {\n      const currIndex = findMatchingMediaIds(prevM, curr)\n      if (currIndex >= 0) {\n        // If there's a matching media IDs, add the two medias to the matched list.\n        //    Remove currM from its list to ensure nothing else can match with it.\n        const [currM] = curr.splice(currIndex, 1)\n        matched.push({ previous: prevM, current: currM })\n      } else {\n        // If a match wasn't found, then consider prevM unmatched.\n        prevUnmatched.push(prevM)\n      }\n    })\n\n  /*\n   * Step 3:\n   * Consider all remaining medias in the current list to be unmatched.\n   *    All matched currMedia should have been removed from the list when it was matched.\n   */\n  currUnmatched = curr\n\n  return {\n    prevUnmatched,\n    currUnmatched,\n    matched\n  }\n}\n\n/**\n * Matches MediaSummary objects between two lists of media.\n *\n * Matches them based on their index in the lists. That's it.\n * This works under the assumption that the order of the media sections\n *    will never change, which is generally true. This may not be true\n *    in \"non-basic\" media scenarios (ie. more than two media sections)\n *    if a PeerConnection needs to be recreated.\n * This will only work if only comparing SDPs, and not using the\n *    Transceivers that represent the media sections.\n * @param  {Array<MediaSummary>} prevList List of previous media summaries.\n * @param  {Array<MediaSummary>} currList List of current media summaries.\n * @return {Object} Three lists of matched, prevUnmmatched, and currUnmatched.\n */\nexport function naiveMatchMedias (prevList, currList) {\n  // Redeclare these lists so we don't modify the originals.\n  const prev = [...prevList]\n  const curr = [...currList]\n\n  const prevUnmatched = []\n  const currUnmatched = []\n  const matched = []\n\n  const longerLength = prev.length <= curr.length ? curr.length : prev.length\n\n  // Loop enough times to cover which media list is longer.\n  for (let i = 0; i < longerLength; i++) {\n    if (prev[i] === undefined) {\n      // If the prev media at this index is undefined, then the curr\n      //    media at this index is currUnmatched.\n      currUnmatched.push(curr[i])\n    } else if (curr[i] === undefined) {\n      // Same thing other way around.\n      prevUnmatched.push(prev[i])\n    } else {\n      // Else both prev/curr have a media at this index. Match them.\n      matched.push({ previous: prev[i], current: curr[i] })\n    }\n  }\n\n  return {\n    prevUnmatched,\n    currUnmatched,\n    matched\n  }\n}\n\n/**\n * Compare two summarized Media section objects to determine how it changed.\n * @method compareSummary\n * @param  {MediaSummary} prevMedia The previous media summary.\n * @param  {MediaSummary} currMedia The current media summary.\n * @return {MediaChanges} How the media directions changed from prevMedia to currMedia.\n */\nexport function compareSummary (prevMedia, currMedia) {\n  /**\n   * Description of changes to a media line.\n   * @typedef  {Object} MediaChanges\n   * @property {MediaTransition} sending   The change in the media sending data.\n   * @property {MediaTransition} receiving The change in the media receiving data.\n   */\n  const change = {\n    sending: undefined,\n    receiving: undefined\n  }\n\n  if (prevMedia.willSend !== currMedia.willSend) {\n    if (currMedia.willSend) {\n      // Started sending.\n      change.sending = MEDIA_TRANSITIONS.START\n    } else {\n      // Stopped sending.\n      change.sending = MEDIA_TRANSITIONS.STOP\n    }\n  } else {\n    // No change.\n    change.sending = MEDIA_TRANSITIONS.SAME\n  }\n\n  if (prevMedia.willReceive !== currMedia.willReceive) {\n    if (currMedia.willReceive) {\n      // Started receiving.\n      change.receiving = MEDIA_TRANSITIONS.START\n    } else {\n      // Stopped receiving.\n      change.receiving = MEDIA_TRANSITIONS.STOP\n    }\n  } else {\n    // No change.\n    change.receiving = MEDIA_TRANSITIONS.SAME\n  }\n\n  return change\n}\n","/**\n * A new conversation has been created.\n *\n * @public\n * @memberof conversation\n * @event conversations:new\n * @param {Array<Object>} params An array containing one object with information about the newly created conversation.\n * @param {Array<string>} params.destination An array of destinations for messages created in this conversation.\n * @param {string} params.type The type of conversation created. See {@link conversation.chatTypes} for valid types.\n */\nexport const CONVERSATIONS_NEW = 'conversations:new'\n\n/**\n * A change has occurred in the conversation list.\n *\n * @public\n * @memberof conversation\n * @event conversations:change\n * @param {Array<Object>} params An array of objects containing information about the conversations that have changed.\n * @param {Array<string>} params.destination An array of destinations for messages in this conversation.\n * @param {string} params.type The type of conversation changed. See {@link conversation.chatTypes} for valid types.\n */\nexport const CONVERSATIONS_CHANGE = 'conversations:change'\n\n/**\n * A change has occurred in a specific conversation's message list.\n * If a single message was created/edited, `messageId` will be present.\n *\n * @public\n * @memberof conversation\n * @event messages:change\n * @param {Object} params\n * @param {Array<string>} params.destination An array of destinations for the message affected.\n * @param {string} params.type The type of conversation. See {@link conversation.chatTypes} for valid types.\n * @param {string} [params.messageId] The ID of the message affected.\n * @param {string} [params.sender] The username of the sender.\n */\nexport const MESSAGES_CHANGE = 'messages:change'\n\n/**\n * An error occurred with messaging.\n *\n * @public\n * @memberof conversation\n * @event messages:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const MESSAGES_ERROR = 'messages:error'\n\n/**\n * The list of users that are currently typing has changed.\n *\n * @public\n * @requires isTyping\n * @memberof conversation\n * @event isTypingList:change\n * @param {Object} params\n * @param {Array<string>} params.destination An array of destinations in this conversation.\n * @param {string} params.sender The username of the sender that caused the event to fire.\n * @param {string} params.type The type of conversation. See {@link conversation.chatTypes} for valid types.\n * @param {string} params.state (active/idle) The current state of the sender that caused the event to fire.\n */\nexport const IS_TYPING_LIST_CHANGE = 'isTypingList:change'\n","// Other plugins\nimport { logManager } from '../../logs'\n\n// Helpers.\nimport request from '../../request/effects'\nimport BasicError, { messagingCodes, subscriptionCodes } from '../../errors'\nimport { handleRequestError } from '../../common/helpers'\nimport { chatTypes } from '../mappings'\n\n// Libraries.\nimport { cloneDeep, property } from 'lodash/fp'\n\nconst log = logManager.getLogger('MESSAGING')\n\n/**\n * Maps values from a nested object structure to a single object for easy use\n * assumes that each object in the list has a name and value property\n * @method _marshalData\n * @param {Array<Object>} attributes an list of objects with attributes\n * @return {Object} a remapped object that is easier to work with\n */\nfunction _marshalData (attributes) {\n  return attributes.reduce((accum, current, index) => {\n    accum[current.name] = attributes[index].value\n    return accum\n  }, {})\n}\n\n/**\n * Makes a REST request to notify other users that the user is typing\n * @method setIsTypingRequest\n * @param {Object} requestInfo\n * @param {string} destination to send the notification to\n * @param {string} state (idle/active) the state of the user typing\n * @param {string} type The type of conversation. Can be one of \"chat-oneToOne\" or \"chat-group\"\n * @param {string} [refresh='60'] a string integer representing in seconds how long before the server refreshes the state\n * @returns {Object}\n */\nexport function * setIsTypingRequest (requestInfo, destination, state, type, refresh = '60') {\n  let url\n  if (type === chatTypes.ONETOONE) {\n    url = `${requestInfo.baseURL}/cpaas/chat/v1/${requestInfo.username}/oneToOne/${destination}/adhoc/messages`\n  } else if (type === chatTypes.GROUP) {\n    url = `${requestInfo.baseURL}/cpaas/chat/v1/${requestInfo.username}/group/${destination[0]}/messages`\n  }\n  const requestOptions = {\n    url: url,\n    method: 'POST',\n    body: JSON.stringify({\n      isComposing: {\n        contenttype: 'text/plain',\n        refresh: refresh,\n        state: state,\n        lastactive: Date.now()\n      }\n    })\n  }\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: new BasicError({\n        code: messagingCodes.SET_IS_TYPING_FAIL,\n        message: 'setIsTypingRequest has failed'\n      })\n    }\n  } else {\n    return {\n      ...response.payload.body.isComposing,\n      error: false\n    }\n  }\n}\n\n/**\n * Makes a REST request to a file upload API, storing images for use later\n * @method uploadFile\n * @param {Object} requestInfo data used to make the request\n * @param {Object} file contains file data to be uploaded\n */\nexport function * uploadFile (requestInfo, file) {\n  const formData = new FormData()\n  const reqInfo = cloneDeep(requestInfo)\n\n  const placeholderData = {\n    object: {\n      attributes: { attribute: [] },\n      flags: { flag: [] }\n    }\n  }\n  formData.append('root-fields', JSON.stringify(placeholderData))\n  formData.append('raw', file, file.name)\n  const requestOptions = {\n    url: `${reqInfo.baseURL}/cpaas/nms/v1/chat/${reqInfo.username}/objects`,\n    body: formData,\n    method: 'POST'\n  }\n\n  /*\n   * A FormData request auto-populates the Content-Type header with a unique\n   *    value. To prevent the request plugin from using a default value, we need\n   *    to override the \"common\" options by passing in options specific for this\n   *    request.\n   */\n  const manualOptions = cloneDeep(requestInfo.options)\n  delete manualOptions.headers['Content-Type']\n\n  const response = yield request(requestOptions, manualOptions)\n\n  if (response.error) {\n    return {\n      error: new BasicError({\n        code: messagingCodes.FILE_UPLOAD_FAIL,\n        message: 'Failed to upload file'\n      })\n    }\n  } else {\n    const responseData = _marshalData(response.payload.body.object.attributes.attribute)\n    return {\n      attachment: responseData,\n      error: false\n    }\n  }\n}\n\n/**\n * Used to send Simple Chat messages\n * sends a chat message to another user (can include attachments)\n * @method sendChatMessageRequest\n * @param {Object} requestInfo\n * @param {Object} payload\n * @param {Object} payload.destination a target destination for the message\n * @param {Object} payload.textParts text parts of the message\n * @param {Object} payload.fileParts parts of the message required for sending files\n * @returns {Object}\n */\nexport function * sendChatMessageRequest (requestInfo, destination, textParts, fileParts) {\n  const url = `${requestInfo.baseURL}/cpaas/chat/${requestInfo.version}/${requestInfo.username}/oneToOne/${destination}/adhoc/messages`\n\n  const requestOptions = {\n    method: 'POST',\n    url: url,\n    body: JSON.stringify({\n      chatMessage: {\n        text: textParts,\n        attachment: fileParts\n      }\n    })\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Send chat message')\n    }\n  } else {\n    // Success scenario.\n    return {\n      ...response.payload.body.chatMessage,\n      error: false\n    }\n  }\n}\n\n/**\n * Used to send Group Chat messages\n * sends a chat message to another user (can include attachments)\n * @method sendGroupChatMessageRequest\n * @param {Object} requestInfo\n * @param {Object} payload\n * @param {Object} payload.destination a target destination for the message\n * @param {Object} payload.textParts text parts of the message\n * @param {Object} payload.fileParts parts of the message required for sending files\n * @returns {Object}\n */\nexport function * sendGroupChatMessageRequest (requestInfo, destination, textParts, fileParts) {\n  const url = `${requestInfo.baseURL}/cpaas/chat/${requestInfo.version}/${requestInfo.username}/group/${destination}/messages`\n\n  const requestOptions = {\n    method: 'POST',\n    url: url,\n    body: JSON.stringify({\n      chatMessage: {\n        text: textParts,\n        attachment: fileParts\n      }\n    })\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Send group chat message')\n    }\n  } else {\n    // Success scenario.\n    return {\n      ...response.payload.body.chatMessage,\n      error: false\n    }\n  }\n}\n\n/**\n * Used to delete chat conversation\n * @method deleteChatConversationRequest\n * @param {Object} requestInfo\n * @param {string} destination Destination associated with the conversation to delete\n * @param {string} type Type of conversation. Can be one of \"chat-oneToOne\" or \"chat-group\"\n * @returns {Object}\n */\nexport function * deleteChatConversationRequest (requestInfo, destination, type) {\n  let url\n  if (type === chatTypes.ONETOONE) {\n    url = `${requestInfo.baseURL}/cpaas/chat/v1/${requestInfo.username}/oneToOne/${destination}/adhoc/messages`\n  } else if (type === chatTypes.GROUP) {\n    url = `${requestInfo.baseURL}/cpaas/chat/v1/${requestInfo.username}/group/${destination}`\n  } else if (type === chatTypes.SMS) {\n    url = `${requestInfo.baseURL}/cpaas/smsmessaging/v1/${requestInfo.username}/remoteAddresses/${destination}/localAddresses/${requestInfo.senderAddress}`\n  }\n\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url: url\n  }\n\n  const response = yield request(requestOptions)\n\n  // a 404 error results when the conversation has no messages and we try to delete it\n  // there is a mismatch between the CPaaS backend and how the SDK treats conversations.\n  // See KAA-1984 for more info\n  const legitError = response => response.error && property('payload.result.code')(response) !== 404\n\n  if (legitError(response)) {\n    return {\n      error: handleRequestError(response, 'Delete conversation')\n    }\n  } else {\n    // Success scenario.\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Used to delete chat message\n * @method deleteChatMessageRequest\n * @param {Object} requestInfo\n * @param {Object} destination Destination associated with the conversation\n * @param {Object} messageId MessageId of message to delete\n * @param {Object} type Type of conversation. Can be one of \"chat-oneToOne\" or \"chat-group\" or \"sms\"\n * @returns {Object}\n */\nexport function * deleteChatMessageRequest (requestInfo, destination, messageId, type) {\n  let url\n  if (type === chatTypes.ONETOONE) {\n    url = `${requestInfo.baseURL}/cpaas/chat/v1/${requestInfo.username}/oneToOne/${destination}/adhoc/messages/${messageId}`\n  } else if (type === chatTypes.GROUP) {\n    url = `${requestInfo.baseURL}/cpaas/chat/v1/${requestInfo.username}/group/${destination}/messages/${messageId}`\n  } else if (type === chatTypes.SMS) {\n    url = `${requestInfo.baseURL}/cpaas/smsmessaging/v1/${requestInfo.username}/remoteAddresses/${destination}/localAddresses/${requestInfo.senderAddress}/messages/${messageId}`\n  }\n\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url: url\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Delete message')\n    }\n  } else {\n    // Success scenario.\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Performs a REST request for a chat subscription.\n * @method chatSubscribe\n * @param  {Object} requestInfo Info needed to perform the request.\n * @param  {Object} channel\n * @return {Object}\n */\nexport function * chatSubscribe (requestInfo, channel) {\n  const requestOptions = {}\n  requestOptions.method = 'POST'\n  requestOptions.url = `${requestInfo.baseURL}/cpaas/chat/${requestInfo.version}/${requestInfo.username}/subscriptions`\n\n  requestOptions.body = JSON.stringify({\n    chatNotificationSubscription: {\n      callbackReference: {\n        notifyURL: channel.callbackURL\n      },\n      clientCorrelator: requestInfo.clientCorrelator\n    }\n  })\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: new BasicError({\n        message: 'Failed to subscribe for chat notifications.',\n        code: subscriptionCodes.CPAAS_SERVICE_SUB_FAIL\n      })\n    }\n  } else {\n    return {\n      error: false,\n      subscription: response.payload.body.chatNotificationSubscription\n    }\n  }\n}\n\n/**\n * Performs a REST request for a chat unsubscription.\n * @method chatUnsubscribe\n * @param  {Object} requestInfo Info needed to perform the request.\n * @param  {Object} subInfo Info about the subscription being ..unsubscribed.\n * @return {Object}\n */\nexport function * chatUnsubscribe (requestInfo, subInfo) {\n  const requestOptions = {}\n  requestOptions.method = 'DELETE'\n  requestOptions.responseType = 'none'\n\n  requestOptions.url =\n    `${requestInfo.baseURL}/cpaas/` +\n    `chat/${requestInfo.version}/${requestInfo.username}/` +\n    `subscriptions/${subInfo.subscriptionId}`\n\n  const response = yield request(requestOptions)\n\n  if (response.error && response.payload.result.code !== 404) {\n    return {\n      error: new BasicError({\n        message: 'Failed to unsubscribe from chat notifications.',\n        code: subscriptionCodes.CPAAS_SERVICE_UNSUB_FAIL\n      })\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Makes a REST request to the 'Send SMS' CPaaS endpoint.\n * @method sendSMSRequest\n * @param  {Object} connection Information needed for the request.\n * @param  {Object} payload Information needed for the SMS.\n * @return {Object} Formatted response object.\n */\nexport function * sendSMSRequest (requestInfo, destination, message) {\n  const requestOptions = {}\n  requestOptions.method = 'POST'\n\n  requestOptions.url =\n    `${requestInfo.baseURL}` +\n    `/cpaas/smsmessaging/v1/${requestInfo.username}` +\n    `/outbound/${requestInfo.senderAddress}/requests`\n\n  requestOptions.body = JSON.stringify({\n    outboundSMSMessageRequest: {\n      address: [destination],\n      clientCorrelator: requestInfo.clientCorrelator,\n      outboundSMSTextMessage: {\n        message: message\n      }\n    }\n  })\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    // Request error.\n    log.debug('Failed to send SMS message.', response.error)\n    return {\n      error: new BasicError({\n        code: messagingCodes.SEND_MESSAGE_FAIL,\n        message: 'Failed to send SMS message.'\n      })\n    }\n  } else if (response.payload.error) {\n    // Server error.\n    log.debug('Failed to send SMS message.', response.payload.error)\n    return {\n      error: new BasicError({\n        code: messagingCodes.SEND_MESSAGE_FAIL,\n        message: 'Failed to send SMS message.'\n      })\n    }\n  } else {\n    // Success scenario.\n    return {\n      ...response.payload.body.outboundSMSMessageRequest,\n      error: false\n    }\n  }\n}\n\n/**\n * Performs a REST request for inbound SMS subscription.\n * @method smsInboundSubscribe\n * @param  {Object} requestInfo Info needed to perform the request.\n * @param  {Object} channelInfo\n * @return {Object}\n */\nexport function * smsInboundSubscribe (requestInfo, channelInfo) {\n  const requestOptions = {\n    method: 'POST',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `smsmessaging/${requestInfo.version}/${requestInfo.username}/` +\n      'inbound/subscriptions',\n    body: JSON.stringify({\n      subscription: {\n        callbackReference: {\n          notifyURL: channelInfo.callbackURL\n        },\n        clientCorrelator: requestInfo.clientCorrelator,\n\n        // TODO: Shouldn't this be sender address?\n        destinationAddress: requestInfo.destinationAddress\n      }\n    })\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: new BasicError({\n        message: 'Failed to subscribe for inbound SMS notifications.',\n        code: subscriptionCodes.CPAAS_SERVICE_SUB_FAIL\n      })\n    }\n  } else {\n    return {\n      error: false,\n      subscription: response.payload.body.subscription\n    }\n  }\n}\n\n/**\n * Performs a REST request for a inbound SMS unsubscription.\n * @method smsInboundUnsubscribe\n * @param  {Object} requestInfo Info needed to perform the request.\n * @param  {Object} subInfo Info about the subscription being ..unsubscribed.\n * @return {Object}\n */\nexport function * smsInboundUnsubscribe (requestInfo, subInfo) {\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `smsmessaging/${requestInfo.version}/${requestInfo.username}/` +\n      `inbound/subscriptions/${subInfo.subscriptionId}`\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error && response.payload.result.code !== 404) {\n    return {\n      error: new BasicError({\n        message: 'Failed to unsubscribe from inbound SMS notifications.',\n        code: subscriptionCodes.CPAAS_SERVICE_UNSUB_FAIL\n      })\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Performs a REST request for outbound SMS subscription.\n * @method smsOutboundSubscribe\n * @param  {Object} requestInfo Info needed to perform the request.\n * @param  {Object} channelInfo\n * @return {Object}\n */\nexport function * smsOutboundSubscribe (requestInfo, channelInfo) {\n  const requestOptions = {\n    method: 'POST',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `smsmessaging/${requestInfo.version}/${requestInfo.username}/` +\n      `outbound/${requestInfo.username}/subscriptions`,\n    body: JSON.stringify({\n      deliveryReceiptSubscription: {\n        callbackReference: {\n          notifyURL: channelInfo.callbackURL\n        },\n        clientCorrelator: requestInfo.clientCorrelator\n      }\n    })\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: new BasicError({\n        message: 'Failed to subscribe for outbound SMS notifications.',\n        code: subscriptionCodes.CPAAS_SERVICE_SUB_FAIL\n      })\n    }\n  } else {\n    return {\n      error: false,\n      subscription: response.payload.body.deliveryReceiptSubscription\n    }\n  }\n}\n\n/**\n * Performs a REST request for a outbound SMS unsubscription.\n * @method smsOutboundUnsubscribe\n * @param  {Object} requestInfo Info needed to perform the request.\n * @param  {Object} subInfo Info about the subscription being ..unsubscribed.\n * @return {Object}\n */\nexport function * smsOutboundUnsubscribe (requestInfo, subInfo) {\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `smsmessaging/${requestInfo.version}/${requestInfo.username}/` +\n      `outbound/${requestInfo.username}/subscriptions/${subInfo.subscriptionId}`\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error && response.payload.result.code !== 404) {\n    return {\n      error: new BasicError({\n        message: 'Failed to unsubscribe from outbound SMS notifications.',\n        code: subscriptionCodes.CPAAS_SERVICE_SUB_FAIL\n      })\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Performs a REST request to fetch a list of chat sessions\n * @method fetchConversationsRequest\n * @param {Object} requestInfo\n * @param {string} type\n * @return {Object} a list of chat sessions\n */\n\nexport function * fetchConversationsRequest (requestInfo, type) {\n  let url\n  if (type === chatTypes.GROUP) {\n    url = `${requestInfo.baseURL}/cpaas/chat/v1/${requestInfo.username}/group/sessions`\n  } else {\n    url = `${requestInfo.baseURL}/cpaas/chat/v1/${requestInfo.username}/oneToOne/sessions`\n  }\n\n  const requestOptions = {\n    method: 'GET',\n    url: url\n  }\n  const response = yield request(requestOptions)\n  if (response.error) {\n    return {\n      error: new BasicError({\n        message: 'Failed to fetch conversations.',\n        code: messagingCodes.FETCH_CONVERSATIONS_FAIL\n      })\n    }\n  } else {\n    // return a list of conversations\n    return {\n      chatSession: response.payload.body.chatSessionList.chatSession,\n      error: false\n    }\n  }\n}\n\n/**\n * Performs a REST request to fetch a list of SMS messaging sessions\n * @method fetchSmsConversationsRequest\n * @param {Object} requestInfo\n * @return {Object} a list of SMS messaging sessions\n */\n\nexport function * fetchSmsConversationsRequest (requestInfo) {\n  const url = `${requestInfo.baseURL}/cpaas/smsmessaging/v1/${requestInfo.username}/remoteAddresses`\n\n  const requestOptions = {\n    method: 'GET',\n    url: url\n  }\n  const response = yield request(requestOptions)\n  if (response.error) {\n    return {\n      error: new BasicError({\n        message: 'Failed to fetch conversations.',\n        code: messagingCodes.FETCH_CONVERSATIONS_FAIL\n      })\n    }\n  } else {\n    // return a list of conversations\n    return {\n      chatSession: response.payload.body.smsThreadList.smsThread,\n      error: false\n    }\n  }\n}\n\n/**\n * Performs a REST request to fetch a list of messages for a particular chat conversation\n * @method fetchMessagesRequest\n * @param {Object} requestInfo\n * @param {Object} params\n * @param {string} params.destination a target email or groupId to send the message to\n * @param {string} [params.type='chat-onToOne'] The type of messages to fetch. See {@link conversation.chatTypes} for valid types.\n * @return {Object}\n */\nexport function * fetchMessagesRequest (requestInfo, { destination, type = chatTypes.ONETOONE } = {}) {\n  let url\n  if (type === chatTypes.GROUP) {\n    url = `${requestInfo.baseURL}/cpaas/chat/v1/${requestInfo.username}/group/${destination}/messages`\n  } else if (type === chatTypes.ONETOONE) {\n    url = `${requestInfo.baseURL}/cpaas/chat/v1/${requestInfo.username}/oneToOne/${destination}/adhoc/messages`\n  } else {\n    return {\n      error: new BasicError({\n        message: 'Unrecognized chat type, ensure the chat type is either \"chat-group\" or \"chat-oneToOne\"',\n        code: subscriptionCodes.FETCH_MESSAGES_FAIL\n      })\n    }\n  }\n\n  const requestOptions = { method: 'GET', url }\n\n  const response = yield request(requestOptions)\n  if (response.error) {\n    return {\n      error: new BasicError({\n        message: 'Failed to fetch chat messages.',\n        code: subscriptionCodes.FETCH_MESSAGES_FAIL\n      })\n    }\n  } else {\n    return {\n      ...response.payload.body.chatMessageList,\n      error: false\n    }\n  }\n}\n\n/**\n * Performs a REST request to fetch a list of messages for a particular sms conversation\n * @method fetchSmsMessagesRequest\n * @param {Object} requestInfo\n * @param {Object} params\n * @param {string} params.source the phone number associated with source of messages.\n * @param {string} params.destination phone number(s) associated with the destination of those messages.\n *\n * @param {string} [params.type='sms'] The type of messages to fetch. See {@link conversation.chatTypes} for valid types.\n * @return {Object}\n */\nexport function * fetchSmsMessagesRequest (requestInfo, { source, destination, type } = {}) {\n  let url\n  if (type === chatTypes.SMS) {\n    url = `${requestInfo.baseURL}/cpaas/smsmessaging/v1/${requestInfo.username}/remoteAddresses/${destination}/localAddresses/${source}/messages`\n  } else {\n    return {\n      error: new BasicError({\n        message: 'Unrecognized type, ensure the type is \"sms\"',\n        code: subscriptionCodes.FETCH_MESSAGES_FAIL\n      })\n    }\n  }\n\n  const requestOptions = { method: 'GET', url }\n\n  const response = yield request(requestOptions)\n  if (response.error) {\n    return {\n      error: new BasicError({\n        message: 'Failed to fetch sms messages.',\n        code: subscriptionCodes.FETCH_MESSAGES_FAIL\n      })\n    }\n  } else {\n    return {\n      ...response.payload.body.smsMessageList,\n      error: false\n    }\n  }\n}\n\n/**\n * Used to fetch links for images with authentication,\n * url is passed as a parameter because it is a unique url\n * returned via the uploadFile API\n * @method fetchImageLinks\n * @param {Object} requestInfo\n * @param {string} url where we get the image blob\n * @return {Object}\n */\nexport function * fetchImageLinks (requestInfo, url) {\n  const response = yield request({ url, method: 'GET', responseType: 'blob' })\n\n  if (response.error) {\n    return {\n      error: new BasicError({\n        message: 'Failed to fetch image link.',\n        code: messagingCodes.FETCH_IMAGE_LINKS_FAIL\n      })\n    }\n  } else {\n    return {\n      blob: response.payload.body,\n      error: false\n    }\n  }\n}\n","// Presence plugin.\nimport * as actionTypes from './actionTypes'\n\n// Other plugins.\nimport BasicError from '../../errors'\n\n/**\n * Update the presence for the current user\n * @param  {string} status   The status of the presence state\n * @param  {string} activity The activity to be shown as presence state\n * @param  {string} note     The note to be shown as alternative presence state\n *                           which is determined by the user. The note entry is\n *                           effective on the remote sip client when the\n *                           activity is “other”.\n * @return {Object}          A Flux Standard Action for UPDATE_PRESENCE\n */\nexport function updatePresence (status, activity, note) {\n  return {\n    type: actionTypes.UPDATE,\n    payload: {\n      status,\n      activity,\n      note\n    }\n  }\n}\n\nexport function updatePresenceFinish (payload) {\n  return {\n    type: actionTypes.UPDATE_FINISH,\n    error: payload instanceof Error || payload instanceof BasicError,\n    payload\n  }\n}\n\n/**\n * Get the presence for the given user(s)\n * @param  {string} users  A user id or an array of user ids.\n * @return {Object}        A Flux Standard Action for GET_PRESENCE\n */\nexport function getPresence (users) {\n  return {\n    type: actionTypes.GET,\n    payload: users\n  }\n}\n\nexport function getPresenceFinish (payload) {\n  return {\n    type: actionTypes.GET_FINISH,\n    error: payload instanceof Error || payload instanceof BasicError,\n    payload\n  }\n}\n\n/**\n * Subscribe to the presence for the given user(s)\n * @param  {string} users  A user id or an array of user ids.\n * @return {Object}        A Flux Standard Action for SUBSCRIBE_PRESENCE\n */\nexport function subscribePresence (users) {\n  return {\n    type: actionTypes.SUBSCRIBE,\n    payload: users\n  }\n}\n\nexport function subscribePresenceFinish (result) {\n  if (!Array.isArray(result.presentityUserId)) {\n    result.presentityUserId = [result.presentityUserId]\n  }\n  return {\n    type: actionTypes.SUBSCRIBE_FINISH,\n    error: result instanceof Error || result instanceof BasicError,\n    payload: result\n  }\n}\n\n/**\n * Unsubscribe from the presence for the given user(s)\n * @param  {string} users  A user id or an array of user ids.\n * @return {Object}        A Flux Standard Action for UNSUBSCRIBE_PRESENCE\n */\nexport function unsubscribePresence (users) {\n  return {\n    type: actionTypes.UNSUBSCRIBE,\n    payload: users\n  }\n}\n\nexport function unsubscribePresenceFinish (result) {\n  if (result.presentityUserId && !Array.isArray(result.presentityUserId)) {\n    result.presentityUserId = [result.presentityUserId]\n  }\n  return {\n    type: actionTypes.UNSUBSCRIBE_FINISH,\n    error: result instanceof Error || result instanceof BasicError,\n    payload: result\n  }\n}\n\n/**\n * Create a new presence list\n * @param  {string} users  A user id or an array of user ids.\n * @return {Object}        A Flux Standard Action for UNSUBSCRIBE_PRESENCE\n */\nexport function createPresenceList (users) {\n  return {\n    type: actionTypes.CREATE_PRESENCE_LIST,\n    payload: users\n  }\n}\n\n/**\n * Delete a presence list\n * @param  {string} presenceListId  The ID of the presence list to delete.\n * @return {Object}                 A Flux Standard Action for UNSUBSCRIBE_PRESENCE\n */\nexport function deletePresenceList (presenceListId) {\n  return {\n    type: actionTypes.DELETE_PRESENCE_LIST,\n    payload: presenceListId\n  }\n}\n\n/**\n * Retrieve a presence list\n * @param  {string} presenceListId  The ID of the presence list to delete.\n * @return {Object}                 A Flux Standard Action for UNSUBSCRIBE_PRESENCE\n */\nexport function getPresenceList (presenceListId) {\n  return {\n    type: actionTypes.GET_PRESENCE_LIST,\n    payload: presenceListId\n  }\n}\n\nexport function createListFinish (payload) {\n  return {\n    type: actionTypes.CREATE_PRESENCE_LIST_FINISH,\n    error: payload instanceof Error || payload instanceof BasicError,\n    payload\n  }\n}\n\nexport function presenceReceived (presence) {\n  return {\n    type: actionTypes.RECEIVED,\n    payload: presence\n  }\n}\n","export function getPresence (state, users) {\n  // If no users specified, return them all\n  if (!users) {\n    return state.presence.users\n  }\n\n  // Grab all users that match the passed in IDs, return\n  return Object.values(state.presence.users).filter(user => users.indexOf(user.userId) !== -1)\n}\n\n/**\n * Retrieves presence information for all users.\n * @method getAllPresence\n * @param  {Object} state Redux state.\n * @return {Array}  List of presence information for users.\n */\nexport function getAllPresence (state) {\n  return Object.values(state.presence.users)\n}\n\n/**\n * Retrieves the current user's self presence.\n * @method getSelfPresence\n * @param  {Object} state Redux state.\n * @return {Object} Self-presence information.\n */\nexport function getSelfPresence (state) {\n  return state.presence.self\n}\n","// Presence plugin.\nimport { ACTIVITY } from '../constants'\n\n// Helpers.\nimport request from '../../../request/effects'\nimport { handleRequestError } from '../../../common/helpers'\n\n/**\n * REST request to create a new presence source with initial presence state.\n * @method publish\n * @param  {Object} userPresence\n * @param  {string} userPresence.status - user presence status\n * @param  {string} userPresence.activity - user presence activity\n * @param  {string} userPresence.note - user presence note\n * @param  {Object} requestInfo\n * @return {Object}\n */\nexport function * publish ({ status, activity, note }, requestInfo) {\n  const requestBody = {\n    presenceSource: {\n      clientCorrelator: requestInfo.clientCorrelator,\n      presence: {\n        person: {\n          'overriding-willingness': {\n            overridingWillingnessValue: status\n          },\n          activities: {\n            activityValue: activity\n          }\n        }\n      }\n    }\n  }\n  if (note && activity === ACTIVITY.ACTIVITIES_OTHER) {\n    requestBody.presenceSource.presence.person.activities.other = note\n  }\n\n  const requestOptions = {\n    method: 'POST',\n    url: `${requestInfo.baseURL}/cpaas/presence/${requestInfo.version}/` + `${requestInfo.username}/presenceSources`,\n    body: JSON.stringify(requestBody)\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return handleRequestError(response, 'Presence publish')\n  } else {\n    return response.payload.body.presenceSource\n  }\n}\n\n/**\n * REST request to create a new presence list.\n * @method createList\n * @param  {string} user User ID of presentity\n * @param  {Object} requestInfo\n * @return {Object}\n */\nexport function * createList (user, requestInfo) {\n  const requestBody = {\n    presenceList: {\n      'x-listName': 'myList',\n      presenceContact: user\n    }\n  }\n\n  const requestOptions = {\n    method: 'POST',\n    url: `${requestInfo.baseURL}/cpaas/presence/${requestInfo.version}/${requestInfo.username}/presenceLists`,\n    body: JSON.stringify(requestBody)\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return handleRequestError(response, 'Create presence list')\n  } else {\n    return response.payload.body.presenceList\n  }\n}\n/**\n * REST request to delete a presence list.\n * @method deleteList\n * @param  {string} presenceListId Resource ID of the presenceList\n * @param  {Object} requestInfo\n * @return {Object}\n */\nexport function * deleteList (presenceListId, requestInfo) {\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url:\n      `${requestInfo.baseURL}/cpaas/presence/${requestInfo.version}/` +\n      `${requestInfo.username}/presenceLists/${presenceListId}`\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return handleRequestError(response, 'Delete presence list')\n  } else {\n    return response\n  }\n}\n\n/**\n * REST request to retrieve a presence list.\n * @method getList\n * @param  {string} presenceListId Resource ID of the presenceList\n * @param  {Object} requestInfo\n * @return {Object}\n */\nexport function * getList (presenceListId, requestInfo) {\n  const requestOptions = {\n    method: 'GET',\n    url:\n      `${requestInfo.baseURL}/cpaas/presence/${requestInfo.version}/` +\n      `${requestInfo.username}/presenceLists/${presenceListId}`\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return handleRequestError(response, 'Get presence list')\n  } else {\n    return response\n  }\n}\n/**\n * REST request to retrieve all presence lists.\n * @method getPresenceLists\n * @param  {Object} requestInfo\n * @return {Object}\n */\nexport function * getPresenceLists (requestInfo) {\n  const requestOptions = {\n    method: 'GET',\n    url: `${requestInfo.baseURL}/cpaas/presence/${requestInfo.version}/` + `${requestInfo.username}/presenceLists`\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return handleRequestError(response, 'Get presence lists')\n  } else {\n    return response.payload.body.presenceListCollection\n  }\n}\n\n/**\n * REST request to retrieve presence states of requested presentities.\n * @method retrievePresence\n * @param  {Array} users Array of userId's\n * @param  {Object} requestInfo\n * @return {Object}\n */\nexport function * retrievePresence (users, requestInfo) {\n  const adhocPresenceList = {\n    adhocPresenceList: {\n      presentityUserId: users\n    }\n  }\n\n  const requestOptions = {\n    method: 'POST',\n    url: `${requestInfo.baseURL}/cpaas/presence/${requestInfo.version}/` + `${requestInfo.username}/adhocPresenceList`,\n    body: JSON.stringify(adhocPresenceList)\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return handleRequestError(response, 'Fetch users presence')\n  } else {\n    return response.payload.body.presenceList\n  }\n}\n/**\n * REST request to add a new presentity to the presence list.\n * @method addUser\n * @param  {string} user userId\n * @param  {string} presenceListId Resource ID of the presenceList\n * @param  {Object} requestInfo\n * @return {Object}\n */\nexport function * addUser (userId, presenceListId, requestInfo) {\n  const presenceContact = {\n    presenceContact: {\n      presentityUserId: userId\n    }\n  }\n\n  const requestOptions = {\n    method: 'PUT',\n    url:\n      `${requestInfo.baseURL}/cpaas/presence/${requestInfo.version}/` +\n      `${requestInfo.username}/presenceLists/${presenceListId}/` +\n      `presenceContacts/${userId}`,\n    body: JSON.stringify(presenceContact)\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return handleRequestError(response, 'Add presence user')\n  } else {\n    return response.payload.body.presenceContact\n  }\n}\n/**\n * REST request to delete a presentity from a presence list.\n * @method removeUser\n * @param  {string} user userId\n * @param  {string} presenceListId Resource ID of the presenceList\n * @param  {Object} requestInfo\n * @return {Object}\n */\nexport function * removeUser (userId, presenceListId, requestInfo) {\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url:\n      `${requestInfo.baseURL}/cpaas/presence/${requestInfo.version}/` +\n      `${requestInfo.username}/presenceLists/${presenceListId}/` +\n      `presenceContacts/${userId}`\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return handleRequestError(response, 'Remove presence user')\n  } else {\n    return response.payload.result\n  }\n}\n","// Groups plugin.\nimport * as actionTypes from './actionTypes'\n\n/**\n * Helper function for formatting actions.\n * Ensures that actions follow an expectable format.\n * @method actionFormatter\n * @param  {string}  actionType  The type of action\n * @param  {Object} [payload={}] The action payload.\n * @param  {BasicError} [payload.error] For an error action, the error should be provided.\n * @param  {Object} [meta={}] The action meta data.\n * @return {Object}\n */\nfunction actionFormatter (actionType, payload = {}, meta = {}) {\n  return {\n    type: actionType,\n    payload: {\n      ...payload\n    },\n    error: !!payload.error,\n    meta: {\n      ...meta\n    }\n  }\n}\n\n/**\n * Fetches existing groups from the server\n * @method fetchGroups\n * @return {Object} A Flux Standard Action.\n */\nexport function fetchGroups () {\n  return {\n    type: actionTypes.FETCH_GROUPS\n  }\n}\n\n/**\n * A notice that fetchGroups has finished.\n * @method fetchGroupsFinish\n * @param {Object} params\n * @param {[Object]} params.groups Array of groups.\n * @param {Object} [params.error] An error object.\n * @return {Object} A flux standard action.\n */\nexport function fetchGroupsFinish ({ groups, error }) {\n  return actionFormatter(actionTypes.FETCH_GROUPS_FINISH, { groups, error })\n}\n\n/**\n * Create a new group\n * @method create\n * @param {Object} params\n * @param {string} params.userId The Id of the current user.\n * @param {string[]} params.users Array of users to add to group upon creation.\n * @param {string} params.image The image for the group.\n * @param {string} params.type Type of group: ie 'Open', 'Closed'. //ToDo Verify this\n * @return {Object} A Flux Standard Action.\n */\nexport function create (params = {}) {\n  return actionFormatter(actionTypes.CREATE_GROUP, { params })\n}\n\n/**\n * @method createFinish\n * @param {Object} group The group that was created.\n * @param {Object} [error] An error object.\n * @return {Object} A flux standard action.\n */\nexport function createFinish (group, error) {\n  return actionFormatter(actionTypes.CREATE_GROUP_FINISH, { group, error })\n}\n\n/**\n * Leave a group\n * @method leave\n * @param {string} groupId The ID of the group to leave.\n * @return {Object} A Flux Standard Action.\n */\nexport function leave (groupId) {\n  return actionFormatter(actionTypes.LEAVE_GROUP, { groupId })\n}\n\n/**\n * Leave a specified group\n /**\n * @param {Object} params\n * @param {string} params.groupId The ID of the group that id being left.\n * @param {string} params.participant The participant that is leaving.\n * @param {Object} [params.error] An error object.\n * @return {Object} A Flux Standard Action.\n */\nexport function leaveGroupFinish ({ groupId, participant, error }) {\n  return actionFormatter(actionTypes.LEAVE_GROUP_FINISH, { groupId, participant, error })\n}\n\n/**\n * Accept a group invitation\n * @method acceptInvitation\n * @param {string} groupId The ID of the group to retrieve.\n * @return {Object} A Flux Standard Action.\n */\nexport function acceptInvitation (groupId) {\n  return actionFormatter(actionTypes.ACCEPT_INVITATION, { groupId })\n}\n\n/**\n * Accept a group invitation\n * @param {Object} params\n * @param {Object} params.group Information about the group.\n * @param {string} params.status status of the invitation\n * @param {string} [params.error] An error object.\n * @return {Object} A Flux Standard Action\n */\nexport function acceptInvitationFinish ({ groupId, group, status, error }) {\n  return actionFormatter(actionTypes.ACCEPT_INVITATION_FINISH, { groupId, group, status, error })\n}\n\n/**\n * Reject a group invitation\n * @method rejectInvitation\n * @param {string} groupId The ID of the group to reject.\n * @return {Object} A Flux Standard Action.\n */\nexport function rejectInvitation (groupId) {\n  return actionFormatter(actionTypes.REJECT_INVITATION, { groupId })\n}\n\n/**\n * Reject a group invitation\n * @param {Object} params\n * @param {string} params.groupId GroupId to reject invitation from.\n * @param {Object} params.status status of the invitation\n * @param {string} [params.error] An error object.\n * @return {Object} A Flux Standard Action\n */\nexport function rejectInvitationFinish ({ groupId, status, error }) {\n  return actionFormatter(actionTypes.REJECT_INVITATION_FINISH, { groupId, status, error })\n}\n\n/**\n * Add a participant to a group\n * @method addParticipant\n * @param {string} groupId The ID of the group to add a participant to.\n * @param {string} participant Participant to add to the group.\n * @return {Object} A Flux Standard Action.\n */\nexport function addParticipant (groupId, participant) {\n  return actionFormatter(actionTypes.ADD_PARTICIPANT, { groupId, participant })\n}\n\n/**\n * A notice that addParticipant has finished.\n * @method addParticipantFinish\n * @param {Object} params\n * @param  {string} params.groupId The ID of the group to be modified.\n * @param  {Object} params.participant Participant to add to the group.\n * @param  {Object} [params.error] An error object.\n * @return {Object} A flux standard action.\n */\nexport function addParticipantFinish ({ groupId, participant, error }) {\n  return actionFormatter(actionTypes.ADD_PARTICIPANT_FINISH, { groupId, participant, error })\n}\n\n/**\n * Remove a participant from a group\n * @method removeParticipant\n * @param {string} groupId The ID of the group to remove a participant from.\n * @param {Object} participant Participant to remove from the group.\n * @return {Object} A Flux Standard Action.\n */\nexport function removeParticipant (groupId, participant) {\n  return actionFormatter(actionTypes.REMOVE_PARTICIPANT, { groupId, participant })\n}\n\n/**\n * A notice that removeParticipant has finished.\n * @method removeParticipantFinish\n * @param {Object} params\n * @param  {string} params.groupId The ID of the group to be modified.\n * @param  {Object} params.participant Participant to remove from the group.\n * @param  {Object} [params.error] An error object.\n * @return {Object} A flux standard action.\n */\nexport function removeParticipantFinish ({ groupId, participant, error }) {\n  return actionFormatter(actionTypes.REMOVE_PARTICIPANT_FINISH, { groupId, participant, error })\n}\n\n/**\n * A request to delete a group.\n * @method deleteGroup\n * @param {string} groupId The ID of the the group to delete.\n * @return {Object} A Flux Standard Action.\n */\nexport function deleteGroup (groupId) {\n  return actionFormatter(actionTypes.DELETE_GROUP, { groupId })\n}\n\n/**\n * A notice that deleteGroup has finished.\n * @method deleteGroupFinish\n * @param {Object} params\n * @param {string} params.groupId The ID of the group that was deleted.\n * @param {Object} [params.error] An error object.\n * @return {Object} A flux standard action.\n */\nexport function deleteGroupFinish ({ groupId, error }) {\n  return actionFormatter(actionTypes.DELETE_GROUP_FINISH, { groupId, error })\n}\n\n/**\n  Notification handlers\n  */\n\n/**\n * A notice that a 'groupChatSessionInvitationNotification' has been received.\n * @method invitationReceived\n * @param {Object} params\n * @param  {Object} params.invitation Invitation.\n * @param  {Object} [params.error] An error object.\n * @return {Object} A flux standard action.\n */\nexport function invitationReceived ({ invitation, error }) {\n  return actionFormatter(actionTypes.INVITATION_RECEIVED, { invitation, error })\n}\n\n/**\n * A notice that a 'chatParticipantStatusNotification' has been received.\n * @method statusNotificationReceived\n * @param {Object} params\n * @param  {Object} params.groupId Id of the group that the notification is for.\n * @param  {Object} params.notification Notification.\n * @param  {Object} [params.error] An error object.\n * @return {Object} A flux standard action.\n */\nexport function statusNotificationReceived ({ groupId, notification, error }) {\n  return actionFormatter(actionTypes.STATUS_NOTIFICATION_RECEIVED, { groupId, notification, error })\n}\n\n/**\n * A notice that a 'chatEventNotification' has been received.\n * @method eventNotificationReceived\n * @param {Object} params\n * @param  {Object} params.groupId Id of the group that the notification is for.\n * @param  {Object} params.notification Information.\n * @param  {Object} [params.error] An error object.\n * @return {Object} A flux standard action.\n */\nexport function eventNotificationReceived ({ groupId, notification, error }) {\n  return actionFormatter(actionTypes.EVENT_NOTIFICATION_RECEIVED, { groupId, notification, error })\n}\n","/**\n * Remaps/renames some properties on the participants array passed in\n *\n * @param {Array} participants a list of participant objects\n * @return {Array}\n */\nexport function remapParticipants (participants) {\n  return participants.map(participant => {\n    const remappedParticipant = { ...participant, isAdmin: participant['x-isAdmin'] }\n    delete remappedParticipant.resourceURL\n    delete remappedParticipant['x-isAdmin']\n    return remappedParticipant\n  })\n}\n\n/**\n * Normalizes server group notifications into a more usable object structure for front end development.\n *\n * @param {Object} groupNotification\n * @returns {Object} group\n * @returns {string} group.name The group name\n * @returns {Array} group.participants A list of participant objects\n * @returns {string} group.subject The group subject\n * @returns {string} group.groupId An ID for looking up the group\n * @returns {string} group.image The image for the group\n */\nexport function marshallGroup (groupNotification) {\n  // pull out and rename properties\n  const { 'x-name': name, 'x-image': image, subject, resourceURL, participant } = groupNotification\n\n  // re-map all participants on each group\n  const participants = remapParticipants(participant)\n\n  // parse the Group ID out of resourceURL\n  const groupId = resourceURL.substring(resourceURL.lastIndexOf('/') + 1)\n  return { name, participants, subject, groupId, image }\n}\n","import * as actionTypes from './actionTypes'\n\n/**\n * Action for fetching the current user's profile data.\n * @returns {Object} A flux standard action\n */\nexport function fetchSelfInfo () {\n  return {\n    type: actionTypes.FETCH_SELF_INFO\n  }\n}\n\n/**\n * The finishing action to follow the FETCH_SELF_INFO action\n * @returns {Object} A flux standard action representing the FETCH_SELF_INFO_FINISH action\n */\nexport function fetchSelfInfoFinish (self, error) {\n  return {\n    type: actionTypes.FETCH_SELF_INFO_FINISH,\n    payload: error || self,\n    error: Boolean(error)\n  }\n}\n\n/**\n *\n * @param {string} userId The URI uniquely identifying the user.\n * @returns {Object} A flux standard action representing the FETCH_USER action\n */\nexport function fetchUser (userId) {\n  return {\n    type: actionTypes.FETCH_USER,\n    payload: userId\n  }\n}\n\n/**\n * Create a finish action to follow a FETCH_USER action.\n *\n * @param {Object} user A user object\n * @param {Object} [error] An error object.\n * @returns {Object} A flux standard action representing the USER_FETCH_FINISH action.\n */\nexport function fetchUserFinish (user, error) {\n  return {\n    type: actionTypes.FETCH_USER_FINISH,\n    payload: error || user,\n    error: Boolean(error)\n  }\n}\n\n/**\n * Create an action that searches the directory.\n *\n * @param {Object} filters Query filter options.\n * @param {string} [filters.name] Matches firstName or lastName.\n * @param {string} [filters.firstName] Matches firstName.\n * @param {string} [filters.lastName] Matches lastName.\n * @param {string} [filters.userName] Matches userName.\n * @param {string} [filters.phoneNumber] Matches phoneNumber.\n * @param {Object} [options] Sorting options\n * @param {string} [options.sortBy] The attribute upon which to sort results. This can be any of the above listed filters which describe a user attribute.\n * @param {string} [options.order] Order by which to return results. Can be one of \"asc\" or \"desc\".\n * @param {number} [options.max] The maximum number of results to return.\n * @param {string} [options.next] The pointer for a chunk of results, which may be returned from other a previous query.\n * @returns {Object} A flux standard action representing the SEARCH_DIRECTORY action.\n */\nexport function searchDirectory (filters, options) {\n  return {\n    type: actionTypes.SEARCH_DIRECTORY,\n    payload: { filters, options }\n  }\n}\n\n/**\n * Create a finish action to follow the SEARCH_DIRECTORY action.\n *\n * @param {Object} $0 A dictionary object of parameters\n * @param {Array} [$0.users] The user objects\n * @param {Object} [$0.error] An error object.\n * @returns {Object} A flux standard action representing the DIRECTORY_CHANGED action.\n */\nexport function searchDirectoryFinish ({ users, error }) {\n  return {\n    type: actionTypes.SEARCH_DIRECTORY_FINISH,\n    payload: error || users,\n    error: Boolean(error)\n  }\n}\n","import { cloneDeep } from 'lodash/fp'\n\n/*\n * Redux-saga selector functions.\n * Used with the `select` effect in sagas to Retrieves\n *      specific portions of the state.\n */\n\n/**\n * Gets the contacts from state.\n * @method getContacts\n * @return {Object}\n */\nexport function getContacts (state) {\n  return cloneDeep(state.users.contacts)\n}\n\n/**\n * Gets a contact from the state whose ID matches the supplied parameter\n * @method getContact\n * @return {Object}\n */\nexport function getContact (state, id) {\n  return cloneDeep(state.users.contacts[id])\n}\n\n/**\n * Gets the users from state.\n * @method getUsers\n * @return {Array<User>} An array of all the User objects.\n */\nexport function getUsers (state) {\n  const allUsers = cloneDeep(state.users.users)\n  return Object.values(allUsers)\n}\n\n/**\n * Gets the users from state.\n * @method getUser\n * @return {Object}\n */\nexport function getUser (state, name) {\n  return cloneDeep(state.users.users[name])\n}\n","import * as actionTypes from './actionTypes'\n\n/**\n * Refresh the contact list.\n * @returns {Object} A flux standard action representing the REFRESH_CONTACTS action.\n */\nexport function refreshContacts () {\n  return {\n    type: actionTypes.REFRESH_CONTACTS,\n    payload: null\n  }\n}\n\n/**\n * The finishing action which follows the REFRESH_CONTACTS action\n * @param {Object} $0\n * @param  {Array} [$0.contacts] An array of contact objects.\n * @param  {Object} [$0.error] An error object. Only present if an error occurred.\n * @returns {Object} A flux standard action representing the REFRESH_CONTACTS_FINISH action.\n */\nexport function refreshContactsFinish ({ contacts, error }) {\n  return {\n    type: actionTypes.REFRESH_CONTACTS_FINISH,\n    payload: error || contacts,\n    error: Boolean(error)\n  }\n}\n\n/**\n * Adds a contact to the Address Book\n * @param {Object} contact The contact object.\n * @returns {Object} A flux standard action representing the ADD_CONTACT action.\n */\nexport function addContact (contact) {\n  return {\n    type: actionTypes.ADD_CONTACT,\n    payload: contact\n  }\n}\n\n/**\n * The finishing action which follows the ADD_CONTACT action\n * @param {Object} $0\n * @param {Object} [$0.contact] The contact object.\n * @param {Object} [$0.error] An error object. Only present if an error occurred.\n * @returns {Object} A flux standard action representing the ADD_CONTACT_FINISH action.\n */\nexport function addContactFinish ({ contact, error }) {\n  return {\n    payload: error || contact,\n    error: Boolean(error),\n    type: actionTypes.ADD_CONTACT_FINISH\n  }\n}\n\n/**\n * Fetch a contact from the user's personal address book\n * @param {string} contactId The ID of the contact to be fetched\n * @returns {Object} A flux standard action representing the FETCH_CONTACT action.\n */\nexport function fetchContact (contactId) {\n  return {\n    type: actionTypes.FETCH_CONTACT,\n    payload: contactId\n  }\n}\n\n/**\n * The finishing action which follows a FETCH_CONTACT action\n * @param {Object} $0\n * @param {Object} [$0.contact] The contact object.\n * @param {Object} [$0.error] A Basic error object\n * @returns {Object} A flux standard action representing the FETCH_CONTACT_FINISH action.\n */\nexport function fetchContactFinish ({ contact, error }) {\n  return {\n    type: actionTypes.FETCH_CONTACT_FINISH,\n    payload: error || contact,\n    error: Boolean(error)\n  }\n}\n\n/**\n * Removes a contact from the Address Book\n * @param {string} contactId The id of the contact whom it has been requested to delete from the address book\n * @returns {Object} A flux standard action representing the REMOVE_CONTACT action.\n */\nexport function removeContact (contactId) {\n  return {\n    type: actionTypes.REMOVE_CONTACT,\n    payload: contactId\n  }\n}\n\n/**\n * The finishing action which follows a REMOVE_CONTACT action\n * @param {Object} $0\n * @param {string} [$0.contactId] The id of the contact whom it has been requested to delete from the address book\n * @param {Object} [$0.error] An error object. Only present if an error occurred.\n * @returns {Object} A flux standard action representing the REMOVE_CONTACT_FINISH action.\n */\nexport function removeContactFinish ({ contactId, error }) {\n  return {\n    type: actionTypes.REMOVE_CONTACT_FINISH,\n    payload: contactId || error,\n    error: !!error\n  }\n}\n\n/**\n * Updates the data for a contact in the Address Book\n * @param {Object} contact The contact object. The contact object must include the ID of the contact being targeted for an update action.\n * @returns {Object} A flux standard action representing the UPDATE_CONTACT action.\n */\nexport function updateContact (contact) {\n  return {\n    type: actionTypes.UPDATE_CONTACT,\n    payload: { contact }\n  }\n}\n\n/**\n * The finishing action which follows a UPDATE_CONTACT action\n * @param {Object} $0\n * @param {Object} [$0.contact] The contact object.\n * @param {Object} [$0.error] A Basic error object\n * @returns {Object} A flux standard action representing the UPDATE_CONTACT_FINISH action.\n */\nexport function updateContactFinish ({ contact, error }) {\n  return {\n    type: actionTypes.UPDATE_CONTACT_FINISH,\n    payload: error || contact,\n    error: !!error\n  }\n}\n","// Libraries\nimport { map, omit, reduce } from 'lodash/fp'\n\n/**\n * localContactFromRemote\n *\n * Convert a contact object from the back end format used in REST calls, to the local format maintained in the state.\n *\n * @param {Object} contact A remote contact object\n */\nexport function localContactFromRemote (contact) {\n  if (contact) {\n    const formattedContact = reduce(\n      (result, item) => ({ ...result, [item.name]: item.value }),\n      {},\n      contact.attributeList.attribute\n    )\n\n    formattedContact.contactId = contact.contactId\n    return formattedContact\n  }\n}\n\n/**\n * Helper function to restructure local contact data for use in a REST request.\n *\n * @param {Object} contact The contact object\n * @param {boolean} [newContact] Flag to indicate that the data being processed is for a new contact\n */\nexport function remoteContactFromLocal (contact, newContact = true) {\n  // Cloning the contact to facilitate the removal of `contactId` from the attributes portion of the REST body\n  const omittedKeys = newContact ? ['contactId'] : ['contactId', 'name']\n  const contactData = omit(omittedKeys, contact)\n  const attributes = map(([key, value]) => ({ name: key, value: String(value) }), Object.entries(contactData))\n\n  return {\n    contact: {\n      attributeList: {\n        attribute: attributes\n      },\n      contactId: contact.contactId\n    }\n  }\n}\n\n/**\n * Helper function to organize user information into an object structure for storage in state\n */\nexport function localUserFromRemote (data) {\n  const user = {}\n  for (const attribute of data.attribute) {\n    if (attribute.name === 'buddy') {\n      user[attribute.name] = attribute.value === 'true'\n    } else {\n      user[attribute.name] = attribute.value\n    }\n  }\n  if ('primaryContact' in user) {\n    user.userId = user.primaryContact\n    delete user.primaryContact\n  }\n  return user\n}\n","// Contacts actions\n/**\n * A new contact has been added to the address book.\n * @public\n * @memberof contacts\n * @event contacts:new\n * @param {Object} contact The new contact.\n */\nexport const CONTACTS_NEW = 'contacts:new'\n\n/**\n * An error occurred while performing a contact operation.\n * @public\n * @memberof contacts\n * @event contacts:error\n * @param {Object} params\n * @param {Object} params.error The Basic error object.\n */\nexport const CONTACTS_ERROR = 'contacts:error'\n\n/**\n * The contacts list has changed.\n * @public\n * @memberof contacts\n * @event contacts:change\n * @example\n * client.on('contacts:change', function () {\n *    // Get the updated list of contacts.\n *    const contacts = client.contacts.getAll()\n *    ...\n * })\n */\nexport const CONTACTS_CHANGE = 'contacts:change'\n\n// Users actions\n/**\n * The directory has changed.\n * @public\n * @static\n * @memberof user\n * @event directory:change\n * @param {Object} params\n * @param {Array<user.User>} params.results The Users' information returned by the\n *    operation.\n */\nexport const DIRECTORY_CHANGE = 'directory:change'\n\n/**\n * An error occurred while performing a directory operation.\n * @public\n * @memberof user\n * @event directory:error\n * @param {Object} params\n * @param {Object} params.error The Basic error object.\n */\nexport const DIRECTORY_ERROR = 'directory:error'\n\n/**\n * A change has occurred in the users list\n * @public\n * @static\n * @memberof user\n * @event users:change\n * @param {Object} params\n * @param {Array<user.User>} params.results The Users' information returned by the\n *    operation.\n */\nexport const USERS_CHANGE = 'users:change'\n\n/**\n * An error occurred while retrieving the user information\n * @public\n * @static\n * @memberof user\n * @event users:error\n * @param {Object} params\n * @param {Object} params.error params.error The Basic error object.\n */\nexport const USERS_ERROR = 'users:error'\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","/**\n * Creates and returns an SDP Handler function that will remove the desired codecs\n *  from the SDP when passed to the pipeline.\n *\n * @method createCodecRemover\n * @param  {Array<string|Object} codecs An array of strings or objects representing the desired codecs to be removed.\n * @example\n * // `codecs` paramters can be an array of strings (i.e., ['VP8', 'VP9']) or as objects with the following signature:\n * const codecsToBeRemoved = [{\n *   name: 'codecname',\n *   fmtpParams: 'specific ftmp parameter target'\n * }]\n * const codecRemover = createCodecRemover(codecsToBeRemoved)\n * @return {Function} returns an SDP handler function\n */\nexport function createCodecRemover (codecs = []) {\n  // We allow the user to pass in a codecs of objects or strings, so here we format the strings into objects for uniformity.\n  codecs = codecs.map(item => (typeof item === 'string' ? { name: item } : item))\n\n  return function (newSdp, info, originalSdp) {\n    // This is an array of strings representing codec names we want to remove.\n    const codecStringsToRemove = codecs.map(codec => codec.name)\n\n    newSdp.media.forEach(media => {\n      // This is an array of just the codes (codec payloads) that we FOR SURE want to remove.\n      const finalRemoveList = []\n      // This is an array of RTP objects who have codecs that are the same as strings passed in via codecs.\n      let filteredRtp = []\n\n      // If the current rtp.codec is in the codecStringsToRemove list, add the rtp to filteredRtp\n      filteredRtp = media.rtp.filter(rtp => codecStringsToRemove.includes(rtp.codec))\n\n      filteredRtp.forEach(rtp => {\n        // We grab the relevantCodec codecs object from the passed in codecs, based on the name string.\n        const relevantCodecs = codecs.filter(codec => codec.name === rtp.codec)\n\n        // We check the relevantCodec. If it is not present, then we have no codecs info for this specific rtp.\n        relevantCodecs.forEach(relevantCodec => {\n          // If fmtpParams doesnt exist or is of length 0 then we assume we can remove all instances of this codec\n          if (!relevantCodec.fmtpParams || (relevantCodec.fmtpParams && relevantCodec.fmtpParams.length === 0)) {\n            // We want to delete this codec no matter what, since no fmtp params were included.\n            finalRemoveList.push(rtp.payload)\n          } else {\n            // There are fmtp values for this codec. Therefore we have to check each media.fmtp object to see if it is the right one.\n            // Then when we find the right fmtp object, we check its config to see if it has the parameters specified in the input.\n            media.fmtp.forEach(fmtp => {\n              // We check each iteration to see if we found the right fmtp object.\n              if (fmtp.payload === rtp.payload) {\n                // If we found the right fmtp object, we have to make sure each config param is in the fmtp.config.\n                if (relevantCodec.fmtpParams.every(c => fmtp.config.includes(c))) {\n                  finalRemoveList.push(rtp.payload)\n                }\n              }\n            })\n          }\n        })\n      })\n\n      // At this point we should have an array (finalRemoveList) that contains all ORIGINAL codec payloads that we need to remove.\n      // We now need to check fmtp for all rtx payloads ASSOCIATED with the original codec payload.\n      media.fmtp.forEach(fmtp => {\n        // Check if the config contains apt=, which indicates this fmtp is associated with another.\n        if (fmtp.config.includes('apt=')) {\n          // If so, lets grab the whole string WITHOUT the apt= part, and convet it into an integer. This should be a payload number.\n          var payload = parseInt(fmtp.config.replace('apt=', ''))\n\n          // Check if the finalRemoveList contains the payload that this fmtp is associated with.\n          if (finalRemoveList.includes(payload)) {\n            // If so, then we need to add this fmtp.payload to the finalRemoveList\n            finalRemoveList.push(fmtp.payload)\n          }\n        }\n      })\n\n      // We assume past this point that the finalRemoveList is all powerful.\n      // For each codec in the media.payloads string, if it is in our finalRemoveList list, we remove it.\n      let isNumber = false\n      if (typeof media.payloads === 'number') {\n        media.payloads = media.payloads.toString()\n        isNumber = true\n      }\n      if (media.payloads) {\n        media.payloads = media.payloads\n          .split(' ')\n          .filter(payload => !finalRemoveList.includes(parseInt(payload)))\n          .join(' ')\n      }\n      if (media.payloads && isNumber) {\n        media.payloads = parseInt(media.payloads)\n      }\n\n      // For each codec object, if the payload is in our filteredCodes list, we remove the object.\n      media.rtp = media.rtp.filter(rtp => !finalRemoveList.includes(rtp.payload))\n      media.fmtp = media.fmtp.filter(fmtp => !finalRemoveList.includes(fmtp.payload))\n\n      if (media.rtcpFb) {\n        media.rtcpFb = media.rtcpFb.filter(rtcpFb => !finalRemoveList.includes(rtcpFb.payload))\n      }\n    })\n\n    return newSdp\n  }\n}\n","// SDP Handlers\nexport * from './codecRemover.js'\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","module.exports = curry;\n\n/*\n  function add(a, b, c) {\n    return a + b + c;\n  }\n  curry(add)(1)(2)(3); // 6\n  curry(add)(1)(2)(2); // 5\n  curry(add)(2)(4, 3); // 9\n\n  function add(...args) {\n    return args.reduce((sum, n) => sum + n, 0)\n  }\n  var curryAdd4 = curry(add, 4)\n  curryAdd4(1)(2, 3)(4); // 10\n\n  function converter(ratio, input) {\n    return (input*ratio).toFixed(1);\n  }\n  const curriedConverter = curry(converter)\n  const milesToKm = curriedConverter(1.62);\n  milesToKm(35); // 56.7\n  milesToKm(10); // 16.2\n*/\n\nfunction curry(fn, arity) {\n  return function curried() {\n    if (arity == null) {\n      arity = fn.length;\n    }\n    var args = [].slice.call(arguments);\n    if (args.length >= arity) {\n      return fn.apply(this, args);\n    } else {\n      return function() {\n        return curried.apply(this, args.concat([].slice.call(arguments)));\n      };\n    }\n  };\n}\n","import commonIndex from '../core'\n\n// Plugins\nimport basePlugins from '../core/basePlugins'\nimport auth from '../../packages/kandy/src/auth/cpaas'\nimport webrtc from '../../packages/kandy/src/webrtc'\nimport call from '../../packages/kandy/src/call/cpaas'\nimport connectivity from '../../packages/kandy/src/connectivity/cpaas'\nimport messaging from '../../packages/kandy/src/messaging/cpaas'\nimport notifications from '../../packages/kandy/src/notifications/cpaas'\nimport presence from '../../packages/kandy/src/presence/cpaas'\nimport groups from '../../packages/kandy/src/groups/cpaas'\nimport subscription from '../../packages/kandy/src/subscription/cpaas'\nimport users from '../../packages/kandy/src/users/cpaas'\nimport { cpaasRequest } from '../../packages/kandy/src/request'\nimport '../../packages/kandy/src/docs/docs'\n\nimport { createCodecRemover } from '@kandy-io/sdp-handlers'\n\nconst defaultPlugins = [\n  ...basePlugins,\n  { name: 'authentication', fn: auth },\n  { name: 'webrtc', fn: webrtc },\n  { name: 'call', fn: call },\n  { name: 'connectivity', fn: connectivity },\n  { name: 'messaging', fn: messaging },\n  { name: 'notifications', fn: notifications },\n  { name: 'presence', fn: presence },\n  { name: 'groups', fn: groups },\n  { name: 'subscription', fn: subscription },\n  { name: 'users', fn: users },\n  { name: 'request', fn: cpaasRequest }\n]\n\nfunction root (options = {}, plugins = []) {\n  return commonIndex(options, [...defaultPlugins, ...plugins])\n}\n\n// Alias 'create' to be equal to the root function\nroot.create = root\n\nroot.sdpHandlers = {\n  createCodecRemover\n}\n\n// Export this way as a work-around, so it can be used as `<export>();`.\n// See: https://github.com/webpack/webpack/issues/706\nmodule.exports = root\n","// Disabling eslint for the next comment as we want to be able to use a disallowed word\n// eslint-disable-next-line no-warning-comments\n/**\n * The SDK creation factory. Create an instance of the SDK by calling this factory with the desired configurations.\n * The SDK instance will be referred as 'api' throughout the rest of the documentation content.\n * @public\n * @method create\n * @param {config} config The configuration object.\n * @return {api} The SDK instance.\n * @example\n * // Instantiate the SDK.\n * import { create } from 'kandy'\n * const client = create({\n *     authentication: { ... },\n *     logs: { ... },\n *     ...\n * });\n * // Use the SDK's API.\n * client.on( ... );\n */\n\n/**\n * The 'api' is the type returned by the create function.\n * It contains various top-level functions that pertain to SDK global instance\n * as well as several nested namespaces that pertain to various features (e.g. call, contacts, presence, etc).\n *\n * @public\n * @module api\n */\n\n/**\n * The configuration object. This object defines what different configuration\n * values you can use when instantiating the SDK using the {@link create} function.\n * @public\n * @module config\n */\n\n// Disabling eslint for the next comment as we want to be able to use a disallowed word\n// eslint-disable-next-line no-warning-comments\n/**\n * A set of {@link call.SdpHandlerFunction SdpHandlerFunction}s for manipulating SDP information.\n * These handlers are used to customize low-level call behaviour for very specific\n * environments and/or scenarios.\n *\n * Note that SDP handlers are exposed on the entry point of the SDK. They can be added during\n * initialization of the SDK using the {@link #configconfigcall config.call.sdpHandlers} configuration\n * parameter. They can also be set after the SDK's creation by using the\n * {@link call.setSdpHandlers} function.\n *\n * @public\n * @namespace sdpHandlers\n * @example\n * import { create, sdpHandlers } from 'kandy';\n * const codecRemover = sdpHandlers.createCodecRemover(['VP8', 'VP9'])\n * const client = create({\n *   call: {\n *     sdpHandlers: [ codecRemover, <Your-SDP-Handler-Function>, ...]\n *   }\n * })\n * @example\n * // Through the Call API post-instantiation\n * client.call.setSdpHandlers([ codecRemover, <Your-SDP-Handler-Function>, ...])\n */\n\n/**\n * An object that represents a selector to match codecs of an RTP map in SDP.\n *\n * @public\n * @static\n * @typedef {Object} CodecSelector\n * @memberof sdpHandlers\n * @property {string} name The name of the codec.\n * @property {Array<string>} fmtpParams An array of strings to match against the \"a=fmtp\" format parameters for the corresponding codec.\n *                                      All of the elements in the array must be contained in the \"a=fmtp\" attribute in order to be a match.\n */\n\n/**\n * This function creates an SDP handler that will remove codecs matching the selectors specified for SDP offers and answers.\n *\n * In some scenarios it's necessary to remove certain codecs being offered by the SDK to remote parties. For example, some legacy call services limit the SDP\n * length (usually to 4KB) and will reject calls that have SDP size above this amount.\n *\n * While creating an SDP handler would allow a user to perform this type of manipulation, it is a non-trivial task that requires in-depth knowledge of WebRTC SDP.\n *\n * To facilitate this common task, the createCodecRemover function creates a codec removal handler that can be used for this purpose. Applications can use this codec\n * removal handler in combination with the {@link call.getAvailableCodecs call.getAvailableCodecs} function in order to build logic to determine the best codecs to use\n * for their application.\n *\n * @public\n * @memberof sdpHandlers\n * @method createCodecRemover\n * @param {Array<CodecSelector> | Array<string>} codecs A list of codec selectors to remove from the SDP. If passing a list of strings, they will be converted into\n *                                                      codec selectors that correspond to those names without any extra FMTP parameters.\n * @returns {call.SdpHandlerFunction} The resulting SDP handler that will remove the codec.\n * @example\n * import { create, sdpHandlers } from 'kandy';\n *\n * const codecRemover = sdpHandlers.createCodecRemover([\n *   // Remove all VP8 and VP9 codecs.\n *   'VP8',\n *   'VP9',\n *\n *   // Remove all H264 codecs with the specified FMTP parameters.\n *   {\n *     name: 'H264',\n *     fmtpParams: ['profile-level-id=4d0032', 'packetization-mode=1']\n *   }\n * ])\n *\n * const client = create({\n *   call: {\n *     sdpHandlers: [codecRemover]\n *   }\n * })\n *\n */\n\n/*\n * Index template file that is used to create pre-defined version of the SDK.\n */\nimport { factory } from '../../packages/kandy/src/factory'\nimport { _ } from 'lodash/fp'\n\n// This is a hack to fix an issue where Lodash will add itself to\n// the window scope even if it's loaded via ES6. You can remove this when\n// we have an answer to https://github.com/lodash/lodash/issues/1798 .\n// eslint-disable-next-line\nif (_) _.noConflict()\n\nexport default function commonIndex (options = {}, plugins = []) {\n  return factory(plugins, options)\n}\n","// Libraries.\nimport { combineReducers, createStore, applyMiddleware, compose as composeWithoutDevTools } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport { cloneDeep, map, merge } from 'lodash/fp'\nimport { fork } from 'redux-saga/effects'\nimport compose from '@stamp/compose'\n\n// Helpers.\nimport { autoRestart, mergeValues } from './common/utils'\nimport { getVersion } from './common/version'\n\n// Plugins.\nimport { logManager } from './logs'\n\n// Parse and/or Validate\nimport { validation as v8n, parse } from './common/validation'\nconst log = logManager.getLogger('FACTORY')\n\nconst factoryDefaults = {\n  enableReduxDevTools: false,\n  reduxDevToolsName: 'WebRTC SDK',\n  allowProxy: false\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  enableReduxDevTools: v8n.boolean(),\n  reduxDevToolsName: v8n.string(),\n  allowProxy: v8n.boolean()\n})\nconst parseOptions = parse('common', v8nValidation)\n\n/**\n * Creates an instance of the SDK with the specified plugins and configuration.\n *\n * @param {Function[]} pluginFactories - The list of factories to create plugins for this instance of the SDK.\n * @param {Object} [sdkOptions] - Factory and plugin options\n * @param {Object} [sdkOptions.common] - Factory specific options\n * @param {boolean} [sdkOptions.common.enableReduxDevTools] - A flag to indicate whether or not to include Redux Dev Tools\n * @param {string}  [sdkOptions.common.reduxDevToolsName=\"WebRTC SDK\"] - The name of the store that will show up in the\n *                                          Redux Dev tools. This helps differentiate the SDK from other redux instances.\n * @param {boolean} [sdkOptions.allowProxy] Whether the factory should allow the Proxy Plugin to be included.\n */\nexport function factory (pluginFactories, sdkOptions = {}) {\n  // Log the SDK's version (templated by webpack) on initialization.\n  const version = getVersion()\n  log.info(`SDK version: ${version}`)\n\n  // Clone the options so we don't mutate the application's object.\n  const clonedOptions = cloneDeep(sdkOptions)\n  // Separate factory and plugin options.\n  let { common: options, ...pluginOptions } = clonedOptions\n\n  options = mergeValues(factoryDefaults, options)\n  parseOptions(options)\n\n  var sagas = []\n  var store\n  var middlewares = []\n  const apis = []\n  var reducers = {}\n  var initSagas = []\n  var taskDescriptor\n  const shared = {}\n  var context = {\n    capabilities: [],\n    api: {},\n    primitives: {},\n    getState () {\n      if (!store) {\n        throw Error('Store is not available during factory creation')\n      }\n      if (destroyedSDK) {\n        throw Error('State is not available if the SDK has been destroyed')\n      }\n      return store.getState()\n    },\n    dispatch (...args) {\n      if (!store) {\n        throw Error('Store is not available during factory creation')\n      }\n      return store.dispatch(...args)\n    },\n    subscribe (fn) {\n      if (!store) {\n        throw Error('Store is not available during factory creation')\n      }\n      return store.subscribe(fn)\n    }\n  }\n\n  // Special case middleware for logging.\n  var loggerMiddleware\n\n  var destroyedSDK = false\n  var destroyedSDKMiddleware = store => next => action => {\n    if (destroyedSDK) {\n      return null\n    } else {\n      return next(action)\n    }\n  }\n\n  // Instantiate the plugins.\n  let plugins = map(function (plugin) {\n    // Make sure the plugin factory is actually a function.\n    if (!plugin || !plugin.fn || typeof plugin.fn !== 'function') {\n      return false\n    }\n\n    return plugin.fn(pluginOptions[plugin.name])\n  }, pluginFactories)\n\n  // Remove undefined plugins. Those are plugins that failed to load for some reason.\n  plugins = plugins.filter(plugin => Boolean(plugin))\n\n  // Run all the plugins to build the context.\n  // Set up each plugin component individually.\n  plugins.forEach(function (plugin) {\n    // Ignore the Proxy Plugin if not configured to allow it.\n    if (plugin.name === 'proxy' && !options.allowProxy) {\n      plugin = {}\n    }\n\n    if (plugin.capabilities) {\n      context.capabilities = context.capabilities.concat(plugin.capabilities)\n    }\n    if (plugin.reducer) {\n      reducers[plugin.name] = plugin.reducer\n    }\n    if (plugin.middleware) {\n      if (plugin.name === 'logs') {\n        loggerMiddleware = plugin.middleware\n      } else {\n        middlewares.push(() => plugin.middleware(context)) // pass context to middleware instead of store\n      }\n    }\n    if (plugin.api) {\n      apis.push(plugin.api)\n    }\n    if (plugin.init) {\n      initSagas.push(plugin.init)\n    }\n    if (plugin.sagas) {\n      sagas = sagas.concat(plugin.sagas)\n    }\n    // TODO: Revisit this. Looks a little extreme for a couple stamps...\n    if (plugin.mixins) {\n      // Define a base stamp that all stamps will be composed with.\n      //      This gives stamps access to the factory's context.\n      const baseStamp = {\n        propertyDescriptors: {\n          context: {\n            get () {\n              return context\n            }\n          }\n        }\n      }\n      for (const objName in plugin.mixins) {\n        if (plugin.mixins.hasOwnProperty(objName)) {\n          // Ensure that every stamp starts with the base stamp.\n          if (!context.primitives.hasOwnProperty(objName)) {\n            context.primitives[objName] = baseStamp\n          }\n          context.primitives[objName] = compose(context.primitives[objName], plugin.mixins[objName])\n        }\n      }\n    }\n\n    /**\n     * Plugins are allowed to share data between them by providing it to the\n     *    factory. All shared data will be collected as a single object, and\n     *    that object will be provided to plugins during their `init` saga.\n     * It is intended that a plugin can \"override\" another plugin's shared data.\n     * The order that plugins are given to the factory matters because of this.\n     * `plugin.shared` is expected to be an object.\n     */\n    if (plugin.shared) {\n      for (const key in plugin.shared) {\n        if (shared[key]) {\n          log.debug(`Replacing shared ${key} with ${key} from ${plugin.name}.`)\n          shared[key] = plugin.shared[key]\n        } else {\n          shared[key] = plugin.shared[key]\n        }\n      }\n    }\n  })\n\n  if (loggerMiddleware) {\n    // The redux logger middleware should be the last middleware.\n    middlewares.push(() => loggerMiddleware(context))\n  }\n\n  // Compose the root saga\n  function * rootSaga () {\n    // Give all plugins an opportunity to initialize themselves.\n    // Note: Sagas have not been forked yet, so init cannot use them\n    //      by dispatching actions. See PR #698.\n    // Note: If anything asynchronous is done in an init, it MUST be\n    //      non-blocking (ie. use fork, not call). See PR #699.\n    for (const init of initSagas) {\n      // Note: Yield directly to init. If redux-saga's `call()` is used, then the\n      //      factory returns before the instance is done all inits. See PR #699.\n      // Provide the factory's shared data (from plugins) to the `init` saga.\n      yield * init(shared)\n    }\n    // Run all of the sagas provided by implementation plugins.\n    for (const saga of sagas) {\n      yield fork(autoRestart(saga))\n    }\n  }\n\n  // Alias our composeMiddleware to conditionally include devTools as per the provided configuration flag\n  const composeMiddleware = options.enableReduxDevTools\n    ? composeWithDevTools({ name: options.reduxDevToolsName })\n    : composeWithoutDevTools\n\n  // don't include saga stuff if there are no sagas.\n  if (initSagas.length + sagas.length > 0) {\n    var sagaMiddleware = createSagaMiddleware()\n\n    // Create the store with the plugins (incl. sagas) and with the configuration as the initial state.\n    store = createStore(\n      combineReducers(reducers),\n      composeMiddleware(applyMiddleware(destroyedSDKMiddleware, sagaMiddleware, ...middlewares))\n    )\n\n    taskDescriptor = sagaMiddleware.run(rootSaga)\n  } else {\n    // Create the store with the plugins (excl. sagas) and with the configuration as the initial state.\n    store = createStore(\n      combineReducers(reducers),\n      composeMiddleware(applyMiddleware(destroyedSDKMiddleware, ...middlewares))\n    )\n  }\n\n  // Use the plugins' API factories to build the public API.\n  //    Do this after the store has been created.\n  apis.forEach(apiFactory => {\n    context.api = merge(context.api, apiFactory(context))\n  })\n\n  // setup the API\n  const publicAPI = {\n    ...context.api,\n    state: {\n      get: function () {\n        return store.getState()\n      },\n      subscribe: function (...args) {\n        return store.subscribe(...args)\n      }\n    },\n    /**\n     * Return all the capabilities currently available to the plugin system.\n     *\n     * @memberof api\n     * @method getCapabilities\n     */\n    getCapabilities () {\n      return context.capabilities\n    },\n    /**\n     * Returns the current version of the API.\n     *\n     * @public\n     * @memberof api\n     * @method getVersion\n     */\n    getVersion () {\n      return version\n    },\n    // Disabling eslint for the next comment as we want to be able to use a disallowed word\n    // eslint-disable-next-line no-warning-comments\n    /**\n     * Destroys the SDK, and removes its state, rendering the SDK unusable.\n     * Useful when a user logs out and their call data needs to be destroyed.\n     * The SDK must be recreated to be usable again.\n     * The destroy command is async, and will happen on the next tick\n     *   so as not to interfere with any ongoing events.\n     *\n     * @public\n     * @memberof api\n     * @method destroy\n     * @example\n     * // Instantiate the SDK.\n     * import { create } from 'kandy'\n     * const config = {\n     *     authentication: { ... },\n     *     logs: { ... },\n     *     ...\n     * }\n     * let client = create(config);\n     * client.on( ... )\n     * // Use the SDK\n     * ...\n     * // Destroy the SDK, then recreate on the next step\n     * client.destroy()\n     * client = create(config)\n     * client.on( ... )\n     */\n    destroy () {\n      // TODO: Is it possible for the store to auto-unsubscribe any listeners\n      //    (from client.state.subscribe API)? If not, may be easier to simply\n      //    protect from issues.\n\n      const _destroy = () => {\n        if (destroyedSDK) return\n\n        // Cancel all the sagas\n        if (taskDescriptor) taskDescriptor.cancel()\n\n        // Clear the state\n        function destroyStateReducer (state, action) {\n          return {}\n        }\n        store.replaceReducer(destroyStateReducer)\n\n        // Neuter all actions\n        destroyedSDK = true\n      }\n\n      // setTimeout is necessary so that the destroy\n      //   happens at the start of the next tick for\n      //   when destroy is called inside an event handler\n      const immediately = 0\n      setTimeout(_destroy, immediately)\n    }\n  }\n\n  // Return the public API.\n  return publicAPI\n}\n","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","'use strict';\n\nvar compose = require('redux').compose;\n\nexports.__esModule = true;\nexports.composeWithDevTools =\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : function () {\n        if (arguments.length === 0) return undefined;\n        if (typeof arguments[0] === 'object') return compose;\n        return compose.apply(null, arguments);\n      };\n\nexports.devToolsEnhancer =\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__\n    : function () {\n        return function (noop) {\n          return noop;\n        };\n      };\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n(function(){function n(n,t,r){switch(r.length){case 0:return n.call(t);case 1:return n.call(t,r[0]);case 2:return n.call(t,r[0],r[1]);case 3:return n.call(t,r[0],r[1],r[2])}return n.apply(t,r)}function t(n,t,r,e){for(var u=-1,i=null==n?0:n.length;++u<i;){var o=n[u];t(e,o,r(o),n)}return e}function r(n,t){for(var r=-1,e=null==n?0:n.length;++r<e&&t(n[r],r,n)!==!1;);return n}function e(n,t){for(var r=null==n?0:n.length;r--&&t(n[r],r,n)!==!1;);return n}function u(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(!t(n[r],r,n))return!1;\nreturn!0}function i(n,t){for(var r=-1,e=null==n?0:n.length,u=0,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[u++]=o)}return i}function o(n,t){return!!(null==n?0:n.length)&&y(n,t,0)>-1}function f(n,t,r){for(var e=-1,u=null==n?0:n.length;++e<u;)if(r(t,n[e]))return!0;return!1}function c(n,t){for(var r=-1,e=null==n?0:n.length,u=Array(e);++r<e;)u[r]=t(n[r],r,n);return u}function a(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function l(n,t,r,e){var u=-1,i=null==n?0:n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);\nreturn r}function s(n,t,r,e){var u=null==n?0:n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function h(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(t(n[r],r,n))return!0;return!1}function p(n){return n.split(\"\")}function _(n){return n.match($t)||[]}function v(n,t,r){var e;return r(n,function(n,r,u){if(t(n,r,u))return e=r,!1}),e}function g(n,t,r,e){for(var u=n.length,i=r+(e?1:-1);e?i--:++i<u;)if(t(n[i],i,n))return i;return-1}function y(n,t,r){return t===t?Z(n,t,r):g(n,b,r)}function d(n,t,r,e){\nfor(var u=r-1,i=n.length;++u<i;)if(e(n[u],t))return u;return-1}function b(n){return n!==n}function w(n,t){var r=null==n?0:n.length;return r?k(n,t)/r:Cn}function m(n){return function(t){return null==t?X:t[n]}}function x(n){return function(t){return null==n?X:n[t]}}function j(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=!1,n):t(r,n,u,i)}),r}function A(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].value;return n}function k(n,t){for(var r,e=-1,u=n.length;++e<u;){var i=t(n[e]);i!==X&&(r=r===X?i:r+i);\n}return r}function O(n,t){for(var r=-1,e=Array(n);++r<n;)e[r]=t(r);return e}function I(n,t){return c(t,function(t){return[t,n[t]]})}function R(n){return n?n.slice(0,H(n)+1).replace(Lt,\"\"):n}function z(n){return function(t){return n(t)}}function E(n,t){return c(t,function(t){return n[t]})}function S(n,t){return n.has(t)}function W(n,t){for(var r=-1,e=n.length;++r<e&&y(t,n[r],0)>-1;);return r}function L(n,t){for(var r=n.length;r--&&y(t,n[r],0)>-1;);return r}function C(n,t){for(var r=n.length,e=0;r--;)n[r]===t&&++e;\nreturn e}function U(n){return\"\\\\\"+Yr[n]}function B(n,t){return null==n?X:n[t]}function T(n){return Nr.test(n)}function $(n){return Pr.test(n)}function D(n){for(var t,r=[];!(t=n.next()).done;)r.push(t.value);return r}function M(n){var t=-1,r=Array(n.size);return n.forEach(function(n,e){r[++t]=[e,n]}),r}function F(n,t){return function(r){return n(t(r))}}function N(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r];o!==t&&o!==cn||(n[r]=cn,i[u++]=r)}return i}function P(n){var t=-1,r=Array(n.size);\nreturn n.forEach(function(n){r[++t]=n}),r}function q(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=[n,n]}),r}function Z(n,t,r){for(var e=r-1,u=n.length;++e<u;)if(n[e]===t)return e;return-1}function K(n,t,r){for(var e=r+1;e--;)if(n[e]===t)return e;return e}function V(n){return T(n)?J(n):_e(n)}function G(n){return T(n)?Y(n):p(n)}function H(n){for(var t=n.length;t--&&Ct.test(n.charAt(t)););return t}function J(n){for(var t=Mr.lastIndex=0;Mr.test(n);)++t;return t}function Y(n){return n.match(Mr)||[];\n}function Q(n){return n.match(Fr)||[]}var X,nn=\"4.17.21\",tn=200,rn=\"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\",en=\"Expected a function\",un=\"Invalid `variable` option passed into `_.template`\",on=\"__lodash_hash_undefined__\",fn=500,cn=\"__lodash_placeholder__\",an=1,ln=2,sn=4,hn=1,pn=2,_n=1,vn=2,gn=4,yn=8,dn=16,bn=32,wn=64,mn=128,xn=256,jn=512,An=30,kn=\"...\",On=800,In=16,Rn=1,zn=2,En=3,Sn=1/0,Wn=9007199254740991,Ln=1.7976931348623157e308,Cn=NaN,Un=4294967295,Bn=Un-1,Tn=Un>>>1,$n=[[\"ary\",mn],[\"bind\",_n],[\"bindKey\",vn],[\"curry\",yn],[\"curryRight\",dn],[\"flip\",jn],[\"partial\",bn],[\"partialRight\",wn],[\"rearg\",xn]],Dn=\"[object Arguments]\",Mn=\"[object Array]\",Fn=\"[object AsyncFunction]\",Nn=\"[object Boolean]\",Pn=\"[object Date]\",qn=\"[object DOMException]\",Zn=\"[object Error]\",Kn=\"[object Function]\",Vn=\"[object GeneratorFunction]\",Gn=\"[object Map]\",Hn=\"[object Number]\",Jn=\"[object Null]\",Yn=\"[object Object]\",Qn=\"[object Promise]\",Xn=\"[object Proxy]\",nt=\"[object RegExp]\",tt=\"[object Set]\",rt=\"[object String]\",et=\"[object Symbol]\",ut=\"[object Undefined]\",it=\"[object WeakMap]\",ot=\"[object WeakSet]\",ft=\"[object ArrayBuffer]\",ct=\"[object DataView]\",at=\"[object Float32Array]\",lt=\"[object Float64Array]\",st=\"[object Int8Array]\",ht=\"[object Int16Array]\",pt=\"[object Int32Array]\",_t=\"[object Uint8Array]\",vt=\"[object Uint8ClampedArray]\",gt=\"[object Uint16Array]\",yt=\"[object Uint32Array]\",dt=/\\b__p \\+= '';/g,bt=/\\b(__p \\+=) '' \\+/g,wt=/(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g,mt=/&(?:amp|lt|gt|quot|#39);/g,xt=/[&<>\"']/g,jt=RegExp(mt.source),At=RegExp(xt.source),kt=/<%-([\\s\\S]+?)%>/g,Ot=/<%([\\s\\S]+?)%>/g,It=/<%=([\\s\\S]+?)%>/g,Rt=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,zt=/^\\w*$/,Et=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,St=/[\\\\^$.*+?()[\\]{}|]/g,Wt=RegExp(St.source),Lt=/^\\s+/,Ct=/\\s/,Ut=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,Bt=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,Tt=/,? & /,$t=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,Dt=/[()=,{}\\[\\]\\/\\s]/,Mt=/\\\\(\\\\)?/g,Ft=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,Nt=/\\w*$/,Pt=/^[-+]0x[0-9a-f]+$/i,qt=/^0b[01]+$/i,Zt=/^\\[object .+?Constructor\\]$/,Kt=/^0o[0-7]+$/i,Vt=/^(?:0|[1-9]\\d*)$/,Gt=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,Ht=/($^)/,Jt=/['\\n\\r\\u2028\\u2029\\\\]/g,Yt=\"\\\\ud800-\\\\udfff\",Qt=\"\\\\u0300-\\\\u036f\",Xt=\"\\\\ufe20-\\\\ufe2f\",nr=\"\\\\u20d0-\\\\u20ff\",tr=Qt+Xt+nr,rr=\"\\\\u2700-\\\\u27bf\",er=\"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\",ur=\"\\\\xac\\\\xb1\\\\xd7\\\\xf7\",ir=\"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\",or=\"\\\\u2000-\\\\u206f\",fr=\" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",cr=\"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\",ar=\"\\\\ufe0e\\\\ufe0f\",lr=ur+ir+or+fr,sr=\"['\\u2019]\",hr=\"[\"+Yt+\"]\",pr=\"[\"+lr+\"]\",_r=\"[\"+tr+\"]\",vr=\"\\\\d+\",gr=\"[\"+rr+\"]\",yr=\"[\"+er+\"]\",dr=\"[^\"+Yt+lr+vr+rr+er+cr+\"]\",br=\"\\\\ud83c[\\\\udffb-\\\\udfff]\",wr=\"(?:\"+_r+\"|\"+br+\")\",mr=\"[^\"+Yt+\"]\",xr=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",jr=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",Ar=\"[\"+cr+\"]\",kr=\"\\\\u200d\",Or=\"(?:\"+yr+\"|\"+dr+\")\",Ir=\"(?:\"+Ar+\"|\"+dr+\")\",Rr=\"(?:\"+sr+\"(?:d|ll|m|re|s|t|ve))?\",zr=\"(?:\"+sr+\"(?:D|LL|M|RE|S|T|VE))?\",Er=wr+\"?\",Sr=\"[\"+ar+\"]?\",Wr=\"(?:\"+kr+\"(?:\"+[mr,xr,jr].join(\"|\")+\")\"+Sr+Er+\")*\",Lr=\"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\",Cr=\"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\",Ur=Sr+Er+Wr,Br=\"(?:\"+[gr,xr,jr].join(\"|\")+\")\"+Ur,Tr=\"(?:\"+[mr+_r+\"?\",_r,xr,jr,hr].join(\"|\")+\")\",$r=RegExp(sr,\"g\"),Dr=RegExp(_r,\"g\"),Mr=RegExp(br+\"(?=\"+br+\")|\"+Tr+Ur,\"g\"),Fr=RegExp([Ar+\"?\"+yr+\"+\"+Rr+\"(?=\"+[pr,Ar,\"$\"].join(\"|\")+\")\",Ir+\"+\"+zr+\"(?=\"+[pr,Ar+Or,\"$\"].join(\"|\")+\")\",Ar+\"?\"+Or+\"+\"+Rr,Ar+\"+\"+zr,Cr,Lr,vr,Br].join(\"|\"),\"g\"),Nr=RegExp(\"[\"+kr+Yt+tr+ar+\"]\"),Pr=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,qr=[\"Array\",\"Buffer\",\"DataView\",\"Date\",\"Error\",\"Float32Array\",\"Float64Array\",\"Function\",\"Int8Array\",\"Int16Array\",\"Int32Array\",\"Map\",\"Math\",\"Object\",\"Promise\",\"RegExp\",\"Set\",\"String\",\"Symbol\",\"TypeError\",\"Uint8Array\",\"Uint8ClampedArray\",\"Uint16Array\",\"Uint32Array\",\"WeakMap\",\"_\",\"clearTimeout\",\"isFinite\",\"parseInt\",\"setTimeout\"],Zr=-1,Kr={};\nKr[at]=Kr[lt]=Kr[st]=Kr[ht]=Kr[pt]=Kr[_t]=Kr[vt]=Kr[gt]=Kr[yt]=!0,Kr[Dn]=Kr[Mn]=Kr[ft]=Kr[Nn]=Kr[ct]=Kr[Pn]=Kr[Zn]=Kr[Kn]=Kr[Gn]=Kr[Hn]=Kr[Yn]=Kr[nt]=Kr[tt]=Kr[rt]=Kr[it]=!1;var Vr={};Vr[Dn]=Vr[Mn]=Vr[ft]=Vr[ct]=Vr[Nn]=Vr[Pn]=Vr[at]=Vr[lt]=Vr[st]=Vr[ht]=Vr[pt]=Vr[Gn]=Vr[Hn]=Vr[Yn]=Vr[nt]=Vr[tt]=Vr[rt]=Vr[et]=Vr[_t]=Vr[vt]=Vr[gt]=Vr[yt]=!0,Vr[Zn]=Vr[Kn]=Vr[it]=!1;var Gr={\"\\xc0\":\"A\",\"\\xc1\":\"A\",\"\\xc2\":\"A\",\"\\xc3\":\"A\",\"\\xc4\":\"A\",\"\\xc5\":\"A\",\"\\xe0\":\"a\",\"\\xe1\":\"a\",\"\\xe2\":\"a\",\"\\xe3\":\"a\",\"\\xe4\":\"a\",\"\\xe5\":\"a\",\n\"\\xc7\":\"C\",\"\\xe7\":\"c\",\"\\xd0\":\"D\",\"\\xf0\":\"d\",\"\\xc8\":\"E\",\"\\xc9\":\"E\",\"\\xca\":\"E\",\"\\xcb\":\"E\",\"\\xe8\":\"e\",\"\\xe9\":\"e\",\"\\xea\":\"e\",\"\\xeb\":\"e\",\"\\xcc\":\"I\",\"\\xcd\":\"I\",\"\\xce\":\"I\",\"\\xcf\":\"I\",\"\\xec\":\"i\",\"\\xed\":\"i\",\"\\xee\":\"i\",\"\\xef\":\"i\",\"\\xd1\":\"N\",\"\\xf1\":\"n\",\"\\xd2\":\"O\",\"\\xd3\":\"O\",\"\\xd4\":\"O\",\"\\xd5\":\"O\",\"\\xd6\":\"O\",\"\\xd8\":\"O\",\"\\xf2\":\"o\",\"\\xf3\":\"o\",\"\\xf4\":\"o\",\"\\xf5\":\"o\",\"\\xf6\":\"o\",\"\\xf8\":\"o\",\"\\xd9\":\"U\",\"\\xda\":\"U\",\"\\xdb\":\"U\",\"\\xdc\":\"U\",\"\\xf9\":\"u\",\"\\xfa\":\"u\",\"\\xfb\":\"u\",\"\\xfc\":\"u\",\"\\xdd\":\"Y\",\"\\xfd\":\"y\",\"\\xff\":\"y\",\"\\xc6\":\"Ae\",\n\"\\xe6\":\"ae\",\"\\xde\":\"Th\",\"\\xfe\":\"th\",\"\\xdf\":\"ss\",\"\\u0100\":\"A\",\"\\u0102\":\"A\",\"\\u0104\":\"A\",\"\\u0101\":\"a\",\"\\u0103\":\"a\",\"\\u0105\":\"a\",\"\\u0106\":\"C\",\"\\u0108\":\"C\",\"\\u010a\":\"C\",\"\\u010c\":\"C\",\"\\u0107\":\"c\",\"\\u0109\":\"c\",\"\\u010b\":\"c\",\"\\u010d\":\"c\",\"\\u010e\":\"D\",\"\\u0110\":\"D\",\"\\u010f\":\"d\",\"\\u0111\":\"d\",\"\\u0112\":\"E\",\"\\u0114\":\"E\",\"\\u0116\":\"E\",\"\\u0118\":\"E\",\"\\u011a\":\"E\",\"\\u0113\":\"e\",\"\\u0115\":\"e\",\"\\u0117\":\"e\",\"\\u0119\":\"e\",\"\\u011b\":\"e\",\"\\u011c\":\"G\",\"\\u011e\":\"G\",\"\\u0120\":\"G\",\"\\u0122\":\"G\",\"\\u011d\":\"g\",\"\\u011f\":\"g\",\"\\u0121\":\"g\",\n\"\\u0123\":\"g\",\"\\u0124\":\"H\",\"\\u0126\":\"H\",\"\\u0125\":\"h\",\"\\u0127\":\"h\",\"\\u0128\":\"I\",\"\\u012a\":\"I\",\"\\u012c\":\"I\",\"\\u012e\":\"I\",\"\\u0130\":\"I\",\"\\u0129\":\"i\",\"\\u012b\":\"i\",\"\\u012d\":\"i\",\"\\u012f\":\"i\",\"\\u0131\":\"i\",\"\\u0134\":\"J\",\"\\u0135\":\"j\",\"\\u0136\":\"K\",\"\\u0137\":\"k\",\"\\u0138\":\"k\",\"\\u0139\":\"L\",\"\\u013b\":\"L\",\"\\u013d\":\"L\",\"\\u013f\":\"L\",\"\\u0141\":\"L\",\"\\u013a\":\"l\",\"\\u013c\":\"l\",\"\\u013e\":\"l\",\"\\u0140\":\"l\",\"\\u0142\":\"l\",\"\\u0143\":\"N\",\"\\u0145\":\"N\",\"\\u0147\":\"N\",\"\\u014a\":\"N\",\"\\u0144\":\"n\",\"\\u0146\":\"n\",\"\\u0148\":\"n\",\"\\u014b\":\"n\",\"\\u014c\":\"O\",\n\"\\u014e\":\"O\",\"\\u0150\":\"O\",\"\\u014d\":\"o\",\"\\u014f\":\"o\",\"\\u0151\":\"o\",\"\\u0154\":\"R\",\"\\u0156\":\"R\",\"\\u0158\":\"R\",\"\\u0155\":\"r\",\"\\u0157\":\"r\",\"\\u0159\":\"r\",\"\\u015a\":\"S\",\"\\u015c\":\"S\",\"\\u015e\":\"S\",\"\\u0160\":\"S\",\"\\u015b\":\"s\",\"\\u015d\":\"s\",\"\\u015f\":\"s\",\"\\u0161\":\"s\",\"\\u0162\":\"T\",\"\\u0164\":\"T\",\"\\u0166\":\"T\",\"\\u0163\":\"t\",\"\\u0165\":\"t\",\"\\u0167\":\"t\",\"\\u0168\":\"U\",\"\\u016a\":\"U\",\"\\u016c\":\"U\",\"\\u016e\":\"U\",\"\\u0170\":\"U\",\"\\u0172\":\"U\",\"\\u0169\":\"u\",\"\\u016b\":\"u\",\"\\u016d\":\"u\",\"\\u016f\":\"u\",\"\\u0171\":\"u\",\"\\u0173\":\"u\",\"\\u0174\":\"W\",\"\\u0175\":\"w\",\n\"\\u0176\":\"Y\",\"\\u0177\":\"y\",\"\\u0178\":\"Y\",\"\\u0179\":\"Z\",\"\\u017b\":\"Z\",\"\\u017d\":\"Z\",\"\\u017a\":\"z\",\"\\u017c\":\"z\",\"\\u017e\":\"z\",\"\\u0132\":\"IJ\",\"\\u0133\":\"ij\",\"\\u0152\":\"Oe\",\"\\u0153\":\"oe\",\"\\u0149\":\"'n\",\"\\u017f\":\"s\"},Hr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},Jr={\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\"},Yr={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},Qr=parseFloat,Xr=parseInt,ne=\"object\"==typeof global&&global&&global.Object===Object&&global,te=\"object\"==typeof self&&self&&self.Object===Object&&self,re=ne||te||Function(\"return this\")(),ee=\"object\"==typeof exports&&exports&&!exports.nodeType&&exports,ue=ee&&\"object\"==typeof module&&module&&!module.nodeType&&module,ie=ue&&ue.exports===ee,oe=ie&&ne.process,fe=function(){\ntry{var n=ue&&ue.require&&ue.require(\"util\").types;return n?n:oe&&oe.binding&&oe.binding(\"util\")}catch(n){}}(),ce=fe&&fe.isArrayBuffer,ae=fe&&fe.isDate,le=fe&&fe.isMap,se=fe&&fe.isRegExp,he=fe&&fe.isSet,pe=fe&&fe.isTypedArray,_e=m(\"length\"),ve=x(Gr),ge=x(Hr),ye=x(Jr),de=function p(x){function Z(n){if(cc(n)&&!bh(n)&&!(n instanceof Ct)){if(n instanceof Y)return n;if(bl.call(n,\"__wrapped__\"))return eo(n)}return new Y(n)}function J(){}function Y(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,\nthis.__index__=0,this.__values__=X}function Ct(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=Un,this.__views__=[]}function $t(){var n=new Ct(this.__wrapped__);return n.__actions__=Tu(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=Tu(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=Tu(this.__views__),n}function Yt(){if(this.__filtered__){var n=new Ct(this);n.__dir__=-1,\nn.__filtered__=!0}else n=this.clone(),n.__dir__*=-1;return n}function Qt(){var n=this.__wrapped__.value(),t=this.__dir__,r=bh(n),e=t<0,u=r?n.length:0,i=Oi(0,u,this.__views__),o=i.start,f=i.end,c=f-o,a=e?f:o-1,l=this.__iteratees__,s=l.length,h=0,p=Hl(c,this.__takeCount__);if(!r||!e&&u==c&&p==c)return wu(n,this.__actions__);var _=[];n:for(;c--&&h<p;){a+=t;for(var v=-1,g=n[a];++v<s;){var y=l[v],d=y.iteratee,b=y.type,w=d(g);if(b==zn)g=w;else if(!w){if(b==Rn)continue n;break n}}_[h++]=g}return _}function Xt(n){\nvar t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function nr(){this.__data__=is?is(null):{},this.size=0}function tr(n){var t=this.has(n)&&delete this.__data__[n];return this.size-=t?1:0,t}function rr(n){var t=this.__data__;if(is){var r=t[n];return r===on?X:r}return bl.call(t,n)?t[n]:X}function er(n){var t=this.__data__;return is?t[n]!==X:bl.call(t,n)}function ur(n,t){var r=this.__data__;return this.size+=this.has(n)?0:1,r[n]=is&&t===X?on:t,this}function ir(n){\nvar t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function or(){this.__data__=[],this.size=0}function fr(n){var t=this.__data__,r=Wr(t,n);return!(r<0)&&(r==t.length-1?t.pop():Ll.call(t,r,1),--this.size,!0)}function cr(n){var t=this.__data__,r=Wr(t,n);return r<0?X:t[r][1]}function ar(n){return Wr(this.__data__,n)>-1}function lr(n,t){var r=this.__data__,e=Wr(r,n);return e<0?(++this.size,r.push([n,t])):r[e][1]=t,this}function sr(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){\nvar e=n[t];this.set(e[0],e[1])}}function hr(){this.size=0,this.__data__={hash:new Xt,map:new(ts||ir),string:new Xt}}function pr(n){var t=xi(this,n).delete(n);return this.size-=t?1:0,t}function _r(n){return xi(this,n).get(n)}function vr(n){return xi(this,n).has(n)}function gr(n,t){var r=xi(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this}function yr(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new sr;++t<r;)this.add(n[t])}function dr(n){return this.__data__.set(n,on),this}function br(n){\nreturn this.__data__.has(n)}function wr(n){this.size=(this.__data__=new ir(n)).size}function mr(){this.__data__=new ir,this.size=0}function xr(n){var t=this.__data__,r=t.delete(n);return this.size=t.size,r}function jr(n){return this.__data__.get(n)}function Ar(n){return this.__data__.has(n)}function kr(n,t){var r=this.__data__;if(r instanceof ir){var e=r.__data__;if(!ts||e.length<tn-1)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new sr(e)}return r.set(n,t),this.size=r.size,this}function Or(n,t){\nvar r=bh(n),e=!r&&dh(n),u=!r&&!e&&mh(n),i=!r&&!e&&!u&&Oh(n),o=r||e||u||i,f=o?O(n.length,hl):[],c=f.length;for(var a in n)!t&&!bl.call(n,a)||o&&(\"length\"==a||u&&(\"offset\"==a||\"parent\"==a)||i&&(\"buffer\"==a||\"byteLength\"==a||\"byteOffset\"==a)||Ci(a,c))||f.push(a);return f}function Ir(n){var t=n.length;return t?n[tu(0,t-1)]:X}function Rr(n,t){return Xi(Tu(n),Mr(t,0,n.length))}function zr(n){return Xi(Tu(n))}function Er(n,t,r){(r===X||Gf(n[t],r))&&(r!==X||t in n)||Br(n,t,r)}function Sr(n,t,r){var e=n[t];\nbl.call(n,t)&&Gf(e,r)&&(r!==X||t in n)||Br(n,t,r)}function Wr(n,t){for(var r=n.length;r--;)if(Gf(n[r][0],t))return r;return-1}function Lr(n,t,r,e){return ys(n,function(n,u,i){t(e,n,r(n),i)}),e}function Cr(n,t){return n&&$u(t,Pc(t),n)}function Ur(n,t){return n&&$u(t,qc(t),n)}function Br(n,t,r){\"__proto__\"==t&&Tl?Tl(n,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):n[t]=r}function Tr(n,t){for(var r=-1,e=t.length,u=il(e),i=null==n;++r<e;)u[r]=i?X:Mc(n,t[r]);return u}function Mr(n,t,r){return n===n&&(r!==X&&(n=n<=r?n:r),\nt!==X&&(n=n>=t?n:t)),n}function Fr(n,t,e,u,i,o){var f,c=t&an,a=t&ln,l=t&sn;if(e&&(f=i?e(n,u,i,o):e(n)),f!==X)return f;if(!fc(n))return n;var s=bh(n);if(s){if(f=zi(n),!c)return Tu(n,f)}else{var h=zs(n),p=h==Kn||h==Vn;if(mh(n))return Iu(n,c);if(h==Yn||h==Dn||p&&!i){if(f=a||p?{}:Ei(n),!c)return a?Mu(n,Ur(f,n)):Du(n,Cr(f,n))}else{if(!Vr[h])return i?n:{};f=Si(n,h,c)}}o||(o=new wr);var _=o.get(n);if(_)return _;o.set(n,f),kh(n)?n.forEach(function(r){f.add(Fr(r,t,e,r,n,o))}):jh(n)&&n.forEach(function(r,u){\nf.set(u,Fr(r,t,e,u,n,o))});var v=l?a?di:yi:a?qc:Pc,g=s?X:v(n);return r(g||n,function(r,u){g&&(u=r,r=n[u]),Sr(f,u,Fr(r,t,e,u,n,o))}),f}function Nr(n){var t=Pc(n);return function(r){return Pr(r,n,t)}}function Pr(n,t,r){var e=r.length;if(null==n)return!e;for(n=ll(n);e--;){var u=r[e],i=t[u],o=n[u];if(o===X&&!(u in n)||!i(o))return!1}return!0}function Gr(n,t,r){if(\"function\"!=typeof n)throw new pl(en);return Ws(function(){n.apply(X,r)},t)}function Hr(n,t,r,e){var u=-1,i=o,a=!0,l=n.length,s=[],h=t.length;\nif(!l)return s;r&&(t=c(t,z(r))),e?(i=f,a=!1):t.length>=tn&&(i=S,a=!1,t=new yr(t));n:for(;++u<l;){var p=n[u],_=null==r?p:r(p);if(p=e||0!==p?p:0,a&&_===_){for(var v=h;v--;)if(t[v]===_)continue n;s.push(p)}else i(t,_,e)||s.push(p)}return s}function Jr(n,t){var r=!0;return ys(n,function(n,e,u){return r=!!t(n,e,u)}),r}function Yr(n,t,r){for(var e=-1,u=n.length;++e<u;){var i=n[e],o=t(i);if(null!=o&&(f===X?o===o&&!bc(o):r(o,f)))var f=o,c=i}return c}function ne(n,t,r,e){var u=n.length;for(r=kc(r),r<0&&(r=-r>u?0:u+r),\ne=e===X||e>u?u:kc(e),e<0&&(e+=u),e=r>e?0:Oc(e);r<e;)n[r++]=t;return n}function te(n,t){var r=[];return ys(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function ee(n,t,r,e,u){var i=-1,o=n.length;for(r||(r=Li),u||(u=[]);++i<o;){var f=n[i];t>0&&r(f)?t>1?ee(f,t-1,r,e,u):a(u,f):e||(u[u.length]=f)}return u}function ue(n,t){return n&&bs(n,t,Pc)}function oe(n,t){return n&&ws(n,t,Pc)}function fe(n,t){return i(t,function(t){return uc(n[t])})}function _e(n,t){t=ku(t,n);for(var r=0,e=t.length;null!=n&&r<e;)n=n[no(t[r++])];\nreturn r&&r==e?n:X}function de(n,t,r){var e=t(n);return bh(n)?e:a(e,r(n))}function we(n){return null==n?n===X?ut:Jn:Bl&&Bl in ll(n)?ki(n):Ki(n)}function me(n,t){return n>t}function xe(n,t){return null!=n&&bl.call(n,t)}function je(n,t){return null!=n&&t in ll(n)}function Ae(n,t,r){return n>=Hl(t,r)&&n<Gl(t,r)}function ke(n,t,r){for(var e=r?f:o,u=n[0].length,i=n.length,a=i,l=il(i),s=1/0,h=[];a--;){var p=n[a];a&&t&&(p=c(p,z(t))),s=Hl(p.length,s),l[a]=!r&&(t||u>=120&&p.length>=120)?new yr(a&&p):X}p=n[0];\nvar _=-1,v=l[0];n:for(;++_<u&&h.length<s;){var g=p[_],y=t?t(g):g;if(g=r||0!==g?g:0,!(v?S(v,y):e(h,y,r))){for(a=i;--a;){var d=l[a];if(!(d?S(d,y):e(n[a],y,r)))continue n}v&&v.push(y),h.push(g)}}return h}function Oe(n,t,r,e){return ue(n,function(n,u,i){t(e,r(n),u,i)}),e}function Ie(t,r,e){r=ku(r,t),t=Gi(t,r);var u=null==t?t:t[no(jo(r))];return null==u?X:n(u,t,e)}function Re(n){return cc(n)&&we(n)==Dn}function ze(n){return cc(n)&&we(n)==ft}function Ee(n){return cc(n)&&we(n)==Pn}function Se(n,t,r,e,u){\nreturn n===t||(null==n||null==t||!cc(n)&&!cc(t)?n!==n&&t!==t:We(n,t,r,e,Se,u))}function We(n,t,r,e,u,i){var o=bh(n),f=bh(t),c=o?Mn:zs(n),a=f?Mn:zs(t);c=c==Dn?Yn:c,a=a==Dn?Yn:a;var l=c==Yn,s=a==Yn,h=c==a;if(h&&mh(n)){if(!mh(t))return!1;o=!0,l=!1}if(h&&!l)return i||(i=new wr),o||Oh(n)?pi(n,t,r,e,u,i):_i(n,t,c,r,e,u,i);if(!(r&hn)){var p=l&&bl.call(n,\"__wrapped__\"),_=s&&bl.call(t,\"__wrapped__\");if(p||_){var v=p?n.value():n,g=_?t.value():t;return i||(i=new wr),u(v,g,r,e,i)}}return!!h&&(i||(i=new wr),vi(n,t,r,e,u,i));\n}function Le(n){return cc(n)&&zs(n)==Gn}function Ce(n,t,r,e){var u=r.length,i=u,o=!e;if(null==n)return!i;for(n=ll(n);u--;){var f=r[u];if(o&&f[2]?f[1]!==n[f[0]]:!(f[0]in n))return!1}for(;++u<i;){f=r[u];var c=f[0],a=n[c],l=f[1];if(o&&f[2]){if(a===X&&!(c in n))return!1}else{var s=new wr;if(e)var h=e(a,l,c,n,t,s);if(!(h===X?Se(l,a,hn|pn,e,s):h))return!1}}return!0}function Ue(n){return!(!fc(n)||Di(n))&&(uc(n)?kl:Zt).test(to(n))}function Be(n){return cc(n)&&we(n)==nt}function Te(n){return cc(n)&&zs(n)==tt;\n}function $e(n){return cc(n)&&oc(n.length)&&!!Kr[we(n)]}function De(n){return\"function\"==typeof n?n:null==n?La:\"object\"==typeof n?bh(n)?Ze(n[0],n[1]):qe(n):Fa(n)}function Me(n){if(!Mi(n))return Vl(n);var t=[];for(var r in ll(n))bl.call(n,r)&&\"constructor\"!=r&&t.push(r);return t}function Fe(n){if(!fc(n))return Zi(n);var t=Mi(n),r=[];for(var e in n)(\"constructor\"!=e||!t&&bl.call(n,e))&&r.push(e);return r}function Ne(n,t){return n<t}function Pe(n,t){var r=-1,e=Hf(n)?il(n.length):[];return ys(n,function(n,u,i){\ne[++r]=t(n,u,i)}),e}function qe(n){var t=ji(n);return 1==t.length&&t[0][2]?Ni(t[0][0],t[0][1]):function(r){return r===n||Ce(r,n,t)}}function Ze(n,t){return Bi(n)&&Fi(t)?Ni(no(n),t):function(r){var e=Mc(r,n);return e===X&&e===t?Nc(r,n):Se(t,e,hn|pn)}}function Ke(n,t,r,e,u){n!==t&&bs(t,function(i,o){if(u||(u=new wr),fc(i))Ve(n,t,o,r,Ke,e,u);else{var f=e?e(Ji(n,o),i,o+\"\",n,t,u):X;f===X&&(f=i),Er(n,o,f)}},qc)}function Ve(n,t,r,e,u,i,o){var f=Ji(n,r),c=Ji(t,r),a=o.get(c);if(a)return Er(n,r,a),X;var l=i?i(f,c,r+\"\",n,t,o):X,s=l===X;\nif(s){var h=bh(c),p=!h&&mh(c),_=!h&&!p&&Oh(c);l=c,h||p||_?bh(f)?l=f:Jf(f)?l=Tu(f):p?(s=!1,l=Iu(c,!0)):_?(s=!1,l=Wu(c,!0)):l=[]:gc(c)||dh(c)?(l=f,dh(f)?l=Rc(f):fc(f)&&!uc(f)||(l=Ei(c))):s=!1}s&&(o.set(c,l),u(l,c,e,i,o),o.delete(c)),Er(n,r,l)}function Ge(n,t){var r=n.length;if(r)return t+=t<0?r:0,Ci(t,r)?n[t]:X}function He(n,t,r){t=t.length?c(t,function(n){return bh(n)?function(t){return _e(t,1===n.length?n[0]:n)}:n}):[La];var e=-1;return t=c(t,z(mi())),A(Pe(n,function(n,r,u){return{criteria:c(t,function(t){\nreturn t(n)}),index:++e,value:n}}),function(n,t){return Cu(n,t,r)})}function Je(n,t){return Ye(n,t,function(t,r){return Nc(n,r)})}function Ye(n,t,r){for(var e=-1,u=t.length,i={};++e<u;){var o=t[e],f=_e(n,o);r(f,o)&&fu(i,ku(o,n),f)}return i}function Qe(n){return function(t){return _e(t,n)}}function Xe(n,t,r,e){var u=e?d:y,i=-1,o=t.length,f=n;for(n===t&&(t=Tu(t)),r&&(f=c(n,z(r)));++i<o;)for(var a=0,l=t[i],s=r?r(l):l;(a=u(f,s,a,e))>-1;)f!==n&&Ll.call(f,a,1),Ll.call(n,a,1);return n}function nu(n,t){for(var r=n?t.length:0,e=r-1;r--;){\nvar u=t[r];if(r==e||u!==i){var i=u;Ci(u)?Ll.call(n,u,1):yu(n,u)}}return n}function tu(n,t){return n+Nl(Ql()*(t-n+1))}function ru(n,t,r,e){for(var u=-1,i=Gl(Fl((t-n)/(r||1)),0),o=il(i);i--;)o[e?i:++u]=n,n+=r;return o}function eu(n,t){var r=\"\";if(!n||t<1||t>Wn)return r;do t%2&&(r+=n),t=Nl(t/2),t&&(n+=n);while(t);return r}function uu(n,t){return Ls(Vi(n,t,La),n+\"\")}function iu(n){return Ir(ra(n))}function ou(n,t){var r=ra(n);return Xi(r,Mr(t,0,r.length))}function fu(n,t,r,e){if(!fc(n))return n;t=ku(t,n);\nfor(var u=-1,i=t.length,o=i-1,f=n;null!=f&&++u<i;){var c=no(t[u]),a=r;if(\"__proto__\"===c||\"constructor\"===c||\"prototype\"===c)return n;if(u!=o){var l=f[c];a=e?e(l,c,f):X,a===X&&(a=fc(l)?l:Ci(t[u+1])?[]:{})}Sr(f,c,a),f=f[c]}return n}function cu(n){return Xi(ra(n))}function au(n,t,r){var e=-1,u=n.length;t<0&&(t=-t>u?0:u+t),r=r>u?u:r,r<0&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0;for(var i=il(u);++e<u;)i[e]=n[e+t];return i}function lu(n,t){var r;return ys(n,function(n,e,u){return r=t(n,e,u),!r}),!!r}function su(n,t,r){\nvar e=0,u=null==n?e:n.length;if(\"number\"==typeof t&&t===t&&u<=Tn){for(;e<u;){var i=e+u>>>1,o=n[i];null!==o&&!bc(o)&&(r?o<=t:o<t)?e=i+1:u=i}return u}return hu(n,t,La,r)}function hu(n,t,r,e){var u=0,i=null==n?0:n.length;if(0===i)return 0;t=r(t);for(var o=t!==t,f=null===t,c=bc(t),a=t===X;u<i;){var l=Nl((u+i)/2),s=r(n[l]),h=s!==X,p=null===s,_=s===s,v=bc(s);if(o)var g=e||_;else g=a?_&&(e||h):f?_&&h&&(e||!p):c?_&&h&&!p&&(e||!v):!p&&!v&&(e?s<=t:s<t);g?u=l+1:i=l}return Hl(i,Bn)}function pu(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){\nvar o=n[r],f=t?t(o):o;if(!r||!Gf(f,c)){var c=f;i[u++]=0===o?0:o}}return i}function _u(n){return\"number\"==typeof n?n:bc(n)?Cn:+n}function vu(n){if(\"string\"==typeof n)return n;if(bh(n))return c(n,vu)+\"\";if(bc(n))return vs?vs.call(n):\"\";var t=n+\"\";return\"0\"==t&&1/n==-Sn?\"-0\":t}function gu(n,t,r){var e=-1,u=o,i=n.length,c=!0,a=[],l=a;if(r)c=!1,u=f;else if(i>=tn){var s=t?null:ks(n);if(s)return P(s);c=!1,u=S,l=new yr}else l=t?[]:a;n:for(;++e<i;){var h=n[e],p=t?t(h):h;if(h=r||0!==h?h:0,c&&p===p){for(var _=l.length;_--;)if(l[_]===p)continue n;\nt&&l.push(p),a.push(h)}else u(l,p,r)||(l!==a&&l.push(p),a.push(h))}return a}function yu(n,t){return t=ku(t,n),n=Gi(n,t),null==n||delete n[no(jo(t))]}function du(n,t,r,e){return fu(n,t,r(_e(n,t)),e)}function bu(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?au(n,e?0:i,e?i+1:u):au(n,e?i+1:0,e?u:i)}function wu(n,t){var r=n;return r instanceof Ct&&(r=r.value()),l(t,function(n,t){return t.func.apply(t.thisArg,a([n],t.args))},r)}function mu(n,t,r){var e=n.length;if(e<2)return e?gu(n[0]):[];\nfor(var u=-1,i=il(e);++u<e;)for(var o=n[u],f=-1;++f<e;)f!=u&&(i[u]=Hr(i[u]||o,n[f],t,r));return gu(ee(i,1),t,r)}function xu(n,t,r){for(var e=-1,u=n.length,i=t.length,o={};++e<u;){r(o,n[e],e<i?t[e]:X)}return o}function ju(n){return Jf(n)?n:[]}function Au(n){return\"function\"==typeof n?n:La}function ku(n,t){return bh(n)?n:Bi(n,t)?[n]:Cs(Ec(n))}function Ou(n,t,r){var e=n.length;return r=r===X?e:r,!t&&r>=e?n:au(n,t,r)}function Iu(n,t){if(t)return n.slice();var r=n.length,e=zl?zl(r):new n.constructor(r);\nreturn n.copy(e),e}function Ru(n){var t=new n.constructor(n.byteLength);return new Rl(t).set(new Rl(n)),t}function zu(n,t){return new n.constructor(t?Ru(n.buffer):n.buffer,n.byteOffset,n.byteLength)}function Eu(n){var t=new n.constructor(n.source,Nt.exec(n));return t.lastIndex=n.lastIndex,t}function Su(n){return _s?ll(_s.call(n)):{}}function Wu(n,t){return new n.constructor(t?Ru(n.buffer):n.buffer,n.byteOffset,n.length)}function Lu(n,t){if(n!==t){var r=n!==X,e=null===n,u=n===n,i=bc(n),o=t!==X,f=null===t,c=t===t,a=bc(t);\nif(!f&&!a&&!i&&n>t||i&&o&&c&&!f&&!a||e&&o&&c||!r&&c||!u)return 1;if(!e&&!i&&!a&&n<t||a&&r&&u&&!e&&!i||f&&r&&u||!o&&u||!c)return-1}return 0}function Cu(n,t,r){for(var e=-1,u=n.criteria,i=t.criteria,o=u.length,f=r.length;++e<o;){var c=Lu(u[e],i[e]);if(c){if(e>=f)return c;return c*(\"desc\"==r[e]?-1:1)}}return n.index-t.index}function Uu(n,t,r,e){for(var u=-1,i=n.length,o=r.length,f=-1,c=t.length,a=Gl(i-o,0),l=il(c+a),s=!e;++f<c;)l[f]=t[f];for(;++u<o;)(s||u<i)&&(l[r[u]]=n[u]);for(;a--;)l[f++]=n[u++];return l;\n}function Bu(n,t,r,e){for(var u=-1,i=n.length,o=-1,f=r.length,c=-1,a=t.length,l=Gl(i-f,0),s=il(l+a),h=!e;++u<l;)s[u]=n[u];for(var p=u;++c<a;)s[p+c]=t[c];for(;++o<f;)(h||u<i)&&(s[p+r[o]]=n[u++]);return s}function Tu(n,t){var r=-1,e=n.length;for(t||(t=il(e));++r<e;)t[r]=n[r];return t}function $u(n,t,r,e){var u=!r;r||(r={});for(var i=-1,o=t.length;++i<o;){var f=t[i],c=e?e(r[f],n[f],f,r,n):X;c===X&&(c=n[f]),u?Br(r,f,c):Sr(r,f,c)}return r}function Du(n,t){return $u(n,Is(n),t)}function Mu(n,t){return $u(n,Rs(n),t);\n}function Fu(n,r){return function(e,u){var i=bh(e)?t:Lr,o=r?r():{};return i(e,n,mi(u,2),o)}}function Nu(n){return uu(function(t,r){var e=-1,u=r.length,i=u>1?r[u-1]:X,o=u>2?r[2]:X;for(i=n.length>3&&\"function\"==typeof i?(u--,i):X,o&&Ui(r[0],r[1],o)&&(i=u<3?X:i,u=1),t=ll(t);++e<u;){var f=r[e];f&&n(t,f,e,i)}return t})}function Pu(n,t){return function(r,e){if(null==r)return r;if(!Hf(r))return n(r,e);for(var u=r.length,i=t?u:-1,o=ll(r);(t?i--:++i<u)&&e(o[i],i,o)!==!1;);return r}}function qu(n){return function(t,r,e){\nfor(var u=-1,i=ll(t),o=e(t),f=o.length;f--;){var c=o[n?f:++u];if(r(i[c],c,i)===!1)break}return t}}function Zu(n,t,r){function e(){return(this&&this!==re&&this instanceof e?i:n).apply(u?r:this,arguments)}var u=t&_n,i=Gu(n);return e}function Ku(n){return function(t){t=Ec(t);var r=T(t)?G(t):X,e=r?r[0]:t.charAt(0),u=r?Ou(r,1).join(\"\"):t.slice(1);return e[n]()+u}}function Vu(n){return function(t){return l(Ra(ca(t).replace($r,\"\")),n,\"\")}}function Gu(n){return function(){var t=arguments;switch(t.length){\ncase 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=gs(n.prototype),e=n.apply(r,t);return fc(e)?e:r}}function Hu(t,r,e){function u(){for(var o=arguments.length,f=il(o),c=o,a=wi(u);c--;)f[c]=arguments[c];var l=o<3&&f[0]!==a&&f[o-1]!==a?[]:N(f,a);\nreturn o-=l.length,o<e?oi(t,r,Qu,u.placeholder,X,f,l,X,X,e-o):n(this&&this!==re&&this instanceof u?i:t,this,f)}var i=Gu(t);return u}function Ju(n){return function(t,r,e){var u=ll(t);if(!Hf(t)){var i=mi(r,3);t=Pc(t),r=function(n){return i(u[n],n,u)}}var o=n(t,r,e);return o>-1?u[i?t[o]:o]:X}}function Yu(n){return gi(function(t){var r=t.length,e=r,u=Y.prototype.thru;for(n&&t.reverse();e--;){var i=t[e];if(\"function\"!=typeof i)throw new pl(en);if(u&&!o&&\"wrapper\"==bi(i))var o=new Y([],!0)}for(e=o?e:r;++e<r;){\ni=t[e];var f=bi(i),c=\"wrapper\"==f?Os(i):X;o=c&&$i(c[0])&&c[1]==(mn|yn|bn|xn)&&!c[4].length&&1==c[9]?o[bi(c[0])].apply(o,c[3]):1==i.length&&$i(i)?o[f]():o.thru(i)}return function(){var n=arguments,e=n[0];if(o&&1==n.length&&bh(e))return o.plant(e).value();for(var u=0,i=r?t[u].apply(this,n):e;++u<r;)i=t[u].call(this,i);return i}})}function Qu(n,t,r,e,u,i,o,f,c,a){function l(){for(var y=arguments.length,d=il(y),b=y;b--;)d[b]=arguments[b];if(_)var w=wi(l),m=C(d,w);if(e&&(d=Uu(d,e,u,_)),i&&(d=Bu(d,i,o,_)),\ny-=m,_&&y<a){return oi(n,t,Qu,l.placeholder,r,d,N(d,w),f,c,a-y)}var x=h?r:this,j=p?x[n]:n;return y=d.length,f?d=Hi(d,f):v&&y>1&&d.reverse(),s&&c<y&&(d.length=c),this&&this!==re&&this instanceof l&&(j=g||Gu(j)),j.apply(x,d)}var s=t&mn,h=t&_n,p=t&vn,_=t&(yn|dn),v=t&jn,g=p?X:Gu(n);return l}function Xu(n,t){return function(r,e){return Oe(r,n,t(e),{})}}function ni(n,t){return function(r,e){var u;if(r===X&&e===X)return t;if(r!==X&&(u=r),e!==X){if(u===X)return e;\"string\"==typeof r||\"string\"==typeof e?(r=vu(r),\ne=vu(e)):(r=_u(r),e=_u(e)),u=n(r,e)}return u}}function ti(t){return gi(function(r){return r=c(r,z(mi())),uu(function(e){var u=this;return t(r,function(t){return n(t,u,e)})})})}function ri(n,t){t=t===X?\" \":vu(t);var r=t.length;if(r<2)return r?eu(t,n):t;var e=eu(t,Fl(n/V(t)));return T(t)?Ou(G(e),0,n).join(\"\"):e.slice(0,n)}function ei(t,r,e,u){function i(){for(var r=-1,c=arguments.length,a=-1,l=u.length,s=il(l+c),h=this&&this!==re&&this instanceof i?f:t;++a<l;)s[a]=u[a];for(;c--;)s[a++]=arguments[++r];\nreturn n(h,o?e:this,s)}var o=r&_n,f=Gu(t);return i}function ui(n){return function(t,r,e){return e&&\"number\"!=typeof e&&Ui(t,r,e)&&(r=e=X),t=Ac(t),r===X?(r=t,t=0):r=Ac(r),e=e===X?t<r?1:-1:Ac(e),ru(t,r,e,n)}}function ii(n){return function(t,r){return\"string\"==typeof t&&\"string\"==typeof r||(t=Ic(t),r=Ic(r)),n(t,r)}}function oi(n,t,r,e,u,i,o,f,c,a){var l=t&yn,s=l?o:X,h=l?X:o,p=l?i:X,_=l?X:i;t|=l?bn:wn,t&=~(l?wn:bn),t&gn||(t&=~(_n|vn));var v=[n,t,u,p,s,_,h,f,c,a],g=r.apply(X,v);return $i(n)&&Ss(g,v),g.placeholder=e,\nYi(g,n,t)}function fi(n){var t=al[n];return function(n,r){if(n=Ic(n),r=null==r?0:Hl(kc(r),292),r&&Zl(n)){var e=(Ec(n)+\"e\").split(\"e\");return e=(Ec(t(e[0]+\"e\"+(+e[1]+r)))+\"e\").split(\"e\"),+(e[0]+\"e\"+(+e[1]-r))}return t(n)}}function ci(n){return function(t){var r=zs(t);return r==Gn?M(t):r==tt?q(t):I(t,n(t))}}function ai(n,t,r,e,u,i,o,f){var c=t&vn;if(!c&&\"function\"!=typeof n)throw new pl(en);var a=e?e.length:0;if(a||(t&=~(bn|wn),e=u=X),o=o===X?o:Gl(kc(o),0),f=f===X?f:kc(f),a-=u?u.length:0,t&wn){var l=e,s=u;\ne=u=X}var h=c?X:Os(n),p=[n,t,r,e,u,l,s,i,o,f];if(h&&qi(p,h),n=p[0],t=p[1],r=p[2],e=p[3],u=p[4],f=p[9]=p[9]===X?c?0:n.length:Gl(p[9]-a,0),!f&&t&(yn|dn)&&(t&=~(yn|dn)),t&&t!=_n)_=t==yn||t==dn?Hu(n,t,f):t!=bn&&t!=(_n|bn)||u.length?Qu.apply(X,p):ei(n,t,r,e);else var _=Zu(n,t,r);return Yi((h?ms:Ss)(_,p),n,t)}function li(n,t,r,e){return n===X||Gf(n,gl[r])&&!bl.call(e,r)?t:n}function si(n,t,r,e,u,i){return fc(n)&&fc(t)&&(i.set(t,n),Ke(n,t,X,si,i),i.delete(t)),n}function hi(n){return gc(n)?X:n}function pi(n,t,r,e,u,i){\nvar o=r&hn,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return!1;var a=i.get(n),l=i.get(t);if(a&&l)return a==t&&l==n;var s=-1,p=!0,_=r&pn?new yr:X;for(i.set(n,t),i.set(t,n);++s<f;){var v=n[s],g=t[s];if(e)var y=o?e(g,v,s,t,n,i):e(v,g,s,n,t,i);if(y!==X){if(y)continue;p=!1;break}if(_){if(!h(t,function(n,t){if(!S(_,t)&&(v===n||u(v,n,r,e,i)))return _.push(t)})){p=!1;break}}else if(v!==g&&!u(v,g,r,e,i)){p=!1;break}}return i.delete(n),i.delete(t),p}function _i(n,t,r,e,u,i,o){switch(r){case ct:if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)return!1;\nn=n.buffer,t=t.buffer;case ft:return!(n.byteLength!=t.byteLength||!i(new Rl(n),new Rl(t)));case Nn:case Pn:case Hn:return Gf(+n,+t);case Zn:return n.name==t.name&&n.message==t.message;case nt:case rt:return n==t+\"\";case Gn:var f=M;case tt:var c=e&hn;if(f||(f=P),n.size!=t.size&&!c)return!1;var a=o.get(n);if(a)return a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i.get(n),h=i.get(t);if(s&&h)return s==t&&h==n;var p=!0;i.set(n,t),i.set(t,n);for(var _=o;++a<c;){l=f[a];var v=n[l],g=t[l];if(e)var y=o?e(g,v,l,t,n,i):e(v,g,l,n,t,i);if(!(y===X?v===g||u(v,g,r,e,i):y)){p=!1;break}_||(_=\"constructor\"==l)}if(p&&!_){var d=n.constructor,b=t.constructor;d!=b&&\"constructor\"in n&&\"constructor\"in t&&!(\"function\"==typeof d&&d instanceof d&&\"function\"==typeof b&&b instanceof b)&&(p=!1)}return i.delete(n),\ni.delete(t),p}function gi(n){return Ls(Vi(n,X,_o),n+\"\")}function yi(n){return de(n,Pc,Is)}function di(n){return de(n,qc,Rs)}function bi(n){for(var t=n.name+\"\",r=fs[t],e=bl.call(fs,t)?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function wi(n){return(bl.call(Z,\"placeholder\")?Z:n).placeholder}function mi(){var n=Z.iteratee||Ca;return n=n===Ca?De:n,arguments.length?n(arguments[0],arguments[1]):n}function xi(n,t){var r=n.__data__;return Ti(t)?r[\"string\"==typeof t?\"string\":\"hash\"]:r.map;\n}function ji(n){for(var t=Pc(n),r=t.length;r--;){var e=t[r],u=n[e];t[r]=[e,u,Fi(u)]}return t}function Ai(n,t){var r=B(n,t);return Ue(r)?r:X}function ki(n){var t=bl.call(n,Bl),r=n[Bl];try{n[Bl]=X;var e=!0}catch(n){}var u=xl.call(n);return e&&(t?n[Bl]=r:delete n[Bl]),u}function Oi(n,t,r){for(var e=-1,u=r.length;++e<u;){var i=r[e],o=i.size;switch(i.type){case\"drop\":n+=o;break;case\"dropRight\":t-=o;break;case\"take\":t=Hl(t,n+o);break;case\"takeRight\":n=Gl(n,t-o)}}return{start:n,end:t}}function Ii(n){var t=n.match(Bt);\nreturn t?t[1].split(Tt):[]}function Ri(n,t,r){t=ku(t,n);for(var e=-1,u=t.length,i=!1;++e<u;){var o=no(t[e]);if(!(i=null!=n&&r(n,o)))break;n=n[o]}return i||++e!=u?i:(u=null==n?0:n.length,!!u&&oc(u)&&Ci(o,u)&&(bh(n)||dh(n)))}function zi(n){var t=n.length,r=new n.constructor(t);return t&&\"string\"==typeof n[0]&&bl.call(n,\"index\")&&(r.index=n.index,r.input=n.input),r}function Ei(n){return\"function\"!=typeof n.constructor||Mi(n)?{}:gs(El(n))}function Si(n,t,r){var e=n.constructor;switch(t){case ft:return Ru(n);\ncase Nn:case Pn:return new e(+n);case ct:return zu(n,r);case at:case lt:case st:case ht:case pt:case _t:case vt:case gt:case yt:return Wu(n,r);case Gn:return new e;case Hn:case rt:return new e(n);case nt:return Eu(n);case tt:return new e;case et:return Su(n)}}function Wi(n,t){var r=t.length;if(!r)return n;var e=r-1;return t[e]=(r>1?\"& \":\"\")+t[e],t=t.join(r>2?\", \":\" \"),n.replace(Ut,\"{\\n/* [wrapped with \"+t+\"] */\\n\")}function Li(n){return bh(n)||dh(n)||!!(Cl&&n&&n[Cl])}function Ci(n,t){var r=typeof n;\nreturn t=null==t?Wn:t,!!t&&(\"number\"==r||\"symbol\"!=r&&Vt.test(n))&&n>-1&&n%1==0&&n<t}function Ui(n,t,r){if(!fc(r))return!1;var e=typeof t;return!!(\"number\"==e?Hf(r)&&Ci(t,r.length):\"string\"==e&&t in r)&&Gf(r[t],n)}function Bi(n,t){if(bh(n))return!1;var r=typeof n;return!(\"number\"!=r&&\"symbol\"!=r&&\"boolean\"!=r&&null!=n&&!bc(n))||(zt.test(n)||!Rt.test(n)||null!=t&&n in ll(t))}function Ti(n){var t=typeof n;return\"string\"==t||\"number\"==t||\"symbol\"==t||\"boolean\"==t?\"__proto__\"!==n:null===n}function $i(n){\nvar t=bi(n),r=Z[t];if(\"function\"!=typeof r||!(t in Ct.prototype))return!1;if(n===r)return!0;var e=Os(r);return!!e&&n===e[0]}function Di(n){return!!ml&&ml in n}function Mi(n){var t=n&&n.constructor;return n===(\"function\"==typeof t&&t.prototype||gl)}function Fi(n){return n===n&&!fc(n)}function Ni(n,t){return function(r){return null!=r&&(r[n]===t&&(t!==X||n in ll(r)))}}function Pi(n){var t=Cf(n,function(n){return r.size===fn&&r.clear(),n}),r=t.cache;return t}function qi(n,t){var r=n[1],e=t[1],u=r|e,i=u<(_n|vn|mn),o=e==mn&&r==yn||e==mn&&r==xn&&n[7].length<=t[8]||e==(mn|xn)&&t[7].length<=t[8]&&r==yn;\nif(!i&&!o)return n;e&_n&&(n[2]=t[2],u|=r&_n?0:gn);var f=t[3];if(f){var c=n[3];n[3]=c?Uu(c,f,t[4]):f,n[4]=c?N(n[3],cn):t[4]}return f=t[5],f&&(c=n[5],n[5]=c?Bu(c,f,t[6]):f,n[6]=c?N(n[5],cn):t[6]),f=t[7],f&&(n[7]=f),e&mn&&(n[8]=null==n[8]?t[8]:Hl(n[8],t[8])),null==n[9]&&(n[9]=t[9]),n[0]=t[0],n[1]=u,n}function Zi(n){var t=[];if(null!=n)for(var r in ll(n))t.push(r);return t}function Ki(n){return xl.call(n)}function Vi(t,r,e){return r=Gl(r===X?t.length-1:r,0),function(){for(var u=arguments,i=-1,o=Gl(u.length-r,0),f=il(o);++i<o;)f[i]=u[r+i];\ni=-1;for(var c=il(r+1);++i<r;)c[i]=u[i];return c[r]=e(f),n(t,this,c)}}function Gi(n,t){return t.length<2?n:_e(n,au(t,0,-1))}function Hi(n,t){for(var r=n.length,e=Hl(t.length,r),u=Tu(n);e--;){var i=t[e];n[e]=Ci(i,r)?u[i]:X}return n}function Ji(n,t){if((\"constructor\"!==t||\"function\"!=typeof n[t])&&\"__proto__\"!=t)return n[t]}function Yi(n,t,r){var e=t+\"\";return Ls(n,Wi(e,ro(Ii(e),r)))}function Qi(n){var t=0,r=0;return function(){var e=Jl(),u=In-(e-r);if(r=e,u>0){if(++t>=On)return arguments[0]}else t=0;\nreturn n.apply(X,arguments)}}function Xi(n,t){var r=-1,e=n.length,u=e-1;for(t=t===X?e:t;++r<t;){var i=tu(r,u),o=n[i];n[i]=n[r],n[r]=o}return n.length=t,n}function no(n){if(\"string\"==typeof n||bc(n))return n;var t=n+\"\";return\"0\"==t&&1/n==-Sn?\"-0\":t}function to(n){if(null!=n){try{return dl.call(n)}catch(n){}try{return n+\"\"}catch(n){}}return\"\"}function ro(n,t){return r($n,function(r){var e=\"_.\"+r[0];t&r[1]&&!o(n,e)&&n.push(e)}),n.sort()}function eo(n){if(n instanceof Ct)return n.clone();var t=new Y(n.__wrapped__,n.__chain__);\nreturn t.__actions__=Tu(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}function uo(n,t,r){t=(r?Ui(n,t,r):t===X)?1:Gl(kc(t),0);var e=null==n?0:n.length;if(!e||t<1)return[];for(var u=0,i=0,o=il(Fl(e/t));u<e;)o[i++]=au(n,u,u+=t);return o}function io(n){for(var t=-1,r=null==n?0:n.length,e=0,u=[];++t<r;){var i=n[t];i&&(u[e++]=i)}return u}function oo(){var n=arguments.length;if(!n)return[];for(var t=il(n-1),r=arguments[0],e=n;e--;)t[e-1]=arguments[e];return a(bh(r)?Tu(r):[r],ee(t,1));\n}function fo(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===X?1:kc(t),au(n,t<0?0:t,e)):[]}function co(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===X?1:kc(t),t=e-t,au(n,0,t<0?0:t)):[]}function ao(n,t){return n&&n.length?bu(n,mi(t,3),!0,!0):[]}function lo(n,t){return n&&n.length?bu(n,mi(t,3),!0):[]}function so(n,t,r,e){var u=null==n?0:n.length;return u?(r&&\"number\"!=typeof r&&Ui(n,t,r)&&(r=0,e=u),ne(n,t,r,e)):[]}function ho(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:kc(r);\nreturn u<0&&(u=Gl(e+u,0)),g(n,mi(t,3),u)}function po(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e-1;return r!==X&&(u=kc(r),u=r<0?Gl(e+u,0):Hl(u,e-1)),g(n,mi(t,3),u,!0)}function _o(n){return(null==n?0:n.length)?ee(n,1):[]}function vo(n){return(null==n?0:n.length)?ee(n,Sn):[]}function go(n,t){return(null==n?0:n.length)?(t=t===X?1:kc(t),ee(n,t)):[]}function yo(n){for(var t=-1,r=null==n?0:n.length,e={};++t<r;){var u=n[t];e[u[0]]=u[1]}return e}function bo(n){return n&&n.length?n[0]:X}function wo(n,t,r){\nvar e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:kc(r);return u<0&&(u=Gl(e+u,0)),y(n,t,u)}function mo(n){return(null==n?0:n.length)?au(n,0,-1):[]}function xo(n,t){return null==n?\"\":Kl.call(n,t)}function jo(n){var t=null==n?0:n.length;return t?n[t-1]:X}function Ao(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e;return r!==X&&(u=kc(r),u=u<0?Gl(e+u,0):Hl(u,e-1)),t===t?K(n,t,u):g(n,b,u,!0)}function ko(n,t){return n&&n.length?Ge(n,kc(t)):X}function Oo(n,t){return n&&n.length&&t&&t.length?Xe(n,t):n;\n}function Io(n,t,r){return n&&n.length&&t&&t.length?Xe(n,t,mi(r,2)):n}function Ro(n,t,r){return n&&n.length&&t&&t.length?Xe(n,t,X,r):n}function zo(n,t){var r=[];if(!n||!n.length)return r;var e=-1,u=[],i=n.length;for(t=mi(t,3);++e<i;){var o=n[e];t(o,e,n)&&(r.push(o),u.push(e))}return nu(n,u),r}function Eo(n){return null==n?n:Xl.call(n)}function So(n,t,r){var e=null==n?0:n.length;return e?(r&&\"number\"!=typeof r&&Ui(n,t,r)?(t=0,r=e):(t=null==t?0:kc(t),r=r===X?e:kc(r)),au(n,t,r)):[]}function Wo(n,t){\nreturn su(n,t)}function Lo(n,t,r){return hu(n,t,mi(r,2))}function Co(n,t){var r=null==n?0:n.length;if(r){var e=su(n,t);if(e<r&&Gf(n[e],t))return e}return-1}function Uo(n,t){return su(n,t,!0)}function Bo(n,t,r){return hu(n,t,mi(r,2),!0)}function To(n,t){if(null==n?0:n.length){var r=su(n,t,!0)-1;if(Gf(n[r],t))return r}return-1}function $o(n){return n&&n.length?pu(n):[]}function Do(n,t){return n&&n.length?pu(n,mi(t,2)):[]}function Mo(n){var t=null==n?0:n.length;return t?au(n,1,t):[]}function Fo(n,t,r){\nreturn n&&n.length?(t=r||t===X?1:kc(t),au(n,0,t<0?0:t)):[]}function No(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===X?1:kc(t),t=e-t,au(n,t<0?0:t,e)):[]}function Po(n,t){return n&&n.length?bu(n,mi(t,3),!1,!0):[]}function qo(n,t){return n&&n.length?bu(n,mi(t,3)):[]}function Zo(n){return n&&n.length?gu(n):[]}function Ko(n,t){return n&&n.length?gu(n,mi(t,2)):[]}function Vo(n,t){return t=\"function\"==typeof t?t:X,n&&n.length?gu(n,X,t):[]}function Go(n){if(!n||!n.length)return[];var t=0;return n=i(n,function(n){\nif(Jf(n))return t=Gl(n.length,t),!0}),O(t,function(t){return c(n,m(t))})}function Ho(t,r){if(!t||!t.length)return[];var e=Go(t);return null==r?e:c(e,function(t){return n(r,X,t)})}function Jo(n,t){return xu(n||[],t||[],Sr)}function Yo(n,t){return xu(n||[],t||[],fu)}function Qo(n){var t=Z(n);return t.__chain__=!0,t}function Xo(n,t){return t(n),n}function nf(n,t){return t(n)}function tf(){return Qo(this)}function rf(){return new Y(this.value(),this.__chain__)}function ef(){this.__values__===X&&(this.__values__=jc(this.value()));\nvar n=this.__index__>=this.__values__.length;return{done:n,value:n?X:this.__values__[this.__index__++]}}function uf(){return this}function of(n){for(var t,r=this;r instanceof J;){var e=eo(r);e.__index__=0,e.__values__=X,t?u.__wrapped__=e:t=e;var u=e;r=r.__wrapped__}return u.__wrapped__=n,t}function ff(){var n=this.__wrapped__;if(n instanceof Ct){var t=n;return this.__actions__.length&&(t=new Ct(this)),t=t.reverse(),t.__actions__.push({func:nf,args:[Eo],thisArg:X}),new Y(t,this.__chain__)}return this.thru(Eo);\n}function cf(){return wu(this.__wrapped__,this.__actions__)}function af(n,t,r){var e=bh(n)?u:Jr;return r&&Ui(n,t,r)&&(t=X),e(n,mi(t,3))}function lf(n,t){return(bh(n)?i:te)(n,mi(t,3))}function sf(n,t){return ee(yf(n,t),1)}function hf(n,t){return ee(yf(n,t),Sn)}function pf(n,t,r){return r=r===X?1:kc(r),ee(yf(n,t),r)}function _f(n,t){return(bh(n)?r:ys)(n,mi(t,3))}function vf(n,t){return(bh(n)?e:ds)(n,mi(t,3))}function gf(n,t,r,e){n=Hf(n)?n:ra(n),r=r&&!e?kc(r):0;var u=n.length;return r<0&&(r=Gl(u+r,0)),\ndc(n)?r<=u&&n.indexOf(t,r)>-1:!!u&&y(n,t,r)>-1}function yf(n,t){return(bh(n)?c:Pe)(n,mi(t,3))}function df(n,t,r,e){return null==n?[]:(bh(t)||(t=null==t?[]:[t]),r=e?X:r,bh(r)||(r=null==r?[]:[r]),He(n,t,r))}function bf(n,t,r){var e=bh(n)?l:j,u=arguments.length<3;return e(n,mi(t,4),r,u,ys)}function wf(n,t,r){var e=bh(n)?s:j,u=arguments.length<3;return e(n,mi(t,4),r,u,ds)}function mf(n,t){return(bh(n)?i:te)(n,Uf(mi(t,3)))}function xf(n){return(bh(n)?Ir:iu)(n)}function jf(n,t,r){return t=(r?Ui(n,t,r):t===X)?1:kc(t),\n(bh(n)?Rr:ou)(n,t)}function Af(n){return(bh(n)?zr:cu)(n)}function kf(n){if(null==n)return 0;if(Hf(n))return dc(n)?V(n):n.length;var t=zs(n);return t==Gn||t==tt?n.size:Me(n).length}function Of(n,t,r){var e=bh(n)?h:lu;return r&&Ui(n,t,r)&&(t=X),e(n,mi(t,3))}function If(n,t){if(\"function\"!=typeof t)throw new pl(en);return n=kc(n),function(){if(--n<1)return t.apply(this,arguments)}}function Rf(n,t,r){return t=r?X:t,t=n&&null==t?n.length:t,ai(n,mn,X,X,X,X,t)}function zf(n,t){var r;if(\"function\"!=typeof t)throw new pl(en);\nreturn n=kc(n),function(){return--n>0&&(r=t.apply(this,arguments)),n<=1&&(t=X),r}}function Ef(n,t,r){t=r?X:t;var e=ai(n,yn,X,X,X,X,X,t);return e.placeholder=Ef.placeholder,e}function Sf(n,t,r){t=r?X:t;var e=ai(n,dn,X,X,X,X,X,t);return e.placeholder=Sf.placeholder,e}function Wf(n,t,r){function e(t){var r=h,e=p;return h=p=X,d=t,v=n.apply(e,r)}function u(n){return d=n,g=Ws(f,t),b?e(n):v}function i(n){var r=n-y,e=n-d,u=t-r;return w?Hl(u,_-e):u}function o(n){var r=n-y,e=n-d;return y===X||r>=t||r<0||w&&e>=_;\n}function f(){var n=fh();return o(n)?c(n):(g=Ws(f,i(n)),X)}function c(n){return g=X,m&&h?e(n):(h=p=X,v)}function a(){g!==X&&As(g),d=0,h=y=p=g=X}function l(){return g===X?v:c(fh())}function s(){var n=fh(),r=o(n);if(h=arguments,p=this,y=n,r){if(g===X)return u(y);if(w)return As(g),g=Ws(f,t),e(y)}return g===X&&(g=Ws(f,t)),v}var h,p,_,v,g,y,d=0,b=!1,w=!1,m=!0;if(\"function\"!=typeof n)throw new pl(en);return t=Ic(t)||0,fc(r)&&(b=!!r.leading,w=\"maxWait\"in r,_=w?Gl(Ic(r.maxWait)||0,t):_,m=\"trailing\"in r?!!r.trailing:m),\ns.cancel=a,s.flush=l,s}function Lf(n){return ai(n,jn)}function Cf(n,t){if(\"function\"!=typeof n||null!=t&&\"function\"!=typeof t)throw new pl(en);var r=function(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;if(i.has(u))return i.get(u);var o=n.apply(this,e);return r.cache=i.set(u,o)||i,o};return r.cache=new(Cf.Cache||sr),r}function Uf(n){if(\"function\"!=typeof n)throw new pl(en);return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:\nreturn!n.call(this,t[0],t[1]);case 3:return!n.call(this,t[0],t[1],t[2])}return!n.apply(this,t)}}function Bf(n){return zf(2,n)}function Tf(n,t){if(\"function\"!=typeof n)throw new pl(en);return t=t===X?t:kc(t),uu(n,t)}function $f(t,r){if(\"function\"!=typeof t)throw new pl(en);return r=null==r?0:Gl(kc(r),0),uu(function(e){var u=e[r],i=Ou(e,0,r);return u&&a(i,u),n(t,this,i)})}function Df(n,t,r){var e=!0,u=!0;if(\"function\"!=typeof n)throw new pl(en);return fc(r)&&(e=\"leading\"in r?!!r.leading:e,u=\"trailing\"in r?!!r.trailing:u),\nWf(n,t,{leading:e,maxWait:t,trailing:u})}function Mf(n){return Rf(n,1)}function Ff(n,t){return ph(Au(t),n)}function Nf(){if(!arguments.length)return[];var n=arguments[0];return bh(n)?n:[n]}function Pf(n){return Fr(n,sn)}function qf(n,t){return t=\"function\"==typeof t?t:X,Fr(n,sn,t)}function Zf(n){return Fr(n,an|sn)}function Kf(n,t){return t=\"function\"==typeof t?t:X,Fr(n,an|sn,t)}function Vf(n,t){return null==t||Pr(n,t,Pc(t))}function Gf(n,t){return n===t||n!==n&&t!==t}function Hf(n){return null!=n&&oc(n.length)&&!uc(n);\n}function Jf(n){return cc(n)&&Hf(n)}function Yf(n){return n===!0||n===!1||cc(n)&&we(n)==Nn}function Qf(n){return cc(n)&&1===n.nodeType&&!gc(n)}function Xf(n){if(null==n)return!0;if(Hf(n)&&(bh(n)||\"string\"==typeof n||\"function\"==typeof n.splice||mh(n)||Oh(n)||dh(n)))return!n.length;var t=zs(n);if(t==Gn||t==tt)return!n.size;if(Mi(n))return!Me(n).length;for(var r in n)if(bl.call(n,r))return!1;return!0}function nc(n,t){return Se(n,t)}function tc(n,t,r){r=\"function\"==typeof r?r:X;var e=r?r(n,t):X;return e===X?Se(n,t,X,r):!!e;\n}function rc(n){if(!cc(n))return!1;var t=we(n);return t==Zn||t==qn||\"string\"==typeof n.message&&\"string\"==typeof n.name&&!gc(n)}function ec(n){return\"number\"==typeof n&&Zl(n)}function uc(n){if(!fc(n))return!1;var t=we(n);return t==Kn||t==Vn||t==Fn||t==Xn}function ic(n){return\"number\"==typeof n&&n==kc(n)}function oc(n){return\"number\"==typeof n&&n>-1&&n%1==0&&n<=Wn}function fc(n){var t=typeof n;return null!=n&&(\"object\"==t||\"function\"==t)}function cc(n){return null!=n&&\"object\"==typeof n}function ac(n,t){\nreturn n===t||Ce(n,t,ji(t))}function lc(n,t,r){return r=\"function\"==typeof r?r:X,Ce(n,t,ji(t),r)}function sc(n){return vc(n)&&n!=+n}function hc(n){if(Es(n))throw new fl(rn);return Ue(n)}function pc(n){return null===n}function _c(n){return null==n}function vc(n){return\"number\"==typeof n||cc(n)&&we(n)==Hn}function gc(n){if(!cc(n)||we(n)!=Yn)return!1;var t=El(n);if(null===t)return!0;var r=bl.call(t,\"constructor\")&&t.constructor;return\"function\"==typeof r&&r instanceof r&&dl.call(r)==jl}function yc(n){\nreturn ic(n)&&n>=-Wn&&n<=Wn}function dc(n){return\"string\"==typeof n||!bh(n)&&cc(n)&&we(n)==rt}function bc(n){return\"symbol\"==typeof n||cc(n)&&we(n)==et}function wc(n){return n===X}function mc(n){return cc(n)&&zs(n)==it}function xc(n){return cc(n)&&we(n)==ot}function jc(n){if(!n)return[];if(Hf(n))return dc(n)?G(n):Tu(n);if(Ul&&n[Ul])return D(n[Ul]());var t=zs(n);return(t==Gn?M:t==tt?P:ra)(n)}function Ac(n){if(!n)return 0===n?n:0;if(n=Ic(n),n===Sn||n===-Sn){return(n<0?-1:1)*Ln}return n===n?n:0}function kc(n){\nvar t=Ac(n),r=t%1;return t===t?r?t-r:t:0}function Oc(n){return n?Mr(kc(n),0,Un):0}function Ic(n){if(\"number\"==typeof n)return n;if(bc(n))return Cn;if(fc(n)){var t=\"function\"==typeof n.valueOf?n.valueOf():n;n=fc(t)?t+\"\":t}if(\"string\"!=typeof n)return 0===n?n:+n;n=R(n);var r=qt.test(n);return r||Kt.test(n)?Xr(n.slice(2),r?2:8):Pt.test(n)?Cn:+n}function Rc(n){return $u(n,qc(n))}function zc(n){return n?Mr(kc(n),-Wn,Wn):0===n?n:0}function Ec(n){return null==n?\"\":vu(n)}function Sc(n,t){var r=gs(n);return null==t?r:Cr(r,t);\n}function Wc(n,t){return v(n,mi(t,3),ue)}function Lc(n,t){return v(n,mi(t,3),oe)}function Cc(n,t){return null==n?n:bs(n,mi(t,3),qc)}function Uc(n,t){return null==n?n:ws(n,mi(t,3),qc)}function Bc(n,t){return n&&ue(n,mi(t,3))}function Tc(n,t){return n&&oe(n,mi(t,3))}function $c(n){return null==n?[]:fe(n,Pc(n))}function Dc(n){return null==n?[]:fe(n,qc(n))}function Mc(n,t,r){var e=null==n?X:_e(n,t);return e===X?r:e}function Fc(n,t){return null!=n&&Ri(n,t,xe)}function Nc(n,t){return null!=n&&Ri(n,t,je);\n}function Pc(n){return Hf(n)?Or(n):Me(n)}function qc(n){return Hf(n)?Or(n,!0):Fe(n)}function Zc(n,t){var r={};return t=mi(t,3),ue(n,function(n,e,u){Br(r,t(n,e,u),n)}),r}function Kc(n,t){var r={};return t=mi(t,3),ue(n,function(n,e,u){Br(r,e,t(n,e,u))}),r}function Vc(n,t){return Gc(n,Uf(mi(t)))}function Gc(n,t){if(null==n)return{};var r=c(di(n),function(n){return[n]});return t=mi(t),Ye(n,r,function(n,r){return t(n,r[0])})}function Hc(n,t,r){t=ku(t,n);var e=-1,u=t.length;for(u||(u=1,n=X);++e<u;){var i=null==n?X:n[no(t[e])];\ni===X&&(e=u,i=r),n=uc(i)?i.call(n):i}return n}function Jc(n,t,r){return null==n?n:fu(n,t,r)}function Yc(n,t,r,e){return e=\"function\"==typeof e?e:X,null==n?n:fu(n,t,r,e)}function Qc(n,t,e){var u=bh(n),i=u||mh(n)||Oh(n);if(t=mi(t,4),null==e){var o=n&&n.constructor;e=i?u?new o:[]:fc(n)&&uc(o)?gs(El(n)):{}}return(i?r:ue)(n,function(n,r,u){return t(e,n,r,u)}),e}function Xc(n,t){return null==n||yu(n,t)}function na(n,t,r){return null==n?n:du(n,t,Au(r))}function ta(n,t,r,e){return e=\"function\"==typeof e?e:X,\nnull==n?n:du(n,t,Au(r),e)}function ra(n){return null==n?[]:E(n,Pc(n))}function ea(n){return null==n?[]:E(n,qc(n))}function ua(n,t,r){return r===X&&(r=t,t=X),r!==X&&(r=Ic(r),r=r===r?r:0),t!==X&&(t=Ic(t),t=t===t?t:0),Mr(Ic(n),t,r)}function ia(n,t,r){return t=Ac(t),r===X?(r=t,t=0):r=Ac(r),n=Ic(n),Ae(n,t,r)}function oa(n,t,r){if(r&&\"boolean\"!=typeof r&&Ui(n,t,r)&&(t=r=X),r===X&&(\"boolean\"==typeof t?(r=t,t=X):\"boolean\"==typeof n&&(r=n,n=X)),n===X&&t===X?(n=0,t=1):(n=Ac(n),t===X?(t=n,n=0):t=Ac(t)),n>t){\nvar e=n;n=t,t=e}if(r||n%1||t%1){var u=Ql();return Hl(n+u*(t-n+Qr(\"1e-\"+((u+\"\").length-1))),t)}return tu(n,t)}function fa(n){return Qh(Ec(n).toLowerCase())}function ca(n){return n=Ec(n),n&&n.replace(Gt,ve).replace(Dr,\"\")}function aa(n,t,r){n=Ec(n),t=vu(t);var e=n.length;r=r===X?e:Mr(kc(r),0,e);var u=r;return r-=t.length,r>=0&&n.slice(r,u)==t}function la(n){return n=Ec(n),n&&At.test(n)?n.replace(xt,ge):n}function sa(n){return n=Ec(n),n&&Wt.test(n)?n.replace(St,\"\\\\$&\"):n}function ha(n,t,r){n=Ec(n),t=kc(t);\nvar e=t?V(n):0;if(!t||e>=t)return n;var u=(t-e)/2;return ri(Nl(u),r)+n+ri(Fl(u),r)}function pa(n,t,r){n=Ec(n),t=kc(t);var e=t?V(n):0;return t&&e<t?n+ri(t-e,r):n}function _a(n,t,r){n=Ec(n),t=kc(t);var e=t?V(n):0;return t&&e<t?ri(t-e,r)+n:n}function va(n,t,r){return r||null==t?t=0:t&&(t=+t),Yl(Ec(n).replace(Lt,\"\"),t||0)}function ga(n,t,r){return t=(r?Ui(n,t,r):t===X)?1:kc(t),eu(Ec(n),t)}function ya(){var n=arguments,t=Ec(n[0]);return n.length<3?t:t.replace(n[1],n[2])}function da(n,t,r){return r&&\"number\"!=typeof r&&Ui(n,t,r)&&(t=r=X),\n(r=r===X?Un:r>>>0)?(n=Ec(n),n&&(\"string\"==typeof t||null!=t&&!Ah(t))&&(t=vu(t),!t&&T(n))?Ou(G(n),0,r):n.split(t,r)):[]}function ba(n,t,r){return n=Ec(n),r=null==r?0:Mr(kc(r),0,n.length),t=vu(t),n.slice(r,r+t.length)==t}function wa(n,t,r){var e=Z.templateSettings;r&&Ui(n,t,r)&&(t=X),n=Ec(n),t=Sh({},t,e,li);var u,i,o=Sh({},t.imports,e.imports,li),f=Pc(o),c=E(o,f),a=0,l=t.interpolate||Ht,s=\"__p += '\",h=sl((t.escape||Ht).source+\"|\"+l.source+\"|\"+(l===It?Ft:Ht).source+\"|\"+(t.evaluate||Ht).source+\"|$\",\"g\"),p=\"//# sourceURL=\"+(bl.call(t,\"sourceURL\")?(t.sourceURL+\"\").replace(/\\s/g,\" \"):\"lodash.templateSources[\"+ ++Zr+\"]\")+\"\\n\";\nn.replace(h,function(t,r,e,o,f,c){return e||(e=o),s+=n.slice(a,c).replace(Jt,U),r&&(u=!0,s+=\"' +\\n__e(\"+r+\") +\\n'\"),f&&(i=!0,s+=\"';\\n\"+f+\";\\n__p += '\"),e&&(s+=\"' +\\n((__t = (\"+e+\")) == null ? '' : __t) +\\n'\"),a=c+t.length,t}),s+=\"';\\n\";var _=bl.call(t,\"variable\")&&t.variable;if(_){if(Dt.test(_))throw new fl(un)}else s=\"with (obj) {\\n\"+s+\"\\n}\\n\";s=(i?s.replace(dt,\"\"):s).replace(bt,\"$1\").replace(wt,\"$1;\"),s=\"function(\"+(_||\"obj\")+\") {\\n\"+(_?\"\":\"obj || (obj = {});\\n\")+\"var __t, __p = ''\"+(u?\", __e = _.escape\":\"\")+(i?\", __j = Array.prototype.join;\\nfunction print() { __p += __j.call(arguments, '') }\\n\":\";\\n\")+s+\"return __p\\n}\";\nvar v=Xh(function(){return cl(f,p+\"return \"+s).apply(X,c)});if(v.source=s,rc(v))throw v;return v}function ma(n){return Ec(n).toLowerCase()}function xa(n){return Ec(n).toUpperCase()}function ja(n,t,r){if(n=Ec(n),n&&(r||t===X))return R(n);if(!n||!(t=vu(t)))return n;var e=G(n),u=G(t);return Ou(e,W(e,u),L(e,u)+1).join(\"\")}function Aa(n,t,r){if(n=Ec(n),n&&(r||t===X))return n.slice(0,H(n)+1);if(!n||!(t=vu(t)))return n;var e=G(n);return Ou(e,0,L(e,G(t))+1).join(\"\")}function ka(n,t,r){if(n=Ec(n),n&&(r||t===X))return n.replace(Lt,\"\");\nif(!n||!(t=vu(t)))return n;var e=G(n);return Ou(e,W(e,G(t))).join(\"\")}function Oa(n,t){var r=An,e=kn;if(fc(t)){var u=\"separator\"in t?t.separator:u;r=\"length\"in t?kc(t.length):r,e=\"omission\"in t?vu(t.omission):e}n=Ec(n);var i=n.length;if(T(n)){var o=G(n);i=o.length}if(r>=i)return n;var f=r-V(e);if(f<1)return e;var c=o?Ou(o,0,f).join(\"\"):n.slice(0,f);if(u===X)return c+e;if(o&&(f+=c.length-f),Ah(u)){if(n.slice(f).search(u)){var a,l=c;for(u.global||(u=sl(u.source,Ec(Nt.exec(u))+\"g\")),u.lastIndex=0;a=u.exec(l);)var s=a.index;\nc=c.slice(0,s===X?f:s)}}else if(n.indexOf(vu(u),f)!=f){var h=c.lastIndexOf(u);h>-1&&(c=c.slice(0,h))}return c+e}function Ia(n){return n=Ec(n),n&&jt.test(n)?n.replace(mt,ye):n}function Ra(n,t,r){return n=Ec(n),t=r?X:t,t===X?$(n)?Q(n):_(n):n.match(t)||[]}function za(t){var r=null==t?0:t.length,e=mi();return t=r?c(t,function(n){if(\"function\"!=typeof n[1])throw new pl(en);return[e(n[0]),n[1]]}):[],uu(function(e){for(var u=-1;++u<r;){var i=t[u];if(n(i[0],this,e))return n(i[1],this,e)}})}function Ea(n){\nreturn Nr(Fr(n,an))}function Sa(n){return function(){return n}}function Wa(n,t){return null==n||n!==n?t:n}function La(n){return n}function Ca(n){return De(\"function\"==typeof n?n:Fr(n,an))}function Ua(n){return qe(Fr(n,an))}function Ba(n,t){return Ze(n,Fr(t,an))}function Ta(n,t,e){var u=Pc(t),i=fe(t,u);null!=e||fc(t)&&(i.length||!u.length)||(e=t,t=n,n=this,i=fe(t,Pc(t)));var o=!(fc(e)&&\"chain\"in e&&!e.chain),f=uc(n);return r(i,function(r){var e=t[r];n[r]=e,f&&(n.prototype[r]=function(){var t=this.__chain__;\nif(o||t){var r=n(this.__wrapped__);return(r.__actions__=Tu(this.__actions__)).push({func:e,args:arguments,thisArg:n}),r.__chain__=t,r}return e.apply(n,a([this.value()],arguments))})}),n}function $a(){return re._===this&&(re._=Al),this}function Da(){}function Ma(n){return n=kc(n),uu(function(t){return Ge(t,n)})}function Fa(n){return Bi(n)?m(no(n)):Qe(n)}function Na(n){return function(t){return null==n?X:_e(n,t)}}function Pa(){return[]}function qa(){return!1}function Za(){return{}}function Ka(){return\"\";\n}function Va(){return!0}function Ga(n,t){if(n=kc(n),n<1||n>Wn)return[];var r=Un,e=Hl(n,Un);t=mi(t),n-=Un;for(var u=O(e,t);++r<n;)t(r);return u}function Ha(n){return bh(n)?c(n,no):bc(n)?[n]:Tu(Cs(Ec(n)))}function Ja(n){var t=++wl;return Ec(n)+t}function Ya(n){return n&&n.length?Yr(n,La,me):X}function Qa(n,t){return n&&n.length?Yr(n,mi(t,2),me):X}function Xa(n){return w(n,La)}function nl(n,t){return w(n,mi(t,2))}function tl(n){return n&&n.length?Yr(n,La,Ne):X}function rl(n,t){return n&&n.length?Yr(n,mi(t,2),Ne):X;\n}function el(n){return n&&n.length?k(n,La):0}function ul(n,t){return n&&n.length?k(n,mi(t,2)):0}x=null==x?re:be.defaults(re.Object(),x,be.pick(re,qr));var il=x.Array,ol=x.Date,fl=x.Error,cl=x.Function,al=x.Math,ll=x.Object,sl=x.RegExp,hl=x.String,pl=x.TypeError,_l=il.prototype,vl=cl.prototype,gl=ll.prototype,yl=x[\"__core-js_shared__\"],dl=vl.toString,bl=gl.hasOwnProperty,wl=0,ml=function(){var n=/[^.]+$/.exec(yl&&yl.keys&&yl.keys.IE_PROTO||\"\");return n?\"Symbol(src)_1.\"+n:\"\"}(),xl=gl.toString,jl=dl.call(ll),Al=re._,kl=sl(\"^\"+dl.call(bl).replace(St,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),Ol=ie?x.Buffer:X,Il=x.Symbol,Rl=x.Uint8Array,zl=Ol?Ol.allocUnsafe:X,El=F(ll.getPrototypeOf,ll),Sl=ll.create,Wl=gl.propertyIsEnumerable,Ll=_l.splice,Cl=Il?Il.isConcatSpreadable:X,Ul=Il?Il.iterator:X,Bl=Il?Il.toStringTag:X,Tl=function(){\ntry{var n=Ai(ll,\"defineProperty\");return n({},\"\",{}),n}catch(n){}}(),$l=x.clearTimeout!==re.clearTimeout&&x.clearTimeout,Dl=ol&&ol.now!==re.Date.now&&ol.now,Ml=x.setTimeout!==re.setTimeout&&x.setTimeout,Fl=al.ceil,Nl=al.floor,Pl=ll.getOwnPropertySymbols,ql=Ol?Ol.isBuffer:X,Zl=x.isFinite,Kl=_l.join,Vl=F(ll.keys,ll),Gl=al.max,Hl=al.min,Jl=ol.now,Yl=x.parseInt,Ql=al.random,Xl=_l.reverse,ns=Ai(x,\"DataView\"),ts=Ai(x,\"Map\"),rs=Ai(x,\"Promise\"),es=Ai(x,\"Set\"),us=Ai(x,\"WeakMap\"),is=Ai(ll,\"create\"),os=us&&new us,fs={},cs=to(ns),as=to(ts),ls=to(rs),ss=to(es),hs=to(us),ps=Il?Il.prototype:X,_s=ps?ps.valueOf:X,vs=ps?ps.toString:X,gs=function(){\nfunction n(){}return function(t){if(!fc(t))return{};if(Sl)return Sl(t);n.prototype=t;var r=new n;return n.prototype=X,r}}();Z.templateSettings={escape:kt,evaluate:Ot,interpolate:It,variable:\"\",imports:{_:Z}},Z.prototype=J.prototype,Z.prototype.constructor=Z,Y.prototype=gs(J.prototype),Y.prototype.constructor=Y,Ct.prototype=gs(J.prototype),Ct.prototype.constructor=Ct,Xt.prototype.clear=nr,Xt.prototype.delete=tr,Xt.prototype.get=rr,Xt.prototype.has=er,Xt.prototype.set=ur,ir.prototype.clear=or,ir.prototype.delete=fr,\nir.prototype.get=cr,ir.prototype.has=ar,ir.prototype.set=lr,sr.prototype.clear=hr,sr.prototype.delete=pr,sr.prototype.get=_r,sr.prototype.has=vr,sr.prototype.set=gr,yr.prototype.add=yr.prototype.push=dr,yr.prototype.has=br,wr.prototype.clear=mr,wr.prototype.delete=xr,wr.prototype.get=jr,wr.prototype.has=Ar,wr.prototype.set=kr;var ys=Pu(ue),ds=Pu(oe,!0),bs=qu(),ws=qu(!0),ms=os?function(n,t){return os.set(n,t),n}:La,xs=Tl?function(n,t){return Tl(n,\"toString\",{configurable:!0,enumerable:!1,value:Sa(t),\nwritable:!0})}:La,js=uu,As=$l||function(n){return re.clearTimeout(n)},ks=es&&1/P(new es([,-0]))[1]==Sn?function(n){return new es(n)}:Da,Os=os?function(n){return os.get(n)}:Da,Is=Pl?function(n){return null==n?[]:(n=ll(n),i(Pl(n),function(t){return Wl.call(n,t)}))}:Pa,Rs=Pl?function(n){for(var t=[];n;)a(t,Is(n)),n=El(n);return t}:Pa,zs=we;(ns&&zs(new ns(new ArrayBuffer(1)))!=ct||ts&&zs(new ts)!=Gn||rs&&zs(rs.resolve())!=Qn||es&&zs(new es)!=tt||us&&zs(new us)!=it)&&(zs=function(n){var t=we(n),r=t==Yn?n.constructor:X,e=r?to(r):\"\";\nif(e)switch(e){case cs:return ct;case as:return Gn;case ls:return Qn;case ss:return tt;case hs:return it}return t});var Es=yl?uc:qa,Ss=Qi(ms),Ws=Ml||function(n,t){return re.setTimeout(n,t)},Ls=Qi(xs),Cs=Pi(function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(\"\"),n.replace(Et,function(n,r,e,u){t.push(e?u.replace(Mt,\"$1\"):r||n)}),t}),Us=uu(function(n,t){return Jf(n)?Hr(n,ee(t,1,Jf,!0)):[]}),Bs=uu(function(n,t){var r=jo(t);return Jf(r)&&(r=X),Jf(n)?Hr(n,ee(t,1,Jf,!0),mi(r,2)):[]}),Ts=uu(function(n,t){\nvar r=jo(t);return Jf(r)&&(r=X),Jf(n)?Hr(n,ee(t,1,Jf,!0),X,r):[]}),$s=uu(function(n){var t=c(n,ju);return t.length&&t[0]===n[0]?ke(t):[]}),Ds=uu(function(n){var t=jo(n),r=c(n,ju);return t===jo(r)?t=X:r.pop(),r.length&&r[0]===n[0]?ke(r,mi(t,2)):[]}),Ms=uu(function(n){var t=jo(n),r=c(n,ju);return t=\"function\"==typeof t?t:X,t&&r.pop(),r.length&&r[0]===n[0]?ke(r,X,t):[]}),Fs=uu(Oo),Ns=gi(function(n,t){var r=null==n?0:n.length,e=Tr(n,t);return nu(n,c(t,function(n){return Ci(n,r)?+n:n}).sort(Lu)),e}),Ps=uu(function(n){\nreturn gu(ee(n,1,Jf,!0))}),qs=uu(function(n){var t=jo(n);return Jf(t)&&(t=X),gu(ee(n,1,Jf,!0),mi(t,2))}),Zs=uu(function(n){var t=jo(n);return t=\"function\"==typeof t?t:X,gu(ee(n,1,Jf,!0),X,t)}),Ks=uu(function(n,t){return Jf(n)?Hr(n,t):[]}),Vs=uu(function(n){return mu(i(n,Jf))}),Gs=uu(function(n){var t=jo(n);return Jf(t)&&(t=X),mu(i(n,Jf),mi(t,2))}),Hs=uu(function(n){var t=jo(n);return t=\"function\"==typeof t?t:X,mu(i(n,Jf),X,t)}),Js=uu(Go),Ys=uu(function(n){var t=n.length,r=t>1?n[t-1]:X;return r=\"function\"==typeof r?(n.pop(),\nr):X,Ho(n,r)}),Qs=gi(function(n){var t=n.length,r=t?n[0]:0,e=this.__wrapped__,u=function(t){return Tr(t,n)};return!(t>1||this.__actions__.length)&&e instanceof Ct&&Ci(r)?(e=e.slice(r,+r+(t?1:0)),e.__actions__.push({func:nf,args:[u],thisArg:X}),new Y(e,this.__chain__).thru(function(n){return t&&!n.length&&n.push(X),n})):this.thru(u)}),Xs=Fu(function(n,t,r){bl.call(n,r)?++n[r]:Br(n,r,1)}),nh=Ju(ho),th=Ju(po),rh=Fu(function(n,t,r){bl.call(n,r)?n[r].push(t):Br(n,r,[t])}),eh=uu(function(t,r,e){var u=-1,i=\"function\"==typeof r,o=Hf(t)?il(t.length):[];\nreturn ys(t,function(t){o[++u]=i?n(r,t,e):Ie(t,r,e)}),o}),uh=Fu(function(n,t,r){Br(n,r,t)}),ih=Fu(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),oh=uu(function(n,t){if(null==n)return[];var r=t.length;return r>1&&Ui(n,t[0],t[1])?t=[]:r>2&&Ui(t[0],t[1],t[2])&&(t=[t[0]]),He(n,ee(t,1),[])}),fh=Dl||function(){return re.Date.now()},ch=uu(function(n,t,r){var e=_n;if(r.length){var u=N(r,wi(ch));e|=bn}return ai(n,e,t,r,u)}),ah=uu(function(n,t,r){var e=_n|vn;if(r.length){var u=N(r,wi(ah));e|=bn;\n}return ai(t,e,n,r,u)}),lh=uu(function(n,t){return Gr(n,1,t)}),sh=uu(function(n,t,r){return Gr(n,Ic(t)||0,r)});Cf.Cache=sr;var hh=js(function(t,r){r=1==r.length&&bh(r[0])?c(r[0],z(mi())):c(ee(r,1),z(mi()));var e=r.length;return uu(function(u){for(var i=-1,o=Hl(u.length,e);++i<o;)u[i]=r[i].call(this,u[i]);return n(t,this,u)})}),ph=uu(function(n,t){return ai(n,bn,X,t,N(t,wi(ph)))}),_h=uu(function(n,t){return ai(n,wn,X,t,N(t,wi(_h)))}),vh=gi(function(n,t){return ai(n,xn,X,X,X,t)}),gh=ii(me),yh=ii(function(n,t){\nreturn n>=t}),dh=Re(function(){return arguments}())?Re:function(n){return cc(n)&&bl.call(n,\"callee\")&&!Wl.call(n,\"callee\")},bh=il.isArray,wh=ce?z(ce):ze,mh=ql||qa,xh=ae?z(ae):Ee,jh=le?z(le):Le,Ah=se?z(se):Be,kh=he?z(he):Te,Oh=pe?z(pe):$e,Ih=ii(Ne),Rh=ii(function(n,t){return n<=t}),zh=Nu(function(n,t){if(Mi(t)||Hf(t))return $u(t,Pc(t),n),X;for(var r in t)bl.call(t,r)&&Sr(n,r,t[r])}),Eh=Nu(function(n,t){$u(t,qc(t),n)}),Sh=Nu(function(n,t,r,e){$u(t,qc(t),n,e)}),Wh=Nu(function(n,t,r,e){$u(t,Pc(t),n,e);\n}),Lh=gi(Tr),Ch=uu(function(n,t){n=ll(n);var r=-1,e=t.length,u=e>2?t[2]:X;for(u&&Ui(t[0],t[1],u)&&(e=1);++r<e;)for(var i=t[r],o=qc(i),f=-1,c=o.length;++f<c;){var a=o[f],l=n[a];(l===X||Gf(l,gl[a])&&!bl.call(n,a))&&(n[a]=i[a])}return n}),Uh=uu(function(t){return t.push(X,si),n(Mh,X,t)}),Bh=Xu(function(n,t,r){null!=t&&\"function\"!=typeof t.toString&&(t=xl.call(t)),n[t]=r},Sa(La)),Th=Xu(function(n,t,r){null!=t&&\"function\"!=typeof t.toString&&(t=xl.call(t)),bl.call(n,t)?n[t].push(r):n[t]=[r]},mi),$h=uu(Ie),Dh=Nu(function(n,t,r){\nKe(n,t,r)}),Mh=Nu(function(n,t,r,e){Ke(n,t,r,e)}),Fh=gi(function(n,t){var r={};if(null==n)return r;var e=!1;t=c(t,function(t){return t=ku(t,n),e||(e=t.length>1),t}),$u(n,di(n),r),e&&(r=Fr(r,an|ln|sn,hi));for(var u=t.length;u--;)yu(r,t[u]);return r}),Nh=gi(function(n,t){return null==n?{}:Je(n,t)}),Ph=ci(Pc),qh=ci(qc),Zh=Vu(function(n,t,r){return t=t.toLowerCase(),n+(r?fa(t):t)}),Kh=Vu(function(n,t,r){return n+(r?\"-\":\"\")+t.toLowerCase()}),Vh=Vu(function(n,t,r){return n+(r?\" \":\"\")+t.toLowerCase()}),Gh=Ku(\"toLowerCase\"),Hh=Vu(function(n,t,r){\nreturn n+(r?\"_\":\"\")+t.toLowerCase()}),Jh=Vu(function(n,t,r){return n+(r?\" \":\"\")+Qh(t)}),Yh=Vu(function(n,t,r){return n+(r?\" \":\"\")+t.toUpperCase()}),Qh=Ku(\"toUpperCase\"),Xh=uu(function(t,r){try{return n(t,X,r)}catch(n){return rc(n)?n:new fl(n)}}),np=gi(function(n,t){return r(t,function(t){t=no(t),Br(n,t,ch(n[t],n))}),n}),tp=Yu(),rp=Yu(!0),ep=uu(function(n,t){return function(r){return Ie(r,n,t)}}),up=uu(function(n,t){return function(r){return Ie(n,r,t)}}),ip=ti(c),op=ti(u),fp=ti(h),cp=ui(),ap=ui(!0),lp=ni(function(n,t){\nreturn n+t},0),sp=fi(\"ceil\"),hp=ni(function(n,t){return n/t},1),pp=fi(\"floor\"),_p=ni(function(n,t){return n*t},1),vp=fi(\"round\"),gp=ni(function(n,t){return n-t},0);return Z.after=If,Z.ary=Rf,Z.assign=zh,Z.assignIn=Eh,Z.assignInWith=Sh,Z.assignWith=Wh,Z.at=Lh,Z.before=zf,Z.bind=ch,Z.bindAll=np,Z.bindKey=ah,Z.castArray=Nf,Z.chain=Qo,Z.chunk=uo,Z.compact=io,Z.concat=oo,Z.cond=za,Z.conforms=Ea,Z.constant=Sa,Z.countBy=Xs,Z.create=Sc,Z.curry=Ef,Z.curryRight=Sf,Z.debounce=Wf,Z.defaults=Ch,Z.defaultsDeep=Uh,\nZ.defer=lh,Z.delay=sh,Z.difference=Us,Z.differenceBy=Bs,Z.differenceWith=Ts,Z.drop=fo,Z.dropRight=co,Z.dropRightWhile=ao,Z.dropWhile=lo,Z.fill=so,Z.filter=lf,Z.flatMap=sf,Z.flatMapDeep=hf,Z.flatMapDepth=pf,Z.flatten=_o,Z.flattenDeep=vo,Z.flattenDepth=go,Z.flip=Lf,Z.flow=tp,Z.flowRight=rp,Z.fromPairs=yo,Z.functions=$c,Z.functionsIn=Dc,Z.groupBy=rh,Z.initial=mo,Z.intersection=$s,Z.intersectionBy=Ds,Z.intersectionWith=Ms,Z.invert=Bh,Z.invertBy=Th,Z.invokeMap=eh,Z.iteratee=Ca,Z.keyBy=uh,Z.keys=Pc,Z.keysIn=qc,\nZ.map=yf,Z.mapKeys=Zc,Z.mapValues=Kc,Z.matches=Ua,Z.matchesProperty=Ba,Z.memoize=Cf,Z.merge=Dh,Z.mergeWith=Mh,Z.method=ep,Z.methodOf=up,Z.mixin=Ta,Z.negate=Uf,Z.nthArg=Ma,Z.omit=Fh,Z.omitBy=Vc,Z.once=Bf,Z.orderBy=df,Z.over=ip,Z.overArgs=hh,Z.overEvery=op,Z.overSome=fp,Z.partial=ph,Z.partialRight=_h,Z.partition=ih,Z.pick=Nh,Z.pickBy=Gc,Z.property=Fa,Z.propertyOf=Na,Z.pull=Fs,Z.pullAll=Oo,Z.pullAllBy=Io,Z.pullAllWith=Ro,Z.pullAt=Ns,Z.range=cp,Z.rangeRight=ap,Z.rearg=vh,Z.reject=mf,Z.remove=zo,Z.rest=Tf,\nZ.reverse=Eo,Z.sampleSize=jf,Z.set=Jc,Z.setWith=Yc,Z.shuffle=Af,Z.slice=So,Z.sortBy=oh,Z.sortedUniq=$o,Z.sortedUniqBy=Do,Z.split=da,Z.spread=$f,Z.tail=Mo,Z.take=Fo,Z.takeRight=No,Z.takeRightWhile=Po,Z.takeWhile=qo,Z.tap=Xo,Z.throttle=Df,Z.thru=nf,Z.toArray=jc,Z.toPairs=Ph,Z.toPairsIn=qh,Z.toPath=Ha,Z.toPlainObject=Rc,Z.transform=Qc,Z.unary=Mf,Z.union=Ps,Z.unionBy=qs,Z.unionWith=Zs,Z.uniq=Zo,Z.uniqBy=Ko,Z.uniqWith=Vo,Z.unset=Xc,Z.unzip=Go,Z.unzipWith=Ho,Z.update=na,Z.updateWith=ta,Z.values=ra,Z.valuesIn=ea,\nZ.without=Ks,Z.words=Ra,Z.wrap=Ff,Z.xor=Vs,Z.xorBy=Gs,Z.xorWith=Hs,Z.zip=Js,Z.zipObject=Jo,Z.zipObjectDeep=Yo,Z.zipWith=Ys,Z.entries=Ph,Z.entriesIn=qh,Z.extend=Eh,Z.extendWith=Sh,Ta(Z,Z),Z.add=lp,Z.attempt=Xh,Z.camelCase=Zh,Z.capitalize=fa,Z.ceil=sp,Z.clamp=ua,Z.clone=Pf,Z.cloneDeep=Zf,Z.cloneDeepWith=Kf,Z.cloneWith=qf,Z.conformsTo=Vf,Z.deburr=ca,Z.defaultTo=Wa,Z.divide=hp,Z.endsWith=aa,Z.eq=Gf,Z.escape=la,Z.escapeRegExp=sa,Z.every=af,Z.find=nh,Z.findIndex=ho,Z.findKey=Wc,Z.findLast=th,Z.findLastIndex=po,\nZ.findLastKey=Lc,Z.floor=pp,Z.forEach=_f,Z.forEachRight=vf,Z.forIn=Cc,Z.forInRight=Uc,Z.forOwn=Bc,Z.forOwnRight=Tc,Z.get=Mc,Z.gt=gh,Z.gte=yh,Z.has=Fc,Z.hasIn=Nc,Z.head=bo,Z.identity=La,Z.includes=gf,Z.indexOf=wo,Z.inRange=ia,Z.invoke=$h,Z.isArguments=dh,Z.isArray=bh,Z.isArrayBuffer=wh,Z.isArrayLike=Hf,Z.isArrayLikeObject=Jf,Z.isBoolean=Yf,Z.isBuffer=mh,Z.isDate=xh,Z.isElement=Qf,Z.isEmpty=Xf,Z.isEqual=nc,Z.isEqualWith=tc,Z.isError=rc,Z.isFinite=ec,Z.isFunction=uc,Z.isInteger=ic,Z.isLength=oc,Z.isMap=jh,\nZ.isMatch=ac,Z.isMatchWith=lc,Z.isNaN=sc,Z.isNative=hc,Z.isNil=_c,Z.isNull=pc,Z.isNumber=vc,Z.isObject=fc,Z.isObjectLike=cc,Z.isPlainObject=gc,Z.isRegExp=Ah,Z.isSafeInteger=yc,Z.isSet=kh,Z.isString=dc,Z.isSymbol=bc,Z.isTypedArray=Oh,Z.isUndefined=wc,Z.isWeakMap=mc,Z.isWeakSet=xc,Z.join=xo,Z.kebabCase=Kh,Z.last=jo,Z.lastIndexOf=Ao,Z.lowerCase=Vh,Z.lowerFirst=Gh,Z.lt=Ih,Z.lte=Rh,Z.max=Ya,Z.maxBy=Qa,Z.mean=Xa,Z.meanBy=nl,Z.min=tl,Z.minBy=rl,Z.stubArray=Pa,Z.stubFalse=qa,Z.stubObject=Za,Z.stubString=Ka,\nZ.stubTrue=Va,Z.multiply=_p,Z.nth=ko,Z.noConflict=$a,Z.noop=Da,Z.now=fh,Z.pad=ha,Z.padEnd=pa,Z.padStart=_a,Z.parseInt=va,Z.random=oa,Z.reduce=bf,Z.reduceRight=wf,Z.repeat=ga,Z.replace=ya,Z.result=Hc,Z.round=vp,Z.runInContext=p,Z.sample=xf,Z.size=kf,Z.snakeCase=Hh,Z.some=Of,Z.sortedIndex=Wo,Z.sortedIndexBy=Lo,Z.sortedIndexOf=Co,Z.sortedLastIndex=Uo,Z.sortedLastIndexBy=Bo,Z.sortedLastIndexOf=To,Z.startCase=Jh,Z.startsWith=ba,Z.subtract=gp,Z.sum=el,Z.sumBy=ul,Z.template=wa,Z.times=Ga,Z.toFinite=Ac,Z.toInteger=kc,\nZ.toLength=Oc,Z.toLower=ma,Z.toNumber=Ic,Z.toSafeInteger=zc,Z.toString=Ec,Z.toUpper=xa,Z.trim=ja,Z.trimEnd=Aa,Z.trimStart=ka,Z.truncate=Oa,Z.unescape=Ia,Z.uniqueId=Ja,Z.upperCase=Yh,Z.upperFirst=Qh,Z.each=_f,Z.eachRight=vf,Z.first=bo,Ta(Z,function(){var n={};return ue(Z,function(t,r){bl.call(Z.prototype,r)||(n[r]=t)}),n}(),{chain:!1}),Z.VERSION=nn,r([\"bind\",\"bindKey\",\"curry\",\"curryRight\",\"partial\",\"partialRight\"],function(n){Z[n].placeholder=Z}),r([\"drop\",\"take\"],function(n,t){Ct.prototype[n]=function(r){\nr=r===X?1:Gl(kc(r),0);var e=this.__filtered__&&!t?new Ct(this):this.clone();return e.__filtered__?e.__takeCount__=Hl(r,e.__takeCount__):e.__views__.push({size:Hl(r,Un),type:n+(e.__dir__<0?\"Right\":\"\")}),e},Ct.prototype[n+\"Right\"]=function(t){return this.reverse()[n](t).reverse()}}),r([\"filter\",\"map\",\"takeWhile\"],function(n,t){var r=t+1,e=r==Rn||r==En;Ct.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({iteratee:mi(n,3),type:r}),t.__filtered__=t.__filtered__||e,t}}),r([\"head\",\"last\"],function(n,t){\nvar r=\"take\"+(t?\"Right\":\"\");Ct.prototype[n]=function(){return this[r](1).value()[0]}}),r([\"initial\",\"tail\"],function(n,t){var r=\"drop\"+(t?\"\":\"Right\");Ct.prototype[n]=function(){return this.__filtered__?new Ct(this):this[r](1)}}),Ct.prototype.compact=function(){return this.filter(La)},Ct.prototype.find=function(n){return this.filter(n).head()},Ct.prototype.findLast=function(n){return this.reverse().find(n)},Ct.prototype.invokeMap=uu(function(n,t){return\"function\"==typeof n?new Ct(this):this.map(function(r){\nreturn Ie(r,n,t)})}),Ct.prototype.reject=function(n){return this.filter(Uf(mi(n)))},Ct.prototype.slice=function(n,t){n=kc(n);var r=this;return r.__filtered__&&(n>0||t<0)?new Ct(r):(n<0?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==X&&(t=kc(t),r=t<0?r.dropRight(-t):r.take(t-n)),r)},Ct.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Ct.prototype.toArray=function(){return this.take(Un)},ue(Ct.prototype,function(n,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),e=/^(?:head|last)$/.test(t),u=Z[e?\"take\"+(\"last\"==t?\"Right\":\"\"):t],i=e||/^find/.test(t);\nu&&(Z.prototype[t]=function(){var t=this.__wrapped__,o=e?[1]:arguments,f=t instanceof Ct,c=o[0],l=f||bh(t),s=function(n){var t=u.apply(Z,a([n],o));return e&&h?t[0]:t};l&&r&&\"function\"==typeof c&&1!=c.length&&(f=l=!1);var h=this.__chain__,p=!!this.__actions__.length,_=i&&!h,v=f&&!p;if(!i&&l){t=v?t:new Ct(this);var g=n.apply(t,o);return g.__actions__.push({func:nf,args:[s],thisArg:X}),new Y(g,h)}return _&&v?n.apply(this,o):(g=this.thru(s),_?e?g.value()[0]:g.value():g)})}),r([\"pop\",\"push\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){\nvar t=_l[n],r=/^(?:push|sort|unshift)$/.test(n)?\"tap\":\"thru\",e=/^(?:pop|shift)$/.test(n);Z.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(bh(u)?u:[],n)}return this[r](function(r){return t.apply(bh(r)?r:[],n)})}}),ue(Ct.prototype,function(n,t){var r=Z[t];if(r){var e=r.name+\"\";bl.call(fs,e)||(fs[e]=[]),fs[e].push({name:t,func:r})}}),fs[Qu(X,vn).name]=[{name:\"wrapper\",func:X}],Ct.prototype.clone=$t,Ct.prototype.reverse=Yt,Ct.prototype.value=Qt,Z.prototype.at=Qs,\nZ.prototype.chain=tf,Z.prototype.commit=rf,Z.prototype.next=ef,Z.prototype.plant=of,Z.prototype.reverse=ff,Z.prototype.toJSON=Z.prototype.valueOf=Z.prototype.value=cf,Z.prototype.first=Z.prototype.head,Ul&&(Z.prototype[Ul]=uf),Z},be=de();\"function\"==typeof define&&\"object\"==typeof define.amd&&define.amd?(re._=be,define(function(){return be})):ue?((ue.exports=be)._=be,ee._=be):re._=be}).call(this);","var mapping = require('./_mapping'),\n    fallbackHolder = require('./placeholder');\n\n/** Built-in value reference. */\nvar push = Array.prototype.push;\n\n/**\n * Creates a function, with an arity of `n`, that invokes `func` with the\n * arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} n The arity of the new function.\n * @returns {Function} Returns the new function.\n */\nfunction baseArity(func, n) {\n  return n == 2\n    ? function(a, b) { return func.apply(undefined, arguments); }\n    : function(a) { return func.apply(undefined, arguments); };\n}\n\n/**\n * Creates a function that invokes `func`, with up to `n` arguments, ignoring\n * any additional arguments.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @param {number} n The arity cap.\n * @returns {Function} Returns the new function.\n */\nfunction baseAry(func, n) {\n  return n == 2\n    ? function(a, b) { return func(a, b); }\n    : function(a) { return func(a); };\n}\n\n/**\n * Creates a clone of `array`.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the cloned array.\n */\nfunction cloneArray(array) {\n  var length = array ? array.length : 0,\n      result = Array(length);\n\n  while (length--) {\n    result[length] = array[length];\n  }\n  return result;\n}\n\n/**\n * Creates a function that clones a given object using the assignment `func`.\n *\n * @private\n * @param {Function} func The assignment function.\n * @returns {Function} Returns the new cloner function.\n */\nfunction createCloner(func) {\n  return function(object) {\n    return func({}, object);\n  };\n}\n\n/**\n * A specialized version of `_.spread` which flattens the spread array into\n * the arguments of the invoked `func`.\n *\n * @private\n * @param {Function} func The function to spread arguments over.\n * @param {number} start The start position of the spread.\n * @returns {Function} Returns the new function.\n */\nfunction flatSpread(func, start) {\n  return function() {\n    var length = arguments.length,\n        lastIndex = length - 1,\n        args = Array(length);\n\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var array = args[start],\n        otherArgs = args.slice(0, start);\n\n    if (array) {\n      push.apply(otherArgs, array);\n    }\n    if (start != lastIndex) {\n      push.apply(otherArgs, args.slice(start + 1));\n    }\n    return func.apply(this, otherArgs);\n  };\n}\n\n/**\n * Creates a function that wraps `func` and uses `cloner` to clone the first\n * argument it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} cloner The function to clone arguments.\n * @returns {Function} Returns the new immutable function.\n */\nfunction wrapImmutable(func, cloner) {\n  return function() {\n    var length = arguments.length;\n    if (!length) {\n      return;\n    }\n    var args = Array(length);\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var result = args[0] = cloner.apply(undefined, args);\n    func.apply(undefined, args);\n    return result;\n  };\n}\n\n/**\n * The base implementation of `convert` which accepts a `util` object of methods\n * required to perform conversions.\n *\n * @param {Object} util The util object.\n * @param {string} name The name of the function to convert.\n * @param {Function} func The function to convert.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.cap=true] Specify capping iteratee arguments.\n * @param {boolean} [options.curry=true] Specify currying.\n * @param {boolean} [options.fixed=true] Specify fixed arity.\n * @param {boolean} [options.immutable=true] Specify immutable operations.\n * @param {boolean} [options.rearg=true] Specify rearranging arguments.\n * @returns {Function|Object} Returns the converted function or object.\n */\nfunction baseConvert(util, name, func, options) {\n  var isLib = typeof name == 'function',\n      isObj = name === Object(name);\n\n  if (isObj) {\n    options = func;\n    func = name;\n    name = undefined;\n  }\n  if (func == null) {\n    throw new TypeError;\n  }\n  options || (options = {});\n\n  var config = {\n    'cap': 'cap' in options ? options.cap : true,\n    'curry': 'curry' in options ? options.curry : true,\n    'fixed': 'fixed' in options ? options.fixed : true,\n    'immutable': 'immutable' in options ? options.immutable : true,\n    'rearg': 'rearg' in options ? options.rearg : true\n  };\n\n  var defaultHolder = isLib ? func : fallbackHolder,\n      forceCurry = ('curry' in options) && options.curry,\n      forceFixed = ('fixed' in options) && options.fixed,\n      forceRearg = ('rearg' in options) && options.rearg,\n      pristine = isLib ? func.runInContext() : undefined;\n\n  var helpers = isLib ? func : {\n    'ary': util.ary,\n    'assign': util.assign,\n    'clone': util.clone,\n    'curry': util.curry,\n    'forEach': util.forEach,\n    'isArray': util.isArray,\n    'isError': util.isError,\n    'isFunction': util.isFunction,\n    'isWeakMap': util.isWeakMap,\n    'iteratee': util.iteratee,\n    'keys': util.keys,\n    'rearg': util.rearg,\n    'toInteger': util.toInteger,\n    'toPath': util.toPath\n  };\n\n  var ary = helpers.ary,\n      assign = helpers.assign,\n      clone = helpers.clone,\n      curry = helpers.curry,\n      each = helpers.forEach,\n      isArray = helpers.isArray,\n      isError = helpers.isError,\n      isFunction = helpers.isFunction,\n      isWeakMap = helpers.isWeakMap,\n      keys = helpers.keys,\n      rearg = helpers.rearg,\n      toInteger = helpers.toInteger,\n      toPath = helpers.toPath;\n\n  var aryMethodKeys = keys(mapping.aryMethod);\n\n  var wrappers = {\n    'castArray': function(castArray) {\n      return function() {\n        var value = arguments[0];\n        return isArray(value)\n          ? castArray(cloneArray(value))\n          : castArray.apply(undefined, arguments);\n      };\n    },\n    'iteratee': function(iteratee) {\n      return function() {\n        var func = arguments[0],\n            arity = arguments[1],\n            result = iteratee(func, arity),\n            length = result.length;\n\n        if (config.cap && typeof arity == 'number') {\n          arity = arity > 2 ? (arity - 2) : 1;\n          return (length && length <= arity) ? result : baseAry(result, arity);\n        }\n        return result;\n      };\n    },\n    'mixin': function(mixin) {\n      return function(source) {\n        var func = this;\n        if (!isFunction(func)) {\n          return mixin(func, Object(source));\n        }\n        var pairs = [];\n        each(keys(source), function(key) {\n          if (isFunction(source[key])) {\n            pairs.push([key, func.prototype[key]]);\n          }\n        });\n\n        mixin(func, Object(source));\n\n        each(pairs, function(pair) {\n          var value = pair[1];\n          if (isFunction(value)) {\n            func.prototype[pair[0]] = value;\n          } else {\n            delete func.prototype[pair[0]];\n          }\n        });\n        return func;\n      };\n    },\n    'nthArg': function(nthArg) {\n      return function(n) {\n        var arity = n < 0 ? 1 : (toInteger(n) + 1);\n        return curry(nthArg(n), arity);\n      };\n    },\n    'rearg': function(rearg) {\n      return function(func, indexes) {\n        var arity = indexes ? indexes.length : 0;\n        return curry(rearg(func, indexes), arity);\n      };\n    },\n    'runInContext': function(runInContext) {\n      return function(context) {\n        return baseConvert(util, runInContext(context), options);\n      };\n    }\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Casts `func` to a function with an arity capped iteratee if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCap(name, func) {\n    if (config.cap) {\n      var indexes = mapping.iterateeRearg[name];\n      if (indexes) {\n        return iterateeRearg(func, indexes);\n      }\n      var n = !isLib && mapping.iterateeAry[name];\n      if (n) {\n        return iterateeAry(func, n);\n      }\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to a curried function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCurry(name, func, n) {\n    return (forceCurry || (config.curry && n > 1))\n      ? curry(func, n)\n      : func;\n  }\n\n  /**\n   * Casts `func` to a fixed arity function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the cast function.\n   */\n  function castFixed(name, func, n) {\n    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {\n      var data = mapping.methodSpread[name],\n          start = data && data.start;\n\n      return start  === undefined ? ary(func, n) : flatSpread(func, start);\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to an rearged function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castRearg(name, func, n) {\n    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))\n      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])\n      : func;\n  }\n\n  /**\n   * Creates a clone of `object` by `path`.\n   *\n   * @private\n   * @param {Object} object The object to clone.\n   * @param {Array|string} path The path to clone by.\n   * @returns {Object} Returns the cloned object.\n   */\n  function cloneByPath(object, path) {\n    path = toPath(path);\n\n    var index = -1,\n        length = path.length,\n        lastIndex = length - 1,\n        result = clone(Object(object)),\n        nested = result;\n\n    while (nested != null && ++index < length) {\n      var key = path[index],\n          value = nested[key];\n\n      if (value != null &&\n          !(isFunction(value) || isError(value) || isWeakMap(value))) {\n        nested[key] = clone(index == lastIndex ? value : Object(value));\n      }\n      nested = nested[key];\n    }\n    return result;\n  }\n\n  /**\n   * Converts `lodash` to an immutable auto-curried iteratee-first data-last\n   * version with conversion `options` applied.\n   *\n   * @param {Object} [options] The options object. See `baseConvert` for more details.\n   * @returns {Function} Returns the converted `lodash`.\n   */\n  function convertLib(options) {\n    return _.runInContext.convert(options)(undefined);\n  }\n\n  /**\n   * Create a converter function for `func` of `name`.\n   *\n   * @param {string} name The name of the function to convert.\n   * @param {Function} func The function to convert.\n   * @returns {Function} Returns the new converter function.\n   */\n  function createConverter(name, func) {\n    var realName = mapping.aliasToReal[name] || name,\n        methodName = mapping.remap[realName] || realName,\n        oldOptions = options;\n\n    return function(options) {\n      var newUtil = isLib ? pristine : helpers,\n          newFunc = isLib ? pristine[methodName] : func,\n          newOptions = assign(assign({}, oldOptions), options);\n\n      return baseConvert(newUtil, realName, newFunc, newOptions);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`\n   * arguments, ignoring any additional arguments.\n   *\n   * @private\n   * @param {Function} func The function to cap iteratee arguments for.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeAry(func, n) {\n    return overArg(func, function(func) {\n      return typeof func == 'function' ? baseAry(func, n) : func;\n    });\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee with arguments\n   * arranged according to the specified `indexes` where the argument value at\n   * the first index is provided as the first argument, the argument value at\n   * the second index is provided as the second argument, and so on.\n   *\n   * @private\n   * @param {Function} func The function to rearrange iteratee arguments for.\n   * @param {number[]} indexes The arranged argument indexes.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeRearg(func, indexes) {\n    return overArg(func, function(func) {\n      var n = indexes.length;\n      return baseArity(rearg(baseAry(func, n), indexes), n);\n    });\n  }\n\n  /**\n   * Creates a function that invokes `func` with its first argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function() {\n      var length = arguments.length;\n      if (!length) {\n        return func();\n      }\n      var args = Array(length);\n      while (length--) {\n        args[length] = arguments[length];\n      }\n      var index = config.rearg ? 0 : (length - 1);\n      args[index] = transform(args[index]);\n      return func.apply(undefined, args);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` and applys the conversions\n   * rules by `name`.\n   *\n   * @private\n   * @param {string} name The name of the function to wrap.\n   * @param {Function} func The function to wrap.\n   * @returns {Function} Returns the converted function.\n   */\n  function wrap(name, func, placeholder) {\n    var result,\n        realName = mapping.aliasToReal[name] || name,\n        wrapped = func,\n        wrapper = wrappers[realName];\n\n    if (wrapper) {\n      wrapped = wrapper(func);\n    }\n    else if (config.immutable) {\n      if (mapping.mutate.array[realName]) {\n        wrapped = wrapImmutable(func, cloneArray);\n      }\n      else if (mapping.mutate.object[realName]) {\n        wrapped = wrapImmutable(func, createCloner(func));\n      }\n      else if (mapping.mutate.set[realName]) {\n        wrapped = wrapImmutable(func, cloneByPath);\n      }\n    }\n    each(aryMethodKeys, function(aryKey) {\n      each(mapping.aryMethod[aryKey], function(otherName) {\n        if (realName == otherName) {\n          var data = mapping.methodSpread[realName],\n              afterRearg = data && data.afterRearg;\n\n          result = afterRearg\n            ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)\n            : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);\n\n          result = castCap(realName, result);\n          result = castCurry(realName, result, aryKey);\n          return false;\n        }\n      });\n      return !result;\n    });\n\n    result || (result = wrapped);\n    if (result == func) {\n      result = forceCurry ? curry(result, 1) : function() {\n        return func.apply(this, arguments);\n      };\n    }\n    result.convert = createConverter(realName, func);\n    result.placeholder = func.placeholder = placeholder;\n\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  if (!isObj) {\n    return wrap(name, func, defaultHolder);\n  }\n  var _ = func;\n\n  // Convert methods by ary cap.\n  var pairs = [];\n  each(aryMethodKeys, function(aryKey) {\n    each(mapping.aryMethod[aryKey], function(key) {\n      var func = _[mapping.remap[key] || key];\n      if (func) {\n        pairs.push([key, wrap(key, func, _)]);\n      }\n    });\n  });\n\n  // Convert remaining methods.\n  each(keys(_), function(key) {\n    var func = _[key];\n    if (typeof func == 'function') {\n      var length = pairs.length;\n      while (length--) {\n        if (pairs[length][0] == key) {\n          return;\n        }\n      }\n      func.convert = createConverter(key, func);\n      pairs.push([key, func]);\n    }\n  });\n\n  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.\n  each(pairs, function(pair) {\n    _[pair[0]] = pair[1];\n  });\n\n  _.convert = convertLib;\n  _.placeholder = _;\n\n  // Assign aliases.\n  each(keys(_), function(key) {\n    each(mapping.realToAlias[key] || [], function(alias) {\n      _[alias] = _[key];\n    });\n  });\n\n  return _;\n}\n\nmodule.exports = baseConvert;\n","/** Used to map aliases to their real names. */\nexports.aliasToReal = {\n\n  // Lodash aliases.\n  'each': 'forEach',\n  'eachRight': 'forEachRight',\n  'entries': 'toPairs',\n  'entriesIn': 'toPairsIn',\n  'extend': 'assignIn',\n  'extendAll': 'assignInAll',\n  'extendAllWith': 'assignInAllWith',\n  'extendWith': 'assignInWith',\n  'first': 'head',\n\n  // Methods that are curried variants of others.\n  'conforms': 'conformsTo',\n  'matches': 'isMatch',\n  'property': 'get',\n\n  // Ramda aliases.\n  '__': 'placeholder',\n  'F': 'stubFalse',\n  'T': 'stubTrue',\n  'all': 'every',\n  'allPass': 'overEvery',\n  'always': 'constant',\n  'any': 'some',\n  'anyPass': 'overSome',\n  'apply': 'spread',\n  'assoc': 'set',\n  'assocPath': 'set',\n  'complement': 'negate',\n  'compose': 'flowRight',\n  'contains': 'includes',\n  'dissoc': 'unset',\n  'dissocPath': 'unset',\n  'dropLast': 'dropRight',\n  'dropLastWhile': 'dropRightWhile',\n  'equals': 'isEqual',\n  'identical': 'eq',\n  'indexBy': 'keyBy',\n  'init': 'initial',\n  'invertObj': 'invert',\n  'juxt': 'over',\n  'omitAll': 'omit',\n  'nAry': 'ary',\n  'path': 'get',\n  'pathEq': 'matchesProperty',\n  'pathOr': 'getOr',\n  'paths': 'at',\n  'pickAll': 'pick',\n  'pipe': 'flow',\n  'pluck': 'map',\n  'prop': 'get',\n  'propEq': 'matchesProperty',\n  'propOr': 'getOr',\n  'props': 'at',\n  'symmetricDifference': 'xor',\n  'symmetricDifferenceBy': 'xorBy',\n  'symmetricDifferenceWith': 'xorWith',\n  'takeLast': 'takeRight',\n  'takeLastWhile': 'takeRightWhile',\n  'unapply': 'rest',\n  'unnest': 'flatten',\n  'useWith': 'overArgs',\n  'where': 'conformsTo',\n  'whereEq': 'isMatch',\n  'zipObj': 'zipObject'\n};\n\n/** Used to map ary to method names. */\nexports.aryMethod = {\n  '1': [\n    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',\n    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',\n    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',\n    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',\n    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',\n    'uniqueId', 'words', 'zipAll'\n  ],\n  '2': [\n    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',\n    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',\n    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',\n    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',\n    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',\n    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',\n    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',\n    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',\n    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',\n    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',\n    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',\n    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',\n    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',\n    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',\n    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',\n    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',\n    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',\n    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',\n    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',\n    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',\n    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',\n    'zipObjectDeep'\n  ],\n  '3': [\n    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',\n    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',\n    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',\n    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',\n    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',\n    'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',\n    'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',\n    'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',\n    'xorWith', 'zipWith'\n  ],\n  '4': [\n    'fill', 'setWith', 'updateWith'\n  ]\n};\n\n/** Used to map ary to rearg configs. */\nexports.aryRearg = {\n  '2': [1, 0],\n  '3': [2, 0, 1],\n  '4': [3, 2, 0, 1]\n};\n\n/** Used to map method names to their iteratee ary. */\nexports.iterateeAry = {\n  'dropRightWhile': 1,\n  'dropWhile': 1,\n  'every': 1,\n  'filter': 1,\n  'find': 1,\n  'findFrom': 1,\n  'findIndex': 1,\n  'findIndexFrom': 1,\n  'findKey': 1,\n  'findLast': 1,\n  'findLastFrom': 1,\n  'findLastIndex': 1,\n  'findLastIndexFrom': 1,\n  'findLastKey': 1,\n  'flatMap': 1,\n  'flatMapDeep': 1,\n  'flatMapDepth': 1,\n  'forEach': 1,\n  'forEachRight': 1,\n  'forIn': 1,\n  'forInRight': 1,\n  'forOwn': 1,\n  'forOwnRight': 1,\n  'map': 1,\n  'mapKeys': 1,\n  'mapValues': 1,\n  'partition': 1,\n  'reduce': 2,\n  'reduceRight': 2,\n  'reject': 1,\n  'remove': 1,\n  'some': 1,\n  'takeRightWhile': 1,\n  'takeWhile': 1,\n  'times': 1,\n  'transform': 2\n};\n\n/** Used to map method names to iteratee rearg configs. */\nexports.iterateeRearg = {\n  'mapKeys': [1],\n  'reduceRight': [1, 0]\n};\n\n/** Used to map method names to rearg configs. */\nexports.methodRearg = {\n  'assignInAllWith': [1, 0],\n  'assignInWith': [1, 2, 0],\n  'assignAllWith': [1, 0],\n  'assignWith': [1, 2, 0],\n  'differenceBy': [1, 2, 0],\n  'differenceWith': [1, 2, 0],\n  'getOr': [2, 1, 0],\n  'intersectionBy': [1, 2, 0],\n  'intersectionWith': [1, 2, 0],\n  'isEqualWith': [1, 2, 0],\n  'isMatchWith': [2, 1, 0],\n  'mergeAllWith': [1, 0],\n  'mergeWith': [1, 2, 0],\n  'padChars': [2, 1, 0],\n  'padCharsEnd': [2, 1, 0],\n  'padCharsStart': [2, 1, 0],\n  'pullAllBy': [2, 1, 0],\n  'pullAllWith': [2, 1, 0],\n  'rangeStep': [1, 2, 0],\n  'rangeStepRight': [1, 2, 0],\n  'setWith': [3, 1, 2, 0],\n  'sortedIndexBy': [2, 1, 0],\n  'sortedLastIndexBy': [2, 1, 0],\n  'unionBy': [1, 2, 0],\n  'unionWith': [1, 2, 0],\n  'updateWith': [3, 1, 2, 0],\n  'xorBy': [1, 2, 0],\n  'xorWith': [1, 2, 0],\n  'zipWith': [1, 2, 0]\n};\n\n/** Used to map method names to spread configs. */\nexports.methodSpread = {\n  'assignAll': { 'start': 0 },\n  'assignAllWith': { 'start': 0 },\n  'assignInAll': { 'start': 0 },\n  'assignInAllWith': { 'start': 0 },\n  'defaultsAll': { 'start': 0 },\n  'defaultsDeepAll': { 'start': 0 },\n  'invokeArgs': { 'start': 2 },\n  'invokeArgsMap': { 'start': 2 },\n  'mergeAll': { 'start': 0 },\n  'mergeAllWith': { 'start': 0 },\n  'partial': { 'start': 1 },\n  'partialRight': { 'start': 1 },\n  'without': { 'start': 1 },\n  'zipAll': { 'start': 0 }\n};\n\n/** Used to identify methods which mutate arrays or objects. */\nexports.mutate = {\n  'array': {\n    'fill': true,\n    'pull': true,\n    'pullAll': true,\n    'pullAllBy': true,\n    'pullAllWith': true,\n    'pullAt': true,\n    'remove': true,\n    'reverse': true\n  },\n  'object': {\n    'assign': true,\n    'assignAll': true,\n    'assignAllWith': true,\n    'assignIn': true,\n    'assignInAll': true,\n    'assignInAllWith': true,\n    'assignInWith': true,\n    'assignWith': true,\n    'defaults': true,\n    'defaultsAll': true,\n    'defaultsDeep': true,\n    'defaultsDeepAll': true,\n    'merge': true,\n    'mergeAll': true,\n    'mergeAllWith': true,\n    'mergeWith': true,\n  },\n  'set': {\n    'set': true,\n    'setWith': true,\n    'unset': true,\n    'update': true,\n    'updateWith': true\n  }\n};\n\n/** Used to map real names to their aliases. */\nexports.realToAlias = (function() {\n  var hasOwnProperty = Object.prototype.hasOwnProperty,\n      object = exports.aliasToReal,\n      result = {};\n\n  for (var key in object) {\n    var value = object[key];\n    if (hasOwnProperty.call(result, value)) {\n      result[value].push(key);\n    } else {\n      result[value] = [key];\n    }\n  }\n  return result;\n}());\n\n/** Used to map method names to other names. */\nexports.remap = {\n  'assignAll': 'assign',\n  'assignAllWith': 'assignWith',\n  'assignInAll': 'assignIn',\n  'assignInAllWith': 'assignInWith',\n  'curryN': 'curry',\n  'curryRightN': 'curryRight',\n  'defaultsAll': 'defaults',\n  'defaultsDeepAll': 'defaultsDeep',\n  'findFrom': 'find',\n  'findIndexFrom': 'findIndex',\n  'findLastFrom': 'findLast',\n  'findLastIndexFrom': 'findLastIndex',\n  'getOr': 'get',\n  'includesFrom': 'includes',\n  'indexOfFrom': 'indexOf',\n  'invokeArgs': 'invoke',\n  'invokeArgsMap': 'invokeMap',\n  'lastIndexOfFrom': 'lastIndexOf',\n  'mergeAll': 'merge',\n  'mergeAllWith': 'mergeWith',\n  'padChars': 'pad',\n  'padCharsEnd': 'padEnd',\n  'padCharsStart': 'padStart',\n  'propertyOf': 'get',\n  'rangeStep': 'range',\n  'rangeStepRight': 'rangeRight',\n  'restFrom': 'rest',\n  'spreadFrom': 'spread',\n  'trimChars': 'trim',\n  'trimCharsEnd': 'trimEnd',\n  'trimCharsStart': 'trimStart',\n  'zipAll': 'zip'\n};\n\n/** Used to track methods that skip fixing their arity. */\nexports.skipFixed = {\n  'castArray': true,\n  'flow': true,\n  'flowRight': true,\n  'iteratee': true,\n  'mixin': true,\n  'rearg': true,\n  'runInContext': true\n};\n\n/** Used to track methods that skip rearranging arguments. */\nexports.skipRearg = {\n  'add': true,\n  'assign': true,\n  'assignIn': true,\n  'bind': true,\n  'bindKey': true,\n  'concat': true,\n  'difference': true,\n  'divide': true,\n  'eq': true,\n  'gt': true,\n  'gte': true,\n  'isEqual': true,\n  'lt': true,\n  'lte': true,\n  'matchesProperty': true,\n  'merge': true,\n  'multiply': true,\n  'overArgs': true,\n  'partial': true,\n  'partialRight': true,\n  'propertyOf': true,\n  'random': true,\n  'range': true,\n  'rangeRight': true,\n  'subtract': true,\n  'zip': true,\n  'zipObject': true,\n  'zipObjectDeep': true\n};\n","/**\n * The default argument placeholder value for methods.\n *\n * @type {Object}\n */\nmodule.exports = {};\n","var isFunction = require('./function');\n\nmodule.exports = function isStamp(arg) {\n  return isFunction(arg) && isFunction(arg.compose);\n};\n","// More proper implementation would be\n// isDescriptor(obj) || isStamp(obj)\n// but there is no sense since stamp is function and function is object.\nmodule.exports = require('./object');\n","module.exports = Object.assign;\n","var isPlainObject = require('@stamp/is/plain-object');\nvar isObject = require('@stamp/is/object');\nvar isArray = require('@stamp/is/array');\n\n/**\n * The 'src' argument plays the command role.\n * The returned values is always of the same type as the 'src'.\n * @param dst The object to merge into\n * @param src The object to merge from\n * @returns {*}\n */\nfunction mergeOne(dst, src) {\n  if (src === undefined) return dst;\n\n  // According to specification arrays must be concatenated.\n  // Also, the '.concat' creates a new array instance. Overrides the 'dst'.\n  if (isArray(src)) return (isArray(dst) ? dst : []).concat(src);\n\n  // Now deal with non plain 'src' object. 'src' overrides 'dst'\n  // Note that functions are also assigned! We do not deep merge functions.\n  if (!isPlainObject(src)) return src;\n\n  // See if 'dst' is allowed to be mutated.\n  // If not - it's overridden with a new plain object.\n  var returnValue = isObject(dst) ? dst : {};\n\n  var keys = Object.keys(src);\n  for (var i = 0; i < keys.length; i += 1) {\n    var key = keys[i];\n\n    var srcValue = src[key];\n    // Do not merge properties with the 'undefined' value.\n    if (srcValue !== undefined) {\n      var dstValue = returnValue[key];\n      // Recursive calls to mergeOne() must allow only plain objects or arrays in dst\n      var newDst = isPlainObject(dstValue) || isArray(srcValue) ? dstValue : {};\n\n      // deep merge each property. Recursion!\n      returnValue[key] = mergeOne(newDst, srcValue);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = function (dst) {\n  for (var i = 1; i < arguments.length; i++) {\n    dst = mergeOne(dst, arguments[i]);\n  }\n  return dst;\n};\n","module.exports = function isPlainObject(value) {\n  return Boolean(value) && typeof value === 'object' &&\n    Object.getPrototypeOf(value) === Object.prototype;\n};\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","module.exports = function () { /* empty */ };\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","import createLogger from './logger'\nimport defaultLogHandler from './logHandler'\nimport { logLevels } from './constants'\nimport { checkLevel, checkHandler } from './validation'\n\nconst defaultType = Symbol('Default')\n\n/**\n * Creates a Log Manager.\n * @method createManager\n * @param  {Object}     [options={}]\n * @param  {Function}   [options.handler]      The default log handler used for\n *    Loggers that don't have a handler set.\n * @param  {string}     [options.level='INFO'] The default log level used for\n *    Loggers that don't have a level set.\n * @return {LogManager}\n */\nexport default function createManager (options = {}) {\n  const loggers = {}\n\n  /**\n   * Mapping between a Logger `type` and their default settings. Created Loggers\n   *    will use their `type` settings if they exist. Otherwise the \"global\"\n   *    options provided during Manager creation.\n   * @type {Object}\n   */\n  const settings = {\n    [defaultType]: {\n      handler: options.handler ? checkHandler(options.handler) : defaultLogHandler,\n      level: options.level ? checkLevel(options.level) : logLevels.INFO\n    }\n  }\n\n  /**\n   * Gets a specific logger. If the logger doesn't exist, a new one will be\n   *    created.\n   * @method getLogger\n   * @param  {string} type Human-readable type/name for the logger.\n   * @param  {string} [id] A unique identifier for the logger.\n   * @return {Logger}\n   */\n  function getLogger (type, id = '') {\n    id = String(id)\n\n    // Combine the name and ID to create the \"full\" logger name.\n    const loggerName = id ? `${type}-${id}` : type\n\n    let logger = loggers[loggerName]\n    // If the logger does not exist, create a new one.\n    if (!logger) {\n      // This logger logs items from a specific \"target\".\n      const target = { type, id, name: loggerName }\n      const options = {\n        level: getLevel(type),\n        handler: getHandler(type)\n      }\n\n      logger = createLogger(target, options)\n\n      // Save the new logger to be returned by future getter calls.\n      loggers[loggerName] = logger\n    }\n\n    return logger\n  }\n\n  /**\n   * Gets all created loggers, or Loggers of a specific type.\n   * @method getLoggers\n   * @param {string} [type] The type of Loggers to retrieve.\n   * @return {Array<Logger>} List of Loggers.\n   */\n  function getLoggers (type) {\n    if (type) {\n      return Object.values(loggers).filter(logger => logger.type === type)\n    } else {\n      return Object.values(loggers)\n    }\n  }\n\n  /**\n   * Sets the default `level` to be used when creating Loggers.\n   *\n   * Can set the level \"globally\" or per `type`, depending if `type` is provided\n   *    or not. When set for a specific type, only Loggers of that type will use\n   *    the set level. When set \"globally\", all Loggers without a set type will\n   *    use the level as a default.\n   *\n   * Setting the level only affects Loggers created after that point.\n   * @method setLevel\n   * @param  {string} type  The type of Logger to set the option for.\n   * @param  {string} level The logLevel to be set.\n   * @throws Throws an error if level is not a valid log level.\n   * @example\n   * const manager = createManager({ level: logLevels.WARN })\n   *\n   * // Setting the level for a type sets it for created Loggers of that type.\n   * manager.setLevel('Call', logLevels.DEBUG)\n   * const logger1 = manager.getLogger('Call')\n   * // logger1.getLevel() === logLevels.DEBUG\n   *\n   * // Loggers created of types without a set level uses the Manager's level.\n   * const logger2 = manager.getLogger('Auth')\n   * // logger2.getLevel() === logLevels.WARN\n   *\n   * // Setting the level without a type changes the Manager's level.\n   * manager.setLevel(logLevels.INFO)\n   * const logger3 = manager.getLogger('Messaging')\n   * // logger3.getLevel() === logLevels.INFO\n   *\n   * // Setting the level for a type does not affect previously created Loggers.\n   * manager.setLevel('Auth', logLevels.INFO)\n   * // logger2.getLevel() !== logLevels.INFO\n   * // logger2.getLevel() === logLevels.WARN\n   */\n  function setLevel (type, level) {\n    // Signature can be: `setLevel(type, level)` or `setLevel(level)`.\n    // Normalize the parameters to always be consistent.\n    if (level === undefined) {\n      level = type\n      type = defaultType\n    }\n\n    // Ensure `settings[type]` is an object.\n    if (!settings[type]) {\n      settings[type] = {}\n    }\n\n    // Set the level.\n    settings[type].level = checkLevel(level)\n  }\n\n  /**\n   * Gets the default `level` that is used when creating Loggers.\n   *\n   * Can get the level used \"globally\" or per `type`, depending if `type` is\n   *    provided or not.\n   *\n   * See the `setLevel` API for setting these values.\n   * See the Logger APIs for getting this value for an already created Logger.\n   * @method getLevel\n   * @param  {string} [type] A type of Logger.\n   * @return {LogLevel}\n   * @example\n   * const manager = createManager({ level: logLevels.WARN })\n   *\n   * // If a type's level has not been set, gets the \"global\" level.\n   * // manager.getLevel('Call') === logLevels.WARN\n   *\n   * // If a type's level has been set, gets its level.\n   * manager.setLevel('Auth', logLevels.DEBUG)\n   * // manager.getLevel('Auth') === logLevels.DEBUG\n   *\n   * // Can get the \"global\" level.\n   * manager.setLevel(logLevels.INFO)\n   * // manager.getLevel() === logLevels.INFO\n   */\n  function getLevel (type) {\n    // Signature can be: `getLevel(type)` or `getLevel()`.\n    // Normalize the parameters to always be consistent.\n    type = type || defaultType\n\n    return (settings[type] && settings[type].level) || settings[defaultType].level\n  }\n\n  /**\n   * Sets the default `handler` to be used when creating Loggers.\n   *\n   * Can set the handler \"globally\" or per `type`, depending if `type` is\n   *    provided or not. When set for a specific type, only Loggers of that type\n   *    will use the set handler. When set \"globally\", all Loggers without a set\n   *    type will use the handler as a default.\n   *\n   * Setting the handler only affects Loggers created after that point.\n   * @method setHandler\n   * @param  {string}     type    The type of Logger to set the option for.\n   * @param  {LogHandler} handler The log handler to be set.\n   * @throws Throws an error if handler is not a function.\n   * @example\n   * const manager = createManager({ handler: managerHandler })\n   *\n   * // Setting the handler for a type sets it for created Loggers of that type.\n   * manager.setHandler('Call', callHandler)\n   * const logger1 = manager.getLogger('Call')\n   * // logger1.getHandler() === callHandler\n   *\n   * // Loggers created of types without a set handler uses the Manager's handler.\n   * const logger2 = manager.getLogger('Auth')\n   * // logger2.getHandler() === managerHandler\n   *\n   * // Setting the handler without a type changes the Manager's handler.\n   * manager.setHandler(newHandler)\n   * const logger3 = manager.getLogger('Messaging')\n   * // logger3.getHandler() === newHandler\n   *\n   * // Setting the handler for a type does not affect previously created Loggers.\n   * manager.setHandler('Auth', authHandler)\n   * // logger2.getHandler() !== authHandler\n   * // logger2.getHandler() === managerHandler\n   */\n  function setHandler (type, handler) {\n    // Signature can be: `setHandler(type, handler)` or `setHandler(handler)`.\n    // Normalize the parameters to always be consistent.\n    if (typeof type === 'function' && handler === undefined) {\n      handler = type\n      type = defaultType\n    }\n\n    // Ensure `settings[type]` is an object.\n    if (!settings[type]) {\n      settings[type] = {}\n    }\n\n    // Set the handler.\n    settings[type].handler = checkHandler(handler)\n  }\n\n  /**\n   * Gets the default `handler` that is used when creating Loggers.\n   *\n   * Can get the handler used \"globally\" or per `type`, depending if `type` is\n   *    provided or not.\n   *\n   * See the `setHandler` API for setting these values.\n   * See the Logger APIs for getting this value for an already created Logger.\n   * @method getHandler\n   * @param  {string} [type] A type of Logger.\n   * @return {LogHandler}\n   * @example\n   * const manager = createManager({ handler: managerHandler })\n   *\n   * // If a type's handler has not been set, gets the \"global\" handler.\n   * // manager.getHandler('Call') === managerHandler\n   *\n   * // If a type's handler has been set, gets its handler.\n   * manager.setHandler('Auth', authHandler)\n   * // manager.getHandler('Auth') === authHandler\n   *\n   * // Can get the \"global\" handler.\n   * manager.setHandler(newHandler)\n   * // manager.getHandler() === newHandler\n   */\n  function getHandler (type) {\n    // Signature can be: `getHandler(type)` or `getHandler()`.\n    // Normalize the parameters to always be consistent.\n    type = type || defaultType\n\n    return (settings[type] && settings[type].handler) || settings[defaultType].handler\n  }\n\n  return {\n    getLogger,\n    getLoggers,\n    setLevel,\n    getLevel,\n    setHandler,\n    getHandler\n  }\n}\n","require('../../modules/es7.object.values');\nmodule.exports = require('../../modules/_core').Object.values;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toObject = require('./_to-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $GOPS = require('./_object-gops');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  $GOPS.f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });\n\n$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return $GOPS.f(toObject(it));\n  }\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","require('./_wks-define')('asyncIterator');\n","require('./_wks-define')('observable');\n","import { levelValues, logMethods, logLevels, timeLevel } from './constants'\nimport { checkLevel, checkHandler } from './validation'\nimport createTimer from './timer'\n\n/**\n * Creates a Logger.\n * @method createLogger\n * @param  {Object}   target          The subject of the logs from this logger.\n * @param  {Object}   options\n * @param  {Function} options.handler The function to receive/handle log entries.\n * @param  {string}   options.level   The log level to be set.\n * @return {Logger}\n */\nexport default function createLogger (target, options = {}) {\n  // Validate provided options. Do not let invalid options be set.\n  const level = checkLevel(options.level)\n  const handler = checkHandler(options.handler)\n\n  /**\n   * Logger data.\n   * @type {Object}\n   * @property {Object}   target  Metadata about the \"target\" of the Logger.\n   * @property {LogLevel} level   The currently set log level.\n   * @property {Function} handler The currently set Log Handler.\n   */\n  const logger = {\n    target,\n    level,\n    handler\n  }\n\n  /**\n   * Currying function to dynamically create the Logger's logging methods.\n   * @method logFunc\n   * @param  {string} method   Name of the logger method to create.\n   * @param  {string} logLevel The log level for the method.\n   * @param  {Object} [injectables] Other values to include in the LogEntry.\n   * @return {Function} A log method.\n   */\n  function logFunc (method, logLevel, injectables) {\n    /*\n     * Return the function that will be used as `log.<method>`.\n     */\n    return function (...args) {\n      // Compare the logged level and the configured level.\n      const shouldLog = levelValues[logLevel] >= levelValues[logger.level]\n      // If this entry shouldn't be logged, don't do anything.\n      if (!shouldLog) {\n        return\n      }\n\n      // Create the Log Entry to be handed off to the handler.\n      const entry = {\n        // Extra data to be added to the LogEntry.\n        ...injectables,\n        // Meta-info about the log.\n        method,\n        timestamp: Date.now(),\n        level: logLevel,\n        target: logger.target,\n        // The actual arguments logged.\n        messages: [...args]\n      }\n\n      logger.handler(entry)\n    }\n  }\n\n  /**\n   * Sets the Logger's current log level.\n   * @method setLevel\n   * @param  {string} level The logLevel to be set.\n   * @throws Throws an error if level is not a valid log level.\n   * @example\n   * logger.setLevel(logLevels.INFO)\n   * logger.info('This will be logged.')\n   * logger.debug('This will not be logged.')\n   */\n  function setLevel (level) {\n    logger.level = checkLevel(level)\n  }\n\n  /**\n   * Gets the Logger's current log level.\n   * @method getLevel\n   * @return {string} The log level.\n   * @example\n   * logger.setLevel(logLevels.DEBUG)\n   * const level = logger.getLevel()\n   * // level === logLevels.DEBUG\n   */\n  function getLevel () {\n    return logger.level\n  }\n\n  /**\n   * Sets the Logger's current log handler.\n   * @method setHandler\n   * @param  {Function} handler The log handler to be set.\n   * @throws Throws an error if handler is not a function.\n   * @example\n   * const logger = manager.getLogger('Test', '123')\n   * logger.setHandler((logEntry) => {\n   *    console.log(logEntry.target.name, ...logEntry.messages)\n   * })\n   * logger.info('I am a logged message.')\n   * // logs: \"Test-123 I am a logged message.\"\n   */\n  function setHandler (handler) {\n    logger.handler = checkHandler(handler)\n  }\n\n  /**\n   * Gets the Logger's current log handler.\n   * @method getHandler\n   * @return {Function} The log handler.\n   * @example\n   * logger.setHandler(customHandler)\n   * const handler = logger.getHandler()\n   * // handler === customHandler.DEBUG\n   */\n  function getHandler () {\n    return logger.handler\n  }\n\n  const api = {\n    getHandler,\n    setHandler,\n    getLevel,\n    setLevel,\n    get type () {\n      return logger.target.type\n    },\n    get id () {\n      return logger.target.id\n    },\n    get name () {\n      return logger.target.name\n    }\n  }\n\n  // For all supported log methods, create a function on the Logger for it.\n  for (const method in logMethods) {\n    api[method] = logFunc(method, logMethods[method])\n  }\n\n  // Create log functions for the Timer to use.\n  // Follows the same style as above logMethods, but curries it once more\n  //    to align the timer parameters as needed.\n  const timeLog = (message, data) => logFunc(data.event, timeLevel, { timer: data })(message)\n  const timeWarn = (message, data) => logFunc('warn', logLevels.WARN, { timer: data })(message)\n  const timer = createTimer(timeLog, timeWarn)\n\n  return {\n    ...api,\n    ...timer\n  }\n}\n","import { checkHandler } from './validation'\n\n/**\n * Timer factory function.\n * The Timer imitates the Console's Time APIs.\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/console#Timers\n * @method createTimer\n * @param  {Function} log  Function for logging timer information.\n * @param  {Function} warn Function for warning about timer misuse.\n * @return {Timer}\n */\nexport default function createTimer (log, warn) {\n  // Validate that params are a function.\n  //    Uses functions as `log(message, data)`.\n  checkHandler(log)\n  checkHandler(warn)\n\n  /**\n   * Mapping of on-going timers; <name>: <start>.\n   * @type {Object}\n   */\n  const timers = {}\n\n  /**\n   * Starts a timer. Logs a message to indicate it was started.\n   * Logs a warning if the timer has already been started.\n   * @method timeStart\n   * @param  {string} name Name to identify the timer.\n   */\n  function time (name) {\n    const now = Date.now()\n    // Base info about this timer call.\n    const data = {\n      event: 'time',\n      name\n    }\n\n    if (timers.hasOwnProperty(name)) {\n      data.start = timers[name]\n      warn(`Timer ${name} already started.`, data)\n    } else {\n      // Set the new timer.\n      timers[name] = now\n\n      data.start = now\n      log(`Timer ${name} started.`, data)\n    }\n  }\n\n  /**\n   * Ends a timer. Logs a message with the elapsed time.\n   * @method timeEnd\n   * @param  {string} name Name to identify the timer.\n   */\n  function timeEnd (name) {\n    const now = Date.now()\n    // Base info about this timer call.\n    const data = {\n      event: 'timeEnd',\n      name,\n      start: timers[name]\n    }\n\n    if (timers.hasOwnProperty(name)) {\n      const start = timers[name]\n      // End the timer.\n      delete timers[name]\n\n      const elapsed = now - start\n      data.end = now\n      data.elapsed = elapsed\n\n      log(`Timer ${name} ended, taking ${elapsed}ms.`, data)\n    } else {\n      warn(`Timer ${name} has not been started.`, data)\n    }\n  }\n\n  /**\n   * Adds a split to the timer. Logs a message with the elapsed time so far.\n   * Logs a warning if the timer has not been started.\n   * @method timeSplit\n   * @param  {string} name Name to identify the timer.\n   */\n  function timeLog (name) {\n    const now = Date.now()\n    // Base info about this timer call.\n    const data = {\n      event: 'timeLog',\n      name,\n      start: timers[name]\n    }\n\n    if (timers.hasOwnProperty(name)) {\n      const elapsed = now - timers[name]\n      data.split = now\n      data.elapsed = elapsed\n\n      log(`Timer ${name} split, at ${elapsed}ms so far.`, data)\n    } else {\n      warn(`Timer ${name} has not been started.`, data)\n    }\n  }\n\n  return {\n    time,\n    timeEnd,\n    timeLog\n  }\n}\n","import defaultLogFormatter from './logFormatter'\n/**\n * Default function for the SDK to use for logging.\n *    Uses entry information to form a prefix, then logs to console.\n * @method defaultLogHandler\n * @param  {LogEntry} entry\n */\nexport default function defaultLogHandler (entry) {\n  let { method } = entry\n\n  // For the time-related methods, don't actually use the console methods.\n  //    The Logger already did the timing, so simply log out the info.\n  if (method.includes('time')) {\n    method = 'debug'\n  }\n\n  const formattedString = defaultLogFormatter(entry)\n  const tail = entry.messages.slice(1)\n  console[method](formattedString, ...tail)\n}\n","/* Helper function for styling logs based on the log type.\n * This function will inspect the log entry and format the log\n * accordingly.\n */\nfunction styleLog (entry) {\n  const { timestamp, level } = entry\n  const logInfo = `${timestamp} - ACTION - ${level}`\n\n  let [logType, payload] = entry.messages\n\n  let prefix\n  let style = ''\n  if (logType.includes('state')) {\n    // If the log is for prev state / next state, display that in the prefix.\n    prefix = `${logInfo} - ${logType.toUpperCase()}`\n  } else if (logType.includes('ADDED') || logType.includes('DELETED') || logType.includes('ARRAY')) {\n    // If the log has added or removed keys from state, log the operation, keys affected and new values.\n    prefix = `${entry.messages[0]}: ${entry.messages[2]}`\n    style = entry.messages[1]\n    payload = entry.messages[3]\n  } else if (logType.includes('CHANGED')) {\n    // If the log has changed keys in state, log the operation, keys, old and new values.\n    prefix = `${entry.messages[0]}: ${entry.messages[2]}`\n    style = entry.messages[1]\n    payload = `${entry.messages[3]} ${entry.messages[4]} ${entry.messages[5]}`\n  } else if (logType.includes('no diff')) {\n    // If action results in no change in state, just log no diff.\n    prefix = `${logInfo} - NO DIFF`\n    payload = ''\n  } else {\n    // Else the log is the action itself, so use the action type.\n    prefix = `${logInfo} - ${payload.type} - ${logType}`\n  }\n\n  return { prefix, style, payload }\n}\n\n/**\n * Default function for the SDK to use for logging actions.\n * Action entries come in 4 different types:\n *    1. start: Log the message directly and \"open the group\".\n *    2. state: Log a prefix, state type, and state itself.\n *      (prev state and next state)\n *    3. payload: Log a prefix, action type, and payload.\n *    4. end: Close the group.\n * @method defaultActionHandler\n * @param  {LogEntry} entry\n */\nexport default function defaultActionHandler (entry) {\n  // Handle the \"start\" and \"stop\" action log entries specifically.\n  if (['group', 'groupCollapsed'].includes(entry.method)) {\n    console[entry.method](...entry.messages)\n    return\n  } else if (entry.method === 'groupEnd') {\n    console.groupEnd()\n    return\n  }\n\n  const { prefix, style, payload } = styleLog(entry)\n  console[entry.method](prefix, style, payload)\n}\n","var core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n","var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Rule = function () {\n  function Rule(name, fn, args, modifiers) {\n    classCallCheck(this, Rule);\n\n    this.name = name;\n    this.fn = fn;\n    this.args = args;\n    this.modifiers = modifiers;\n  }\n\n  createClass(Rule, [{\n    key: \"_test\",\n    value: function _test(value) {\n      var fn = this.fn;\n\n      try {\n        testAux(this.modifiers.slice(), fn)(value);\n      } catch (ex) {\n        fn = function fn() {\n          return false;\n        };\n      }\n\n      try {\n        return testAux(this.modifiers.slice(), fn)(value);\n      } catch (ex) {\n        return false;\n      }\n    }\n  }, {\n    key: \"_check\",\n    value: function _check(value) {\n      try {\n        testAux(this.modifiers.slice(), this.fn)(value);\n      } catch (ex) {\n        if (testAux(this.modifiers.slice(), function (it) {\n          return it;\n        })(false)) {\n          return;\n        }\n      }\n\n      if (!testAux(this.modifiers.slice(), this.fn)(value)) {\n        throw null;\n      }\n    }\n  }, {\n    key: \"_testAsync\",\n    value: function _testAsync(value) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        testAsyncAux(_this.modifiers.slice(), _this.fn)(value).then(function (valid) {\n          if (valid) {\n            resolve(value);\n          } else {\n            reject(null);\n          }\n        }).catch(function (ex) {\n          return reject(ex);\n        });\n      });\n    }\n  }]);\n  return Rule;\n}();\n\nfunction pickFn(fn) {\n  var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"simple\";\n\n  return typeof fn === \"object\" ? fn[variant] : fn;\n}\n\nfunction testAux(modifiers, fn) {\n  if (modifiers.length) {\n    var modifier = modifiers.shift();\n    var nextFn = testAux(modifiers, fn);\n    return modifier.perform(nextFn);\n  } else {\n    return pickFn(fn);\n  }\n}\n\nfunction testAsyncAux(modifiers, fn) {\n  if (modifiers.length) {\n    var modifier = modifiers.shift();\n    var nextFn = testAsyncAux(modifiers, fn);\n    return modifier.performAsync(nextFn);\n  } else {\n    return function (value) {\n      return Promise.resolve(pickFn(fn, \"async\")(value));\n    };\n  }\n}\n\nvar Modifier = function Modifier(name, perform, performAsync) {\n  classCallCheck(this, Modifier);\n\n  this.name = name;\n  this.perform = perform;\n  this.performAsync = performAsync;\n};\n\nvar ValidationError = function (_Error) {\n  inherits(ValidationError, _Error);\n\n  function ValidationError(rule, value, cause, target) {\n    classCallCheck(this, ValidationError);\n\n    for (var _len = arguments.length, remaining = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {\n      remaining[_key - 4] = arguments[_key];\n    }\n\n    var _this = possibleConstructorReturn(this, (ValidationError.__proto__ || Object.getPrototypeOf(ValidationError)).call(this, remaining));\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_this, ValidationError);\n    }\n    _this.rule = rule;\n    _this.value = value;\n    _this.cause = cause;\n    _this.target = target;\n    return _this;\n  }\n\n  return ValidationError;\n}(Error);\n\nvar Context = function () {\n  function Context() {\n    var chain = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var nextRuleModifiers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    classCallCheck(this, Context);\n\n    this.chain = chain;\n    this.nextRuleModifiers = nextRuleModifiers;\n  }\n\n  createClass(Context, [{\n    key: \"_applyRule\",\n    value: function _applyRule(ruleFn, name) {\n      var _this = this;\n\n      return function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.chain.push(new Rule(name, ruleFn.apply(_this, args), args, _this.nextRuleModifiers));\n        _this.nextRuleModifiers = [];\n        return _this;\n      };\n    }\n  }, {\n    key: \"_applyModifier\",\n    value: function _applyModifier(modifier, name) {\n      this.nextRuleModifiers.push(new Modifier(name, modifier.simple, modifier.async));\n      return this;\n    }\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return new Context(this.chain.slice(), this.nextRuleModifiers.slice());\n    }\n  }, {\n    key: \"test\",\n    value: function test(value) {\n      return this.chain.every(function (rule) {\n        return rule._test(value);\n      });\n    }\n  }, {\n    key: \"testAll\",\n    value: function testAll(value) {\n      var err = [];\n      this.chain.forEach(function (rule) {\n        try {\n          rule._check(value);\n        } catch (ex) {\n          err.push(new ValidationError(rule, value, ex));\n        }\n      });\n      return err;\n    }\n  }, {\n    key: \"check\",\n    value: function check(value) {\n      this.chain.forEach(function (rule) {\n        try {\n          rule._check(value);\n        } catch (ex) {\n          throw new ValidationError(rule, value, ex);\n        }\n      });\n    }\n  }, {\n    key: \"testAsync\",\n    value: function testAsync(value) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        executeAsyncRules(value, _this2.chain.slice(), resolve, reject);\n      });\n    }\n  }]);\n  return Context;\n}();\n\nfunction executeAsyncRules(value, rules, resolve, reject) {\n  if (rules.length) {\n    var rule = rules.shift();\n    rule._testAsync(value).then(function () {\n      executeAsyncRules(value, rules, resolve, reject);\n    }, function (cause) {\n      reject(new ValidationError(rule, value, cause));\n    });\n  } else {\n    resolve(value);\n  }\n}\n\nfunction v8n() {\n  return proxyContext(new Context());\n}\n\n// Custom rules\nvar customRules = {};\n\nv8n.extend = function (newRules) {\n  Object.assign(customRules, newRules);\n};\n\nv8n.clearCustomRules = function () {\n  customRules = {};\n};\n\nfunction proxyContext(context) {\n  return new Proxy(context, {\n    get: function get(obj, prop) {\n      if (prop in obj) {\n        return obj[prop];\n      }\n\n      var newContext = proxyContext(context._clone());\n\n      if (prop in availableModifiers) {\n        return newContext._applyModifier(availableModifiers[prop], prop);\n      }\n      if (prop in customRules) {\n        return newContext._applyRule(customRules[prop], prop);\n      }\n      if (prop in availableRules) {\n        return newContext._applyRule(availableRules[prop], prop);\n      }\n    }\n  });\n}\n\nvar availableModifiers = {\n  not: {\n    simple: function simple(fn) {\n      return function (value) {\n        return !fn(value);\n      };\n    },\n    async: function async(fn) {\n      return function (value) {\n        return Promise.resolve(fn(value)).then(function (result) {\n          return !result;\n        }).catch(function (e) {\n          return true;\n        });\n      };\n    }\n  },\n\n  some: {\n    simple: function simple(fn) {\n      return function (value) {\n        return split(value).some(function (item) {\n          try {\n            return fn(item);\n          } catch (ex) {\n            return false;\n          }\n        });\n      };\n    },\n    async: function async(fn) {\n      return function (value) {\n        return Promise.all(split(value).map(function (item) {\n          try {\n            return fn(item).catch(function (e) {\n              return false;\n            });\n          } catch (ex) {\n            return false;\n          }\n        })).then(function (result) {\n          return result.some(Boolean);\n        });\n      };\n    }\n  },\n\n  every: {\n    simple: function simple(fn) {\n      return function (value) {\n        return split(value).every(fn);\n      };\n    },\n    async: function async(fn) {\n      return function (value) {\n        return Promise.all(split(value).map(fn)).then(function (result) {\n          return result.every(Boolean);\n        });\n      };\n    }\n  }\n};\n\nfunction split(value) {\n  if (typeof value === \"string\") {\n    return value.split(\"\");\n  }\n  return value;\n}\n\nvar availableRules = {\n  // Value\n\n  equal: function equal(expected) {\n    return function (value) {\n      return value == expected;\n    };\n  },\n\n  exact: function exact(expected) {\n    return function (value) {\n      return value === expected;\n    };\n  },\n\n  // Types\n\n  number: function number() {\n    var allowInfinite = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (value) {\n      return typeof value === \"number\" && (allowInfinite || isFinite(value));\n    };\n  },\n\n  integer: function integer() {\n    return function (value) {\n      var isInteger = Number.isInteger || isIntegerPolyfill;\n      return isInteger(value);\n    };\n  },\n\n  numeric: function numeric() {\n    return function (value) {\n      return !isNaN(parseFloat(value)) && isFinite(value);\n    };\n  },\n\n  string: function string() {\n    return testType(\"string\");\n  },\n\n  boolean: function boolean() {\n    return testType(\"boolean\");\n  },\n\n  undefined: function undefined() {\n    return testType(\"undefined\");\n  },\n\n  null: function _null() {\n    return testType(\"null\");\n  },\n\n  array: function array() {\n    return testType(\"array\");\n  },\n\n  object: function object() {\n    return testType(\"object\");\n  },\n\n  instanceOf: function instanceOf(instance) {\n    return function (value) {\n      return value instanceof instance;\n    };\n  },\n\n  // Pattern\n\n  pattern: function pattern(expected) {\n    return function (value) {\n      return expected.test(value);\n    };\n  },\n\n  lowercase: function lowercase() {\n    return function (value) {\n      return (/^([a-z]+\\s*)+$/.test(value)\n      );\n    };\n  },\n\n  uppercase: function uppercase() {\n    return function (value) {\n      return (/^([A-Z]+\\s*)+$/.test(value)\n      );\n    };\n  },\n\n  vowel: function vowel() {\n    return function (value) {\n      return (/^[aeiou]+$/i.test(value)\n      );\n    };\n  },\n\n  consonant: function consonant() {\n    return function (value) {\n      return (/^(?=[^aeiou])([a-z]+)$/i.test(value)\n      );\n    };\n  },\n\n  // Value at\n\n  first: function first(expected) {\n    return function (value) {\n      return value[0] == expected;\n    };\n  },\n\n  last: function last(expected) {\n    return function (value) {\n      return value[value.length - 1] == expected;\n    };\n  },\n\n  // Length\n\n  empty: function empty() {\n    return function (value) {\n      return value.length === 0;\n    };\n  },\n\n  length: function length(min, max) {\n    return function (value) {\n      return value.length >= min && value.length <= (max || min);\n    };\n  },\n\n  minLength: function minLength(min) {\n    return function (value) {\n      return value.length >= min;\n    };\n  },\n\n  maxLength: function maxLength(max) {\n    return function (value) {\n      return value.length <= max;\n    };\n  },\n\n  // Range\n\n  negative: function negative() {\n    return function (value) {\n      return value < 0;\n    };\n  },\n\n  positive: function positive() {\n    return function (value) {\n      return value >= 0;\n    };\n  },\n\n  between: function between(a, b) {\n    return function (value) {\n      return value >= a && value <= b;\n    };\n  },\n\n  range: function range(a, b) {\n    return function (value) {\n      return value >= a && value <= b;\n    };\n  },\n\n  lessThan: function lessThan(n) {\n    return function (value) {\n      return value < n;\n    };\n  },\n\n  lessThanOrEqual: function lessThanOrEqual(n) {\n    return function (value) {\n      return value <= n;\n    };\n  },\n\n  greaterThan: function greaterThan(n) {\n    return function (value) {\n      return value > n;\n    };\n  },\n\n  greaterThanOrEqual: function greaterThanOrEqual(n) {\n    return function (value) {\n      return value >= n;\n    };\n  },\n\n  // Divisible\n\n  even: function even() {\n    return function (value) {\n      return value % 2 === 0;\n    };\n  },\n\n  odd: function odd() {\n    return function (value) {\n      return value % 2 !== 0;\n    };\n  },\n\n  includes: function includes(expected) {\n    return function (value) {\n      return ~value.indexOf(expected);\n    };\n  },\n\n  schema: function schema(_schema) {\n    return testSchema(_schema);\n  },\n\n  // branching\n\n  passesAnyOf: function passesAnyOf() {\n    for (var _len = arguments.length, validations = Array(_len), _key = 0; _key < _len; _key++) {\n      validations[_key] = arguments[_key];\n    }\n\n    return function (value) {\n      return validations.some(function (validation) {\n        return validation.test(value);\n      });\n    };\n  },\n\n  optional: function optional(validation) {\n    var considerTrimmedEmptyString = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return function (value) {\n      if (considerTrimmedEmptyString && typeof value === \"string\" && value.trim() === \"\") {\n        return true;\n      }\n\n      if (value !== undefined && value !== null) validation.check(value);\n      return true;\n    };\n  }\n};\n\nfunction testType(expected) {\n  return function (value) {\n    return Array.isArray(value) && expected === \"array\" || value === null && expected === \"null\" || typeof value === expected;\n  };\n}\n\nfunction isIntegerPolyfill(value) {\n  return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n}\n\nfunction testSchema(schema) {\n  return {\n    simple: function simple(value) {\n      var causes = [];\n      Object.keys(schema).forEach(function (key) {\n        var nestedValidation = schema[key];\n        try {\n          nestedValidation.check((value || {})[key]);\n        } catch (ex) {\n          ex.target = key;\n          causes.push(ex);\n        }\n      });\n      if (causes.length > 0) {\n        throw causes;\n      }\n      return true;\n    },\n    async: function async(value) {\n      var causes = [];\n      var nested = Object.keys(schema).map(function (key) {\n        var nestedValidation = schema[key];\n        return nestedValidation.testAsync((value || {})[key]).catch(function (ex) {\n          ex.target = key;\n          causes.push(ex);\n        });\n      });\n      return Promise.all(nested).then(function (values) {\n        if (causes.length > 0) {\n          throw causes;\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nexport default v8n;\n","import logs from '../../packages/kandy/src/logs/plugin'\nimport config from '../../packages/kandy/src/config'\nimport events from '../../packages/kandy/src/events'\n\n/**\n * This is a list of base plugins that most solutions will need. These plugins provide service-like capabilities\n * to the SDK.\n */\nexport default [\n  { name: 'logs', fn: logs },\n  { name: 'config', fn: config },\n  { name: 'events', fn: events }\n]\n","/**\nNote regarding this file's name:\n\nUsually plugins factories are in the index.js file of their corresponding folder.\nThis used to be the case. However this file was also being used to host the logManager\nthat is being used with the SDK.\n\nSince the logManager is being included in almost every file it was preferable to rename this\nfile rather than point 100s of files to a new place for the logManager.\n**/\n\n// Logs plugin.\nimport api from './interface/api'\nimport reducer from './interface/reducers'\nimport * as actions from './interface/actions'\n\nimport { defaultOptions, partialDefaultLogActions /*,  parseLogConfig */ } from './config'\nimport { setLevelEntry, setHandlerEntry, getLevelMap } from './sagas'\nimport createActionLogger from './actions'\n\n// Other plugins.\nimport { update as updateConfig } from '../config/interface/actions'\nimport { mergeValues } from '../common/utils'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { logLevels } from 'kandy-logger'\nimport { logManager } from './index'\n\n// Include the extra JSDoc items.\nimport './docs'\n\nexport default function logPlugin (options = {}) {\n  const name = 'logs'\n\n  const logger = logManager.getLogger('LOGS')\n\n  // Make sure the configured log handler was a function.\n  if (options.handler && typeof options.handler !== 'function') {\n    delete options.handler\n    logger.warn('Invalid log handler configuration provided; using default instead.')\n  }\n\n  // Make sure configured log level is supported.\n  if (options.logLevel && !Object.keys(logLevels).includes(options.logLevel.toUpperCase())) {\n    delete options.logLevel\n    logger.warn('Invalid log level configuration provided; using default instead.')\n  }\n\n  options = mergeValues(defaultOptions, options)\n\n  // Check if `logActions` is true and apply defaults for action logging\n  if (options.logActions !== false) {\n    if (options.logActions instanceof Object) {\n      options.logActions = mergeValues(partialDefaultLogActions, options.logActions)\n    } else {\n      options.logActions = partialDefaultLogActions\n    }\n  }\n\n  // Now that we have the application's log configs, update everything to\n  //    use those values instead of default values.\n  logManager.setLevel(options.logLevel)\n  if (options.handler) {\n    logManager.setHandler(options.handler)\n  }\n\n  Object.values(logManager.getLoggers()).forEach(logger => {\n    logger.setLevel(options.logLevel)\n    if (options.handler) {\n      logger.setHandler(options.handler)\n    }\n  })\n\n  function * init ({ webRTC }) {\n    // Send the provided options to the store.\n    // This will be `state.config[name]`.\n    yield put(updateConfig(options, name))\n    // Update state with the initial Logger levels.\n    yield put(actions.levelsChanged(getLevelMap(logManager)))\n\n    // Ensure the webRTC object exists. It won't in 3.X.\n    if (webRTC) {\n      // Update everything to\n      //    use those values from the application configs instead of default values in the webrtc Stack.\n      const webRTCLogManager = webRTC.managers.logs\n      if (options.handler) {\n        webRTCLogManager.setHandler(options.handler)\n      }\n      Object.values(webRTCLogManager.getLoggers()).forEach(logger => {\n        logger.setLevel(options.logLevel)\n        if (options.handler) {\n          logger.setHandler(options.handler)\n        }\n      })\n    }\n  }\n\n  const components = {\n    name,\n    capabilities: ['logs'],\n    init,\n    api,\n    reducer,\n    sagas: [setLevelEntry, setHandlerEntry]\n  }\n\n  options.logLevel = options.logLevel.toUpperCase()\n  const setLevel = logLevels[options.logLevel]\n  // Consider actions to be at the INFO log level.\n  // Only export a middleware (for actions) at the appropriate levels.\n  if (setLevel <= logLevels.INFO && options.logActions !== false) {\n    components.middleware = createActionLogger(options)\n  }\n\n  return components\n}\n","// Logs plugin.\nimport { logManager, API_LOG_TAG } from '../index'\nimport * as actions from './actions'\nimport { getLevel, getTypes } from './selectors'\n\n/**\n * The SDK has an internal logging system for providing information about its\n *    behaviour. The SDK will generate logs, at different levels for different\n *    types of information, which are routed to a\n *    \"{@link logger.LogHandler Log Handler}\" for consumption. An application\n *    can provide their own Log Handler (see\n *    {@link #configconfiglogs config.logs}) to customize how the logs are\n *    handled, or allow the default Log Handler to print the logs to the\n *    console.\n *\n * The SDK's default Log Handler is merely a thin wrapper around the browser's\n *    console API (ie. `window.console`). It receives the log generated by the\n *    SDK, called a \"{@link logger.LogEntry Log Entry}\", formats a\n *    human-readable message with it, then uses the console to log it at the\n *    appropriate level. This is important to be aware of, since your browser's\n *    console may affect how you see the SDK's default log messages. Since the\n *    default Log Handler uses the console's levels, the browser may filter\n *    which messages are shown depending on which levels it has configured. For\n *    a user that understands console log levels, this can be helpful for\n *    filtering the logs to only the relevant information. But it can equally\n *    be a hindrance by hiding the more detailed log messages (at the 'debug'\n *    level), since browser can have this level hidden by default. For this\n *    reason, we recommend providing a custom Log Handler to the SDK that is\n *    better suited for your application and its users.\n *\n * @public\n * @namespace logger\n * @requires logs\n */\n\nexport default function api ({ dispatch, getState }) {\n  const log = logManager.getLogger('LOGS')\n\n  const api = {\n    /**\n     * Possible levels for the SDK logger.\n     *\n     * The SDK will provide {@link logger.LogEntry Log Entries} to the\n     *    {@link logger.LogHandler Log Handler} for all logs at or above the set\n     *    log level. 'debug' is considered the lowest level and 'silent' the\n     *    highest level. For example, if the current level is 'info', then the\n     *    {@link logger.LogHandler Log Handler} will receive\n     *    {@link logger.LogEntry Log Entries} for logs at 'info', 'warn', and\n     *    'error', but not for the 'debug' level.\n     * @public\n     * @static\n     * @memberof logger\n     * @method levels\n     * @property {string} SILENT Nothing will be logged.\n     * @property {string} ERROR Unhandled error information will be logged. If\n     *    the SDK encounters an issue it cannot resolve, the error will be included\n     *    in the logs. This likely points to an issue with the SDK itself or an\n     *    issue with how the SDK is being used.\n     * @property {string} WARN Warning messages for the application developer will\n     *    be logged. If the SDK encounters an issue that it can recover and continue,\n     *    a warning about the issue will be included in the logs. These logs point\n     *    to issues that need to be handled by the application. For example, providing\n     *    an invalid configuration to the SDK will cause a warning log that explains\n     *    the issue.\n     * @property {string} INFO General information about the SDK's operations will\n     *    be logged, outlining how the SDK is handling the operations. Reading through\n     *    these logs should provide a high-level view of what the SDK is doing,\n     *    and why it is doing it.\n     * @property {string} DEBUG Detailed information about the SDK's operations,\n     *    meant for debugging issues, will be logged. Specific information and relevant\n     *    operation data are provided for understanding the scenario that the SDK\n     *    was in during the operation.\n     */\n    levels: {\n      SILENT: 'silent',\n      ERROR: 'error',\n      WARN: 'warn',\n      INFO: 'info',\n      DEBUG: 'debug'\n    },\n\n    /**\n     * Update the log level used by the SDK's loggers.\n     *\n     * Changing the log level will affect the amount of logs that the SDK will\n     *    output for debugging purposes.\n     *\n     * See {@link logger.levels} for valid log levels. Other values will not be\n     *    accepted. See the {@link logger.getTypes} API for valid logger types.\n     *    Other values will have no affect.\n     * @private\n     * @static\n     * @memberof logger\n     * @method setLevel\n     * @param  {string} level The log level to set.\n     * @param  {string} [type] An optional subset of loggers to update.\n     * @example\n     * // Set logs to be at the warn level.\n     * client.logger.setLevel(client.logger.levels.WARN)\n     */\n    setLevel (level, type) {\n      log.debug(API_LOG_TAG + 'logger.setLevel: ', level, type)\n\n      dispatch(actions.setLevel(level, type))\n    },\n\n    /**\n     * Get the currently set log level used by the SDK's loggers.\n     *\n     * @private\n     * @static\n     * @memberof logger\n     * @method getLevel\n     * @param  {string} [type] An optional subset of loggers.\n     * @return {logger.levels} A log level.\n     */\n    getLevel (type) {\n      log.debug(API_LOG_TAG + 'logger.getLevel: ', type)\n\n      return getLevel(getState(), type)\n    },\n\n    /**\n     * Updates the {@link logger.LogHandler LogHandler} used by the SDK's\n     *    loggers.\n     *\n     * Changing the log handler will change how the SDK's logs are handled by\n     *    the application.\n     *\n     * See {@link logger.LogHandler} and {@link logger.LogEntry} for information\n     *    about the handler. See the {@link logger.getTypes} API for valid\n     *    logger types. Other values will have no affect.\n     * @private\n     * @static\n     * @memberof logger\n     * @method setHandler\n     * @param  {logger.LogEntry} handler A {@link logger.LogHandler} function.\n     * @param  {string}   [type] An optional subset of loggers to update.\n     * @example\n     * // Change the SDK's Log Handler to a custom function.\n     * client.logger.setHandler((logEntry) => {\n     *    // Handle the SDK's logs in a custom way.\n     *    ...\n     * })\n     *\n     */\n    setHandler (handler, type) {\n      log.debug(API_LOG_TAG + 'logger.setHandler: ', handler, type)\n\n      dispatch(actions.setHandler(handler, type))\n    },\n\n    /**\n     * Get the list of logger types used by the SDK.\n     *\n     * Logs for different SDK features can be managed separately from one\n     *    another by specifying the type when using the {@link logger.setLevel}\n     *    and {@link logger.setHandler} APIs.\n     * @private\n     * @static\n     * @memberof logger\n     * @method getTypes\n     * @return {Array<string>} Logger types.\n     * @example\n     * const types = client.logger.getTypes()\n     * // types: ['DEFAULT', 'AUTH', 'CALL', ...]\n     *\n     * // Set the Call logs to be at the debug level.\n     * client.logger.setLevel('DEBUG', 'CALL')\n     */\n    getTypes () {\n      log.debug(API_LOG_TAG + 'logger.getTypes')\n\n      return getTypes(getState())\n    }\n  }\n\n  return {\n    logger: api\n  }\n}\n","import * as actionTypes from './actionTypes'\n\n// Libraries\nimport { handleActions } from 'redux-actions'\n\n/**\n * Logs state is a mapping between every Logger type (and the default type)\n *    and its set log level.\n * eg. {\n *    DEFAULT: 'DEBUG',\n *    AUTH: 'DEBUG',\n *    CALL: 'INFO',\n *    ...\n * }\n */\n\nconst reducers = {}\n\nreducers[actionTypes.LEVELS_CHANGE] = {\n  next (state, action) {\n    // Replace all levels that have been changed.\n    return {\n      ...state,\n      ...action.payload\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","\nvar clean = require('to-no-case')\n\n/**\n * Export.\n */\n\nmodule.exports = toSpaceCase\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toSpaceCase(string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : ''\n  }).trim()\n}\n","\n/**\n * Export.\n */\n\nmodule.exports = toNoCase\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/\nvar hasSeparator = /(_|-|\\.|:)/\nvar hasCamel = /([a-z][A-Z]|[A-Z][a-z])/\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase(string) {\n  if (hasSpace.test(string)) return string.toLowerCase()\n  if (hasSeparator.test(string)) return (unseparate(string) || string).toLowerCase()\n  if (hasCamel.test(string)) return uncamelize(string).toLowerCase()\n  return string.toLowerCase()\n}\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate(string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : ''\n  })\n}\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize(string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ')\n  })\n}\n","// Logs plugin.\nimport * as actionTypes from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport { logManager } from './index'\n\n// Libraries.\nimport { put, takeEvery } from 'redux-saga/effects'\n\n// The SDK's name for the default/global log level.\nconst defaultType = 'DEFAULT'\n\n/**\n * Taker saga for \"set log level\" actions.\n * @method setLevelEntry\n */\nexport function * setLevelEntry () {\n  yield takeEvery(actionTypes.SET_LEVEL, setLogLevel)\n}\n\n/**\n * Taker saga for \"set log handler\" actions.\n * @method setHandlerEntry\n */\nexport function * setHandlerEntry () {\n  yield takeEvery(actionTypes.SET_HANDLER, setLogHandler)\n}\n\n/**\n * Functionality saga for \"set log level\" actions.\n * @method setLogLevel\n * @param  {Object} action\n * @param  {string} action.level\n * @param  {string} [action.type]\n */\nexport function * setLogLevel (action) {\n  const { level, type } = action.payload\n\n  try {\n    if (!type || type === defaultType) {\n      // Update the Manager's default level.\n      logManager.setLevel(level)\n      // Update all Loggers' levels.\n      logManager.getLoggers().forEach(logger => {\n        logger.setLevel(level)\n      })\n\n      // Update all Logger levels in state, because changing the default level\n      //    will affect all Loggers without their own explicit level set.\n      yield put(actions.levelsChanged(getLevelMap(logManager)))\n    } else {\n      // Update the Manager's default level for this type.\n      logManager.setLevel(type, level)\n      // Update all Loggers of this type.\n      logManager.getLoggers(type).forEach(logger => {\n        logger.setLevel(level)\n      })\n\n      // Update the one type's level in state.\n      yield put(actions.levelsChanged({ [type]: level }))\n    }\n  } catch (err) {\n    const log = logManager.getLogger('LOGS')\n    log.error(err.message)\n  }\n}\n\n/**\n * Functionality saga for \"set log handler\" actions.\n * @method setLogHandler\n * @param  {Object}   action\n * @param  {Function} action.handler\n * @param  {string}   [action.type]\n */\nexport function * setLogHandler (action) {\n  const { handler, type } = action.payload\n\n  try {\n    if (!type || type === defaultType) {\n      // Update the Manager's default level.\n      logManager.setHandler(handler)\n      // Update all Loggers' handlers.\n      logManager.getLoggers().forEach(logger => {\n        logger.setHandler(handler)\n      })\n\n      // Notify that all Logger handlers [may] have changed (because changing\n      //    the default handler will affect all Loggers without their own\n      //    handler explicitly set).\n      yield put(actions.handlersChanged(getHandlerMap(logManager)))\n    } else {\n      // Update the Manager's default handler for this type.\n      logManager.setHandler(type, handler)\n      // Update all Loggers of this type.\n      logManager.getLoggers(type).forEach(logger => {\n        logger.setHandler(handler)\n      })\n\n      // Notify that the one type's handler has changed.\n      yield put(actions.handlersChanged({ [type]: handler }))\n    }\n  } catch (err) {\n    const log = logManager.getLogger('LOGS')\n    log.error(err.message)\n  }\n}\n\n/**\n * Helper function.\n * Gets the log levels for every Logger type (and default).\n * @method getLevelMap\n * @return {Object} Mapping of Logger type to its log level.\n */\nexport function getLevelMap (logManager) {\n  // Get unique types from all Loggers.\n  const loggers = logManager.getLoggers()\n  const types = [...new Set(loggers.map(logger => logger.type))]\n\n  const levels = {}\n  // Add the default level to the beginning.\n  levels[defaultType] = logManager.getLevel()\n\n  // Get the level for each Logger type.\n  types.forEach(type => {\n    levels[type] = logManager.getLevel(type)\n  })\n\n  return levels\n}\n\n/**\n * Helper function.\n * Gets the log handler for every Logger type (and default).\n * @method getHandlerMap\n * @return {Object} Mapping of Logger type to its log handler.\n */\nexport function getHandlerMap (logManager) {\n  // Get unique types from all Loggers.\n  const loggers = logManager.getLoggers()\n  const types = [...new Set(loggers.map(logger => logger.type))]\n\n  const handlers = {}\n  // Add the default level to the beginning.\n  handlers[defaultType] = logManager.getHandler()\n\n  // Get the handler for each Logger type.\n  types.forEach(type => {\n    handlers[type] = logManager.getHandler(type)\n  })\n\n  return handlers\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/set\"), __esModule: true };","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.set');\nrequire('../modules/es7.set.to-json');\nrequire('../modules/es7.set.of');\nrequire('../modules/es7.set.from');\nmodule.exports = require('../modules/_core').Set;\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Set', { toJSON: require('./_collection-to-json')('Set') });\n","var forOf = require('./_for-of');\n\nmodule.exports = function (iter, ITERATOR) {\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of\nrequire('./_set-collection-of')('Set');\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from\nrequire('./_set-collection-from')('Set');\n","// Logs plugin.\nimport { logManager } from '../index'\nimport { logLevels } from 'kandy-logger/src/constants'\n// Action specific.\nimport setupTransformers from './transformers'\nimport { titleFormatter } from './utils'\n\n// Libraries.\nimport { createLogger } from 'redux-logger'\n\n/**\n * Creates a redux middleware for logging actions.\n * @method createActionLogger\n * @param  {Object}     options\n * @return {Middleware}\n */\nexport default function createActionLogger (options) {\n  // Create a Logger for handling the action logs.\n  const logger = logManager.getLogger('ACTION')\n  logger.setHandler(options.logActions.handler)\n  logger.setLevel(options.logActions.level)\n\n  const setLevel = logLevels[options.logLevel]\n\n  let actionOptions = {}\n  // Use different options for redux-logger depending on log level.\n  if (setLevel === logLevels.INFO) {\n    // At the INFO level, hide everything except the action name.\n    actionOptions.level = false\n    actionOptions.diff = false\n  } else {\n    // At the DEBUG+ levels, use the configs.\n    actionOptions = {\n      ...options.logActions\n    }\n  }\n\n  if (options.logActions.actionOnly) {\n    // Hide prevState and nextState.\n    // Log action and error at info level, so the browser won't hide it by default.\n    actionOptions.level = {\n      prevState: false,\n      action: 'info',\n      error: 'info',\n      nextState: false\n    }\n  }\n\n  if (options.logActions.excludeActions) {\n    actionOptions.predicate = excludeActions(options.logActions.excludeActions)\n  }\n\n  // ALWAYS use our own logger\n  actionOptions.logger = logger\n  // ALWAYS remove theming/styling from the action log messages\n  actionOptions.titleFormatter = titleFormatter\n  actionOptions.colors = false\n\n  // Setup the transformers based on the options.\n  const transformers = setupTransformers(options.logActions)\n  // Create the logger middleware.\n\n  return createLogger({\n    ...actionOptions,\n    ...transformers\n  })\n}\n\n/**\n * Logger predicate function that will take an array of action types\n * and exclude them from logs\n * @param {Array} actions An array of action types to exclude from logs\n * @returns {function} A predicate function\n */\nfunction excludeActions (actions) {\n  return (getState, action) => !actions.includes(action.type)\n}\n","// Libraries\nimport { omit } from 'lodash/fp'\n\n/**\n * Determines which redux-logger transformers we need based on options.\n * @method setupTransformers\n * @param  {Object} options\n * @return {Object} An object of transformers to be provided to redux-logger.\n */\nexport default function setupTransformers (options) {\n  // A \"pipeline\" of all redux-logger action transformers.\n  function actionPipeline (transformers) {\n    return function (action) {\n      transformers.forEach(function (transformer) {\n        action = transformer(action)\n      })\n      return action\n    }\n  }\n\n  const transformers = {}\n  const actionTransformers = []\n  if (!options.exposePayloads) {\n    // If exposePayloads is disabled, include the removePayloads transformer\n    actionTransformers.push(removePayloads)\n  } else {\n    // Otherwise, we should still hide passwords\n    actionTransformers.push(passwordHider)\n  }\n  // Create the actionTransformer pipeline with the included transformers.\n  transformers.actionTransformer = actionPipeline(actionTransformers)\n\n  return transformers\n}\n\n// Redux-logger actionTransformer to prevent passwords from being logged.\nfunction passwordHider (action) {\n  if (action.meta && action.meta.isSensitive) {\n    // Only log the action name for actions that have sensitive data in them.\n    return omit('payload', action)\n  }\n  return action\n}\n\n/**\n * Helper function removes secure data if secure mode is enabled\n * @param {Object} action\n */\nfunction removePayloads (action) {\n  if (!(action.meta && action.meta.isSafe)) {\n    return omit('payload', action)\n  }\n  return action\n}\n","/**\n * Standard title formatter function is almost identical to the defaultTitleFormatter found in redux-logger\n * but removes placeholder characters previously used for styling, which is not being used in the logging\n * configuration\n *\n * @param action\n * @param time\n * @param took\n * @returns {string}\n */\nexport function titleFormatter (action, time, took) {\n  var parts = ['action']\n  parts.push(action.type)\n  parts.push('@ ' + time)\n  parts.push('(in ' + took.toFixed(2) + ' ms)')\n\n  return parts.join(' ')\n}\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t(e.reduxLogger=e.reduxLogger||{})}(this,function(e){\"use strict\";function t(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,\"kind\",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,\"path\",{value:t,enumerable:!0})}function n(e,t,r){n.super_.call(this,\"E\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0}),Object.defineProperty(this,\"rhs\",{value:r,enumerable:!0})}function o(e,t){o.super_.call(this,\"N\",e),Object.defineProperty(this,\"rhs\",{value:t,enumerable:!0})}function i(e,t){i.super_.call(this,\"D\",e),Object.defineProperty(this,\"lhs\",{value:t,enumerable:!0})}function a(e,t,r){a.super_.call(this,\"A\",e),Object.defineProperty(this,\"index\",{value:t,enumerable:!0}),Object.defineProperty(this,\"item\",{value:r,enumerable:!0})}function f(e,t,r){var n=e.slice((r||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,n),e}function u(e){var t=\"undefined\"==typeof e?\"undefined\":N(e);return\"object\"!==t?t:e===Math?\"math\":null===e?\"null\":Array.isArray(e)?\"array\":\"[object Date]\"===Object.prototype.toString.call(e)?\"date\":\"function\"==typeof e.toString&&/^\\/.*\\//.test(e.toString())?\"regexp\":\"object\"}function l(e,t,r,c,s,d,p){s=s||[],p=p||[];var g=s.slice(0);if(\"undefined\"!=typeof d){if(c){if(\"function\"==typeof c&&c(g,d))return;if(\"object\"===(\"undefined\"==typeof c?\"undefined\":N(c))){if(c.prefilter&&c.prefilter(g,d))return;if(c.normalize){var h=c.normalize(g,d,e,t);h&&(e=h[0],t=h[1])}}}g.push(d)}\"regexp\"===u(e)&&\"regexp\"===u(t)&&(e=e.toString(),t=t.toString());var y=\"undefined\"==typeof e?\"undefined\":N(e),v=\"undefined\"==typeof t?\"undefined\":N(t),b=\"undefined\"!==y||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),m=\"undefined\"!==v||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!b&&m)r(new o(g,t));else if(!m&&b)r(new i(g,e));else if(u(e)!==u(t))r(new n(g,e,t));else if(\"date\"===u(e)&&e-t!==0)r(new n(g,e,t));else if(\"object\"===y&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&r(new n(g,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;e.length;for(w=0;w<e.length;w++)w>=t.length?r(new a(g,w,new i(void 0,e[w]))):l(e[w],t[w],r,c,g,w,p);for(;w<t.length;)r(new a(g,w,new o(void 0,t[w++])))}else{var x=Object.keys(e),S=Object.keys(t);x.forEach(function(n,o){var i=S.indexOf(n);i>=0?(l(e[n],t[n],r,c,g,n,p),S=f(S,i)):l(e[n],void 0,r,c,g,n,p)}),S.forEach(function(e){l(void 0,t[e],r,c,g,e,p)})}p.length=p.length-1}else e!==t&&(\"number\"===y&&isNaN(e)&&isNaN(t)||r(new n(g,e,t)))}function c(e,t,r,n){return n=n||[],l(e,t,function(e){e&&n.push(e)},r),n.length?n:void 0}function s(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":s(o[r.path[n]],r.index,r.item);break;case\"D\":delete o[r.path[n]];break;case\"E\":case\"N\":o[r.path[n]]=r.rhs}}else switch(r.kind){case\"A\":s(e[t],r.index,r.item);break;case\"D\":e=f(e,t);break;case\"E\":case\"N\":e[t]=r.rhs}return e}function d(e,t,r){if(e&&t&&r&&r.kind){for(var n=e,o=-1,i=r.path?r.path.length-1:0;++o<i;)\"undefined\"==typeof n[r.path[o]]&&(n[r.path[o]]=\"number\"==typeof r.path[o]?[]:{}),n=n[r.path[o]];switch(r.kind){case\"A\":s(r.path?n[r.path[o]]:n,r.index,r.item);break;case\"D\":delete n[r.path[o]];break;case\"E\":case\"N\":n[r.path[o]]=r.rhs}}}function p(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case\"A\":p(o[r.path[n]],r.index,r.item);break;case\"D\":o[r.path[n]]=r.lhs;break;case\"E\":o[r.path[n]]=r.lhs;break;case\"N\":delete o[r.path[n]]}}else switch(r.kind){case\"A\":p(e[t],r.index,r.item);break;case\"D\":e[t]=r.lhs;break;case\"E\":e[t]=r.lhs;break;case\"N\":e=f(e,t)}return e}function g(e,t,r){if(e&&t&&r&&r.kind){var n,o,i=e;for(o=r.path.length-1,n=0;n<o;n++)\"undefined\"==typeof i[r.path[n]]&&(i[r.path[n]]={}),i=i[r.path[n]];switch(r.kind){case\"A\":p(i[r.path[n]],r.index,r.item);break;case\"D\":i[r.path[n]]=r.lhs;break;case\"E\":i[r.path[n]]=r.lhs;break;case\"N\":delete i[r.path[n]]}}}function h(e,t,r){if(e&&t){var n=function(n){r&&!r(e,t,n)||d(e,t,n)};l(e,t,n)}}function y(e){return\"color: \"+F[e].color+\"; font-weight: bold\"}function v(e){var t=e.kind,r=e.path,n=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case\"E\":return[r.join(\".\"),n,\"→\",o];case\"N\":return[r.join(\".\"),o];case\"D\":return[r.join(\".\")];case\"A\":return[r.join(\".\")+\"[\"+i+\"]\",a];default:return[]}}function b(e,t,r,n){var o=c(e,t);try{n?r.groupCollapsed(\"diff\"):r.group(\"diff\")}catch(e){r.log(\"diff\")}o?o.forEach(function(e){var t=e.kind,n=v(e);r.log.apply(r,[\"%c \"+F[t].text,y(t)].concat(P(n)))}):r.log(\"—— no diff ——\");try{r.groupEnd()}catch(e){r.log(\"—— diff end —— \")}}function m(e,t,r,n){switch(\"undefined\"==typeof e?\"undefined\":N(e)){case\"object\":return\"function\"==typeof e[n]?e[n].apply(e,P(r)):e[n];case\"function\":return e(t);default:return e}}function w(e){var t=e.timestamp,r=e.duration;return function(e,n,o){var i=[\"action\"];return i.push(\"%c\"+String(e.type)),t&&i.push(\"%c@ \"+n),r&&i.push(\"%c(in \"+o.toFixed(2)+\" ms)\"),i.join(\" \")}}function x(e,t){var r=t.logger,n=t.actionTransformer,o=t.titleFormatter,i=void 0===o?w(t):o,a=t.collapsed,f=t.colors,u=t.level,l=t.diff,c=\"undefined\"==typeof t.titleFormatter;e.forEach(function(o,s){var d=o.started,p=o.startedTime,g=o.action,h=o.prevState,y=o.error,v=o.took,w=o.nextState,x=e[s+1];x&&(w=x.prevState,v=x.started-d);var S=n(g),k=\"function\"==typeof a?a(function(){return w},g,o):a,j=D(p),E=f.title?\"color: \"+f.title(S)+\";\":\"\",A=[\"color: gray; font-weight: lighter;\"];A.push(E),t.timestamp&&A.push(\"color: gray; font-weight: lighter;\"),t.duration&&A.push(\"color: gray; font-weight: lighter;\");var O=i(S,j,v);try{k?f.title&&c?r.groupCollapsed.apply(r,[\"%c \"+O].concat(A)):r.groupCollapsed(O):f.title&&c?r.group.apply(r,[\"%c \"+O].concat(A)):r.group(O)}catch(e){r.log(O)}var N=m(u,S,[h],\"prevState\"),P=m(u,S,[S],\"action\"),C=m(u,S,[y,h],\"error\"),F=m(u,S,[w],\"nextState\");if(N)if(f.prevState){var L=\"color: \"+f.prevState(h)+\"; font-weight: bold\";r[N](\"%c prev state\",L,h)}else r[N](\"prev state\",h);if(P)if(f.action){var T=\"color: \"+f.action(S)+\"; font-weight: bold\";r[P](\"%c action    \",T,S)}else r[P](\"action    \",S);if(y&&C)if(f.error){var M=\"color: \"+f.error(y,h)+\"; font-weight: bold;\";r[C](\"%c error     \",M,y)}else r[C](\"error     \",y);if(F)if(f.nextState){var _=\"color: \"+f.nextState(w)+\"; font-weight: bold\";r[F](\"%c next state\",_,w)}else r[F](\"next state\",w);l&&b(h,w,r,k);try{r.groupEnd()}catch(e){r.log(\"—— log end ——\")}})}function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},L,e),r=t.logger,n=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,f=t.diffPredicate;if(\"undefined\"==typeof r)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error(\"[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\\n// Logger with default options\\nimport { logger } from 'redux-logger'\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\\nimport createLogger from 'redux-logger'\\nconst logger = createLogger({\\n  // ...options\\n});\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n\"),function(){return function(e){return function(t){return e(t)}}};var u=[];return function(e){var r=e.getState;return function(e){return function(l){if(\"function\"==typeof i&&!i(r,l))return e(l);var c={};u.push(c),c.started=O.now(),c.startedTime=new Date,c.prevState=n(r()),c.action=l;var s=void 0;if(a)try{s=e(l)}catch(e){c.error=o(e)}else s=e(l);c.took=O.now()-c.started,c.nextState=n(r());var d=t.diff&&\"function\"==typeof f?f(r,l):t.diff;if(x(u,Object.assign({},t,{diff:d})),u.length=0,c.error)throw c.error;return s}}}}var k,j,E=function(e,t){return new Array(t+1).join(e)},A=function(e,t){return E(\"0\",t-e.toString().length)+e},D=function(e){return A(e.getHours(),2)+\":\"+A(e.getMinutes(),2)+\":\"+A(e.getSeconds(),2)+\".\"+A(e.getMilliseconds(),3)},O=\"undefined\"!=typeof performance&&null!==performance&&\"function\"==typeof performance.now?performance:Date,N=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},P=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},C=[];k=\"object\"===(\"undefined\"==typeof global?\"undefined\":N(global))&&global?global:\"undefined\"!=typeof window?window:{},j=k.DeepDiff,j&&C.push(function(){\"undefined\"!=typeof j&&k.DeepDiff===c&&(k.DeepDiff=j,j=void 0)}),t(n,r),t(o,r),t(i,r),t(a,r),Object.defineProperties(c,{diff:{value:c,enumerable:!0},observableDiff:{value:l,enumerable:!0},applyDiff:{value:h,enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:g,enumerable:!0},isConflict:{value:function(){return\"undefined\"!=typeof j},enumerable:!0},noConflict:{value:function(){return C&&(C.forEach(function(e){e()}),C=null),c},enumerable:!0}});var F={E:{color:\"#2196F3\",text:\"CHANGED:\"},N:{color:\"#4CAF50\",text:\"ADDED:\"},D:{color:\"#F44336\",text:\"DELETED:\"},A:{color:\"#2196F3\",text:\"ARRAY:\"}},L={level:\"log\",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return\"inherit\"},prevState:function(){return\"#9E9E9E\"},action:function(){return\"#03A9F4\"},nextState:function(){return\"#4CAF50\"},error:function(){return\"#F20404\"}},diff:!1,diffPredicate:void 0,transformer:void 0},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,r=e.getState;return\"function\"==typeof t||\"function\"==typeof r?S()({dispatch:t,getState:r}):void console.error(\"\\n[redux-logger v3] BREAKING CHANGE\\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\\n[redux-logger v3] Change\\n[redux-logger v3] import createLogger from 'redux-logger'\\n[redux-logger v3] to\\n[redux-logger v3] import { createLogger } from 'redux-logger'\\n\")};e.defaults=L,e.createLogger=S,e.logger=T,e.default=T,Object.defineProperty(e,\"__esModule\",{value:!0})});\n","module.exports = { \"default\": require(\"core-js/library/fn/object/define-properties\"), __esModule: true };","require('../../modules/es6.object.define-properties');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperties(T, D) {\n  return $Object.defineProperties(T, D);\n};\n","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n","/*\n * This file contains SDK documentation for stuff defined by the Logger package.\n * They are here to 1) ensure they are picked up by our documentation tool and\n *    2) ensure they are written from the perspective of the SDK (not the Logger\n *    library).\n */\n\n/**\n * A LogEntry object is the data that the SDK compiles when information is\n *    logged. It contains both the logged information and meta-info about when\n *    and who logged it.\n *\n * A {@link logger.LogHandler LogHandler} provided to the SDK (see\n *    {@link #configconfiglogs config.logs}) will need to handle LogEntry\n *    objects.\n *\n * @public\n * @static\n * @typedef {Object} LogEntry\n * @memberof logger\n * @requires logs\n * @property {number} timestamp When the log was created, based on UNIX epoch.\n * @property {string} method The log function that was used to create the log.\n * @property {string} level The level of severity the log.\n * @property {Object} target The subject that the log is about.\n * @property {string} target.type The type of the target. This is also\n *    used as part of the name of the Logger.\n * @property {string} [target.id] A unique identifier for the target.\n * @property {string} target.name A combination of the target type and ID. If no\n *    id was provided, this will be the same as the type.\n * @property {Array} messages The logged information, given to the Logger\n *    method as parameters.\n * @property {Object} [timer] Timing data, if the log method was a timer method.\n * @example\n * function defaultLogHandler (logEntry) {\n *   // Compile the meta info of the log for a prefix.\n *   const { timestamp, level, target } = logEntry\n *   let { method } = logEntry\n *   const logInfo = `${timestamp} - ${target.type} - ${level}`\n *\n *   // Assume that the first message parameter is a string.\n *   const [log, ...extra] = logEntry.messages\n *\n *   // For the timer methods, don't actually use the console methods.\n *   //    The Logger already did the timing, so simply log out the info.\n *   if (['time', 'timeLog', 'timeEnd'].includes(method)) {\n *     method = 'debug'\n *   }\n *\n *   console[method](`${logInfo} - ${log}`, ...extra)\n * }\n */\n\n/**\n * A LogHandler can be used to customize how the SDK should log information. By\n *    default, the SDK will log information to the console, but a LogHandler can\n *    be configured to change this behaviour.\n *\n * A LogHandler can be provided to the SDK as part of its configuration (see\n *    {@link #configconfiglogs config.logs}). The SDK will then provide this\n *    function with the logged information.\n *\n * @public\n * @static\n * @typedef {Function} LogHandler\n * @memberof logger\n * @requires logs\n * @param {Object} LogEntry The LogEntry to be logged.\n * @example\n * // Define a custom function to handle logs.\n * function logHandler (logEntry) {\n *   // Compile the meta info of the log for a prefix.\n *   const { timestamp, level, target } = logEntry\n *   let { method } = logEntry\n *   const logInfo = `${timestamp} - ${target.type} - ${level}`\n *\n *   // Assume that the first message parameter is a string.\n *   const [log, ...extra] = logEntry.messages\n *\n *   // For the timer methods, don't actually use the console methods.\n *   //    The Logger already did the timing, so simply log out the info.\n *   if (['time', 'timeLog', 'timeEnd'].includes(method)) {\n *     method = 'debug'\n *   }\n *\n *   console[method](`${logInfo} - ${log}`, ...extra)\n * }\n *\n * // Provide the LogHandler as part of the SDK configurations.\n * const configs = { ... }\n * configs.logs.handler = logHandler\n * const client = create(configs)\n */\n","/**\n * This file is a plugin for the \"Config\" plugin\n * Reference info: https://confluence.genband.com/display/KSDK/Plugins\n */\nimport pluginInterface from './interface'\n\n/**\n * Config Plugin\n *\n * @method configImplementation\n * @return {Object} An instance of the \"Config\" plugin.\n */\n\n// yarn lint:docs complains if this isn't defined in a plugin.\n/**\n * @module config\n */\nexport default function configImplementation () {\n  return {\n    // Interface Components:\n    name: pluginInterface.name,\n    capabilities: ['config'],\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer\n  }\n}\n","import api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a Config plugin.\n * @type {string}\n */\nconst name = 'config'\n\nexport default {\n  reducer,\n  name,\n  api\n}\n","// Config plugin.\nimport * as actions from './actions'\nimport { getConfiguration } from './selectors'\n\n// Other plugins.\nimport { logManager, API_LOG_TAG } from '../../logs'\nimport parseCallConfigs from '../../call/configs'\n\nimport { cloneDeep } from 'lodash/fp'\n\nconst log = logManager.getLogger('CONFIG')\n\nexport default function api (context) {\n  const configApi = {\n    /**\n     * Gets the current configuration Object. This is the object that is initially set as part of SDK creation using 'create' function.\n     *\n     * @public\n     * @static\n     * @memberof api\n     * @requires config\n     * @method getConfig\n     * @returns {Object} A configuration Object.\n     */\n    getConfig: function () {\n      log.debug(API_LOG_TAG + 'getConfig')\n      return getConfiguration(context.getState())\n    },\n\n    /**\n     * Update the configuration values for the SDK to use.\n     *\n     * This API will only modify the configurations provided, leaving other configurations\n     *   as they were originally set, by performing a merge of the new values into the\n     *   previous values.\n     *\n     * Please note that that the object provided to the `updateConfig` API may be different\n     *   than the object retrieved from the {@link api.getConfig getConfig} API. This may happen when a format\n     *   change has happened and the SDK modifies the provided format to alleviate\n     *   backwards-compatibility issues. We recommend ensuring the configurations you\n     *   provide are as described by the {@link config} section.\n     *\n     * @public\n     * @static\n     * @memberof api\n     * @requires config\n     * @method updateConfig\n     * @param {Object} newConfigValues Key-value pairs that will be placed into the store. See {@link config} for details on what key-value pairs are available for use.\n     * @example\n     * // Instantiate the SDK with certain configs.\n     * const client = create({\n     *   authentication: { ... },\n     *   logs: { ... },\n     *   ...\n     * })\n     *\n     * // Modify a subsection of the configs at a later time.\n     * // This will only update the specified configurations.\n     * client.updateConfig({\n     *     logs: {\n     *       loglevel: 'DEBUG'\n     *     }\n     * })\n     */\n    updateConfig: function (newConfigValues) {\n      log.debug(API_LOG_TAG + 'updateConfig: ', newConfigValues)\n\n      // Clone the configs so we don't mutate the application's object.\n      const configs = cloneDeep(newConfigValues)\n\n      // Validate the new config provided by the application.\n      if (configs.call) {\n        configs.call = parseCallConfigs(configs.call)\n      }\n\n      context.dispatch(actions.update(configs))\n    }\n  }\n\n  return configApi\n}\n","import { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves configuration Object stored in state\n *\n * @method getConfiguration\n * @param  {Object} state Redux state.\n * @return {Object}\n */\nexport function getConfiguration (state) {\n  return cloneDeep(state.config)\n}\n","import { ICE_COLLECTION_RESULT_TYPES } from '../constants'\nimport sdpTransform from 'sdp-transform'\n\n/**\n * Returns the default ice collection check function.\n *\n * @method getDefaultCollectionFunction\n * @param {number} idealCollectionTimeout The desired ideal ice collection check timeout.\n * @param {number} maxCollectionTimeout The desired max ice collection check timeout.\n * @returns {Function} The default ice collection check function.\n */\nexport function getDefaultCollectionFunction (idealCollectionTimeout, maxCollectionTimeout) {\n  /**\n   * Default function used for the SDK's ICE collection process. Will determine when enough\n   *     candidates have been collected, or enough time has passed, until negotiation can\n   *     continue or if the call should be considered failed.\n   *\n   * If ICE collection completes normally (at any point),\n   *   - start the call if we have some ICE candidates.\n   *   - error the call if there are no ICE candidates.\n   *\n   * If a candidate is collected, follow logic based on below timings.\n   *\n   * If before the ideal timeout,\n   *   - start the call if every media section has a relay candidate for every TURN server.\n   *   - otherwise wait until max timeout.\n   *\n   * If before the max timeout (but after ideal),\n   *   - start the call if every media section has at least one relay candidate.\n   *   - otherwise wait until max timeout.\n   *\n   * If we reach max timeout,\n   *   - start the call if we have some ICE candidates.\n   *   - error the call if there are no ICE candidates.\n   * @param {Object} iceCollectionInfo\n   * @param {string} iceCollectionInfo.callId The ID of the call.\n   * @param {string} iceCollectionInfo.callOperation The current operation of the call.\n   * @param {string} iceCollectionInfo.reason The reason the check function was called.\n   * @param {Array<Object>} iceCollectionInfo.iceCandidates The array of ICE candidates collected so far.\n   * @param {number} iceCollectionInfo.iceCollectionDuration The time elapsed since the start of the ICE collection process.\n   * @param {string} iceCollectionInfo.iceGatheringState The current ICE gathering state.\n   * @param {Object} iceCollectionInfo.rtcPeerConnectionConfig The config of the RTC peer connection.\n   * @param {string} iceCollectionInfo.rtcLocalSessionDescription The local description set on the peer.\n   * @return {call.iceCollectionCheckResult} Information on how to proceed with the ice collection check.\n   */\n  const iceCollectionCheckFunction = (iceCollectionInfo = {}) => {\n    const {\n      iceCollectionDuration,\n      iceCandidates,\n      iceGatheringState,\n      rtcPeerConnectionConfig,\n      rtcLocalSessionDescription\n    } = iceCollectionInfo\n\n    if (iceGatheringState === 'complete') {\n      // If the ice gathering state is 'complete', but no candidates are available, end the call\n      if (iceCandidates.length === 0) {\n        return { type: ICE_COLLECTION_RESULT_TYPES.ERROR, error: 'No ICE candidates available for call to proceed.' }\n      }\n      return { type: ICE_COLLECTION_RESULT_TYPES.START_CALL }\n    }\n\n    // If we are under the ideal timeout time and iceGathering state is not complete, we will check that the amount\n    //  relay candidates for each transport is equal to the number of configured TURN servers.\n    if (iceCollectionDuration < idealCollectionTimeout) {\n      // Number of TURN servers\n      let totalTurnServers = 0\n      const configuredIceServers = rtcPeerConnectionConfig.rtcConfig.iceServers || []\n      configuredIceServers.forEach(iceServer => {\n        if (Array.isArray(iceServer.urls)) {\n          totalTurnServers += iceServer.urls.filter(url => url.startsWith('turn')).length\n        } else if (typeof iceServer.urls === 'string' && iceServer.urls.startsWith('turn')) {\n          totalTurnServers += 1\n        }\n      })\n\n      // RTP Relay candidates collected so far\n      const relayCandidates = iceCandidates.filter(\n        candidate => candidate.component === 'rtp' && candidate.type === 'relay'\n      )\n\n      // Check whether there is atleast candidates for each media transport equal to the number of configured\n      //  turn servers before starting the call.\n      const parsedSdp = sdpTransform.parse(rtcLocalSessionDescription.sdp)\n      const readyToStart = parsedSdp.media.every(media => {\n        const sectionRelays = relayCandidates.filter(\n          candidate => parseInt(candidate.sdpMid) === media.mid || candidate.sdpMid === media.mid\n        )\n        return sectionRelays.length >= totalTurnServers\n      })\n\n      // If no TURN servers we're provided we will wait till the ideal collection timeout.\n      if (!readyToStart || !totalTurnServers) {\n        return { type: ICE_COLLECTION_RESULT_TYPES.WAIT, wait: idealCollectionTimeout - iceCollectionDuration }\n      } else {\n        return { type: ICE_COLLECTION_RESULT_TYPES.START_CALL }\n      }\n    } else if (iceCollectionDuration < maxCollectionTimeout) {\n      // If we are passed the ideal timeout time, we will check that the amount relay candidates for each transport is\n      //  1 or more.\n\n      // RTP Relay candidates collected so far\n      const relayCandidates = iceCandidates.filter(\n        candidate => candidate.component === 'rtp' && candidate.type === 'relay'\n      )\n\n      // Check whether there is atleast 1 candidate for each media transport before starting the call.\n      const parsedSdp = sdpTransform.parse(rtcLocalSessionDescription.sdp)\n      const readyToStart = parsedSdp.media.every(media => {\n        const sectionRelays = relayCandidates.filter(\n          candidate => parseInt(candidate.sdpMid) === media.mid || candidate.sdpMid === media.mid\n        )\n        return sectionRelays.length >= 1\n      })\n\n      if (readyToStart) {\n        return { type: ICE_COLLECTION_RESULT_TYPES.START_CALL }\n      } else {\n        return { type: ICE_COLLECTION_RESULT_TYPES.WAIT, wait: maxCollectionTimeout - iceCollectionDuration }\n      }\n    } else {\n      // If we are passed the max timeout and no candidates are available, end the call\n      if (iceCandidates.length === 0) {\n        return { type: ICE_COLLECTION_RESULT_TYPES.ERROR, error: 'No ICE candidates available for call to proceed.' }\n      }\n      // Otherwise, if there are some candidates, we can attempt to start the call.\n      return { type: ICE_COLLECTION_RESULT_TYPES.START_CALL }\n    }\n  }\n  return iceCollectionCheckFunction\n}\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { mergeValues } from '../../common/utils'\n\nconst reducers = {}\n\nreducers[actionTypes.CONFIG_UPDATE] = {\n  next (state, action) {\n    return mergeValues(state, action.payload)\n  }\n}\n\nreducers[actionTypes.SET_SDP_HANDLERS] = {\n  next (state, action) {\n    return {\n      ...state,\n      call: {\n        ...state.call,\n        sdpHandlers: action.payload.sdpHandlers\n      }\n    }\n  }\n}\n\n// Config default state is an empty Object\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","// Events plugin.\nimport pluginInterface from './interface'\nimport { emitEvent } from './interface/actions'\nimport * as actionTypes from './interface/actionTypes'\n\nimport eventEmitter from './eventEmitter'\n\n// Logs\nimport { logManager } from '../logs'\nconst log = logManager.getLogger('EVENTS')\n\n/**\n * Event Emitter Implementation.\n * Factory function to create the Event Emitter Implementation.\n * Defines the functionality exposed by an Event Emitter Interface.\n */\nexport default function eventsImplementation () {\n  return {\n    name: pluginInterface.name,\n    middleware: middleware,\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer\n  }\n}\n\n/**\n * Implementation of Event Emitter Interface.\n * @return {Middleware} middleware Middleware to be applied to the redux store.\n */\nfunction middleware (context) {\n  var emitter = eventEmitter()\n  var eventMap = {}\n\n  /**\n   * Middleware to handle Event Emitter Interface actions.\n   * Redirects Interface actions to the Plugin functionality, and dispatches\n   *      actions to update the store if needed.\n   * @type {Function}\n   */\n  return next => action => {\n    switch (action.type) {\n      case actionTypes.EVENTS_ON:\n        emitter.on(action.payload.eventType, action.payload.listener)\n        break\n      case actionTypes.EVENTS_OFF:\n        emitter.off(action.payload.eventType, action.payload.listener)\n        break\n      case actionTypes.EVENTS_SUBSCRIBE:\n        emitter.subscribe(action.payload)\n        break\n      case actionTypes.EVENTS_UNSUBSCRIBE:\n        emitter.unsubscribe(action.payload)\n        break\n      case actionTypes.EVENTS_ALIAS:\n        emitter.alias(action.payload.eventType, action.payload.alias)\n        break\n      case actionTypes.EVENTS_EMIT:\n        log.info(`Emitting event: ${action.payload.eventType}`, action.payload.args[0])\n        emitter.emit(action.payload.eventType, ...action.payload.args)\n        break\n      case actionTypes.MAP_EVENTS:\n        for (const actionType in action.payload) {\n          if (action.payload.hasOwnProperty(actionType)) {\n            const mapper = action.payload[actionType]\n            if (eventMap.hasOwnProperty(actionType)) {\n              eventMap[actionType].push(mapper)\n            } else {\n              eventMap[actionType] = [mapper]\n            }\n          }\n        }\n        break\n      default:\n        if (eventMap.hasOwnProperty(action.type)) {\n          // Get state both before and after allowing the action to go through\n          //    the reducers. This lets events have compare state changes.\n          const prevState = context.getState()\n          let result = next(action)\n          const state = context.getState()\n\n          // make this compatible with promise middleware by ensuring we\n          // wait for the promise to resolve. It's easier to just always\n          // use a promise, as opposed to handling cases.\n          if (!result || !result.then) {\n            result = Promise.resolve(result)\n          }\n          result.then(function () {\n            for (const mapper of eventMap[action.type]) {\n              // Use the mapper(s) for this specific event to create the event object(s).\n              // Event mappings have access to the action and states pre+post reducer.\n              let events = mapper(action, { prevState, state })\n              if (!events) {\n                events = []\n              } else if (!Array.isArray(events)) {\n                events = [events]\n              }\n              for (const event of events) {\n                if (!event.args) {\n                  event.args = {}\n                }\n                context.dispatch(emitEvent(event.type, event.args))\n              }\n            }\n          })\n          return result\n        }\n        break\n    }\n\n    return next(action)\n  }\n}\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for an events plugin.\n * @type {string}\n */\nconst name = 'events'\n\nexport default {\n  name,\n  api,\n  reducer\n}\n","// Actions the interface uses.\nimport { on, off, subscribe, unsubscribe } from './actions'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('EVENTS')\n\n/**\n * API for Event Emitter plugin.\n * Defines the public end-points exposed by event plugins.\n * @param  {Object} context The sdk instance context.\n * @returns {Object} api     The interface object.\n */\nexport default function api ({ dispatch }) {\n  var api = {}\n\n  /**\n   * Add an event listener for the specified event type. The event is emitted by the SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method on\n   * @param {string} type The event type for which to add the listener.\n   * @param {Function} listener The listener for the event type. The parameters of the listener depend on the event type.\n   * @throws {Error} Invalid event type\n   * @example\n   * // Listen for events of a specific type emitted by the SDK.\n   * client.on('dummy:event', function (params) {\n   *    // Handle the event.\n   * })\n   */\n  api.on = function (type, listener) {\n    log.debug(API_LOG_TAG + 'on: ', type)\n    dispatch(on(type, listener))\n  }\n\n  /**\n   * Removes an event listener for the specified event type. The event is emitted by the SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method off\n   * @param {string} type The event type for which to remote the listener.\n   * @param {Function} listener The listener to remove.\n   * @throws {Error} Invalid event type\n   */\n  api.off = function (type, listener) {\n    log.debug(API_LOG_TAG + 'off: ', type)\n    dispatch(off(type, listener))\n  }\n\n  /**\n   * Adds a global event listener to SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method subscribe\n   * @param {Function} listener The event listener to add. The parameters are (type, ...args), where args depend on the event type.\n   * @throws {Error} Listener not a function\n   */\n  api.subscribe = function (listener) {\n    log.debug(API_LOG_TAG + 'subscribe')\n    dispatch(subscribe(listener))\n  }\n\n  /**\n   * Removes a global event listener from SDK instance.\n   *\n   * @public\n   * @memberof api\n   * @method unsubscribe\n   * @param {Function} listener The event listener to remove.\n   * @throws {Error} Listener not a function\n   */\n  api.unsubscribe = function (listener) {\n    log.debug(API_LOG_TAG + 'unsubscribe')\n    dispatch(unsubscribe(listener))\n  }\n\n  return api\n}\n","// Events plugin.\nimport * as actionTypes from './actionTypes'\n\n// Libraries.\nimport { update, add, concat, contains } from 'lodash/fp'\n\nfunction eventReducer (state = { aliases: [], count: 0 }, action) {\n  switch (action.type) {\n    case actionTypes.EVENTS_ON:\n      return update('count', add(1), state)\n    case actionTypes.EVENTS_OFF:\n      return update('count', add(-1), state)\n    case actionTypes.EVENTS_ALIAS:\n      return update('aliases', concat(action.payload.alias), state)\n    default:\n      return state\n  }\n}\n\n/**\n * Reducer for Event Emitter plugin.\n * Defines the events an Event plugin should dispatch to modify state.\n * @param  {Object} [state={}] The events substate.\n * @param  {Object} action     A Flux Standard action.\n * @returns {Object} state      The new event substate.\n */\nexport default function reducer (state = {}, action) {\n  // Only handle event types.\n  if (!contains(action.type, actionTypes)) {\n    return state\n  }\n\n  return {\n    ...state,\n    [action.payload.eventType]: eventReducer(state[action.payload.eventType], action)\n  }\n}\n","/*\n * Event emitter module. Can be used as a standalone factory or as a mixin.\n *\n * @private\n * @class emitter\n * @example\n * ``` javascript\n * var eventEmitter = emitter(); // Create a new emitter.\n * emitter(myEmittingObject.prototype); // Mixin to an existing object.\n * ```\n */\nexport default function eventEmitter (prototype = {}) {\n  var eventMap = []\n  var subscribeMap = []\n  var strictMode = false\n\n  /*\n   * Check if the event is a valid event type.\n   */\n  function checkEvent (type) {\n    if (strictMode && !eventMap[type]) {\n      throw new Error('Invalid event type: ' + type)\n    }\n  }\n\n  return Object.assign(prototype, {\n    /*\n     * Define an event type with the event emitter.\n     *\n     * @method define\n     * @param {String} type The name for the event type.\n     */\n    define: function (type) {\n      eventMap[type] = eventMap[type] || []\n    },\n\n    /*\n     * Define an alias for an event type.\n     *\n     * @method alias\n     * @param {String} type The event type for which to add an alias.\n     * @param {String} alias The alias name for the event type.\n     * @throws {Error} Invalid event type\n     */\n    alias: function (type, alias) {\n      checkEvent(type)\n\n      eventMap[alias] = eventMap[type] = eventMap[type] || []\n    },\n\n    /*\n     * Add an event listener for the specified event type.\n     *\n     * @method on\n     * @param {String} type The event type for which to add the listener.\n     * @param {Function} listener The listener for the event type. The parameters\n     *                            of the listener depend on the event type.\n     * @throws {Error} Invalid event type\n     */\n    on: function (type, listener) {\n      checkEvent(type)\n      ;(eventMap[type] = eventMap[type] || []).push(listener)\n    },\n\n    /*\n     * Removes an event listener for the specified event type.\n     *\n     * @method off\n     * @param {String} type The event type for which to remote the listener.\n     * @param {Function} listener The listener to remove.\n     * @throws {Error} Invalid event type\n     */\n    off: function (type, listener) {\n      checkEvent(type)\n\n      var list = eventMap[type] || []\n      var i = list.length\n      while (i--) {\n        if (listener === list[i]) {\n          list.splice(i, 1)\n        }\n      }\n    },\n\n    /*\n     * Emits an event of the specified type.\n     *\n     * @method emit\n     * @param {String} type The event type to emit.\n     * @param {any} [...args] The arguments to pass to the listeners of the event.\n     * @throws {Error} Invalid event type\n     */\n    emit: function (type) {\n      checkEvent(type)\n\n      var args = Array.prototype.slice.call(arguments, 1)\n      var list = eventMap[type] || []\n      var i = 0\n\n      for (; i < list.length; i++) {\n        list[i].apply(undefined, args)\n      }\n      for (var j = 0; j < subscribeMap.length; j++) {\n        subscribeMap[j].call(undefined, type, args)\n      }\n    },\n\n    /*\n     * Add a subscription for all event types.\n     *\n     * @method subscribe\n     * @param {Function} listener The listener for all event types.\n     * @throws {Error} Listener not a function\n     */\n    subscribe: function (listener) {\n      if (typeof listener === 'function') {\n        subscribeMap.push(listener)\n      } else {\n        throw new Error('Listener not a function')\n      }\n    },\n\n    /*\n     * Remove a subscription for all event types.\n     *\n     * @method unsubscribe\n     * @param {Function} listener The listener for all event types.\n     * @throws {Error} Listener not a function\n     */\n    unsubscribe: function (listener) {\n      if (typeof listener === 'function') {\n        var i = subscribeMap.length\n        while (i--) {\n          if (listener === subscribeMap[i]) {\n            subscribeMap.splice(i, 1)\n          }\n        }\n      } else {\n        throw new Error('Listener not a function')\n      }\n    },\n\n    /*\n     * Sets the emitter in strict mode where it only allows events that have been defined or aliases.\n     *\n     * @method setStrictMode\n     * @param {Boolean} strict Whether to set strict mode for the emitter.\n     */\n    setStrictMode: function (strict) {\n      strictMode = strict\n    }\n  })\n}\n","// Redux-Saga\nimport { put } from 'redux-saga/effects'\n// Events\nimport eventsMap from '../interface/events'\nimport { mapEvents } from '../../events/interface/actions'\n\n// The interface to follow.\nimport { api, reducer, name } from '../interface'\n\n// State setters.\nimport { update as updateConfig } from '../../config/interface/actions'\n\n// Utilities.\nimport { mergeValues } from '../../common/utils'\nimport { logManager } from '../../logs'\n\n// Parse and/or Validate\nimport { enums, validation as v8n, parse } from '../../../src/common/validation'\n\n// Get the logger\nconst log = logManager.getLogger('AUTH')\n\n/**\n * Configuration options for the Authentication feature.\n * @public\n * @name config.authentication\n * @memberof config\n * @instance\n * @param {Object} authentication Authentication configs.\n * @param {Object} authentication.server Information for how to reach the platform.\n * @param {string} authentication.server.base Server to be used for requests.\n * @param {string} [authentication.server.protocol=https] Protocol to be used for requests.\n * @param {Number} [authentication.server.port=443] Port to be used for requests.\n * @param {string} authentication.clientCorrelator Unique ID for the client. This is required by the platform to identify an instance of the application used by the specific device.\n */\nconst defaultOptions = {\n  server: {\n    base: undefined,\n    protocol: 'https',\n    port: '443',\n    version: 'v1' // not documented, but important\n  },\n  clientCorrelator: undefined\n}\n\n/**\n * CPaaS authentication implementation factory.\n * @method authCpaas\n * @param {Object} options - Configuration options for authentication. See above.\n * @return {Object} plugin - An authentication plugin.\n */\n\n// config validation\nconst v8nValidation = v8n.schema({\n  server: v8n.schema({\n    base: v8n.string(),\n    protocol: enums(['http', 'https']),\n    port: v8n.positive(),\n    version: enums(['v1']) // not documented, but important\n  }),\n  clientCorrelator: v8n.string()\n})\nconst parseOptions = parse('authentication', v8nValidation)\n\nexport default function authCpaas (options = {}) {\n  options = mergeValues(defaultOptions, options)\n  parseOptions(options)\n\n  if (options.websocket) {\n    log.warn('Authentication configuration is being replaced, see docs. Please update to the config.')\n  }\n\n  if (!options.server.base || !options.clientCorrelator) {\n    log.error('Missing required configurations. Please provide proper authentication configurations.')\n  }\n\n  function * init () {\n    // Send the provided options to the store.\n    // This will be `state.config[name]`.\n    yield put(updateConfig(options, name))\n    yield put(mapEvents(eventsMap))\n  }\n\n  const capabilities = ['cpaasAuth']\n\n  return {\n    capabilities,\n    init,\n    api,\n    reducer,\n    name\n  }\n}\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nfunction authChangedEvent (action) {\n  return {\n    type: action.error ? eventTypes.AUTH_ERROR : eventTypes.AUTH_CHANGE,\n    args: action.error ? { error: action.payload } : {}\n  }\n}\n\nconst eventsMap = {}\n\neventsMap[actionTypes.CONNECT_FINISHED] = authChangedEvent\neventsMap[actionTypes.USER_DETAILS_RECEIVED] = authChangedEvent\neventsMap[actionTypes.CONNECT] = authChangedEvent\neventsMap[actionTypes.DISCONNECT] = authChangedEvent\neventsMap[actionTypes.REFRESH_TOKENS_FINISHED] = authChangedEvent\neventsMap[actionTypes.UPDATE_SUBSCRIPTION_FINISH] = authChangedEvent\neventsMap[actionTypes.SET_CREDENTIALS_FINISH] = authChangedEvent\n\neventsMap[actionTypes.DISCONNECT_FINISHED] = function (action) {\n  const discEvent = authChangedEvent(action)\n  if (action.payload.reason === 'GONE') {\n    discEvent.args.forced = true\n  }\n  if (action.payload.retryAfter) {\n    discEvent.args.retryAfter = action.payload.retryAfter\n  }\n\n  discEvent.args.reason = action.payload.reason\n  return discEvent\n}\n\neventsMap[actionTypes.RESUBSCRIPTION_FINISHED] = function (action) {\n  const resubEvent = {\n    type: eventTypes.AUTH_RESUB,\n    args: {\n      attemptNum: action.payload.attemptNum,\n      isFailure: action.error || false\n    }\n  }\n\n  if (action.error) {\n    resubEvent.args.error = action.payload\n  }\n  return resubEvent\n}\n\neventsMap[actionTypes.SET_CONNECTION_INFO] = function (action) {\n  return {\n    type: eventTypes.AUTH_CREDENTIALS_SET\n  }\n}\n\nexport default eventsMap\n","/**\n * Authentication state has changed. You can get the new state by calling `getConnection()`.\n *\n * @public\n * @memberof api\n * @requires connect\n * @event auth:change\n * @param {Object} params\n * @param {string} params.reason The cause of the authentication change, provided in the event of an unsolicited disconnection. See the `disconnectReasons` API for possible values.\n */\nexport const AUTH_CHANGE = 'auth:change'\n\n/**\n * There was an error with authentication.\n *\n * @public\n * @memberof api\n * @requires connect\n * @event auth:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n *\n */\nexport const AUTH_ERROR = 'auth:error'\n\n/**\n * An attempt to extend the current user's subscription was made.\n *\n * In a failure scenario, the current user is still connected, and further\n * resubscription attempts will be made, but may become disconnected if the\n * session expires.\n * @public\n * @memberof api\n * @requires connect\n * @event auth:resub\n * @param {Object} params\n * @param {number} params.attemptNum The attempt number of this resubscription.\n * @param {boolean} params.isFailure Whether the resubscription failed or not.\n * @param {api.BasicError} [params.error] The Basic error object.\n */\nexport const AUTH_RESUB = 'auth:resub'\n\n/**\n * The information (credentials) needed for connecting have been set.\n *\n * @public\n * @memberof api\n * @requires connect\n * @event auth:credentialsSet\n */\nexport const AUTH_CREDENTIALS_SET = 'auth:credentialsSet'\n","import reducer from './reducers'\nimport name from './name'\nimport api from './api'\n\nexport { reducer, name, api }\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\n\nimport { merge } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.CONNECT] = {\n  next (state) {\n    return {\n      ...state,\n      isPending: true,\n      error: undefined\n    }\n  }\n}\n\nreducers[actionTypes.SET_CONNECTION_INFO] = {\n  next (state, action) {\n    return {\n      ...state,\n      platform: action.meta.platform,\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: action.payload.connection\n      },\n      userInfo: action.payload.userInfo\n    }\n  }\n}\n\nreducers[actionTypes.CONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      isConnected: true,\n      isPending: false,\n      error: undefined,\n      isSSO: action.meta.isSSO,\n      platform: action.meta.platform,\n      // Separate subscription, connection info based on the platform used.\n      // Store platform subscription information.\n      subscription: {\n        ...state.subscription,\n        [action.meta.platform]: action.payload.subscription\n      },\n      // Store platform connection information to be provided to other plugins.\n      connection: action.payload.connection\n        ? { ...state.connection, [action.meta.platform]: action.payload.connection }\n        : { ...state.connection },\n      // Store user information to be provided to developers.\n      userInfo: action.payload.userInfo ? action.payload.userInfo : state.userInfo\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isConnected: false,\n      isPending: false,\n      error: action.payload\n    }\n  }\n}\n\n// On connection occurred, store the connection information into state, but do\n// not update any status state. The connection has not yet finished.\nreducers[actionTypes.CONNECTION_OCCURRED] = {\n  next (state, action) {\n    return {\n      ...state,\n      // Separate subscription, connection info based on the platform used.\n      // Store platform subscription information.\n      subscription: {\n        ...state.subscription,\n        [action.meta.platform]: action.payload.subscription\n      },\n      // Store platform connection information to be provided to other plugins.\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: action.payload.connection\n      }\n    }\n  }\n}\n\nreducers[actionTypes.DISCONNECT] = {\n  next (state) {\n    return {\n      ...state,\n      isPending: true,\n      error: undefined\n    }\n  }\n}\n\n/*\n * Clear the authentication state when we disconnect.\n * Note: This should only be for 3.X (and 4.X backwards-compatible connect API)\n *    authentication.\n */\nreducers[actionTypes.DISCONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      isConnected: false,\n      isPending: false,\n      error: undefined\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      // Treat an error as if we are still disconnected.\n      isConnected: false,\n      isPending: false,\n      error: action.payload\n    }\n  }\n}\n\nreducers[actionTypes.REFRESH_TOKENS_FINISHED] = {\n  next (state, action) {\n    // Merge the updated requestOptions into the current state.\n    const requestOptions = merge(\n      state.connection[action.meta.platform].requestOptions,\n      action.payload.connection.requestOptions\n    )\n\n    return {\n      ...state,\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: {\n          ...state.connection[action.meta.platform],\n          ...action.payload.connection,\n          requestOptions\n        }\n      },\n      userInfo: {\n        ...state.userInfo,\n        accessToken: action.payload.connection.accessToken,\n        refreshToken: action.payload.connection.refreshToken\n      }\n    }\n  }\n}\n\n/*\n * Updates the subscription information for a specified platform.\n */\nreducers[actionTypes.UPDATE_SUBSCRIPTION_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      subscription: {\n        ...state.subscription,\n        [action.meta.platform]: {\n          ...state.subscription[action.meta.platform],\n          ...action.payload\n        }\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SET_TOKEN] = {\n  next (state, action) {\n    // We received an idToken which is a JWT token that represents the identity of\n    // the user. This token contains information about the user. For now we only need\n    // the username. In the future we might use more from this token.\n    const idTokenPayload = action.payload.idToken\n    return {\n      ...state,\n      userInfo: {\n        ...state.userInfo,\n        accessToken: action.payload.accessToken,\n        username: idTokenPayload.preferred_username,\n        identity: idTokenPayload['services-identity']\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SET_CREDENTIALS_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      error: undefined,\n      platform: action.meta.platform,\n      // Store platform connection information to be provided to other plugins.\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: action.payload.connection\n      },\n      // Store user information to be provided to developers.\n      userInfo: action.payload.userInfo\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      error: action.payload\n    }\n  }\n}\n\n/*\n * Remove the x-token from the request header after subscription is successful.\n */\nreducers[actionTypes.UPDATE_HMAC_TOKEN] = {\n  next (state, action) {\n    const { 'x-token': _removed, ...removeXtoken } = state.connection[action.meta.platform].requestOptions.headers\n\n    const headers = {\n      ...removeXtoken,\n      'x-session': action.payload\n    }\n\n    return {\n      ...state,\n      connection: {\n        ...state.connection,\n        [action.meta.platform]: {\n          ...state.connection[action.meta.platform],\n          requestOptions: {\n            ...state.connection[action.meta.platform].requestOptions,\n            headers\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Auth Interface reducer\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n * @example\n * Auth state structure example; connected.\n * authState = {\n *     isConnected: true,\n *     isPending: false,\n *     error: undefined,\n *     subscription: { ... },\n *     connection: { ... },\n *     userInfo: { ... }\n * }\n */\nconst reducer = handleActions(reducers, {\n  isConnected: false,\n  isPending: false\n})\nexport default reducer\n","/**\n * This interface is for an authentication plugin.\n * @type {string}\n */\nconst name = 'authentication'\nexport default name\n","import * as actions from './actions'\nimport { getUserInfo as selectUserInfo, getServices } from './selectors'\nimport { SUBSCRIPTION_STATE, DISCONNECT_REASONS } from '../constants'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\nimport jwtDecode from 'jwt-decode'\nconst log = logManager.getLogger('AUTH')\n\n/**\n * Authentication API.\n * @method api\n * @param  {Function} $0\n * @param  {Function} $0.dispatch - The redux store's dispatch function.\n * @param  {Function} $0.getState - The redux store's getState function.\n * @return {Object} api - The authentication API object.\n */\nexport default function api ({ dispatch, getState }) {\n  return {\n    /**\n     * Connect with user credentials to any backend services that the SDK instance deals with.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link apisetCredentials setCredentials} and {@link services.subscribe subscribe} for new method of connecting.\n     * @memberof api\n     * @requires userCredentialsAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username including the application's domain.\n     * @param {string} credentials.password The user's password.\n     * @param {string} [credentials.authname] The user's authorization name.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {boolean} [options.forceLogOut] Force the oldest connection to log out if too many simultaneous connections. Link only.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   password: '********'\n     *   authname: '********'\n     * }, {\n     *   forceLogOut: true\n     * });\n     */\n    /**\n     * Connect with user credentials to any backend services that the SDK instance deals with.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link apisetCredentials setCredentials} and {@link services.subscribe subscribe} for new method of connecting.\n     * @memberof api\n     * @requires userCredentialsDAKAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.domainApiKey The Api key for the application's domain.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.password The user's password.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   domainApiKey: 'DAK1111111111111111111',\n     *   username: 'alfred',\n     *   password: '********'\n     * });\n     */\n    /**\n     * Connect by providing an access token to any backend services that the SDK instance deals with.\n     * You can optionally provide a refresh token and the SDK will automatically get new access tokens.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link apisetCredentials setCredentials} and {@link services.subscribe subscribe} for new method of connecting.\n     * @memberof api\n     * @requires accessTokenAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.accessToken An access token for the user with the provided user Id.\n     * @param {string} [credentials.refreshToken] A refresh token for the same user.\n     * @param {number} [credentials.expires] The time in seconds until the access token will expire.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   accessToken: 'AT0V1fswAiJadokx1iJMQdG04pRf',\n     *   refreshToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT',\n     *   expires: 3600\n     * });\n     */\n    /**\n     * Connect by providing a username and HMAC token. This connects to any backend services that the SDK instance deals with.\n     * An HMAC token is used to verify a user via the user's authorization within an organization.\n     * HMAC tokens are generated by using the HmacSHA1 algorithm and a key on a data object\n     * containing an `authenticationTokenRequest` object with the following properties:\n     * - subscriberId - The user's subscriber ID in the organization.\n     * - organizationId - The ID of the organization the user is a part of.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link apisetCredentials setCredentials} and {@link services.subscribe subscribe} for new method of connecting.\n     * @memberof api\n     * @requires hmacTokenAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username.\n     * @param {string} credentials.hmacToken An HMAC token for the user with the provided user ID.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {boolean} [options.forceLogOut] Force the oldest connection to log out if too many simultaneous connections.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * const hmacToken = HmacSHA1Algorithm({\n     *   authenticationTokenRequest: {\n     *     subscriberId: 'alfred',\n     *     organizationId: 'example.com'\n     *   }\n     * }, key)\n     *\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   hmacToken\n     * }, {\n     *   forceLogOut: true\n     * });\n     */\n    /**\n     * Connect by providing a refresh token, to any backend services that the SDK instance deals with.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link apisetCredentials setCredentials} and {@link services.subscribe subscribe} for new method of connecting.\n     * @memberof api\n     * @requires accessTokenAuth\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.refreshToken A refresh token for the same user.\n     * @param {number} [credentials.expires] The time in seconds until the access token will expire.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   refreshToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT'\n     *   expires: 3600\n     * });\n     */\n    /**\n     * Connect by providing an OAuth token, to any backend services that the SDK instance deals with.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link apisetCredentials setCredentials} and {@link services.subscribe subscribe} for new method of connecting.\n     * @memberof api\n     * @requires oauthToken\n     * @method connect\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.oauthToken An OAuth token provided by an outside service.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * client.connect({\n     *   username: 'alfred@example.com',\n     *   oauthToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT'\n     * });\n     */\n    connect (credentials, options) {\n      // We won't expose oauthToken because it essentially acts as a password being used in conjunction with username\n      // ..and passwords should NOT be logged.\n      log.debug(API_LOG_TAG + 'connect: ', credentials.username)\n      dispatch(actions.connect(credentials, options))\n    },\n\n    /**\n     * Disconnects from the backend. This will close the websocket and you will stop receiving events.\n     *\n     * @public\n     * @deprecated Since version 4.19.0. Please see {@link services.unsubscribe unsubscribe} for new method of disconnecting.\n     * @requires userCredentialsAuth\n     * @requires userCredentialsDAKAuth\n     * @requires accessTokenAuth\n     * @memberof api\n     * @method disconnect\n     */\n    disconnect () {\n      log.debug(API_LOG_TAG + 'disconnect')\n      dispatch(actions.disconnect())\n    },\n\n    /**\n     * If you're authenticating with tokens that expire and have not provided a refresh token to the `connect` function, you can update your access token with `updateToken` before it expires to stay connected.\n     *\n     * @public\n     * @memberof api\n     * @requires accessTokenAuth\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.accessToken The new access token.\n     * @method updateToken\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.accessToken An access token for the user with the provided user Id.\n     */\n    /**\n     * If you're authenticating with tokens that expire and have not provided a refresh token to the `connect` function, you can update your access token with `updateToken` before it expires to stay connected.\n     *\n     * @public\n     * @memberof api\n     * @requires oauthToken\n     * @method updateToken\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.oauthToken An OAuth token provided by an outside service.\n     * @example\n     * client.updateToken({\n     *   username: 'alfred@example.com',\n     *   oauthToken: 'RTG9SV3QAoJaeUSEQCZAHqrhde1yT'\n     * });\n     */\n    updateToken (credentials) {\n      // We won't expose oauthToken because it essentially acts as a password being used in conjunction with username\n      // ..and passwords should NOT be logged.\n      log.debug(API_LOG_TAG + 'updateToken: ', credentials.username)\n      dispatch(actions.refreshTokens(credentials))\n    },\n\n    /**\n     * Updates the current connection.\n     *\n     * @public\n     * @memberof api\n     * @requires updateConnection\n     * @method updateConnection\n     * @param {Object} connection\n     * @param {Array} connection.services Services to subscribe to for notifications.\n     * @example\n     * client.updateConnection({\n     *   services: ['IM', 'Presence', 'call']\n     * })\n     */\n    updateConnection (connection) {\n      log.debug(API_LOG_TAG + 'updateConnection: ', connection)\n      dispatch(actions.updateSubscription(connection))\n    },\n\n    /**\n     * Retrieves information about the current user.\n     *\n     * @public\n     * @memberof api\n     * @method getUserInfo\n     * @returns {Object} user The user data.\n     * @returns {string} user.username The username of the current user. Note that this username can take different encoded forms.\n     *                                 It's not meant to be displayed to a user.\n     * @returns {string} user.token The current access token.\n     */\n    getUserInfo () {\n      log.debug(API_LOG_TAG + 'getUserInfo')\n      return selectUserInfo(getState())\n    },\n\n    /**\n     * Get the connection state.\n     *\n     * @public\n     * @memberof api\n     * @requires connect\n     * @method getConnection\n     * @returns {Object} connection The connection state.\n     * @returns {boolean} connection.isConnected Whether the authenticated user is currently connected.\n     * @returns {boolean} connection.isPending Whether the authenticated user's connection is currently pending.\n     * @returns {Object} connection.error The error object if an error occurred.\n     * @returns {string} connection.error.message The error message.\n     * @returns {string} connection.error.stack The stack trace of the error.\n     */\n    getConnection () {\n      log.debug(API_LOG_TAG + 'getConnection')\n      const { isConnected, isPending, error } = getState().authentication\n      return {\n        isConnected,\n        isPending,\n        error,\n        subscription: getServices(getState())\n      }\n    },\n\n    /**\n     * Retrieves the services that the user is subscribed for.\n     *\n     * @public\n     * @memberof api\n     * @requires services\n     * @method getServices\n     * @return {Array} A list of subscribed-to services.\n     */\n    getServices () {\n      log.debug(API_LOG_TAG + 'getServices')\n      return getServices(getState())\n    },\n\n    /**\n     * Possible subscription states of the user.\n     *\n     * @public\n     * @memberof api\n     * @requires connect\n     * @property {string} FULL All requested feature subscriptions exist.\n     * @property {string} PARTIAL Some feature subscriptions exist.\n     * @property {string} NONE No feature subscriptions exist.\n     */\n    subscriptionStates: SUBSCRIPTION_STATE,\n\n    /**\n     * Possible reasons for disconnecting.\n     *\n     * @public\n     * @memberof api\n     * @requires connect\n     * @property {string} GONE Connection was terminated by the server\n     * @property {string} LOST_CONNECTION Internet connection was lost\n     * @property {string} WS_OVERRIDDEN WebSocket was overridden by the server\n     */\n    disconnectReasons: DISCONNECT_REASONS,\n\n    /**\n     * Sets the authentication tokens necessary to make requests to the platform. The access token\n     * provided establishes what can be accessed by the SDK. The identity token represents who is authenticated.\n     *\n     * @public\n     * @memberof api\n     * @requires cpaasAuth\n     * @method setTokens\n     * @param {Object} params Dictionary object of parameters.\n     * @param {string} params.accessToken An access token retrieved using the authentication APIs of the platform.\n     * @param {string} params.idToken An identity token retrieved using the authentication APIs of the platform.\n     * @example\n     * client.setTokens({\n     *   accessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n     *   idToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * })\n     */\n    setTokens ({ accessToken, idToken }) {\n      // We won't log both tokens, just the id one, so that we can still be able to debug.\n      log.debug(API_LOG_TAG + 'setTokens: ', idToken)\n\n      // validate token\n      try {\n        const jwt = jwtDecode(idToken)\n        dispatch(actions.setTokens({ accessToken, idToken: jwt }))\n      } catch (error) {\n        log.error(`${idToken} is not a valid JWT`)\n      }\n    },\n\n    /**\n     * Sets the user credentials necessary to make requests to the platform.\n     *\n     * @public\n     * @memberof api\n     * @requires userCredentialsAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username including the application's domain.\n     * @param {string} credentials.password The user's password.\n     * @param {string} [credentials.authname] The user's authorization name.\n     * @example\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   password: '********'\n     *   authname: '********'\n     * });\n     */\n    /**\n     * Sets the username and HMAC token necessary to make requests to the platform.\n     * An HMAC token is used to verify a user via the user's authorization within an of organization.\n     * HMAC tokens are generated by using the HmacSHA1 algorithm and a key on a data object\n     * containing an `authenticationTokenRequest` object with the following properties:\n     * - subscriberId - The user's subscriber ID in the organization.\n     * - organizationId - The ID of the organization the user is a part of.\n     *\n     * @public\n     * @memberof api\n     * @requires hmacTokenAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username.\n     * @param {string} credentials.hmacToken An HMAC token for the user with the provided user ID.\n     * @example\n     * const hmacToken = HmacSHA1Algorithm({\n     *   authenticationTokenRequest: {\n     *     subscriberId: 'alfred',\n     *     organizationId: 'example.com'\n     *   }\n     * }, key)\n     *\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   hmacToken\n     * });\n     */\n    /**\n     * Provides a bearerAccessToken to any backend services that the SDK instance deals with.\n     * The bearerAccessToken provided establishes what can be accessed by the SDK.\n     *\n     * @public\n     * @memberof api\n     * @requires bearerAccessTokenAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.username The username without the application's domain.\n     * @param {string} credentials.bearerAccessToken A bearerAccessToken retrieved using the authentication APIs of the platform.\n     * @example\n     * client.setCredentials({\n     *   username: 'alfred@example.com',\n     *   bearerAccessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * });\n     */\n    /**\n     * Sets the authentication tokens necessary to make requests to the platform. The bearerAccessToken\n     * provided establishes what can be accessed by the SDK. The identity token represents who is authenticated.\n     *\n     * @public\n     * @memberof api\n     * @requires cpaasAuth\n     * @method setCredentials\n     * @param {Object} credentials The credentials object.\n     * @param {string} credentials.bearerAccessToken A bearerAccessToken retrieved using the authentication APIs of the platform.\n     *                                               The bearerAccessToken is same as the access token for the cpaas platform.\n     * @param {string} credentials.idToken An identity token retrieved using the authentication APIs of the platform.\n     * @example\n     * client.setCredentials({\n     *   bearerAccessToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...',\n     *   idToken: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'\n     * });\n     */\n    setCredentials ({ username, password, authname, hmacToken, bearerAccessToken, idToken }) {\n      log.debug(API_LOG_TAG + 'setCredentials: ', username)\n      // TODO: Refactor into multiple actions for each credential mode\n      // TODO: Validation of two authentication possibility scenario\n      dispatch(\n        actions.setCredentials({\n          username,\n          password,\n          authname,\n          hmacToken,\n          bearerAccessToken,\n          idToken\n        })\n      )\n    }\n  }\n}\n","import * as actionTypes from './actionTypes'\n\n/**\n * Creates a connect action that takes a credentials object.\n *\n * @method connect\n * @param {Object} credentials The credentials to pass to the connect action.\n * @param {Object} [options] Any parameters that aren't credentials.\n * @return {Object} A flux standard action.\n */\nexport function connect (credentials, options) {\n  return {\n    type: actionTypes.CONNECT,\n    payload: { credentials, options },\n    meta: {\n      isSensitive: true\n    }\n  }\n}\n\n/**\n * Create a set connection info action that takes a connection and user info object\n *\n * @method setConnectionInfo\n * @param {Object} $0\n * @param {Object} $0.userInfo An object representing the user information.\n * @param {Object} $0.connection A connection object. Information about how to connect to the backend services.\n * @return {Object} A flux standard action.\n */\nexport function setConnectionInfo ({ userInfo, connection }, platform) {\n  return {\n    type: actionTypes.SET_CONNECTION_INFO,\n    payload: { userInfo, connection },\n    meta: {\n      platform,\n      isSensitive: true\n    }\n  }\n}\n\n/**\n * Connection occurred action.\n * Signifies that a connection has been made to a service, but that the connection\n *      workflow has not finished yet. Intended for use in scenarios where the\n *      workflow connects to multiple services, to represent the \"intermediate\"\n *      connections.\n *\n * @method connectionOccurred\n * @param  {Object} $0\n * @param  {Object} $0.subscription\n * @param  {Object} $0.connection\n * @param  {Object} [$0.error] An error message. Only present if an error occurred.\n * @param  {string} platform The backend platform used for the connection.\n * @return {Object} A flux standard action.\n */\nexport function connectionOccurred ({ subscription, connection, error }, platform) {\n  // TODO: Is this action used anywhere?\n  var action = {\n    type: actionTypes.CONNECTION_OCCURRED,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = { subscription, connection }\n  }\n\n  return action\n}\n\n/**\n * Create a connect finished action that takes a userInfo object on success and possibly\n * an error object.\n *\n * @method connectFinished\n * @param {Object} $0\n * @param {Object} $0.subscription A subscription object. Contains what services to subscribe to.\n * @param {Object} $0.userInfo An object representing the user information.\n * @param {Object} $0.connection A connection object. Information about how to connect to the backend services.\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} platform The backend platform we are currently on.\n * @param {boolean} isSSO Boolean for whether the current connection scenario is SSO or not.\n * @return {Object} A flux standard action.\n */\nexport function connectFinished ({ subscription, userInfo, connection, error }, platform, isSSO = false) {\n  var action = {\n    type: actionTypes.CONNECT_FINISHED,\n    meta: {\n      platform,\n      isSSO,\n      isSensitive: true\n    }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = { subscription, userInfo, connection }\n  }\n\n  return action\n}\n\n/**\n * Creates a getUserDetails action\n *\n * @method getUserDetails\n * @return {Object} A flux standard action.\n */\nexport function getUserDetails () {\n  return { type: actionTypes.GET_USER_DETAILS }\n}\n\n/**\n * Create a user details received action\n *\n * @method userDetailsReceived\n * @param  {Object} userDetailsResponse An object representing the REST response of a user details request.\n * @return {Object} A flux standard action.\n */\nexport function userDetailsReceived (userDetailsResponse) {\n  var action = {\n    type: actionTypes.USER_DETAILS_RECEIVED,\n    payload: {\n      firstName: userDetailsResponse.firstName || userDetailsResponse.user_first_name,\n      user_first_name: userDetailsResponse.user_first_name || userDetailsResponse.firstName,\n      lastName: userDetailsResponse.lastName || userDetailsResponse.user_last_name,\n      user_last_name: userDetailsResponse.user_last_name || userDetailsResponse.lastName,\n      photoURL: userDetailsResponse.photoURL,\n      emailAddress: userDetailsResponse.emailAddress || userDetailsResponse.user_email,\n      user_email: userDetailsResponse.user_email || userDetailsResponse.emailAddress,\n      username: userDetailsResponse.username\n    }\n  }\n\n  return action\n}\n\n/**\n * Creates a disconnect action.\n *\n * @method disconnect\n * @return {Object} A flux standard action.\n */\nexport function disconnect () {\n  return { type: actionTypes.DISCONNECT }\n}\n\n/**\n * Create a disconnectFinished action that possibly takes an error object on failure.\n *\n * @method disconnectFinished\n * @param {Object} params\n * @param {string} [params.error] An error message. Only present if an error occurred.\n * @param {string} [params.reason] Why the disconnectFinished action is being dispatched.\n * @param {number} [params.retryAfter] The time (in seconds) when SDK should retry the operation.\n * @return {Object} A flux standard action.\n */\nexport function disconnectFinished ({ error, reason, retryAfter } = {}) {\n  const action = {\n    type: actionTypes.DISCONNECT_FINISHED,\n    payload: {}\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  }\n\n  if (reason) {\n    action.payload.reason = reason\n  }\n\n  if (retryAfter) {\n    action.payload.retryAfter = retryAfter\n  }\n  return action\n}\n\n/**\n * Action creator representing the finish of a resubscription request.\n * Payload mirrors a connect finished action.\n *\n * @method resubscribeFinished\n * @param {Object} $0\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} [$0.attemptNum] The attempt number of this resubscription.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function resubscribeFinished ({ error, attemptNum }, platform) {\n  var action = {\n    type: actionTypes.RESUBSCRIPTION_FINISHED,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n    action.payload.attemptNum = attemptNum\n  } else {\n    action.payload = {\n      attemptNum\n    }\n  }\n\n  return action\n}\n\n/**\n * Creates a refreshTokens action with the given credentials as a payload.\n *\n * @method refreshTokens\n * @param {Object} credentials A credentials object containing tokens.\n * @return {Object} A flux standard action.\n */\nexport function refreshTokens (credentials) {\n  var action = {\n    type: actionTypes.REFRESH_TOKENS,\n    payload: { credentials }\n  }\n  return action\n}\n\n/**\n * Creates a refreshTokensFinished action with connection and platform information.\n * Optionally includes an error.\n *\n * @method refreshTokensFinished\n * @param {Object} $0\n * @param {Object} [$0.error] An optional error object.\n * @param {Object} $0.connection Connection information.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function refreshTokensFinished ({ error, connection }, platform) {\n  var action = {\n    type: actionTypes.REFRESH_TOKENS_FINISHED,\n    payload: { connection },\n    meta: { platform }\n  }\n  if (error) {\n    action.error = true\n    action.payload = error\n  }\n\n  return action\n}\n\n/**\n * Represents a request to update a current subscription.\n * @method updateSubscription\n * @param  {Object} subscription Information used to update subscription.\n * @return {Object} A flux standard action.\n */\nexport function updateSubscription (subscription) {\n  return {\n    type: actionTypes.UPDATE_SUBSCRIPTION,\n    payload: subscription\n  }\n}\n\n/**\n * Represents that the current subscription has been updated.\n * @method updateSubscriptionFinished\n * @param  {Object} $0\n * @param  {Object} $0.subscription New subscription state to be updated.\n * @param  {Object} [$0.error] Error object, in the case of an error.\n * @param  {string} platform The backend platform used for the subscription.\n * @return {Object} A flux standard action.\n */\nexport function updateSubscriptionFinished ({ subscription, error }, platform) {\n  var action = {\n    type: actionTypes.UPDATE_SUBSCRIPTION_FINISH,\n    meta: { platform }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = subscription\n  }\n  return action\n}\n\n/**\n * Sets the token information in the state.\n * @method setTokens\n * @param {Object} params Dictionary object of parameters.\n * @param {string} accessToken An access token retrieved using the authentication APIs of the platform.\n * @param {string} idToken An identity token retrieved using the authentication APIs of the platform.\n * @return {Object} A flux standard action.\n */\nexport function setTokens ({ accessToken, idToken }) {\n  return {\n    type: actionTypes.SET_TOKEN,\n    payload: { accessToken, idToken }\n  }\n}\n\n/**\n * Creates a setCredentials action that takes a credentials object.\n *\n * @method setCredentials\n * @param {Object} $0\n * @param {string} $0.username The username.\n * @param {string} $0.password The user's password.\n * @param {string} $0.authname The user's authorization name.\n * @param {string} $0.hmacToken An HMAC token for the user with the provided user ID.\n * @param {string} $0.bearerAccessToken An access token retrieved using the authentication APIs of the platform.\n * @param {string} $0.idToken An identity token retrieved using the authentication APIs of the platform.\n * @return {Object} A flux standard action.\n */\nexport function setCredentials ({ username, password, authname, hmacToken, bearerAccessToken, idToken }) {\n  return {\n    type: actionTypes.SET_CREDENTIALS,\n    payload: { username, password, authname, hmacToken, bearerAccessToken, idToken },\n    meta: {\n      isSensitive: true\n    }\n  }\n}\n\n/**\n * Create a setCredentials finished action that takes a userInfo object on success and possibly\n * an error object.\n *\n * @method setCredentialsFinished\n * @param {Object} $0\n * @param {Object} $0.userInfo An object representing the user information.\n * @param {Object} $0.connection A connection object. Information about how to connect to the backend services.\n * @param {string} [$0.error] An error message. Only present if an error occurred.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function setCredentialsFinished ({ userInfo, connection, error }, platform) {\n  var action = {\n    type: actionTypes.SET_CREDENTIALS_FINISH,\n    meta: {\n      platform,\n      isSensitive: true\n    }\n  }\n\n  if (error) {\n    action.error = true\n    action.payload = error\n  } else {\n    action.payload = { userInfo, connection }\n  }\n\n  return action\n}\n\n/**\n * Creates an updateToken action with connection and platform information.\n *\n * @method updateToken\n * @param {string} token A session id retrieved after a successful subscription on the platform.\n * @param {string} platform The backend platform we are currently on.\n * @return {Object} A flux standard action.\n */\nexport function updateHmacToken (token, platform) {\n  var action = {\n    type: actionTypes.UPDATE_HMAC_TOKEN,\n    payload: token,\n    meta: {\n      platform,\n      isSensitive: true\n    }\n  }\n\n  return action\n}\n","function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","// Webrtc plugin.\nimport pluginInterface from './interface'\nimport events from './interface/events'\nimport watchManagers from './channels'\nimport * as sagas from './sagas'\nimport { miscActions } from './interface/actions'\n\n// Other plugins.\nimport { mapEvents } from '../events/interface/actions'\nimport { logManager } from '../logs'\n\n// Helpers.\nimport { autoRestart } from '../common/utils'\n\n// Libraries.\nimport initialize, { getWebRTCSupportCapabilities } from 'kandy-webrtc'\nimport { values } from 'lodash/fp'\nimport { call, fork, put } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('WEBRTC')\n\nexport function initializeStack () {\n  return initialize()\n}\n\nexport default function webRtcPlugin () {\n  const { mediaDevices, peerConnection } = getWebRTCSupportCapabilities()\n  if (!mediaDevices || !peerConnection) {\n    log.warn(\n      'Calls are not supported on this platform due to lack of WebRTC support. Media APIs will not be available.'\n    )\n    return\n  }\n\n  // Initialize the webRTC.\n  const webRTC = initialize()\n\n  function * init ({ webRTC }) {\n    yield put(mapEvents(events))\n\n    // Wrap the webrtc sagas in a function that provides them with the webRTC stack.\n    const wrappedSagas = values(sagas).map(saga => {\n      return autoRestart(() => saga(webRTC.managers))\n    })\n\n    // Run all of the sagas.\n    for (const saga of wrappedSagas) {\n      yield fork(saga)\n    }\n\n    // Watch for events from the webRTC stack.\n    // TODO: Don't also pass in the entire stack.\n    yield fork(watchManagers, webRTC.managers, webRTC)\n\n    // Use the webRTC stack to check the browser details.\n    const details = yield call([webRTC, 'getBrowserDetails'])\n    log.info(`Browser details: ${details.browser}, version ${details.version}.`)\n    yield put(miscActions.setBrowserDetails(details))\n  }\n\n  return {\n    name: pluginInterface.name,\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer,\n    init,\n    shared: {\n      webRTC\n    }\n  }\n}\n","import api from './api'\nimport reducer from './reducers'\n\nexport default {\n  name: 'webrtc',\n  api,\n  reducer\n}\n","// Webrtc plugin.\nimport { getBrowserDetails } from '../selectors'\n\n// Namespaced APIs.\nimport mediaAPI from './media'\n\nimport { logManager, API_LOG_TAG } from '../../../logs'\n\nconst log = logManager.getLogger('WEBRTC')\n\n/**\n * Public API for the webRTC plugin.\n * @method api\n * @return {Object}\n */\nexport default function api (context) {\n  return {\n    media: mediaAPI(context),\n\n    /**\n     * Retrieve information about the browser being used.\n     *\n     * Browser information being defined indicates that the browser supports\n     *    basic webRTC scenarios.\n     * @public\n     * @memberof api\n     * @method getBrowserDetails\n     * @return {Object} Object containing `browser` and `version` information.\n     * @example\n     * const details = client.getBrowserDetails()\n     *\n     * log(`Browser in use: ${details.browser}, version ${details.version}.`)\n     */\n    getBrowserDetails () {\n      log.debug(API_LOG_TAG + 'getBrowserDetails')\n      return getBrowserDetails(context.getState())\n    }\n  }\n}\n","// Webrtc plugin.\nimport { trackActions, deviceActions } from '../actions'\nimport { getDevices, getMediaById, getTrackById } from '../selectors'\n\nimport { logManager, API_LOG_TAG } from '../../../logs'\n\nconst log = logManager.getLogger('MEDIA')\n\n/**\n * Media related APIs.\n * @method mediaAPI\n * @param  {Function} dispatch Redux dispatch.\n * @param  {Function} getState Redux getState.\n * @return {Object}\n */\nexport default function mediaAPI ({ dispatch, getState }) {\n  return {\n    /**\n     * Retrieves the available media devices for use.\n     *\n     * The {@link media.event:devices:change devices:change} event will be\n     *    emitted when the available media devices have changed.\n     *\n     * @public\n     * @static\n     * @memberof media\n     * @method getDevices\n     * @return {Object} The lists of camera, microphone, and speaker devices.\n     */\n    getDevices () {\n      log.debug(API_LOG_TAG + 'media.getDevices')\n      return getDevices(getState())\n    },\n\n    /**\n     * Retrieves an available Media object with a specific Media ID.\n     * @public\n     * @static\n     * @memberof media\n     * @method getById\n     * @param  {string} mediaId The ID of the Media to retrieve.\n     * @return {call.MediaObject} A Media object.\n     */\n    getById (mediaId) {\n      log.debug(API_LOG_TAG + 'media.getById: ', mediaId)\n      return getMediaById(getState(), mediaId)\n    },\n\n    /**\n     * Retrieve an available Track object with a specific Track ID.\n     * @public\n     * @static\n     * @memberof media\n     * @method getTrackById\n     * @param  {string} trackId The ID of the Track to retrieve.\n     * @return {call.TrackObject} A Track object.\n     */\n    getTrackById (trackId) {\n      log.debug(API_LOG_TAG + 'media.getTrackById: ', trackId)\n      return getTrackById(getState(), trackId)\n    },\n\n    /**\n     * Requests permission to access media devices on the end-user's machine.\n     *\n     * This API will trigger the browser to ask the end-user for permission to\n     *    access their camera and/or microphone. These permissions are\n     *    needed for the SDK to read information about the devices (the label,\n     *    for example) and for using the devices for a call.\n     *\n     * If the browser does not yet have permission, it will prompt the end-user\n     *    with a small pop-up window, giving the user a chance to allow/deny the\n     *    permissions. The behaviour of this pop-up window differs slightly\n     *    based on the browser; it may automatically save the user's decision\n     *    (such as in Chrome and Safari) or it may require the user to choose\n     *    whether their decision should be saved (such as in Firefox).\n     *\n     * This API is not required for proper usage of media and/or calls, but\n     *    helps to prepare a user before a call is made or received. It allows\n     *    an application to prompt the user for device permissions when it is\n     *    convenient for them, rather than during call setup. If the user saves\n     *    their decision, they will not be prompted again when the SDK accesses\n     *    those devices for a call.\n     *\n     * For device information, the {@link media.getDevices} API will retrieve\n     *    the list of media devices available for the SDK to use. If this list\n     *    is empty, or is missing information, it is likely that the browser\n     *    does not have permission to access the device's information. We\n     *    recommend using the {@link media.initializeDevices} API in this\n     *    scenario if you would like to allow the end-user to select which\n     *    device(s) they would like to use when they make a call, rather than\n     *    using the system default.\n     *\n     * The SDK will emit a {@link media.event:devices:change devices:change}\n     *    event when the operation is successful or a\n     *    {@link media.event:devices:error devices:error} event if an error is\n     *    encountered.\n     * @public\n     * @static\n     * @memberof media\n     * @method initializeDevices\n     * @param {Object} [constraints]\n     * @param {boolean} [constraints.audio=true] Whether to ask for audio device permissions.\n     * @param {boolean} [constraints.video=true] Whether to ask for video device permissions.\n     * @example\n     * // The SDK will ask for both audio and video permissions by default.\n     * client.media.initializeDevices()\n     *\n     * // The SDK will only ask for audio permissions.\n     * client.media.initializeDevices({ audio: true, video: false })\n     */\n    initializeDevices (constraints) {\n      log.debug(API_LOG_TAG + 'media.initializeDevices: ', constraints)\n      const browserConstraints = {\n        audio: constraints === undefined ? true : constraints.audio,\n        video: constraints === undefined ? true : constraints.video\n      }\n      dispatch(deviceActions.initializeDevice(browserConstraints))\n    },\n    /**\n     * Render Media Tracks in a container.\n     *\n     * The container is specified by providing a CSS selector string that\n     *    corresponds to the HTMLElement to act as the container.\n     * @public\n     * @static\n     * @memberof media\n     * @method renderTracks\n     * @param  {Array<string>} trackIds List of Track IDs to be rendered.\n     * @param  {string} cssSelector A CSS selector string that uniquely\n     *    identifies an element. Ensure that special characters are properly\n     *    escaped.\n     * @param  {Object} [options] Additional options for rendering the tracks.\n     * @param  {string} [options.speakerId] The speaker's Device ID to use for audio tracks.\n     * @example\n     * // When a Call receives a new track, render it.\n     * client.on('call:newTrack', function (params) {\n     *    const track = client.media.getTrackById(params.trackId)\n     *    const container = params.local ? localContainer : remoteContainer\n     *\n     *    // Render the Call's new track when it first becomes available.\n     *    client.media.renderTracks([ track.trackId ], container)\n     * })\n     */\n    renderTracks (trackIds, cssSelector, options = {}) {\n      log.debug(API_LOG_TAG + 'media.renderTracks: ', trackIds, cssSelector, options)\n      dispatch(\n        trackActions.renderTracks(trackIds, {\n          selector: cssSelector,\n          ...options\n        })\n      )\n    },\n\n    /**\n     * Remove Media Tracks from a container.\n     *\n     * The container is specified by providing a CSS selector string that\n     *    corresponds to the HTMLElement to act as the container.\n     * @public\n     * @static\n     * @memberof media\n     * @method removeTracks\n     * @param  {Array<string>} trackIds List of Track IDs to stop being rendered.\n     * @param  {string} cssSelector A CSS selector string that uniquely\n     *    identifies an element. Ensure that special characters are properly\n     *    escaped.\n     */\n    removeTracks (trackIds, cssSelector) {\n      log.debug(API_LOG_TAG + 'media.removeTracks: ', trackIds, cssSelector)\n      dispatch(trackActions.removeTracks(trackIds, { selector: cssSelector }))\n    },\n\n    /**\n     * Mutes the specified Tracks at their media source.\n     *\n     * Prevents media from being received for the Tracks. Audio Tracks will\n     *    become silent and video Tracks will be a black frame.\n     *\n     * If a local Track being sent in a Call is muted, the Track will be\n     *    noticeably muted for the remote user. If a remote Track received in a\n     *    call is muted, the result will only be noticeable locally.\n     *\n     * The SDK will emit a {@link media.event:media:muted media:muted} event\n     *    when a Track has been muted.\n     * @public\n     * @static\n     * @memberof media\n     * @method muteTracks\n     * @param  {Array<string>} trackIds List of Track IDs.\n     */\n    muteTracks (trackIds) {\n      log.debug(API_LOG_TAG + 'media.muteTracks: ', trackIds)\n      dispatch(trackActions.muteTracks(trackIds))\n    },\n\n    /**\n     * Unmutes the specified Tracks.\n     *\n     * Media will resume as normal for the Tracks.\n     *\n     * The SDK will emit a {@link media.event:media:unmuted media:unmuted} event\n     *    when a Track has been unmuted.\n     * @public\n     * @static\n     * @memberof media\n     * @method unmuteTracks\n     * @param  {Array<string>} trackIds List of Track IDs.\n     */\n    unmuteTracks (trackIds) {\n      log.debug(API_LOG_TAG + 'media.unmuteTracks: ', trackIds)\n      dispatch(trackActions.unmuteTracks(trackIds))\n    }\n  }\n}\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\nexport function devicesChanged (devices) {\n  return {\n    type: actionTypes.DEVICES_CHANGE,\n    payload: devices\n  }\n}\n\nexport function initializeDevice (browserConstraints) {\n  return {\n    type: actionTypes.INITIALIZE_DEVICES,\n    payload: browserConstraints\n  }\n}\n\n/**\n * The finishing action which follows the INITIALIZE_DEVICES action\n * @param {Object} $0\n * @param {Object} [$0.devices] The device object.\n * @param {Object} [$0.error] An error object. Only present if an error occurred.\n * @returns {Object} A flux standard action representing the INITIALIZE_DEVICES_FINISH action.\n */\nexport function initializeDeviceFinish ({ devices, error }) {\n  return {\n    payload: error || devices,\n    error: Boolean(error),\n    type: actionTypes.INITIALIZE_DEVICES_FINISH\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\nfunction trackManagerHelper (type, trackId, payload = {}, meta = {}) {\n  return {\n    type,\n    payload: {\n      ...payload,\n      trackId\n    },\n    meta\n  }\n}\n\nexport function trackAdded (trackId, params) {\n  return trackManagerHelper(actionTypes.TRACK_ADDED, trackId, params)\n}\n\nexport function trackRemoved (trackId, params) {\n  return trackManagerHelper(actionTypes.TRACK_REMOVED, trackId, params)\n}\n\nfunction trackHelper (type, payload = {}, meta = {}) {\n  const action = {\n    type,\n    payload,\n    meta\n  }\n\n  if (payload.error) {\n    action.error = true\n  }\n\n  return action\n}\n\nexport function muteTracks (trackIds) {\n  return trackHelper(actionTypes.MUTE_TRACKS, trackIds)\n}\n\nexport function muteTracksFinish (trackIds) {\n  return trackHelper(actionTypes.MUTE_TRACKS_FINISH, { trackIds: trackIds })\n}\n\nexport function unmuteTracks (trackIds) {\n  return trackHelper(actionTypes.UNMUTE_TRACKS, trackIds)\n}\n\nexport function unmuteTracksFinish (trackIds) {\n  return trackHelper(actionTypes.UNMUTE_TRACKS_FINISH, { trackIds: trackIds })\n}\n\nexport function trackSourceMuted (trackIds, params) {\n  return trackHelper(actionTypes.TRACK_SOURCE_MUTED, { trackIds: trackIds, ...params })\n}\n\nexport function trackSourceUnmuted (trackIds, params) {\n  return trackHelper(actionTypes.TRACK_SOURCE_UNMUTED, { trackIds: trackIds, ...params })\n}\n\nexport function renderTracks (trackIds, params) {\n  return trackHelper(actionTypes.RENDER_TRACKS, {\n    trackIds,\n    ...params\n  })\n}\n\nexport function renderTracksFinish (trackIds, params) {\n  return trackHelper(actionTypes.RENDER_TRACKS_FINISH, {\n    trackIds,\n    ...params\n  })\n}\n\nexport function removeTracks (trackIds, params) {\n  return trackHelper(actionTypes.REMOVE_TRACKS, {\n    trackIds,\n    ...params\n  })\n}\n\nexport function removeTracksFinish (trackIds, params) {\n  return trackHelper(actionTypes.REMOVE_TRACKS_FINISH, {\n    trackIds,\n    ...params\n  })\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { isEmpty } from 'lodash/fp'\n\nfunction sessionActionHelper (type, id, payload = {}, meta = {}) {\n  const action = {\n    type,\n    payload: {\n      ...payload,\n      id\n    }\n  }\n\n  // Only have meta and error properties on the action if they're needed.\n  if (!isEmpty(meta)) {\n    action.meta = meta\n  }\n  if (payload.error) {\n    action.error = true\n  }\n  return action\n}\n\nexport function sessionAdded (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_ADDED, id, params)\n}\n\nexport function sessionRemoved (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_REMOVED, id, params)\n}\n\nexport function sessionNewTrack (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_NEW_TRACK, id, params)\n}\n\nexport function sessionTrackRemoved (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_TRACK_REMOVED, id, params)\n}\n\nexport function sessionTrackEnded (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_TRACK_ENDED, id, params)\n}\n\nexport function sessionChange (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_CHANGE, id, params)\n}\n\nexport function sessionTrackReplaced (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_TRACK_REPLACED, id, params)\n}\n\nexport function sessionIceConnectionStateChange (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_ICE_CONNECTION_STATE_CHANGE, id, params)\n}\n\nexport function sessionIceGatheringStateChange (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_ICE_GATHERING_STATE_CHANGE, id, params)\n}\n\nexport function sessionIceCandidateCollected (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_ICE_CANDIDATE_COLLECTED, id, params)\n}\n\nexport function sessionIceCollectionScheduledCheck (id, params) {\n  return sessionActionHelper(actionTypes.SESSION_ICE_COLLECTION_SCHEDULED_CHECK, id, params)\n}\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { isEmpty } from 'lodash/fp'\n\nfunction mediaActionHelper (type, id, payload = {}, meta = {}) {\n  const action = {\n    type,\n    payload: {\n      ...payload,\n      id\n    }\n  }\n\n  // Only have meta and error properties on the action if they're needed.\n  if (!isEmpty(meta)) {\n    action.meta = meta\n  }\n  if (payload.error) {\n    action.error = true\n  }\n  return action\n}\n\nexport function newMedia (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_NEW, id, params)\n}\n\nexport function removedMedia (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_REMOVED, id, params)\n}\n\nexport function mediaNewTrack (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_NEW_TRACK, id, params)\n}\n\nexport function mediaTrackRemoved (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_TRACK_REMOVED, id, params)\n}\n\nexport function mediaTrackEnded (id, params) {\n  return mediaActionHelper(actionTypes.MEDIA_TRACK_ENDED, id, params)\n}\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n/**\n * Action creator\n * @method setBrowserDetails\n * @param  {Object} details\n * @param  {string} details.browser\n * @param  {number} details.version\n * @return {Object} A Flux-Standard-action.\n */\nexport function setBrowserDetails (details) {\n  return {\n    type: actionTypes.SET_BROWSER_DETAILS,\n    payload: details\n  }\n}\n","import devices from './devices'\nimport media from './media'\nimport tracks from './tracks'\nimport sessions from './sessions'\nimport browser from './browser'\n\n/**\n * Webrtc plugin top-level reducer.\n * @method reducer\n * @param  {Object} [state={}]\n * @param  {Object} action\n * @return {Object}\n */\nexport default function (state = {}, action) {\n  return {\n    devices: devices(state.devices, action),\n    tracks: tracks(state.tracks, action),\n    sessions: sessions(state.sessions, action),\n    media: media(state.media, action),\n    browser: browser(state.browser, action)\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\n\n/**\n * The devices substate keeps tracks the of the media devices available for use.\n */\nconst reducers = {}\n\n// Replace old devices with newly checked devices.\nreducers[actionTypes.DEVICES_CHANGE] = {\n  next (state, action) {\n    return action.payload\n  }\n}\n\n// Replace with newly checked devices.\nreducers[actionTypes.INITIALIZE_DEVICES_FINISH] = {\n  next (state, action) {\n    return action.payload\n  }\n}\n\n// The initial state of the reducer.\nconst defaultState = {\n  camera: [],\n  microphone: [],\n  speaker: []\n}\n\nconst reducer = handleActions(reducers, defaultState)\nexport default reducer\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { combineActions, handleActions } from 'redux-actions'\nimport { concat, remove } from 'lodash/fp'\n\n// Top-tier reducers: Handles the whole state.\nconst reducers = {}\n\n// Add the new media object to state.\nreducers[actionTypes.MEDIA_NEW] = {\n  next (state, action) {\n    return concat(state, {\n      ...action.payload\n    })\n  }\n}\n\n// Remove the media object from state.\nreducers[actionTypes.MEDIA_REMOVED] = {\n  next (state, action) {\n    const removeMedia = media => media.id === action.payload.id\n    return remove(removeMedia)(state)\n  }\n}\n\n// Media-tier reducers: Handles only a specific portion of the substate.\nconst mediaReducers = {}\n\nmediaReducers[actionTypes.MEDIA_NEW_TRACK] = {\n  next (state, action) {\n    return {\n      ...state,\n      tracks: concat(state.tracks, [action.payload.trackId])\n    }\n  }\n}\n\n// Remove specified track from media state.\nmediaReducers[actionTypes.MEDIA_TRACK_REMOVED] = {\n  next (state, action) {\n    const removeTrack = trackId => trackId === action.payload.trackId\n    return {\n      ...state,\n      tracks: remove(removeTrack, state.tracks)\n    }\n  }\n}\n\n// Remove specified track from media state.\nmediaReducers[actionTypes.MEDIA_TRACK_ENDED] = {\n  next (state, action) {\n    const removeTrack = trackId => trackId === action.payload.trackId\n    return {\n      ...state,\n      tracks: remove(removeTrack, state.tracks)\n    }\n  }\n}\nconst mediaReducer = handleActions(mediaReducers, {})\n\nconst specificMediaActions = combineActions(\n  actionTypes.MEDIA_NEW_TRACK,\n  actionTypes.MEDIA_TRACK_REMOVED,\n  actionTypes.MEDIA_TRACK_ENDED\n)\n\nreducers[specificMediaActions] = (state, action) => {\n  return state.map(media => {\n    if (media.id === action.payload.id) {\n      return mediaReducer(media, action)\n    } else {\n      return media\n    }\n  })\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\nimport { concat, remove } from 'lodash/fp'\n\nconst reducers = {}\n\n// Add the new Track to state.\nreducers[actionTypes.TRACK_ADDED] = {\n  next (state, action) {\n    return concat(state, action.payload)\n  }\n}\n\n// Remove the ended Track from state.\nreducers[actionTypes.TRACK_REMOVED] = {\n  next (state, action) {\n    const removeTrack = track => track.trackId === action.payload.trackId\n    return remove(removeTrack)(state)\n  }\n}\n\n// Store the selector used for rendering the track.\nreducers[actionTypes.RENDER_TRACKS_FINISH] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          containers: concat(track.containers, action.payload.selector)\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\n// Remove the selector used for rendering the track.\nreducers[actionTypes.REMOVE_TRACKS_FINISH] = {\n  next (state, action) {\n    // TODO: Only remove one container (instead of all that match)?\n    const removeContainer = container => container === action.payload.selector\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          containers: remove(removeContainer)(track.containers)\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\n// TODO: Update this on an action from the track channel?\nreducers[actionTypes.MUTE_TRACKS_FINISH] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          muted: true\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\nreducers[actionTypes.UNMUTE_TRACKS_FINISH] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          muted: false\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\nreducers[actionTypes.TRACK_SOURCE_MUTED] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          sourceMuted: true\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\nreducers[actionTypes.TRACK_SOURCE_UNMUTED] = {\n  next (state, action) {\n    return state.map(track => {\n      if (action.payload.trackIds.includes(track.trackId)) {\n        return {\n          ...track,\n          sourceMuted: false\n        }\n      } else {\n        return track\n      }\n    })\n  }\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","// Webrtc plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { combineActions, handleActions } from 'redux-actions'\nimport { concat, remove } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.SESSION_ADDED] = {\n  next (state, action) {\n    return concat(state, action.payload)\n  }\n}\n\nreducers[actionTypes.SESSION_REMOVED] = {\n  next (state, action) {\n    const removeSession = session => session.id === action.payload.id\n    return remove(removeSession)(state)\n  }\n}\n\nconst sessionReducers = {}\n\nsessionReducers[actionTypes.SESSION_NEW_TRACK] = {\n  next (state, action) {\n    if (action.payload.local) {\n      return {\n        ...state,\n        localTracks: concat(state.localTracks, [action.payload.trackId])\n      }\n    } else {\n      return {\n        ...state,\n        remoteTracks: concat(state.remoteTracks, [action.payload.trackId])\n      }\n    }\n  }\n}\n\nsessionReducers[actionTypes.SESSION_TRACK_REMOVED] = {\n  next (state, action) {\n    const removeTrack = trackId => trackId === action.payload.trackId\n    if (action.payload.local) {\n      return {\n        ...state,\n        localTracks: remove(removeTrack, state.localTracks)\n      }\n    } else {\n      return {\n        ...state,\n        remoteTracks: remove(removeTrack, state.remoteTracks)\n      }\n    }\n  }\n}\n\nsessionReducers[actionTypes.SESSION_TRACK_ENDED] = {\n  next (state, action) {\n    const removeTrack = trackId => trackId === action.payload.trackId\n    if (action.payload.local) {\n      return {\n        ...state,\n        localTracks: remove(removeTrack, state.localTracks)\n      }\n    } else {\n      return {\n        ...state,\n        remoteTracks: remove(removeTrack, state.remoteTracks)\n      }\n    }\n  }\n}\n\nsessionReducers[actionTypes.SESSION_TRACK_REPLACED] = {\n  next (state, action) {\n    // Remove old track id if it still exists\n    const removeTrack = trackId => trackId === action.payload.oldTrackId\n    const newLocalTracks = remove(removeTrack, state.localTracks)\n    // Add new track id if it doesn't exist\n    if (newLocalTracks.indexOf(action.payload.trackId) === -1) {\n      newLocalTracks.push(action.payload.trackId)\n    }\n    return {\n      ...state,\n      localTracks: newLocalTracks\n    }\n  }\n}\n\nconst sessionReducer = handleActions(sessionReducers, {})\n\nconst specificSessionActions = combineActions(\n  actionTypes.SESSION_NEW_TRACK,\n  actionTypes.SESSION_TRACK_REMOVED,\n  actionTypes.SESSION_TRACK_ENDED,\n  actionTypes.SESSION_TRACK_REPLACED\n)\n\nreducers[specificSessionActions] = (state, action) => {\n  return state.map(session => {\n    if (session.id === action.payload.id) {\n      return sessionReducer(session, action)\n    } else {\n      return session\n    }\n  })\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\n\n/**\n * The devices substate keeps tracks the of the media devices available for use.\n */\nconst reducers = {}\n\n// Replace old devices with newly checked devices.\nreducers[actionTypes.SET_BROWSER_DETAILS] = {\n  next (state, action) {\n    return action.payload\n  }\n}\n\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","import deviceEvents from './devices'\nimport trackEvents from './tracks'\n\nexport default {\n  ...deviceEvents,\n  ...trackEvents\n}\n","import * as eventTypes from '../eventTypes'\nimport * as actionTypes from '../actionTypes'\n\nconst events = {}\n\n// Media devices have changed.\nevents[actionTypes.DEVICES_CHANGE] = action => {\n  return {\n    type: eventTypes.DEVICES_CHANGED\n  }\n}\n\nevents[actionTypes.INITIALIZE_DEVICES_FINISH] = action => {\n  if (action.error) {\n    return {\n      type: eventTypes.INITIALIZE_DEVICES_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.DEVICES_CHANGED\n    }\n  }\n}\n\nexport default events\n","import * as eventTypes from '../eventTypes'\nimport * as actionTypes from '../actionTypes'\n\nconst events = {}\n\nevents[actionTypes.MUTE_TRACKS_FINISH] = action => {\n  return {\n    type: eventTypes.TRACKS_MUTED,\n    args: {\n      trackIds: action.payload.trackIds,\n      tracks: action.payload.trackIds\n    }\n  }\n}\n\nevents[actionTypes.UNMUTE_TRACKS_FINISH] = action => {\n  return {\n    type: eventTypes.TRACKS_UNMUTED,\n    args: {\n      trackIds: action.payload.trackIds,\n      tracks: action.payload.trackIds\n    }\n  }\n}\n\nevents[actionTypes.TRACK_SOURCE_MUTED] = action => {\n  // Issue an event containing parameters similar to what call:trackEnded event has.\n  return {\n    type: eventTypes.TRACK_SOURCE_MUTED,\n    args: {\n      trackIds: action.payload.trackIds,\n      trackId: action.payload.trackIds[0],\n      isLocal: action.payload.isLocal,\n      id: action.payload.mediaId\n    }\n  }\n}\n\nevents[actionTypes.TRACK_SOURCE_UNMUTED] = action => {\n  // Issue an event containing parameters similar to what call:trackEnded event has.\n  return {\n    type: eventTypes.TRACK_SOURCE_UNMUTED,\n    args: {\n      trackIds: action.payload.trackIds,\n      trackId: action.payload.trackIds[0],\n      isLocal: action.payload.isLocal,\n      id: action.payload.mediaId\n    }\n  }\n}\n\nevents[actionTypes.RENDER_TRACKS_FINISH] = action => {\n  return {\n    type: eventTypes.TRACK_RENDERED,\n    args: {\n      trackIds: action.payload.trackIds,\n      selector: action.payload.selector,\n      error: action.payload.error\n    }\n  }\n}\n\nexport default events\n","// Libraries.\nimport { fork } from 'redux-saga/effects'\n\n// Manager channels.\nimport watchDeviceEvents from './devices'\nimport watchTrackManagerEvents from './trackManager'\nimport watchSessionManagerEvents from './sessionManager'\nimport watchMediaManagerEvents from './mediaManager'\n\n// Re-export each channel.\nexport { default as watchDeviceEvents } from './devices'\nexport { default as watchTrackManagerEvents } from './trackManager'\nexport { default as watchMediaManagerEvents } from './mediaManager'\n\n/**\n * Combine all of the manager channels into a single function.\n * @method watchManagers\n * @param  {Object} managers Webrtc stack managers.\n */\nexport default function * watchManagers (managers, webRTC) {\n  yield fork(watchDeviceEvents, managers.devices)\n  yield fork(watchTrackManagerEvents, managers.track)\n  yield fork(watchSessionManagerEvents, managers.sessionManager, webRTC)\n  yield fork(watchMediaManagerEvents, managers.media)\n}\n","// Webrtc plugin.\nimport { deviceActions } from '../interface/actions'\nimport { forwardAction } from '../../common/utils'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\n/**\n * Listen for events emitted from the webRTC Device Manager.\n * @method watchDeviceEvents\n * @param  {Object} manager The webRTC Device Manager.\n */\nexport default function * watchDeviceEvents (manager) {\n  /**\n   * Create an event channel between the Device Manager and redux-saga.\n   * This pushes its events into the redux-saga context.\n   * */\n  const managerChannel = eventChannel(emit => {\n    return setListeners(manager, emit)\n  })\n\n  // managerChannel will emit the Manager's events as actions,\n  //  so they can be directly dispatched.\n  yield takeEvery(managerChannel, forwardAction)\n}\n\n/**\n * Function to set-up listeners for the Device Manager events.\n * Contains the logic for how a webRTC event should be parsed\n *    before being sent elsewhere. Split into a stand-alone\n *    function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   manager The Device Manager.\n * @param  {Function} emit    Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (manager, emit, END = 'END') {\n  // Manager event handlers.\n  const change = () => {\n    // Get the latest devices after they changed, then emit the device list\n    //  upwards.\n    manager.checkDevices().then(devices => {\n      emit(deviceActions.devicesChanged(devices))\n    })\n  }\n\n  manager.on('change', change)\n\n  // Return an unsubscribe function that removes all event listeners.\n  const unsubscribe = () => {\n    manager.off('change', change)\n  }\n\n  return unsubscribe\n}\n","// Call plugin.\nimport { trackActions } from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\nimport watchTrackEvents from './track'\n\n// Libraries.\nimport { put, fork, takeEvery } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\n/**\n * Sets up event listeners for Track Manager Events.\n * The events are turned into actions and dispatched\n *    to be handled by redux elsewhere.\n * @method watchTrackManagerEvents\n * @param  {Object} manager The webRTC Track Manager.\n */\nexport default function * watchTrackManagerEvents (manager) {\n  /**\n   * Create an event channel between the Track Manager and redux-saga.\n   * This pushes its events into the redux-saga context.\n   * */\n  const managerChannel = eventChannel(emit => {\n    return setListeners(manager, emit)\n  })\n\n  // https://github.com/redux-saga/redux-saga/issues/684\n  // See user \"kuy\"'s second comment.\n  // Using takeEvery to handle actions.\n  // That way they are handled in a forked process and other actions don't get dropped.\n  yield takeEvery(managerChannel, trackManagerEventsHandler)\n}\n\nfunction * trackManagerEventsHandler ({ track, action }) {\n  // If it is a new Track, watch for its events.\n  if (action.type === actionTypes.TRACK_ADDED) {\n    yield fork(watchTrackEvents, track)\n  }\n\n  // Dispatch the action\n  yield put(action)\n}\n\n/**\n * Sets up listeners for the Track Manager events.\n * Contains logic for how specific webRTC events should be\n *    parsed before being sent elsewhere. Split into a\n *    stand-alone function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   manager The Track Manager.\n * @param  {Function} emit    Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (manager, emit, END = 'END') {\n  // Handle new Tracks.\n  const trackAdded = id => {\n    const track = manager.get(id)\n    const state = track.getState()\n\n    // Translate the track state from native WebRTC to SDK style.\n    // This is to change the \"muted\" property to be what people generally know\n    //    \"muted\" to be.\n    state.sourceMuted = state.muted\n    state.muted = !state.enabled\n\n    delete state.enabled\n    delete state.id\n\n    /**\n     * When a new track is added,\n     * update redux state's webrtc.tracks array by adding track's state into it.\n     */\n    emit({\n      track,\n      action: trackActions.trackAdded(id, state)\n    })\n  }\n\n  // Handle Tracks ending.\n  const trackRemoved = id => {\n    /**\n     * When a track has ended,\n     * update redux state's webrtc.tracks array\n     * by specifying which track to remove by providing a track id.\n     */\n    emit({\n      action: trackActions.trackRemoved(id)\n    })\n  }\n\n  manager.on('add', trackAdded)\n  manager.on('remove', trackRemoved)\n  const unsubscribe = () => {\n    manager.off('add', trackAdded)\n    manager.off('remove', trackRemoved)\n  }\n  return unsubscribe\n}\n","// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\nimport { eventChannel, END } from 'redux-saga'\nimport { trackActions } from '../interface/actions'\nimport { forwardAction } from '../../common/utils'\n\n/**\n * Sets up event listeners for a Track's events.\n * The events are turned into actions and dispatched\n *    to be handled by redux elsewhere.\n * @method watchTrackEvents\n * @param  {Object} track A Track object.\n * @param  {Object} webRTC The webRTC stack.\n */\nexport default function * watchTrackEvents (track, webRTC) {\n  /**\n   * Create an event channel between the Track and redux-saga.\n   * This \"forces\" the Track events into a redux-saga context.\n   */\n  const trackChannel = eventChannel(emit => {\n    return setListeners(track, emit, END)\n  })\n  yield takeEvery(trackChannel, forwardAction)\n}\n\n/**\n * Function to set-up listeners for a Track object's events.\n * Contains the logic for how a webRTC event should be parsed\n *    before being sent elsewhere. Split into a stand-alone\n *    function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   track A Track object.\n * @param  {Function} emit  Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (track, emit, END = 'END') {\n  // Track ended\n  const trackEnded = trackData => {\n    /**\n     * When the track ends, its channel should be ended (via `END`).\n     * The trackManager channel will handle updating state for this event.\n     */\n    emit(END)\n  }\n\n  // The track source (which affected the track identified by trackId) was muted.\n  // An example of a track source is a physical media device such as:\n  // microphone or camera.\n  const trackSourceMuted = trackData => {\n    emit(trackActions.trackSourceMuted([trackData.trackId], { mediaId: trackData.mediaId, isLocal: trackData.isLocal }))\n  }\n\n  // The track source (which affected the track identified by trackId) was unmuted.\n  const trackSourceUnmuted = trackData => {\n    emit(\n      trackActions.trackSourceUnmuted([trackData.trackId], { mediaId: trackData.mediaId, isLocal: trackData.isLocal })\n    )\n  }\n\n  track.on('ended', trackEnded)\n  track.on('muted', trackSourceMuted)\n  track.on('unmuted', trackSourceUnmuted)\n\n  const unsubscribe = () => {\n    track.off('ended', trackEnded)\n    track.off('muted', trackSourceMuted)\n    track.off('unmuted', trackSourceUnmuted)\n  }\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport { mediaActions } from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\nimport watchMediaEvents from './media'\n\n// Libraries.\nimport { put, takeEvery, fork } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\n/**\n * Sets up event listeners for Media Manager events. The events are turned into\n *    actions and dispatched to be handled by redux elsewhere.\n * @method watchMediaManagerEvents\n * @param  {Object} manager The Media Manager.\n */\nexport default function * watchMediaManagerEvents (manager) {\n  /**\n   * Create an event channel between the Media Manager and redux-saga.\n   * This pushes its events into the redux-saga context.\n   */\n  const managerChannel = eventChannel(emit => {\n    return setListeners(manager, emit)\n  })\n\n  yield takeEvery(managerChannel, mediaManagerEventsHandler)\n}\n\nfunction * mediaManagerEventsHandler ({ media, action }) {\n  // If it is a new Media, watch for its events.\n  if (action.type === actionTypes.MEDIA_NEW) {\n    yield fork(watchMediaEvents, media)\n  }\n\n  // Dispatch the action\n  yield put(action)\n}\n\n/**\n * Function to set-up listeners for the Media Manager events.\n * Contains the logic for how a webRTC event should be parsed\n *    before being sent elsewhere. Split into a stand-alone\n *    function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   manager The Media Manager.\n * @param  {Function} emit    Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (manager, emit, END = 'END') {\n  const newMedia = id => {\n    const media = manager.get(id)\n    /**\n     * When a new media has been added,\n     * update redux state's webrtc.media array by adding in the new media object\n     * (List of tracks will just be a list of track ids).\n     */\n    emit({\n      media,\n      action: mediaActions.newMedia(id, {\n        local: media.getState().isLocal,\n        tracks: media.getTracks().map(track => track.id)\n      })\n    })\n  }\n\n  const removedMedia = id => {\n    /**\n     * When a media has been removed,\n     * update redux state's webrtc.media array\n     * by removing the media with the specified media id.\n     */\n    emit({\n      action: mediaActions.removedMedia(id)\n    })\n  }\n\n  manager.on('media:new', newMedia)\n  manager.on('media:removed', removedMedia)\n\n  const unsubscribe = () => {\n    manager.off('media:new', newMedia)\n    manager.off('media:removed', removedMedia)\n  }\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport { mediaActions } from '../interface/actions'\nimport { forwardAction } from '../../common/utils'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\nimport { eventChannel, END } from 'redux-saga'\n\n/**\n * Sets up event listeners for a Media's events.\n * The events are turned into actions and dispatched\n *    to be handled by redux elsewhere.\n * @method watchMediaEvents\n * @param  {Object} media A Media object.\n * @param  {Object} webRTC The webRTC stack.\n */\nexport default function * watchMediaEvents (media, webRTC) {\n  /**\n   * Create an event channel between the Media and redux-saga.\n   * This \"forces\" the Media events into a redux-saga context.\n   */\n  const mediaChannel = eventChannel(emit => {\n    return setListeners(media, emit, END)\n  })\n  yield takeEvery(mediaChannel, forwardAction)\n}\n\n/**\n * Function to set-up listeners for a Media object's events.\n * Contains the logic for how a webRTC event should be parsed\n *    before being sent elsewhere. Split into a stand-alone\n *    function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   media A Media object.\n * @param  {Function} emit  Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (media, emit, END = 'END') {\n  // Media received a new track.\n  const newTrack = ({ mediaId, trackId }) => {\n    /**\n     * When a new track has been added,\n     * update redux state's webrtc.media.tracks array with the new trackId.\n     */\n    emit(mediaActions.mediaNewTrack(mediaId, { trackId }))\n  }\n\n  // TODO: Handle media's 'track:removed' event here.\n  //  In unified-plan, when a track is removed this event is triggered.\n  const trackRemoved = trackId => {\n    emit(mediaActions.mediaTrackRemoved(media.id, { trackId }))\n  }\n\n  const trackEnded = ({ mediaId, trackId }) => {\n    /**\n     * When a track has ended,\n     * update redux state's webrtc.media.tracks array\n     * by removing the specified trackId.\n     */\n    emit(mediaActions.mediaTrackEnded(mediaId, { trackId }))\n  }\n  const mediaStopped = id => {\n    /**\n     * When the media is stopped, its channel should be ended (via `END`).\n     * The mediaManager channel will handle updating state for this event.\n     */\n    emit(END)\n  }\n\n  media.on('track:new', newTrack)\n  media.on('track:removed', trackRemoved)\n  media.on('track:ended', trackEnded)\n  media.on('media:stopped', mediaStopped)\n\n  const unsubscribe = () => {\n    media.off('track:new', newTrack)\n    media.off('track:removed', trackRemoved)\n    media.off('track:ended', trackEnded)\n    media.off('media:stopped', mediaStopped)\n  }\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport { sessionActions } from '../interface/actions'\nimport * as actionTypes from '../interface/actionTypes'\nimport watchSessionEvents from './session'\n\n// Libraries.\nimport { fork, put, take } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\n/**\n * Sets up event listeners for Session Manager Events.\n * The events are turned into actions and dispatched\n *    to be handled by redux elsewhere.\n * @method watchSessionManagerEvents\n * @param  {Object} manager The webRTC Session Manager.\n * @param  {Object} webRTC The webRTC stack.\n */\nexport default function * watchSessionManagerEvents (manager, webRTC) {\n  /**\n   * Create an event channel between the Session Manager and redux-saga.\n   * This pushes its events into the redux-saga context.\n   */\n  const managerChannel = eventChannel(emit => {\n    return setListeners(manager, emit)\n  })\n\n  while (true) {\n    const { session, action } = yield take(managerChannel)\n\n    // If it is a new Session, watch for its events.\n    if (action.type === actionTypes.SESSION_ADDED) {\n      yield fork(watchSessionEvents, session, webRTC)\n    }\n\n    // Dispatch the action directly.\n    yield put(action)\n  }\n}\n\n/**\n * Sets up listeners for the Session Manager events.\n * Contains logic for how specific webRTC events should be\n *    parsed before being sent elsewhere. Split into a\n *    stand-alone function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   manager The Session Manager.\n * @param  {Function} emit    Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (manager, emit, END = 'END') {\n  // Handle new Session.\n  const sessionAdded = id => {\n    const session = manager.get(id)\n    const state = session.getState()\n    delete state.id\n\n    emit({\n      session: session,\n      action: sessionActions.sessionAdded(id, state)\n    })\n  }\n\n  // Handle Sessions ending.\n  const sessionRemoved = id => {\n    emit({\n      action: sessionActions.sessionRemoved(id)\n    })\n  }\n\n  manager.on('session:new', sessionAdded)\n  manager.on('session:removed', sessionRemoved)\n  const unsubscribe = () => {\n    manager.off('session:new', sessionAdded)\n    manager.off('session:removed', sessionRemoved)\n  }\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport { sessionActions } from '../interface/actions'\nimport { forwardAction } from '../../common/utils'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\nimport { eventChannel } from 'redux-saga'\n\n/**\n * Sets up event listeners for a Session's events.\n * The events are turned into actions and dispatched\n *    to be handled by redux elsewhere.\n * @method watchSessionEvents\n * @param  {Object} session The Session object.\n * @param  {Object} webRTC The webRTC stack.\n */\nexport default function * watchSessionEvents (session, webRTC) {\n  /**\n   * Create an event channel between the Session and redux-saga.\n   * This \"forces\" the Session events into a redux-saga context.\n   */\n  const sessionChannel = eventChannel(emit => {\n    return setListeners(session, emit)\n  })\n  // sessionChannel will emit the Session's events as actions, so dispatch\n  //    them to be handled by sagas.\n  // TODO: If the event is \"Session gone\", should close/unsubscribe the channel.\n  yield takeEvery(sessionChannel, forwardAction)\n}\n\n/**\n * Function to set-up listeners for a Session object's events.\n * Contains the logic for how a webRTC event should be parsed\n *    before being sent elsewhere. Split into a stand-alone\n *    function in order to be re-usable.\n * @method setListeners\n * @param  {Object}   session A Session object.\n * @param  {Function} emit  Function that receives the parsed events.\n * @param  {Any}      [END='END'] The \"end of lifetime\" symbol.\n * @return {Function} The unsubscribe function.\n */\nexport function setListeners (session, emit, END = 'END') {\n  // Session received a new track.\n  const newTrack = ({ local, trackId }) => {\n    /**\n     * When a new track has been added,\n     * update redux state's webrtc.session.localTracks/remoteTracks array\n     * with the new trackId.\n     * ('local' boolean will determine whether to update localTracks or remoteTracks)\n     */\n    emit(\n      sessionActions.sessionNewTrack(session.id, {\n        local,\n        trackId\n      })\n    )\n  }\n\n  const trackRemoved = ({ local, trackId }) => {\n    emit(\n      sessionActions.sessionTrackRemoved(session.id, {\n        local,\n        trackId\n      })\n    )\n  }\n\n  const trackEnded = ({ local, trackId, performRenegotiation }) => {\n    /**\n     * When a track has ended,\n     * update redux state's webrtc.session.localTracks/remoteTracks array\n     * by removing the specified trackId.\n     * ('local' boolean will determine whether to update localTracks or remoteTracks)\n     */\n    emit(\n      sessionActions.sessionTrackEnded(session.id, {\n        local,\n        trackId,\n        performRenegotiation\n      })\n    )\n  }\n\n  const trackReplaced = ({ oldTrackId, trackId }) => {\n    emit(\n      sessionActions.sessionTrackReplaced(session.id, {\n        oldTrackId,\n        trackId\n      })\n    )\n  }\n\n  const iceConnectionStateChange = obj => {\n    emit(\n      sessionActions.sessionIceConnectionStateChange(session.id, {\n        iceConnectionState: obj.iceConnectionState\n      })\n    )\n  }\n\n  const iceCandidateCollected = obj => {\n    emit(sessionActions.sessionIceCandidateCollected(session.id, obj))\n  }\n\n  const iceGatheringStateChange = obj => {\n    emit(sessionActions.sessionIceGatheringStateChange(session.id, obj))\n  }\n\n  const iceCollectionScheduledCheck = obj => {\n    emit(sessionActions.sessionIceCollectionScheduledCheck(session.id, obj))\n  }\n\n  // Generic \"something changed\" handler.\n  // TODO: Either use this for other events or remove it.\n  // eslint-disable-next-line no-unused-vars\n  const onChange = () => {\n    const state = session.getState()\n\n    emit(\n      sessionActions.sessionChange(session.id, {\n        id: state.id,\n        localTracks: state.localTracks.map(track => track.id),\n        remoteTracks: state.remoteTracks.map(track => track.id)\n      })\n    )\n  }\n\n  session.on('new:track', newTrack)\n  session.on('track:removed', trackRemoved)\n  session.on('track:ended', trackEnded)\n  session.on('track:replaced', trackReplaced)\n  session.on('peer:iceConnectionStateChange', iceConnectionStateChange)\n  session.on('peer:iceGatheringStateChange', iceGatheringStateChange)\n  session.on('peer:iceCandidateCollected', iceCandidateCollected)\n  session.on('peer:iceCollectionScheduledCheck', iceCollectionScheduledCheck)\n\n  const unsubscribe = () => {\n    session.off('new:track', newTrack)\n    session.off('track:removed', trackRemoved)\n    session.off('track:ended', trackEnded)\n    session.off('track:replaced', trackReplaced)\n    session.off('peer:iceConnectionStateChange', iceConnectionStateChange)\n    session.off('peer:iceGatheringStateChange', iceGatheringStateChange)\n    session.off('peer:iceCandidateCollected', iceCandidateCollected)\n    session.off('peer:iceCollectionScheduledCheck', iceCollectionScheduledCheck)\n  }\n  return unsubscribe\n}\n","// Webrtc plugin.\nimport * as mediaSagas from './media'\nimport * as logSagas from './logs'\nimport * as actionTypes from '../interface/actionTypes'\n\n// Other plugins.\nimport { HANDLERS_CHANGE, LEVELS_CHANGE } from '../../logs/interface/actionTypes'\nimport { getLevel } from '../../logs/interface/selectors'\n\n// Libraries.\nimport { call, select, takeEvery } from 'redux-saga/effects'\n\n/**\n * Track operations.\n */\n\n/**\n * Handle rendering Track objects.\n * @method renderTracks\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * renderTracks (webRTC) {\n  yield takeEvery(actionTypes.RENDER_TRACKS, mediaSagas.renderTracks, webRTC)\n}\n\n/**\n * Handle removing Track objects.\n * @method removeTracks\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * removeTracks (webRTC) {\n  yield takeEvery(actionTypes.REMOVE_TRACKS, mediaSagas.removeTracks, webRTC)\n}\n\n/**\n * Handle muting tracks.\n * @method muteTracks\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * muteTracks (webRTC) {\n  yield takeEvery(actionTypes.MUTE_TRACKS, mediaSagas.muteTracks, webRTC)\n}\n\n/**\n * Handle unmuting tracks.\n * @method unmuteTracks\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * unmuteTracks (webRTC) {\n  yield takeEvery(actionTypes.UNMUTE_TRACKS, mediaSagas.unmuteTracks, webRTC)\n}\n\n/**\n * Handle initialization of device(s).\n * @method initializeDevices\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * initializeDevices (webRTC) {\n  yield takeEvery(actionTypes.INITIALIZE_DEVICES, mediaSagas.initializeDevices, webRTC)\n}\n\n/**\n * Taker saga for \"change webrtc log level\" actions.\n * @method updateLogLevelEntry\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * updateLogLevelEntry (webRTC) {\n  yield takeEvery(LEVELS_CHANGE, logSagas.updateLogLevel, webRTC)\n}\n\n/**\n * Taker saga for \"change webrtc log handler\" actions.\n * @method updateLogHandlerEntry\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * updateLogHandlerEntry (webRTC) {\n  yield takeEvery(HANDLERS_CHANGE, logSagas.updateLogHandler, webRTC)\n}\n\n/**\n * Configure the WebRTC stack's log level on SDK initialization.\n *\n * Special-case saga: This functionality needs to be run when the SDK is\n *    initialized, but can't be part of the plugin's `init` saga. This is\n *    because it needs the level state to have been set in state, but that isn't\n *    guaranteed during the `init` saga. The order that plugins are loaded would\n *    affect this (logs would need to be before webrtc).\n * @method initLogLevel\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * initLogLevel (webRTC) {\n  // Get the WEBRTC logger's level.\n  const level = yield select(getLevel, 'WEBRTC')\n  // Call the \"set log level\" saga for the WEBRTC logger, pretending that we\n  //    received an action updating its level.\n  yield call(logSagas.updateLogLevel, webRTC, { payload: { WEBRTC: level } })\n}\n","// Webrtc plugin.\nimport { trackActions, deviceActions } from '../interface/actions'\n\n// Other plugins.\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { call, put, all } from 'redux-saga/effects'\nimport { isUndefined, isString } from 'lodash/fp'\nimport BasicError, { webrtcCodes } from '../../errors'\n\nconst log = logManager.getLogger('MEDIA')\n\n/**\n * Render Tracks in a specified container.\n * @method renderTracks\n * @param  {Object} action A \"render tracks\" action.\n */\nexport function * renderTracks (webRTC, action) {\n  const { trackIds, selector, speakerId } = action.payload\n\n  // Get the tracks that are to be rendered.\n  const tracks = yield call([webRTC.track, 'getTracks'], trackIds)\n  const filteredTracks = tracks.filter(track => !isUndefined(track))\n  let payload = {}\n\n  // Each of trackIds, selector and speakerId must be present in order to render a track\n  if (\n    trackIds &&\n    // trackIds is an array\n    trackIds instanceof Array &&\n    // trackIds is not empty\n    trackIds.length > 0 &&\n    // selector is not empty\n    selector &&\n    // selector is a string or a DOM element\n    // (note: We can't use instanceof here since elements part of another window are not of the same instance as window.Element)\n    (isString(selector) || 'tagName' in selector)\n  ) {\n    log.info(`Rendering track(s) in element ${selector}.`, trackIds)\n\n    // Render the tracks.\n    yield all(filteredTracks.map(track => call([track, 'renderIn'], selector, speakerId)))\n\n    log.info(\n      'Finished rendering track(s).',\n      filteredTracks.map(track => track.id)\n    )\n\n    payload = { selector }\n  } else {\n    const message = 'Failed to render tracks. One of trackIds or cssSelector is missing from request.'\n\n    log.info(\n      message,\n      filteredTracks.map(track => track.id)\n    )\n\n    payload.error = new BasicError({\n      message,\n      code: webrtcCodes.INVALID_PARAM\n    })\n  }\n\n  // Report operation done.\n  yield put(\n    trackActions.renderTracksFinish(\n      filteredTracks.map(track => track.id),\n      payload\n    )\n  )\n}\n\n/**\n * Stop Tracks from being rendered in a specified container.\n * @method removeTracks\n * @param  {Object} action A \"remove tracks\" action.\n */\nexport function * removeTracks (webRTC, action) {\n  const { trackIds, selector } = action.payload\n  log.info(`Removing track(s) from element ${selector}.`, trackIds)\n\n  // Get the tracks that are to be removed.\n  const allTracks = yield call([webRTC.track, 'getTracks'])\n  const tracks = allTracks.filter(track => trackIds.includes(track.id))\n\n  // Remove the tracks.\n  yield all(tracks.map(track => call([track, 'removeFrom'], selector)))\n\n  log.info(\n    'Finished removing track(s).',\n    tracks.map(track => track.id)\n  )\n  // Report operation done.\n  yield put(\n    trackActions.removeTracksFinish(\n      tracks.map(track => track.id),\n      {\n        selector\n      }\n    )\n  )\n}\n\n/**\n * Mute certain tracks.\n * @method muteTracks\n * @param  {Object} action\n * @param  {Array} action.payload A list of track IDs.\n */\nexport function * muteTracks (webRTC, action) {\n  log.info('Muting track(s).', action.payload)\n  // Get the tracks that are to be muted.\n  const allTracks = yield call([webRTC.track, 'getTracks'])\n  const tracks = allTracks.filter(track => action.payload.includes(track.id))\n\n  // Mute the tracks.\n  yield all(tracks.map(track => call([track, 'mute'])))\n\n  log.info(\n    'Finished muting track(s).',\n    tracks.map(track => track.id)\n  )\n  // Report operation done.\n  yield put(trackActions.muteTracksFinish(tracks.map(track => track.id)))\n}\n\n/**\n * Unmute certain tracks.\n * @method unmuteTracks\n * @param  {Object} action\n * @param  {Array} action.payload A list of track IDs.\n */\nexport function * unmuteTracks (webRTC, action) {\n  log.info('Unmuting track(s).', action.payload)\n\n  // Get the tracks that are to be unmuted.\n  const allTracks = yield call([webRTC.track, 'getTracks'])\n  const tracks = allTracks.filter(track => action.payload.includes(track.id))\n\n  // Unmute the tracks.\n  yield all(tracks.map(track => call([track, 'unmute'])))\n\n  log.info(\n    'Finished unmuting track(s).',\n    tracks.map(track => track.id)\n  )\n  // Report operation done.\n  yield put(trackActions.unmuteTracksFinish(tracks.map(track => track.id)))\n}\n\n/* Initialize the media devices.\n * @method initializeDevices\n * @param  {Object} action\n * @param  {Oject} action.payload The media constraints\n */\nexport function * initializeDevices (webRTC, action) {\n  // Get the media devices available.\n  try {\n    const devices = yield call([webRTC.devices, 'setupDeviceInitialization'], action.payload)\n\n    if (devices.error) {\n      throw devices\n    } else {\n      log.info('Successfully initialized devices.', devices)\n      yield put(deviceActions.initializeDeviceFinish({ devices }))\n    }\n  } catch (error) {\n    log.info(`Encountered error while initializing devices: ${error.message}.`)\n    yield put(deviceActions.initializeDeviceFinish({ error }))\n  }\n}\n","// Libraries.\nimport { all, call } from 'redux-saga/effects'\n\n/**\n * Functionality saga for \"update webrtc log level\" actions.\n * @method updateLogLevel\n * @param  {Object} webRTC The WebRTC stack.\n * @param  {Object} action A \"log level change\" action.\n */\nexport function * updateLogLevel (webRTC, action) {\n  // If the WebRTC log level was changed, update the WebRTC stack's loggers.\n  if (action.payload.WEBRTC) {\n    yield call([webRTC.logs, 'setLevel'], action.payload.WEBRTC)\n    const loggers = yield call([webRTC.logs, 'getLoggers'])\n\n    yield all(loggers.map(logger => call([logger, 'setLevel'], action.payload.WEBRTC)))\n  }\n}\n\n/**\n * Functionality saga for \"update webrtc log handler\" actions.\n * @method updateLogHandler\n * @param  {Object} webRTC The WebRTC stack.\n * @param  {Object} action A \"log handler change\" action.\n */\nexport function * updateLogHandler (webRTC, action) {\n  // If the WebRTC log handler was changed, update the WebRTC stack's loggers.\n  if (action.payload.WEBRTC) {\n    yield call([webRTC.logs, 'setHandler'], action.payload.WEBRTC)\n    const loggers = yield call([webRTC.logs, 'getLoggers'])\n\n    yield all(loggers.map(logger => call([logger, 'setHandler'], action.payload.WEBRTC)))\n  }\n}\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.adapter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nvar _adapter_factory = require('./adapter_factory.js');\n\nvar adapter = (0, _adapter_factory.adapterFactory)({ window: typeof window === 'undefined' ? undefined : window });\nmodule.exports = adapter; // this is the difference from adapter_core.\n\n},{\"./adapter_factory.js\":2}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adapterFactory = adapterFactory;\n\nvar _utils = require('./utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _chrome_shim = require('./chrome/chrome_shim');\n\nvar chromeShim = _interopRequireWildcard(_chrome_shim);\n\nvar _edge_shim = require('./edge/edge_shim');\n\nvar edgeShim = _interopRequireWildcard(_edge_shim);\n\nvar _firefox_shim = require('./firefox/firefox_shim');\n\nvar firefoxShim = _interopRequireWildcard(_firefox_shim);\n\nvar _safari_shim = require('./safari/safari_shim');\n\nvar safariShim = _interopRequireWildcard(_safari_shim);\n\nvar _common_shim = require('./common_shim');\n\nvar commonShim = _interopRequireWildcard(_common_shim);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// Shimming starts here.\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nfunction adapterFactory() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      window = _ref.window;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    shimChrome: true,\n    shimFirefox: true,\n    shimEdge: true,\n    shimSafari: true\n  };\n\n  // Utils.\n  var logging = utils.log;\n  var browserDetails = utils.detectBrowser(window);\n\n  var adapter = {\n    browserDetails: browserDetails,\n    commonShim: commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection || !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimGetStats(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection || !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n      firefoxShim.shimAddTransceiver(window);\n      firefoxShim.shimGetParameters(window);\n      firefoxShim.shimCreateOffer(window);\n      firefoxShim.shimCreateAnswer(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimGetDisplayMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n      safariShim.shimAudioContext(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n\n// Browser shims.\n\n},{\"./chrome/chrome_shim\":3,\"./common_shim\":6,\"./edge/edge_shim\":12,\"./firefox/firefox_shim\":7,\"./safari/safari_shim\":10,\"./utils\":11}],3:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shimGetDisplayMedia = exports.shimGetUserMedia = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _getusermedia = require('./getusermedia');\n\nObject.defineProperty(exports, 'shimGetUserMedia', {\n  enumerable: true,\n  get: function get() {\n    return _getusermedia.shimGetUserMedia;\n  }\n});\n\nvar _getdisplaymedia = require('./getdisplaymedia');\n\nObject.defineProperty(exports, 'shimGetDisplayMedia', {\n  enumerable: true,\n  get: function get() {\n    return _getdisplaymedia.shimGetDisplayMedia;\n  }\n});\nexports.shimMediaStream = shimMediaStream;\nexports.shimOnTrack = shimOnTrack;\nexports.shimGetSendersWithDtmf = shimGetSendersWithDtmf;\nexports.shimGetStats = shimGetStats;\nexports.shimSenderReceiverGetStats = shimSenderReceiverGetStats;\nexports.shimAddTrackRemoveTrackWithNative = shimAddTrackRemoveTrackWithNative;\nexports.shimAddTrackRemoveTrack = shimAddTrackRemoveTrack;\nexports.shimPeerConnection = shimPeerConnection;\nexports.fixNegotiationNeeded = fixNegotiationNeeded;\n\nvar _utils = require('../utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nfunction shimOnTrack(window) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection && !('ontrack' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get: function get() {\n        return this._ontrack;\n      },\n      set: function set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n    var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n      var _this = this;\n\n      if (!this._ontrackpoly) {\n        this._ontrackpoly = function (e) {\n          // onaddstream does not fire when a track is added to an existing\n          // stream. But stream.onaddtrack is implemented so we use that.\n          e.stream.addEventListener('addtrack', function (te) {\n            var receiver = void 0;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = _this.getReceivers().find(function (r) {\n                return r.track && r.track.id === te.track.id;\n              });\n            } else {\n              receiver = { track: te.track };\n            }\n\n            var event = new Event('track');\n            event.track = te.track;\n            event.receiver = receiver;\n            event.transceiver = { receiver: receiver };\n            event.streams = [e.stream];\n            _this.dispatchEvent(event);\n          });\n          e.stream.getTracks().forEach(function (track) {\n            var receiver = void 0;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = _this.getReceivers().find(function (r) {\n                return r.track && r.track.id === track.id;\n              });\n            } else {\n              receiver = { track: track };\n            }\n            var event = new Event('track');\n            event.track = track;\n            event.receiver = receiver;\n            event.transceiver = { receiver: receiver };\n            event.streams = [e.stream];\n            _this.dispatchEvent(event);\n          });\n        };\n        this.addEventListener('addstream', this._ontrackpoly);\n      }\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver', { value: { receiver: e.receiver } });\n      }\n      return e;\n    });\n  }\n}\n\nfunction shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection && !('getSenders' in window.RTCPeerConnection.prototype) && 'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    var shimSenderWithDtmf = function shimSenderWithDtmf(pc, track) {\n      return {\n        track: track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n        var sender = origAddTrack.apply(this, arguments);\n        if (!sender) {\n          sender = shimSenderWithDtmf(this, track);\n          this._senders.push(sender);\n        }\n        return sender;\n      };\n\n      var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n        origRemoveTrack.apply(this, arguments);\n        var idx = this._senders.indexOf(sender);\n        if (idx !== -1) {\n          this._senders.splice(idx, 1);\n        }\n      };\n    }\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      var _this2 = this;\n\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(function (track) {\n        _this2._senders.push(shimSenderWithDtmf(_this2, track));\n      });\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n      var _this3 = this;\n\n      this._senders = this._senders || [];\n      origRemoveStream.apply(this, [stream]);\n\n      stream.getTracks().forEach(function (track) {\n        var sender = _this3._senders.find(function (s) {\n          return s.track === track;\n        });\n        if (sender) {\n          // remove sender\n          _this3._senders.splice(_this3._senders.indexOf(sender), 1);\n        }\n      });\n    };\n  } else if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection && 'getSenders' in window.RTCPeerConnection.prototype && 'createDTMFSender' in window.RTCPeerConnection.prototype && window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      var _this4 = this;\n\n      var senders = origGetSenders.apply(this, []);\n      senders.forEach(function (sender) {\n        return sender._pc = _this4;\n      });\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get: function get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nfunction shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  var origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    var _this5 = this;\n\n    var _arguments = Array.prototype.slice.call(arguments),\n        selector = _arguments[0],\n        onSucc = _arguments[1],\n        onErr = _arguments[2];\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n\n\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 || typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    var fixChromeStats_ = function fixChromeStats_(response) {\n      var standardReport = {};\n      var reports = response.result();\n      reports.forEach(function (report) {\n        var standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(function (name) {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    var makeMapStats = function makeMapStats(stats) {\n      return new Map(Object.keys(stats).map(function (key) {\n        return [key, stats[key]];\n      }));\n    };\n\n    if (arguments.length >= 2) {\n      var successCallbackWrapper_ = function successCallbackWrapper_(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_, selector]);\n    }\n\n    // promise-support\n    return new Promise(function (resolve, reject) {\n      origGetStats.apply(_this5, [function (response) {\n        resolve(makeMapStats(fixChromeStats_(response)));\n      }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nfunction shimSenderReceiverGetStats(window) {\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection && window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        var _this6 = this;\n\n        var senders = origGetSenders.apply(this, []);\n        senders.forEach(function (sender) {\n          return sender._pc = _this6;\n        });\n        return senders;\n      };\n    }\n\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        var sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      var sender = this;\n      return this._pc.getStats().then(function (result) {\n        return (\n          /* Note: this will include stats of all senders that\n           *   send a track with the same id as sender.track as\n           *   it is not possible to identify the RTCRtpSender.\n           */\n          utils.filterStats(result, sender.track, true)\n        );\n      });\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n        var _this7 = this;\n\n        var receivers = origGetReceivers.apply(this, []);\n        receivers.forEach(function (receiver) {\n          return receiver._pc = _this7;\n        });\n        return receivers;\n      };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      var receiver = this;\n      return this._pc.getStats().then(function (result) {\n        return utils.filterStats(result, receiver.track, false);\n      });\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype && 'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  var origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 && arguments[0] instanceof window.MediaStreamTrack) {\n      var track = arguments[0];\n      var sender = void 0;\n      var receiver = void 0;\n      var err = void 0;\n      this.getSenders().forEach(function (s) {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(function (r) {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || sender && receiver) {\n        return Promise.reject(new DOMException('There are more than one sender or receiver for the track.', 'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException('There is no sender or receiver for the track.', 'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nfunction shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n    var _this8 = this;\n\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    return Object.keys(this._shimmedLocalStreams).map(function (streamId) {\n      return _this8._shimmedLocalStreams[streamId][0];\n    });\n  };\n\n  var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n    if (!stream) {\n      return origAddTrack.apply(this, arguments);\n    }\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    var sender = origAddTrack.apply(this, arguments);\n    if (!this._shimmedLocalStreams[stream.id]) {\n      this._shimmedLocalStreams[stream.id] = [stream, sender];\n    } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n      this._shimmedLocalStreams[stream.id].push(sender);\n    }\n    return sender;\n  };\n\n  var origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    var _this9 = this;\n\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(function (track) {\n      var alreadyExists = _this9.getSenders().find(function (s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n    });\n    var existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    var newSenders = this.getSenders().filter(function (newSender) {\n      return existingSenders.indexOf(newSender) === -1;\n    });\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    delete this._shimmedLocalStreams[stream.id];\n    return origRemoveStream.apply(this, arguments);\n  };\n\n  var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    var _this10 = this;\n\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    if (sender) {\n      Object.keys(this._shimmedLocalStreams).forEach(function (streamId) {\n        var idx = _this10._shimmedLocalStreams[streamId].indexOf(sender);\n        if (idx !== -1) {\n          _this10._shimmedLocalStreams[streamId].splice(idx, 1);\n        }\n        if (_this10._shimmedLocalStreams[streamId].length === 1) {\n          delete _this10._shimmedLocalStreams[streamId];\n        }\n      });\n    }\n    return origRemoveTrack.apply(this, arguments);\n  };\n}\n\nfunction shimAddTrackRemoveTrack(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var browserDetails = utils.detectBrowser(window);\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack && browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  var origGetLocalStreams = window.RTCPeerConnection.prototype.getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n    var _this11 = this;\n\n    var nativeStreams = origGetLocalStreams.apply(this);\n    this._reverseStreams = this._reverseStreams || {};\n    return nativeStreams.map(function (stream) {\n      return _this11._reverseStreams[stream.id];\n    });\n  };\n\n  var origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    var _this12 = this;\n\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(function (track) {\n      var alreadyExists = _this12.getSenders().find(function (s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      var newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    origRemoveStream.apply(this, [this._streams[stream.id] || stream]);\n    delete this._reverseStreams[this._streams[stream.id] ? this._streams[stream.id].id : stream.id];\n    delete this._streams[stream.id];\n  };\n\n  window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n    var _this13 = this;\n\n    if (this.signalingState === 'closed') {\n      throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n    }\n    var streams = [].slice.call(arguments, 1);\n    if (streams.length !== 1 || !streams[0].getTracks().find(function (t) {\n      return t === track;\n    })) {\n      // this is not fully correct but all we can manage without\n      // [[associated MediaStreams]] internal slot.\n      throw new DOMException('The adapter.js addTrack polyfill only supports a single ' + ' stream which is associated with the specified track.', 'NotSupportedError');\n    }\n\n    var alreadyExists = this.getSenders().find(function (s) {\n      return s.track === track;\n    });\n    if (alreadyExists) {\n      throw new DOMException('Track already exists.', 'InvalidAccessError');\n    }\n\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    var oldStream = this._streams[stream.id];\n    if (oldStream) {\n      // this is using odd Chrome behaviour, use with caution:\n      // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n      // Note: we rely on the high-level addTrack/dtmf shim to\n      // create the sender with a dtmf sender.\n      oldStream.addTrack(track);\n\n      // Trigger ONN async.\n      Promise.resolve().then(function () {\n        _this13.dispatchEvent(new Event('negotiationneeded'));\n      });\n    } else {\n      var newStream = new window.MediaStream([track]);\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      this.addStream(newStream);\n    }\n    return this.getSenders().find(function (s) {\n      return s.track === track;\n    });\n  };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    var sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n      var externalStream = pc._reverseStreams[internalId];\n      var internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'), externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp: sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    var sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n      var externalStream = pc._reverseStreams[internalId];\n      var internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'), internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp: sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function (method) {\n    var nativeMethod = window.RTCPeerConnection.prototype[method];\n    var methodObj = _defineProperty({}, method, function () {\n      var _this14 = this;\n\n      var args = arguments;\n      var isLegacyCall = arguments.length && typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [function (description) {\n          var desc = replaceInternalStreamId(_this14, description);\n          args[0].apply(null, [desc]);\n        }, function (err) {\n          if (args[1]) {\n            args[1].apply(null, err);\n          }\n        }, arguments[2]]);\n      }\n      return nativeMethod.apply(this, arguments).then(function (description) {\n        return replaceInternalStreamId(_this14, description);\n      });\n    });\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  var origSetLocalDescription = window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n    if (!arguments.length || !arguments[0].type) {\n      return origSetLocalDescription.apply(this, arguments);\n    }\n    arguments[0] = replaceExternalStreamId(this, arguments[0]);\n    return origSetLocalDescription.apply(this, arguments);\n  };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  var origLocalDescription = Object.getOwnPropertyDescriptor(window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype, 'localDescription', {\n    get: function get() {\n      var description = origLocalDescription.get.apply(this);\n      if (description.type === '') {\n        return description;\n      }\n      return replaceInternalStreamId(this, description);\n    }\n  });\n\n  window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    var _this15 = this;\n\n    if (this.signalingState === 'closed') {\n      throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n    }\n    // We can not yet check for sender instanceof RTCRtpSender\n    // since we shim RTPSender. So we check if sender._pc is set.\n    if (!sender._pc) {\n      throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' + 'does not implement interface RTCRtpSender.', 'TypeError');\n    }\n    var isLocal = sender._pc === this;\n    if (!isLocal) {\n      throw new DOMException('Sender was not created by this connection.', 'InvalidAccessError');\n    }\n\n    // Search for the native stream the senders track belongs to.\n    this._streams = this._streams || {};\n    var stream = void 0;\n    Object.keys(this._streams).forEach(function (streamid) {\n      var hasTrack = _this15._streams[streamid].getTracks().find(function (track) {\n        return sender.track === track;\n      });\n      if (hasTrack) {\n        stream = _this15._streams[streamid];\n      }\n    });\n\n    if (stream) {\n      if (stream.getTracks().length === 1) {\n        // if this is the last track of the stream, remove the stream. This\n        // takes care of any shimmed _senders.\n        this.removeStream(this._reverseStreams[stream.id]);\n      } else {\n        // relying on the same odd chrome behaviour as above.\n        stream.removeTrack(sender.track);\n      }\n      this.dispatchEvent(new Event('negotiationneeded'));\n    }\n  };\n}\n\nfunction shimPeerConnection(window) {\n  var browserDetails = utils.detectBrowser(window);\n\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  var addIceCandidateNullSupported = window.RTCPeerConnection.prototype.addIceCandidate.length === 0;\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      var methodObj = _defineProperty({}, method, function () {\n        arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n        return nativeMethod.apply(this, arguments);\n      });\n      window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n  }\n\n  // support for addIceCandidate(null or undefined)\n  var nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n  window.RTCPeerConnection.prototype.addIceCandidate = function addIceCandidate() {\n    if (!addIceCandidateNullSupported && !arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n    // in older versions. Native support planned for Chrome M77.\n    if (browserDetails.version < 78 && arguments[0] && arguments[0].candidate === '') {\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n}\n\n// Attempt to fix ONN in plan-b mode.\nfunction fixNegotiationNeeded(window) {\n  var browserDetails = utils.detectBrowser(window);\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', function (e) {\n    var pc = e.target;\n    if (browserDetails.version < 72 || pc.getConfiguration && pc.getConfiguration().sdpSemantics === 'plan-b') {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n\n},{\"../utils.js\":11,\"./getdisplaymedia\":4,\"./getusermedia\":5}],4:[function(require,module,exports){\n/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shimGetDisplayMedia = shimGetDisplayMedia;\nfunction shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices && 'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!window.navigator.mediaDevices) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' + 'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function getDisplayMedia(constraints) {\n    return getSourceId(constraints).then(function (sourceId) {\n      var widthSpecified = constraints.video && constraints.video.width;\n      var heightSpecified = constraints.video && constraints.video.height;\n      var frameRateSpecified = constraints.video && constraints.video.frameRate;\n      constraints.video = {\n        mandatory: {\n          chromeMediaSource: 'desktop',\n          chromeMediaSourceId: sourceId,\n          maxFrameRate: frameRateSpecified || 3\n        }\n      };\n      if (widthSpecified) {\n        constraints.video.mandatory.maxWidth = widthSpecified;\n      }\n      if (heightSpecified) {\n        constraints.video.mandatory.maxHeight = heightSpecified;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    });\n  };\n}\n\n},{}],5:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.shimGetUserMedia = shimGetUserMedia;\n\nvar _utils = require('../utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar logging = utils.log;\n\nfunction shimGetUserMedia(window) {\n  var navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  var browserDetails = utils.detectBrowser(window);\n\n  var constraintsToChrome_ = function constraintsToChrome_(c) {\n    if ((typeof c === 'undefined' ? 'undefined' : _typeof(c)) !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function (key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = _typeof(c[key]) === 'object' ? c[key] : { ideal: c[key] };\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname_ = function oldname_(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return name === 'deviceId' ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function (mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  var shimConstraints_ = function shimConstraints_(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && _typeof(constraints.audio) === 'object') {\n      var remap = function remap(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && _typeof(constraints.video) === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      var face = constraints.video.facingMode;\n      face = face && ((typeof face === 'undefined' ? 'undefined' : _typeof(face)) === 'object' ? face : { ideal: face });\n      var getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if (face && (face.exact === 'user' || face.exact === 'environment' || face.ideal === 'user' || face.ideal === 'environment') && !(navigator.mediaDevices.getSupportedConstraints && navigator.mediaDevices.getSupportedConstraints().facingMode && !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        var matches = void 0;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices().then(function (devices) {\n            devices = devices.filter(function (d) {\n              return d.kind === 'videoinput';\n            });\n            var dev = devices.find(function (d) {\n              return matches.some(function (match) {\n                return d.label.toLowerCase().includes(match);\n              });\n            });\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? { exact: dev.deviceId } : { ideal: dev.deviceId };\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function shimError_(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString: function toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function getUserMedia_(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function (c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function (e) {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function (cs) {\n      return shimConstraints_(cs, function (c) {\n        return origGetUserMedia(c).then(function (stream) {\n          if (c.audio && !stream.getAudioTracks().length || c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function (track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n          return stream;\n        }, function (e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  }\n}\n\n},{\"../utils.js\":11}],6:[function(require,module,exports){\n/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.shimRTCIceCandidate = shimRTCIceCandidate;\nexports.shimMaxMessageSize = shimMaxMessageSize;\nexports.shimSendThrowTypeError = shimSendThrowTypeError;\nexports.shimConnectionState = shimConnectionState;\nexports.removeAllowExtmapMixed = removeAllowExtmapMixed;\n\nvar _sdp = require('sdp');\n\nvar _sdp2 = _interopRequireDefault(_sdp);\n\nvar _utils = require('./utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || window.RTCIceCandidate && 'foundation' in window.RTCIceCandidate.prototype) {\n    return;\n  }\n\n  var NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if ((typeof args === 'undefined' ? 'undefined' : _typeof(args)) === 'object' && args.candidate && args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      var nativeCandidate = new NativeRTCIceCandidate(args);\n      var parsedCandidate = _sdp2.default.parseCandidate(args.candidate);\n      var augmentedCandidate = Object.assign(nativeCandidate, parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', function (e) {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nfunction shimMaxMessageSize(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var browserDetails = utils.detectBrowser(window);\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get: function get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  var sctpInDescription = function sctpInDescription(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    var sections = _sdp2.default.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(function (mediaSection) {\n      var mLine = _sdp2.default.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application' && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  var getRemoteFirefoxVersion = function getRemoteFirefoxVersion(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    var match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    var version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  var getCanSendMaxMessageSize = function getCanSendMaxMessageSize(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    var canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize = browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  var getMaxMessageSize = function getMaxMessageSize(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    var maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox' && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    var match = _sdp2.default.matchPrefix(description.sdp, 'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' && remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n    this._sctp = null;\n    // Chrome decided to not expose .sctp in plan-b mode.\n    // As usual, adapter.js has to do an 'ugly worakaround'\n    // to cover up the mess.\n    if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n      var _getConfiguration = this.getConfiguration(),\n          sdpSemantics = _getConfiguration.sdpSemantics;\n\n      if (sdpSemantics === 'plan-b') {\n        Object.defineProperty(this, 'sctp', {\n          get: function get() {\n            return typeof this._sctp === 'undefined' ? null : this._sctp;\n          },\n\n          enumerable: true,\n          configurable: true\n        });\n      }\n    }\n\n    if (sctpInDescription(arguments[0])) {\n      // Check if the remote is FF.\n      var isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n      // Get the maximum message size the local peer is capable of sending\n      var canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n      // Get the maximum message size of the remote peer.\n      var remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n      // Determine final maximum message size\n      var maxMessageSize = void 0;\n      if (canSendMMS === 0 && remoteMMS === 0) {\n        maxMessageSize = Number.POSITIVE_INFINITY;\n      } else if (canSendMMS === 0 || remoteMMS === 0) {\n        maxMessageSize = Math.max(canSendMMS, remoteMMS);\n      } else {\n        maxMessageSize = Math.min(canSendMMS, remoteMMS);\n      }\n\n      // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n      // attribute.\n      var sctp = {};\n      Object.defineProperty(sctp, 'maxMessageSize', {\n        get: function get() {\n          return maxMessageSize;\n        }\n      });\n      this._sctp = sctp;\n    }\n\n    return origSetRemoteDescription.apply(this, arguments);\n  };\n}\n\nfunction shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection && 'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    var origDataChannelSend = dc.send;\n    dc.send = function send() {\n      var data = arguments[0];\n      var length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' && pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' + pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  var origCreateDataChannel = window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel = function createDataChannel() {\n    var dataChannel = origCreateDataChannel.apply(this, arguments);\n    wrapDcSend(dataChannel, this);\n    return dataChannel;\n  };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', function (e) {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nfunction shimConnectionState(window) {\n  if (!window.RTCPeerConnection || 'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get: function get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get: function get() {\n      return this._onconnectionstatechange || null;\n    },\n    set: function set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange', this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange', this._onconnectionstatechange = cb);\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach(function (method) {\n    var origMethod = proto[method];\n    proto[method] = function () {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = function (e) {\n          var pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            var newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange', this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nfunction removeAllowExtmapMixed(window) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var browserDetails = utils.detectBrowser(window);\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  var nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      desc.sdp = desc.sdp.split('\\n').filter(function (line) {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\n},{\"./utils\":11,\"sdp\":13}],7:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shimGetDisplayMedia = exports.shimGetUserMedia = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _getusermedia = require('./getusermedia');\n\nObject.defineProperty(exports, 'shimGetUserMedia', {\n  enumerable: true,\n  get: function get() {\n    return _getusermedia.shimGetUserMedia;\n  }\n});\n\nvar _getdisplaymedia = require('./getdisplaymedia');\n\nObject.defineProperty(exports, 'shimGetDisplayMedia', {\n  enumerable: true,\n  get: function get() {\n    return _getdisplaymedia.shimGetDisplayMedia;\n  }\n});\nexports.shimOnTrack = shimOnTrack;\nexports.shimPeerConnection = shimPeerConnection;\nexports.shimSenderGetStats = shimSenderGetStats;\nexports.shimReceiverGetStats = shimReceiverGetStats;\nexports.shimRemoveStream = shimRemoveStream;\nexports.shimRTCDataChannel = shimRTCDataChannel;\nexports.shimAddTransceiver = shimAddTransceiver;\nexports.shimGetParameters = shimGetParameters;\nexports.shimCreateOffer = shimCreateOffer;\nexports.shimCreateAnswer = shimCreateAnswer;\n\nvar _utils = require('../utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction shimOnTrack(window) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get: function get() {\n        return { receiver: this.receiver };\n      }\n    });\n  }\n}\n\nfunction shimPeerConnection(window) {\n  var browserDetails = utils.detectBrowser(window);\n\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object' || !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      var methodObj = _defineProperty({}, method, function () {\n        arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n        return nativeMethod.apply(this, arguments);\n      });\n      window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n  }\n\n  // support for addIceCandidate(null or undefined)\n  // as well as ignoring {sdpMid, candidate: \"\"}\n  if (browserDetails.version < 68) {\n    var nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      if (arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n\n  var modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    var _arguments = Array.prototype.slice.call(arguments),\n        selector = _arguments[0],\n        onSucc = _arguments[1],\n        onErr = _arguments[2];\n\n    return nativeGetStats.apply(this, [selector || null]).then(function (stats) {\n      if (browserDetails.version < 53 && !onSucc) {\n        // Shim only promise getStats with spec-hyphens in type names\n        // Leave callback version alone; misc old uses of forEach before Map\n        try {\n          stats.forEach(function (stat) {\n            stat.type = modernStatsTypes[stat.type] || stat.type;\n          });\n        } catch (e) {\n          if (e.name !== 'TypeError') {\n            throw e;\n          }\n          // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n          stats.forEach(function (stat, i) {\n            stats.set(i, Object.assign({}, stat, {\n              type: modernStatsTypes[stat.type] || stat.type\n            }));\n          });\n        }\n      }\n      return stats;\n    }).then(onSucc, onErr);\n  };\n}\n\nfunction shimSenderGetStats(window) {\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      var _this = this;\n\n      var senders = origGetSenders.apply(this, []);\n      senders.forEach(function (sender) {\n        return sender._pc = _this;\n      });\n      return senders;\n    };\n  }\n\n  var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      var sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map());\n  };\n}\n\nfunction shimReceiverGetStats(window) {\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      var _this2 = this;\n\n      var receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(function (receiver) {\n        return receiver._pc = _this2;\n      });\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nfunction shimRemoveStream(window) {\n  if (!window.RTCPeerConnection || 'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    var _this3 = this;\n\n    utils.deprecated('removeStream', 'removeTrack');\n    this.getSenders().forEach(function (sender) {\n      if (sender.track && stream.getTracks().includes(sender.track)) {\n        _this3.removeTrack(sender);\n      }\n    });\n  };\n}\n\nfunction shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nfunction shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  var origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver = function addTransceiver() {\n      this.setParametersPromises = [];\n      var initParameters = arguments[1];\n      var shouldPerformCheck = initParameters && 'sendEncodings' in initParameters;\n      if (shouldPerformCheck) {\n        // If sendEncodings params are provided, validate grammar\n        initParameters.sendEncodings.forEach(function (encodingParam) {\n          if ('rid' in encodingParam) {\n            var ridRegex = /^[a-z0-9]{0,16}$/i;\n            if (!ridRegex.test(encodingParam.rid)) {\n              throw new TypeError('Invalid RID value provided.');\n            }\n          }\n          if ('scaleResolutionDownBy' in encodingParam) {\n            if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n              throw new RangeError('scale_resolution_down_by must be >= 1.0');\n            }\n          }\n          if ('maxFramerate' in encodingParam) {\n            if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n              throw new RangeError('max_framerate must be >= 0.0');\n            }\n          }\n        });\n      }\n      var transceiver = origAddTransceiver.apply(this, arguments);\n      if (shouldPerformCheck) {\n        // Check if the init options were applied. If not we do this in an\n        // asynchronous way and save the promise reference in a global object.\n        // This is an ugly hack, but at the same time is way more robust than\n        // checking the sender parameters before and after the createOffer\n        // Also note that after the createoffer we are not 100% sure that\n        // the params were asynchronously applied so we might miss the\n        // opportunity to recreate offer.\n        var sender = transceiver.sender;\n\n        var params = sender.getParameters();\n        if (!('encodings' in params) ||\n        // Avoid being fooled by patched getParameters() below.\n        params.encodings.length === 1 && Object.keys(params.encodings[0]).length === 0) {\n          params.encodings = initParameters.sendEncodings;\n          sender.sendEncodings = initParameters.sendEncodings;\n          this.setParametersPromises.push(sender.setParameters(params).then(function () {\n            delete sender.sendEncodings;\n          }).catch(function () {\n            delete sender.sendEncodings;\n          }));\n        }\n      }\n      return transceiver;\n    };\n  }\n}\n\nfunction shimGetParameters(window) {\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  var origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters = function getParameters() {\n      var params = origGetParameters.apply(this, arguments);\n      if (!('encodings' in params)) {\n        params.encodings = [].concat(this.sendEncodings || [{}]);\n      }\n      return params;\n    };\n  }\n}\n\nfunction shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    var _this4 = this,\n        _arguments2 = arguments;\n\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises).then(function () {\n        return origCreateOffer.apply(_this4, _arguments2);\n      }).finally(function () {\n        _this4.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nfunction shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  var origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    var _this5 = this,\n        _arguments3 = arguments;\n\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises).then(function () {\n        return origCreateAnswer.apply(_this5, _arguments3);\n      }).finally(function () {\n        _this5.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n\n},{\"../utils\":11,\"./getdisplaymedia\":8,\"./getusermedia\":9}],8:[function(require,module,exports){\n/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shimGetDisplayMedia = shimGetDisplayMedia;\nfunction shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices && 'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function getDisplayMedia(constraints) {\n    if (!(constraints && constraints.video)) {\n      var err = new DOMException('getDisplayMedia without video ' + 'constraints is undefined');\n      err.name = 'NotFoundError';\n      // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n      err.code = 8;\n      return Promise.reject(err);\n    }\n    if (constraints.video === true) {\n      constraints.video = { mediaSource: preferredMediaSource };\n    } else {\n      constraints.video.mediaSource = preferredMediaSource;\n    }\n    return window.navigator.mediaDevices.getUserMedia(constraints);\n  };\n}\n\n},{}],9:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.shimGetUserMedia = shimGetUserMedia;\n\nvar _utils = require('../utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction shimGetUserMedia(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n  var MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function (constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia', 'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 && 'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    var remap = function remap(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function (c) {\n      if ((typeof c === 'undefined' ? 'undefined' : _typeof(c)) === 'object' && _typeof(c.audio) === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function () {\n        var obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function (c) {\n        if (this.kind === 'audio' && (typeof c === 'undefined' ? 'undefined' : _typeof(c)) === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n\n},{\"../utils\":11}],10:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.shimLocalStreamsAPI = shimLocalStreamsAPI;\nexports.shimRemoteStreamsAPI = shimRemoteStreamsAPI;\nexports.shimCallbacksAPI = shimCallbacksAPI;\nexports.shimGetUserMedia = shimGetUserMedia;\nexports.shimConstraints = shimConstraints;\nexports.shimRTCIceServerUrls = shimRTCIceServerUrls;\nexports.shimTrackEventTransceiver = shimTrackEventTransceiver;\nexports.shimCreateOfferLegacy = shimCreateOfferLegacy;\nexports.shimAudioContext = shimAudioContext;\n\nvar _utils = require('../utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction shimLocalStreamsAPI(window) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      return this._localStreams;\n    };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    var _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      var _this = this;\n\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(function (track) {\n        return _addTrack.call(_this, track, stream);\n      });\n      stream.getVideoTracks().forEach(function (track) {\n        return _addTrack.call(_this, track, stream);\n      });\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      for (var _len = arguments.length, streams = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        streams[_key - 1] = arguments[_key];\n      }\n\n      if (streams) {\n        streams.forEach(function (stream) {\n          if (!_this2._localStreams) {\n            _this2._localStreams = [stream];\n          } else if (!_this2._localStreams.includes(stream)) {\n            _this2._localStreams.push(stream);\n          }\n        });\n      }\n      return _addTrack.apply(this, arguments);\n    };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n      var _this3 = this;\n\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      var index = this._localStreams.indexOf(stream);\n      if (index === -1) {\n        return;\n      }\n      this._localStreams.splice(index, 1);\n      var tracks = stream.getTracks();\n      this.getSenders().forEach(function (sender) {\n        if (tracks.includes(sender.track)) {\n          _this3.removeTrack(sender);\n        }\n      });\n    };\n  }\n}\n\nfunction shimRemoteStreamsAPI(window) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams = function getRemoteStreams() {\n      return this._remoteStreams ? this._remoteStreams : [];\n    };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get: function get() {\n        return this._onaddstream;\n      },\n      set: function set(f) {\n        var _this4 = this;\n\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = function (e) {\n          e.streams.forEach(function (stream) {\n            if (!_this4._remoteStreams) {\n              _this4._remoteStreams = [];\n            }\n            if (_this4._remoteStreams.includes(stream)) {\n              return;\n            }\n            _this4._remoteStreams.push(stream);\n            var event = new Event('addstream');\n            event.stream = stream;\n            _this4.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n      var pc = this;\n      if (!this._onaddstreampoly) {\n        this.addEventListener('track', this._onaddstreampoly = function (e) {\n          e.streams.forEach(function (stream) {\n            if (!pc._remoteStreams) {\n              pc._remoteStreams = [];\n            }\n            if (pc._remoteStreams.indexOf(stream) >= 0) {\n              return;\n            }\n            pc._remoteStreams.push(stream);\n            var event = new Event('addstream');\n            event.stream = stream;\n            pc.dispatchEvent(event);\n          });\n        });\n      }\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  }\n}\n\nfunction shimCallbacksAPI(window) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  var prototype = window.RTCPeerConnection.prototype;\n  var origCreateOffer = prototype.createOffer;\n  var origCreateAnswer = prototype.createAnswer;\n  var setLocalDescription = prototype.setLocalDescription;\n  var setRemoteDescription = prototype.setRemoteDescription;\n  var addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer = function createOffer(successCallback, failureCallback) {\n    var options = arguments.length >= 2 ? arguments[2] : arguments[0];\n    var promise = origCreateOffer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  prototype.createAnswer = function createAnswer(successCallback, failureCallback) {\n    var options = arguments.length >= 2 ? arguments[2] : arguments[0];\n    var promise = origCreateAnswer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  var withCallback = function withCallback(description, successCallback, failureCallback) {\n    var promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function withCallback(description, successCallback, failureCallback) {\n    var promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function withCallback(candidate, successCallback, failureCallback) {\n    var promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nfunction shimGetUserMedia(window) {\n  var navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    var mediaDevices = navigator.mediaDevices;\n    var _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = function (constraints) {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints).then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nfunction shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({}, constraints, { video: utils.compactObject(constraints.video) });\n  }\n\n  return constraints;\n}\n\nfunction shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  var OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection = function RTCPeerConnection(pcConfig, pcConstraints) {\n    if (pcConfig && pcConfig.iceServers) {\n      var newIceServers = [];\n      for (var i = 0; i < pcConfig.iceServers.length; i++) {\n        var server = pcConfig.iceServers[i];\n        if (!server.hasOwnProperty('urls') && server.hasOwnProperty('url')) {\n          utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n          server = JSON.parse(JSON.stringify(server));\n          server.urls = server.url;\n          delete server.url;\n          newIceServers.push(server);\n        } else {\n          newIceServers.push(pcConfig.iceServers[i]);\n        }\n      }\n      pcConfig.iceServers = newIceServers;\n    }\n    return new OrigPeerConnection(pcConfig, pcConstraints);\n  };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get: function get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nfunction shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get: function get() {\n        return { receiver: this.receiver };\n      }\n    });\n  }\n}\n\nfunction shimCreateOfferLegacy(window) {\n  var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer(offerOptions) {\n    if (offerOptions) {\n      if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n      }\n      var audioTransceiver = this.getTransceivers().find(function (transceiver) {\n        return transceiver.receiver.track.kind === 'audio';\n      });\n      if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n        if (audioTransceiver.direction === 'sendrecv') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('sendonly');\n          } else {\n            audioTransceiver.direction = 'sendonly';\n          }\n        } else if (audioTransceiver.direction === 'recvonly') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('inactive');\n          } else {\n            audioTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveAudio === true && !audioTransceiver) {\n        this.addTransceiver('audio');\n      }\n\n      if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n      }\n      var videoTransceiver = this.getTransceivers().find(function (transceiver) {\n        return transceiver.receiver.track.kind === 'video';\n      });\n      if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n        if (videoTransceiver.direction === 'sendrecv') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('sendonly');\n          } else {\n            videoTransceiver.direction = 'sendonly';\n          }\n        } else if (videoTransceiver.direction === 'recvonly') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('inactive');\n          } else {\n            videoTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveVideo === true && !videoTransceiver) {\n        this.addTransceiver('video');\n      }\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nfunction shimAudioContext(window) {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n\n},{\"../utils\":11}],11:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.extractVersion = extractVersion;\nexports.wrapPeerConnectionEvent = wrapPeerConnectionEvent;\nexports.disableLog = disableLog;\nexports.disableWarnings = disableWarnings;\nexports.log = log;\nexports.deprecated = deprecated;\nexports.detectBrowser = detectBrowser;\nexports.compactObject = compactObject;\nexports.walkStats = walkStats;\nexports.filterStats = filterStats;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nfunction extractVersion(uastring, expr, pos) {\n  var match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  var nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function (nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    var wrappedCallback = function wrappedCallback(e) {\n      var modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName, wrappedCallback]);\n  };\n\n  var nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function (nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    var unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName, unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get: function get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set: function set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap, this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap, this['_on' + eventNameToWrap] = cb);\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n}\n\nfunction disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + (typeof bool === 'undefined' ? 'undefined' : _typeof(bool)) + '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return bool ? 'adapter.js logging disabled' : 'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nfunction disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + (typeof bool === 'undefined' ? 'undefined' : _typeof(bool)) + '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nfunction log() {\n  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nfunction deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod + ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nfunction detectBrowser(window) {\n  // Returned result object.\n  var result = { browser: null, version: null };\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  var navigator = window.navigator;\n\n\n  if (navigator.mozGetUserMedia) {\n    // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent, /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia || window.isSecureContext === false && window.webkitRTCPeerConnection && !window.RTCIceGatherer) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent, /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n    // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent, /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection && navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n    // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent, /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver && 'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else {\n    // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nfunction compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function (accumulator, key) {\n    var isObj = isObject(data[key]);\n    var value = isObj ? compactObject(data[key]) : data[key];\n    var isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, _defineProperty({}, key, value));\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nfunction walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(function (name) {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(function (id) {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nfunction filterStats(result, track, outbound) {\n  var streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  var filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  var trackStats = [];\n  result.forEach(function (value) {\n    if (value.type === 'track' && value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(function (trackStat) {\n    result.forEach(function (stats) {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n},{}],12:[function(require,module,exports){\n\n},{}],13:[function(require,module,exports){\n/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n\n},{}]},{},[1])(1)\n});\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.map');\nrequire('../modules/es7.map.to-json');\nrequire('../modules/es7.map.of');\nrequire('../modules/es7.map.from');\nmodule.exports = require('../modules/_core').Map;\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n","// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = require('./_export');\n\n$export($export.P + $export.R, 'Map', { toJSON: require('./_collection-to-json')('Map') });\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of\nrequire('./_set-collection-of')('Map');\n","// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from\nrequire('./_set-collection-from')('Map');\n","module.exports = { \"default\": require(\"core-js/library/fn/reflect/set\"), __esModule: true };","require('../../modules/es6.reflect.set');\nmodule.exports = require('../../modules/_core').Reflect.set;\n","// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])\nvar dP = require('./_object-dp');\nvar gOPD = require('./_object-gopd');\nvar getPrototypeOf = require('./_object-gpo');\nvar has = require('./_has');\nvar $export = require('./_export');\nvar createDesc = require('./_property-desc');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\n\nfunction set(target, propertyKey, V /* , receiver */) {\n  var receiver = arguments.length < 4 ? target : arguments[3];\n  var ownDesc = gOPD.f(anObject(target), propertyKey);\n  var existingDescriptor, proto;\n  if (!ownDesc) {\n    if (isObject(proto = getPrototypeOf(target))) {\n      return set(proto, propertyKey, V, receiver);\n    }\n    ownDesc = createDesc(0);\n  }\n  if (has(ownDesc, 'value')) {\n    if (ownDesc.writable === false || !isObject(receiver)) return false;\n    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {\n      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;\n      existingDescriptor.value = V;\n      dP.f(receiver, propertyKey, existingDescriptor);\n    } else dP.f(receiver, propertyKey, createDesc(0, V));\n    return true;\n  }\n  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);\n}\n\n$export($export.S, 'Reflect', { set: set });\n","import onicecandidate from './icecandidate'\nimport oniceconnectionstatechange from './iceconnectionstatechange'\nimport onicegatheringstatechange from './icegatheringstatechange'\nimport onnegotiationneeded from './negotiationneeded'\nimport onsignalingstatechange from './signalingstatechange'\nimport ontrack from './track'\n\nexport default {\n  onicecandidate,\n  oniceconnectionstatechange,\n  onicegatheringstatechange,\n  onnegotiationneeded,\n  onsignalingstatechange,\n  ontrack\n}\n","import { PEER } from '../../constants'\n\n/**\n * Event wrapper for `icecandidate` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onicecandidate\n * @method onicecandidate\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function onicecandidate (listener) {\n  const { nativePeer, proxyPeer, config, iceTimer, emitter, iceCandidates, log } = this\n\n  /**\n   * Intercept the PeerConnection onicecandidate event.\n   * Handle the candidate as defined by the current trickle ICE mode config.\n   * Trickle ICE scenarios:\n   *   - FULL: Trickle.\n   *   - HALF, pre-half: Wait for \"half\" or null candidate.\n   *   - HALF, post-half: Trickle.\n   *   - NONE: Wait for null candidate.\n   */\n  nativePeer.onicecandidate = event => {\n    log.debug(\n      `ICE candidate received (trickling?: ${config.trickleIceMode === PEER.TRICKLE_ICE.FULL}): `,\n      event.candidate\n    )\n\n    // Keep track of all candidates gathered by this collection process.\n    if (event.candidate !== null) {\n      iceCandidates.push(event.candidate)\n    }\n\n    // Emit an event for the session to pick up for the ice collection check\n    const elapsedTime = iceTimer.timeFromStart()\n    emitter.emit('iceCandidateCollected', {\n      iceCollectionDuration: elapsedTime,\n      iceCandidates,\n      iceGatheringState: proxyPeer.iceGatheringState,\n      rtcPeerConnectionConfig: config,\n      rtcLocalSessionDescription: proxyPeer.localDescription\n    })\n\n    if (config.trickleIceMode === PEER.TRICKLE_ICE.FULL) {\n      // If trickling is enabled, emit an event for every ICE candidate. The\n      //    Peer is already ready for negotiation at this point.\n      if (event.candidate) {\n        // Only trickle non-null (ie. actual) candidates.\n        listener(event)\n      }\n    } else if (event.candidate === null) {\n      // If we received the last candidate (null), then gathering is done and\n      //    Peer is ready for negotiation (no matter the scenario).\n      log.debug('ICE collection process complete; ready for negotiation.')\n\n      // Clear the candidate array without redefining it (it's a const).\n      iceCandidates.length = 0\n\n      emitter.emit('onnegotiationready')\n    } else if (config.trickleIceMode === PEER.TRICKLE_ICE.HALF) {\n      // For half trickle, only start trickling after a certain threshold.\n      //    Peer will be considered ready for negotiation after that point.\n      const haveHalf = config.halfTrickleThreshold({\n        sdp: proxyPeer.localDescription.sdp,\n        iceCandidate: event.candidate,\n        time: elapsedTime\n      })\n\n      if (haveHalf) {\n        log.debug('Half ICE collection process complete; ready for negotiation.')\n        config.trickleIceMode = PEER.TRICKLE_ICE.FULL\n        emitter.emit('onnegotiationready')\n      } else {\n        log.debug(\"Peer's half trickle threshold not reached.\")\n      }\n    }\n  }\n\n  return true\n}\n","/**\n * Event wrapper for `iceconnectionstatechange` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/oniceconnectionstatechange\n * @method oniceconnectionstatechange\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function oniceconnectionstatechange (listener) {\n  const { nativePeer, log } = this\n\n  nativePeer.oniceconnectionstatechange = function (event) {\n    log.debug(`Peer received iceconnectionstatechange event: ${nativePeer.iceConnectionState}`)\n    listener(event)\n  }\n\n  return true\n}\n","import { PEER } from '../../constants'\n\n/**\n * Event wrapper for `icegatheringstatechange` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onicegatheringstatechange\n * @method onicegatheringstatechange\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function onicegatheringstatechange (listener) {\n  const { nativePeer, iceTimer, log } = this\n\n  /**\n   * Intercept the PeerConnection onicegatheringstatechange event.\n   * Time how long ICE collection takes and handles scenarios when it takes\n   *    too long.\n   */\n  nativePeer.onicegatheringstatechange = event => {\n    const gatheringState = event.target.iceGatheringState\n    log.debug(`Peer iceGatheringState changed to ${gatheringState}.`)\n\n    if (gatheringState === PEER.ICE_GATHERING_STATE.GATHERING) {\n      iceTimer.start()\n      // TODO: Handle \"ICE collection taking too long\" scenario.\n    } else if (gatheringState === PEER.ICE_GATHERING_STATE.COMPLETE) {\n      log.debug(`Peer took ${iceTimer.timeFromStart()}ms to collect ICE candidates.`)\n      iceTimer.stop()\n    }\n    // Bubble the event up.\n    listener(event)\n  }\n\n  return true\n}\n","/**\n * Event wrapper for `negotiationneeded` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onnegotiationneeded\n * @method onnegotiationneeded\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function onnegotiationneeded (listener) {\n  const { nativePeer, log } = this\n\n  nativePeer.onnegotiationneeded = function (event) {\n    log.debug('Peer received negotiationneeded event.')\n    listener(event)\n  }\n\n  return true\n}\n","/**\n * Event wrapper for `signalingstatechange` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onsignalingstatechange\n * @method onsignalingstatechange\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function onsignalingstatechange (listener) {\n  const { nativePeer, log } = this\n\n  nativePeer.onsignalingstatechange = function (event) {\n    log.debug(`Peer received signalingstatechange event: ${nativePeer.signalingState}`)\n    listener(event)\n  }\n\n  return true\n}\n","/**\n * Event wrapper for `track` event.\n * Reference: developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/ontrack\n * @method ontrack\n * @param  {Function} listener The listener function for the event.\n * @return {Boolean}  Whether the assignment succeeded or not.\n */\nexport default function ontrack (listener) {\n  const { nativePeer, trackManager, log } = this\n\n  nativePeer.ontrack = event => {\n    /**\n     * transceiver: The RTCRtpTransceiver for this remote track. (Available in unified-plan)\n     * receiver: The RTCRtpReceiver for this remote track.\n     * track: The remote MediaStreamTrack.\n     * streams: Array of MediaStreams the track is in.\n     */\n    // event object contains transceiver which already has track attached to its receiver\n    const { track: nativeTrack, streams } = event\n    log.debug(`Peer received ${nativeTrack.kind} Track ${nativeTrack.id}.`)\n\n    /*\n     * When the remote side adds a track, it should have an associated MediaStream\n     *    which we get access to here. This allows us to listen for events on that\n     *    MediaStream (important for knowing when the track has ended).\n     * It's possible that the remote Sender does not have a Stream set, so we create\n     *    a Stream for it. This should be considered a problematic scenario, since\n     *    we rely on the remote Stream for certain events.\n     * Reference: KAA-2628\n     */\n    let targetStream\n    if (streams.length === 0) {\n      targetStream = new MediaStream([nativeTrack])\n      log.debug('New Track is not associated with remote Stream.')\n    } else {\n      targetStream = streams[0]\n      log.debug(`New Track is associated with remote Stream ${targetStream.id}.`)\n    }\n\n    // Convert the native MediaStreamTrack into a Track object.\n    // Specify that this is not a local one (i.e. it's a remote track)\n    const track = trackManager.add(nativeTrack, targetStream, false)\n\n    listener(track)\n  }\n\n  return true\n}\n","import addIceCandidate from './addIceCandidate'\nimport addTrack from './addTrack'\nimport close from './close'\nimport createAnswer from './createAnswer'\nimport createOffer from './createOffer'\nimport findReusableTransceiver from './findReusableTransceiver'\nimport getState from './getState'\nimport getStats from './getStats'\nimport removeTrack from './removeTrack'\nimport replaceTrack from './replaceTrack'\nimport sendDTMF from './sendDTMF'\nimport setLocalDescription from './setLocalDescription'\nimport setRemoteDescription from './setRemoteDescription'\nimport setTransceiversDirection from './setTransceiversDirection'\n\nconst methods = {\n  addIceCandidate,\n  addTrack,\n  close,\n  createAnswer,\n  createOffer,\n  findReusableTransceiver,\n  getState,\n  getStats,\n  removeTrack,\n  replaceTrack,\n  sendDTMF,\n  setLocalDescription,\n  setRemoteDescription,\n  setTransceiversDirection\n}\n\nexport default methods\n","/**\n * Add an ICE candidate to the connection.\n * @method addIceCandidate\n * @param  {RTCIceCandidate} candidate A native candidate object.\n * @return {Promise} Resolves when the candidate is successfully added.\n */\nexport default function addIceCandidate (candidate) {\n  const { nativePeer, proxyPeer, id, log } = this\n  log.info('Adding ICE candidate.')\n\n  return new Promise((resolve, reject) => {\n    if (proxyPeer.remoteDescription.type && proxyPeer.remoteDescription.sdp) {\n      nativePeer\n        .addIceCandidate(candidate)\n        .then(resolve)\n        .catch(reject)\n    } else {\n      log.info('Cannot set remote ICE candidate without a remote description.')\n      // TODO: Better error.\n      reject(new Error(`Peer ${id} cannot set remote ICE candidate without a remote description.`))\n    }\n  })\n}\n","/**\n * Add a Track to the connection.\n * @method addTrack\n * @param  {Track} track A Track object.\n * @return {RTCRtpSender}\n */\nexport default function addTrack (track) {\n  const { nativePeer, log } = this\n  log.info(`Adding new ${track.track.kind} track.`)\n\n  let sender\n  try {\n    sender = nativePeer.addTrack(track.track, track.getStream())\n  } catch (err) {\n    // TODO: Better error handling.\n    log.info(`Failed to add track: ${err.message}`)\n  }\n  // TODO: What to return here? Probably shouldn't expose the rtpSender itself.\n  return sender\n}\n","/**\n * Clean the Peer by closing the RTCPeerConnection.\n * @method close\n */\nexport default function close () {\n  const { nativePeer, id, emitter, iceLoop, log } = this\n  log.info('Closing Peer.')\n\n  if (iceLoop) {\n    // Clear the ICE collection loop timeout if it exists.\n    clearTimeout(iceLoop)\n  }\n\n  nativePeer.close()\n  emitter.emit('peer:closed', id)\n}\n","import { PEER } from '../../constants'\n\nimport { isUnifiedPlan } from '../../sdpUtils/sdpSemantics'\nimport { runPipeline } from '../../sdpUtils/pipeline'\nimport { removeTrickleIce, removeBundling, changeMediaDirection, preventDtlsRoleChange } from '../../sdpUtils/handlers'\n\n/**\n * Creates an SDP answer, given that a remote offer has been set.\n * @method createAnswer\n * @param  {RTCAnswerOptions} [options={}] Options used to customize the answer.\n * @param  {Object} [options.mediaDirections] Directions to use for media.\n * @param  {string} [options.mediaDirections.audio]\n * @param  {string} [options.mediaDirections.video]\n * @return {Promise} Resolves with the answer.\n */\nexport default function createAnswer (options = {}) {\n  const { nativePeer, config, dtlsRole, log } = this\n  log.info('Creating local answer.')\n\n  // If using unified-plan, remove options.mediaDirections.\n  // This is because directions are now set in transceivers.\n  if (isUnifiedPlan(config.rtcConfig.sdpSemantics)) {\n    delete options.mediaDirections\n  }\n\n  return new Promise((resolve, reject) => {\n    nativePeer\n      .createAnswer(options)\n      .then(answer => {\n        const sdpHandlers = []\n\n        /*\n         * Always include the `preventDtlsRoleChange` handler. This ensures\n         *    that the SDP's DTLS role does not change during a renegotiation.\n         */\n        sdpHandlers.push(preventDtlsRoleChange)\n\n        if (config.trickleIceMode === PEER.TRICKLE_ICE.NONE) {\n          // Modify the answer to claim the Peer doesn't support trickle ICE.\n          sdpHandlers.push(removeTrickleIce)\n        }\n        if (config.removeBundling) {\n          // Modify the offer to remove media bundling\n          sdpHandlers.push(removeBundling)\n        }\n        if (options.mediaDirections) {\n          // Modify the answer to set media directions as desired.\n          sdpHandlers.push(changeMediaDirection(options.mediaDirections))\n        }\n        if (sdpHandlers.length > 0) {\n          // Run the SDP pipeline with only these handlers.\n          answer.sdp = runPipeline(sdpHandlers, answer.sdp, {\n            type: answer.type,\n            endpoint: PEER.ENDPOINT.LOCAL,\n            dtlsRole: dtlsRole\n          })\n        }\n\n        log.info('Finished creating local answer.')\n        resolve(answer)\n      })\n      .catch(reject)\n  })\n}\n","require('../../modules/es6.object.freeze');\nmodule.exports = require('../../modules/_core').Object.freeze;\n","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n","import { PEER } from '../../constants'\n\nimport { isUnifiedPlan } from '../../sdpUtils/sdpSemantics'\nimport { runPipeline } from '../../sdpUtils/pipeline'\nimport { removeTrickleIce, removeBundling, changeMediaDirection } from '../../sdpUtils/handlers'\n\n/**\n * Creates an SDP offer.\n * @method createOffer\n * @param  {RTCOfferOptions} [options={}] Options used to customize the offer.\n * @param  {Object} [options.mediaDirections] Directions to use for media.\n * @param  {string} [options.mediaDirections.audio]\n * @param  {string} [options.mediaDirections.video]\n * @return {Promise} Resolves with the offer.\n */\nexport default function createOffer (options = {}) {\n  const { nativePeer, config, log } = this\n  log.info('Creating local offer.')\n\n  // If using unified-plan, remove options.mediaDirections.\n  // This is because directions are now set in transceivers.\n  if (isUnifiedPlan(config.rtcConfig.sdpSemantics)) {\n    delete options.mediaDirections\n  }\n\n  return new Promise((resolve, reject) => {\n    nativePeer\n      .createOffer(options)\n      .then(offer => {\n        const sdpHandlers = []\n        if (config.trickleIceMode === PEER.TRICKLE_ICE.NONE) {\n          // Modify the offer to claim the Peer doesn't support trickle ICE.\n          sdpHandlers.push(removeTrickleIce)\n        }\n        if (config.removeBundling) {\n          // Modify the offer to remove media bundling\n          sdpHandlers.push(removeBundling)\n        }\n        if (options.mediaDirections) {\n          // Modify the offer to set media directions as desired.\n          sdpHandlers.push(changeMediaDirection(options.mediaDirections))\n        }\n        if (sdpHandlers.length > 0) {\n          // Run the SDP pipeline with only these handlers.\n          offer.sdp = runPipeline(sdpHandlers, offer.sdp, {\n            type: offer.type,\n            endpoint: PEER.ENDPOINT.LOCAL\n          })\n        }\n\n        log.info('Finished creating local offer.')\n        resolve(offer)\n      })\n      .catch(reject)\n  })\n}\n","import { isUnifiedPlan } from '../../sdpUtils/sdpSemantics'\n\n/**\n * Finds a transceiver that can be reused.\n * A transceiver can be reused if it satisfies the following conditions:\n *   - it does not have a track on its sender\n *   - it has the same kind (audio or video) as what we specified\n *   - it has been used before (if it has not been used then we are not \"reusing\" it)\n * @method findReusableTransceiver\n * @param {string} kind The kind of transceiver to find (audio or video)\n * @returns {Object} Transceiver object that matches kind, has no sender track, and has currentDirection. Otherwise undefined.\n */\nexport default function findReusableTransceiver (kind) {\n  const { proxyPeer, config } = this\n\n  if (isUnifiedPlan(config.rtcConfig.sdpSemantics)) {\n    const transceivers = proxyPeer.getTransceivers()\n    return transceivers.find(\n      transceiver =>\n        transceiver.sender.track == null &&\n        transceiver.receiver &&\n        transceiver.receiver.track &&\n        transceiver.receiver.track.kind === kind &&\n        transceiver.currentDirection // If this has been set, then transceiver has been used before.\n    )\n  }\n}\n","/**\n * Retrieve a snapshot of the Peer object's current state.\n * @method getState\n * @return {Object}\n */\nexport default function getState () {\n  const { proxyPeer, config, id } = this\n\n  return {\n    id,\n    config: config,\n    localDesc: proxyPeer.localDescription,\n    signalingState: proxyPeer.signalingState,\n    localTracks: proxyPeer.localTracks,\n    remoteTracks: proxyPeer.remoteTracks,\n    senderTracks: proxyPeer.senderTracks\n  }\n}\n","/**\n * Retrieve RTCStatsReport for a sender or the peerConnection.\n * @method getStats\n * @param {string} [TrackId] Return stats for peerConnection if trackId is not provided\n * @return {Promise} Resolves with the RTCStatsReport\n */\nexport default function getStats (trackId) {\n  const { nativePeer, proxyPeer, log } = this\n  log.info(`Getting stats ${trackId ? 'for track.' : '.'}`)\n  // If no trackId is supplied, get the stats from the RTCPeerConnection. Otherwise, find an RTCSender\n  // associated with the trackId and get the stats from it.\n\n  // Use the trackId if it was provided\n  if (trackId) {\n    return new Promise((resolve, reject) => {\n      const senders = proxyPeer.getSenders()\n      // search for a sender associated with the trackId\n      const sender = senders.find(sender => sender.track.id === trackId)\n      if (sender) {\n        sender\n          .getStats()\n          .then(resolve)\n          .catch(reject)\n      } else {\n        const errMsg = `Cannot find sender with trackId: ${trackId}`\n        log.info(errMsg)\n        reject(new Error(errMsg))\n      }\n    })\n  } else {\n    // get the stats associated with the peerConnection if no trackId is supplied\n    return nativePeer.getStats()\n  }\n}\n","/**\n * Remove a Track from the connection.\n * @method removeTrack\n * @param  {string} trackId An id for a Track object.\n */\nexport default function removeTrack (trackId) {\n  const { nativePeer, proxyPeer, log } = this\n  log.info(`Removing track ${trackId}.`)\n\n  const track = proxyPeer.senderTracks.find(track => track.id === trackId)\n  if (!track) {\n    log.info(`Invalid track ID ${trackId}; no such track found.`)\n    return\n  } else if (proxyPeer.signalingState === ' closed') {\n    log.info('Peer is closed; cannot remove track.')\n    return\n  }\n\n  // Get the RtpSender for the Track we want to remove.\n  const sender = proxyPeer\n    .getSenders()\n    .filter(sender => sender.track !== null)\n    .find(sender => sender.track.id === trackId)\n  nativePeer.removeTrack(sender)\n}\n","import { isUnifiedPlan } from '../../sdpUtils/sdpSemantics'\n\n/**\n * Replaces a specified transceiver's sender.track.\n * @method replaceTrack\n * @param {Object} newTrack The MediaStreamTrack we want to place into the sender.\n * @param {Object} options Options for specifying which transceiver's sender should be replaced. They are ordered by priority.\n * @param {Array} [options.trackId] The track id whose transceivers we want to set the direction of.\n * @return {Object} A Promise object which is fulfilled once the track has been replaced\n */\nexport default function replaceTrack (newTrack, options) {\n  const { proxyPeer, config, log } = this\n  log.info(`Replacing track ${options.trackId} with new ${newTrack.kind} track.`)\n\n  return new Promise((resolve, reject) => {\n    let sender\n    if (isUnifiedPlan(config.rtcConfig.sdpSemantics)) {\n      // Find the transceiver related to the provided track ID.\n      const targetTransceiver = proxyPeer\n        .getTransceivers()\n        .find(transceiver => transceiver.sender.track && transceiver.sender.track.id === options.trackId)\n\n      sender = targetTransceiver ? targetTransceiver.sender : undefined\n    } else {\n      sender = proxyPeer.getSenders().find(sender => sender.track.id === options.trackId)\n    }\n\n    if (sender) {\n      sender\n        .replaceTrack(newTrack)\n        .then(resolve)\n        .catch(error => {\n          log.info(`Failed to replace track; ${error.message}`)\n          reject(error)\n        })\n    } else {\n      log.info(`Failed to replace track; could not find track ${options.trackId}.`)\n      reject(new Error(`Sender for track ${options.trackId} not found.`))\n    }\n  })\n}\n","/**\n * Send DTMF tones.\n * @method sendDTMF\n * @param {Object} DTMFOptions The DTMF options.\n * @param {string} DTMFOptions.tone DTMF tone to send. Valid values are [0,1,2,3,4,5,6,7,8,9,#].\n * @param {number} DTMFOptions.duration=100 The amount of time, in milliseconds, that each DTMF tone should last.\n * @param {number} DTMFOptions.intertoneGap=70 The length of time, in milliseconds, to wait between tones.\n * @param {Object} [sendOptions] The send options.\n * @param {func} [sendOptions.callback] Optional callback for tone event .\n * @param {string} [sendOptions.trackId] The trackId of the sender to use.\n * @return {Boolean} Whether the DTMF tones were inserted\n */\nexport default function sendDTMF ({ tone, duration = 100, intertoneGap = 70 }, { callback, trackId }) {\n  const { proxyPeer, log } = this\n  log.info('Sending DTMF tones.', tone)\n\n  if (!proxyPeer.getSenders) {\n    log.info('Failed to send tones; getSenders is not supported by this browser.')\n    return false\n  }\n  const senders = proxyPeer.getSenders()\n  // Use the trackId if it was provided\n  if (trackId) {\n    const sender = senders.find(sender => sender.track.id === trackId)\n    if (!sender) {\n      log.info(`Failed to send tones; could not find track ${trackId}.`)\n      return false\n    }\n    insertDTMF(sender, tone, duration, intertoneGap, callback, log)\n    return true\n  } else {\n    let result\n    for (let i = 0; i < senders.length; i++) {\n      result = insertDTMF(senders[i], tone, duration, intertoneGap, callback, log)\n      if (result) {\n        return true\n      }\n    }\n\n    log.info('Failed to send tones; could not find an appropriate track.')\n    return false\n  }\n}\n\n/**\n * Helper function to sendDTMF tones .\n * @private\n * @method insertDTMF\n * @param {sender} object\n * @param {string} tone\n * @param {number} duration\n * @param {number} intertoneGap\n * @param {Function} callback\n */\nfunction insertDTMF (sender, tone, duration, intertoneGap, callback, log) {\n  /**\n   * Event handler when tone is played.\n   * @private\n   * @method handleToneChangeEvent\n   * @param  {event} event\n   */\n  function handleToneChangeEvent (event) {\n    if (event.tone !== '') {\n      log.debug('Tone played: ' + event.tone)\n    } else {\n      log.debug('All tones have played.')\n    }\n  }\n\n  if (sender.dtmf) {\n    const dtmfSender = sender.dtmf\n    if (callback) {\n      dtmfSender.ontonechange = callback\n    } else {\n      dtmfSender.ontonechange = handleToneChangeEvent\n    }\n    try {\n      dtmfSender.insertDTMF(tone, duration, intertoneGap)\n      return true\n    } catch (err) {\n      log.debug(err.message)\n      return false\n    }\n  } else {\n    log.debug('The sender requires DTMF which is not support by this browser.')\n    return false\n  }\n}\n","import { PEER } from '../../constants'\n\n// Utils.\nimport iceCollectionScheduledCheck from '../utils/iceCollectionScheduledCheck'\n\n/**\n * Sets an SDP as the local description of the connection.\n * The returned Promise will resolve when the Peer is ready for negotiation,\n *    taking into account the Peer's `trickleIceMode` configuration.\n * @method setLocalDescription\n * @param  {RTCSessionDescription} sessionDesc\n * @return {Promise}\n */\nexport default function setLocalDescription (desc) {\n  const { nativePeer, proxyPeer, config, id, emitter, iceTimer, log } = this\n\n  // TODO: SDP pipeline here.\n  log.info(`Setting local description ${desc.type} in ${proxyPeer.signalingState} state.`)\n  log.debug(`Setting local description ${desc.type}:`, desc.sdp)\n\n  /**\n   * Scenario: A local answer SDP is being applied to the Peer, but it does\n   *    not have a selected DTLS role yet. This should occur during initial\n   *    negotiation, before responding with this Peer's answer.\n   * Set the local Peer's DTLS role depending on what role was generated. This\n   *    role will be kept throughout all renegotiations.\n   */\n  if (!this.dtlsRole && desc.type === 'answer') {\n    const dtlsMatch = desc.sdp.match(/a=setup:(\\w*?)[\\r\\n]/)\n    if (dtlsMatch) {\n      log.debug(`Selecting DTLS role ${dtlsMatch[1]}.`)\n      this.dtlsRole = dtlsMatch[1]\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    // We always want to wait for the PeerConnection to be ready for\n    //    negotiation before resolving setLocalDescription.\n    // Each trickle ICE option (FULL/HALF/NONE) emits \"negotiation ready\" event once.\n    emitter.once('onnegotiationready', () => {\n      if (iceTimer.isStarted()) {\n        // In a HALF trickle scenario, the Peer will be ready for negotiation\n        //    before ICE collection has completed. Log that timing.\n        log.debug(`Took ${iceTimer.timeFromStart()}ms to collect ICE candidates before negotiation.`)\n      }\n      resolve()\n    })\n\n    nativePeer\n      .setLocalDescription(desc)\n      .then(() => {\n        log.info('Finished setting local description.')\n        log.debug(`State is now ${proxyPeer.signalingState}.`)\n\n        if (config.trickleIceMode === PEER.TRICKLE_ICE.FULL) {\n          // Trickling ICE candidates means that we can begin negotiation immediately.\n          log.debug('Ready for negotiation (full trickleICE).')\n          emitter.emit('onnegotiationready')\n        } else {\n          // ICE candidates aren't always gathered (only initially and when something\n          //    changes), but we rely on \"gathering complete\" to know when the Peer is\n          //    ready for negotiation. Give the Peer some time to start gathering\n          //    before deciding if we need to wait for gathering to complete or not.\n          // The timeout is needed because of a bug in Chrome:\n          //    https://bugs.chromium.org/p/webrtc/issues/detail?id=1873\n          // Known issue: If candidate collection takes less time than this timeout,\n          //    the logged message will be incorrect, but will functionally still work.\n          setTimeout(() => {\n            if (proxyPeer.iceGatheringState === 'complete') {\n              // Gathering is \"complete\", so we are ready for negotiation.\n              log.debug('Ready for negotiation; ICE candidate collection not needed.')\n              emitter.emit('onnegotiationready')\n            } else {\n              log.debug(`Waiting for ICE collection process (${config.trickleIceMode}).`)\n              // Register the ice collection check function callback to start the candidate collection\n              //  looping process\n              proxyPeer.isIceCollectionCheckOngoing = true\n              iceCollectionScheduledCheck(this)\n            }\n          }, 25)\n        }\n      })\n      .catch(err => {\n        log.info('Failed to set local description.')\n        log.debug(`Peer ${id}: ${err}`)\n        // Parse native error. Make it more understand and/or\n        //    provide a better log about what went wrong.\n        reject(err)\n      })\n  })\n}\n","/**\n * Sets an SDP as the remote description of the connection.\n * @method setRemoteDescription\n * @param  {RTCSessionDescription} sessionDesc\n */\nexport default function setRemoteDescription (desc) {\n  const { nativePeer, proxyPeer, id, log } = this\n\n  // TODO: SDP pipeline here.\n  log.info(`Setting remote description ${desc.type} in ${proxyPeer.signalingState} state.`)\n  log.debug(`Setting remote description ${desc.type}:`, desc.sdp)\n\n  /**\n   * Scenario: A remote answer SDP is being applied to the Peer, but it does\n   *    not have a selected DTLS role yet. This should occur only when the\n   *    initial negotiation is being completed.\n   * Set the local Peer's DTLS role depending on what the remote Peer\n   *    selected. This role will be kept throughout all renegotiations.\n   */\n  if (!this.dtlsRole && desc.type === 'answer') {\n    const dtlsMatch = desc.sdp.match(/a=setup:(\\w*?)[\\r\\n]/)\n    if (dtlsMatch) {\n      const localRole = dtlsMatch[1] === 'active' ? 'passive' : 'active'\n      log.debug(`Selecting DTLS role ${localRole}. Remote Peer selected ${dtlsMatch[1]} DTLS role.`)\n      this.dtlsRole = localRole\n    }\n  }\n\n  // TODO: Update `config.trickleIceMode` to either NONE or FULL (from HALF)\n  //    depending on remote support, since HALF is only needed for initial.\n  return new Promise((resolve, reject) => {\n    nativePeer\n      .setRemoteDescription(desc)\n      .then(() => {\n        log.info('Finished setting remote description.')\n        log.debug(`State is now ${proxyPeer.signalingState}.`)\n        resolve()\n      })\n      .catch(err => {\n        log.info('Failed to set remote description.')\n        log.debug(`Peer ${id}: ${err}`)\n        // Parse native error. Make it more understand and/or\n        //    provide a better log about what went wrong.\n        reject(err)\n      })\n  })\n}\n","import { get } from 'lodash/fp'\nimport { isUnifiedPlan } from '../../sdpUtils/sdpSemantics'\nimport { setTransceiverDirection } from '../../sdpUtils/transceiverUtils'\n\n/**\n * Sets the direction of transceivers.\n * @method setTransceiversDirection\n * @param {string} targetDirection The desired direction to set the transceivers to.\n * @param {Object} [options] Options for specifying which transceivers should be affected. They are ordered by priority.\n * @param {Array} [options.trackIds] The optional list of track ids whose transceivers we want to set the direction of.\n * @return {Object} An object containing an `error` flag and  an array `failures` of transceivers whose directions weren't changed.\n */\nexport default function setTransceiversDirection (targetDirection, options = {}) {\n  const { proxyPeer, config, log } = this\n  log.info(`Setting transceiver direction to ${targetDirection}.`)\n\n  if (isUnifiedPlan(config.rtcConfig.sdpSemantics)) {\n    let transceivers = proxyPeer.getTransceivers()\n\n    if (options.trackIds) {\n      transceivers = transceivers.filter(transceiver => {\n        return (\n          options.trackIds.includes(get(['sender', 'track', 'id'], transceiver)) ||\n          options.trackIds.includes(get(['receiver', 'track', 'id'], transceiver))\n        )\n      })\n    }\n\n    const failures = []\n    transceivers.forEach(transceiver => {\n      if (!setTransceiverDirection(transceiver, targetDirection)) {\n        failures.push(transceiver)\n      }\n    })\n    return {\n      error: failures.length !== 0,\n      failures\n    }\n  } else {\n    log.info('Transceiver direction modification is only available in unified-plan.')\n    return {\n      error: true\n    }\n  }\n}\n","import { MEDIA_DIR } from '../constants'\nimport { values, includes } from 'lodash/fp'\n\nimport { logManager } from '../logs'\nconst log = logManager.getLogger('SdpPipeline')\n\n/**\n * Sets a transceiver's direction.\n * Checks that the desired direction is a valid one.\n * @method setTransceiverDirection\n * @param {Object} transceiver The transceiver that we want to modify.\n * @param {String} targetDirection The desired direction we want to change to.\n * @return {Boolean} Indicator on whether the transceiver direction was successfully changed.\n */\nexport function setTransceiverDirection (transceiver, targetDirection) {\n  if (!includes(targetDirection, values(MEDIA_DIR))) {\n    log.info(`Invalid direction \"${targetDirection}\"`)\n    return false\n  }\n\n  // Only in Safari:\n  //  - has transceiver.setDirection\n  //  - transceiver.direction is readOnly\n  if (transceiver.setDirection) {\n    transceiver.setDirection(targetDirection)\n  } else {\n    transceiver.direction = targetDirection\n  }\n  return true\n}\n","import localDescription from './localDescription'\nimport localTracks from './localTracks'\nimport remoteDescription from './remoteDescription'\nimport remoteTracks from './remoteTracksActive'\nimport remoteTracksAll from './remoteTracks'\nimport senderTracks from './senderTracks'\n\nexport default { localDescription, localTracks, remoteDescription, remoteTracks, remoteTracksAll, senderTracks }\n","/**\n * The SDP for the local end of the connection.\n * @method getLocalDescription\n */\nexport default function getLocalDescription () {\n  const { nativePeer, log } = this\n  log.info('Getting local description.')\n\n  const localDesc = nativePeer.localDescription\n  /*\n   * Ensure it is a RTCSessionDescription object.\n   * In some scenarios (based on browser?), it may return an empty object\n   *    instead of undefined when there is no local description.\n   * TODO: Determine if this is still needed, or if we can use the native\n   *    property directly.\n   */\n  if (localDesc && localDesc.sdp && localDesc.type) {\n    return localDesc\n  } else {\n    return undefined\n  }\n}\n","/**\n * @method getLocalTracks\n * @return {Array} List of active Track objects added to the Peer locally.\n */\nexport default function localTracks () {\n  const { proxyPeer, trackManager, log } = this\n  log.info('Getting local tracks.')\n\n  // Return the list of Tracks from active senders.\n  return (\n    proxyPeer\n      .getSenders()\n      /**\n       * Remove any Senders that do not have an associated track.\n       * We only want to retrieve Senders that do have tracks, because those are\n       *    the local tracks that have been added to the Peer.\n       * Senders without tracks are part of a Transceiver where the Receiver has\n       *    a remote track, but no local track has been added to it. We don't\n       *    care about this for the \"get local tracks\" operation.\n       */\n      .filter(sender => Boolean(sender.track))\n      .map(sender => trackManager.get(sender.track.id))\n      .filter(track => {\n        // Make sure the trackManager has the track and that its active.\n        // It's possible that Peer has the sender but not the actual track yet.\n        return track && track.getState().state === 'live' && track.getStream().active\n      })\n  )\n}\n","/**\n * The SDP for the remote end of the connection.\n * @method getRemoteDescription\n */\nexport default function getRemoteDescription () {\n  const { nativePeer, log } = this\n  log.info('Getting remote description.')\n\n  const remoteDesc = nativePeer.remoteDescription\n  /*\n   * Ensure it is a RTCSessionDescription object.\n   * In some scenarios (based on browser?), it may return an empty object\n   *    instead of undefined when there is no local description.\n   * TODO: Determine if this is still needed, or if we can use the native\n   *    property directly.\n   */\n  if (remoteDesc && remoteDesc.sdp && remoteDesc.type) {\n    return remoteDesc\n  } else {\n    return undefined\n  }\n}\n","/**\n * @method getRemoteTracks\n * @return {Array} List of active Track objects the Peer has received remotely.\n */\nexport default function getRemoteTracks () {\n  const { proxyPeer, trackManager, log } = this\n  log.info('Getting remote tracks.')\n\n  // Return the list of Tracks from active receivers.\n  return (\n    proxyPeer\n      .getReceivers()\n      /**\n       * Remove any Receivers that do not have an associated track.\n       * We only want to retrieve Receivers that do have tracks, because those are\n       *    the remote tracks that have been added to the Peer.\n       * Receivers without tracks are part of a Transceiver where the Sender has\n       *    a local track, but no remote track has been added to it. We don't\n       *    care about this for the \"get remote tracks\" operation.\n       */\n      .filter(receiver => Boolean(receiver.track))\n      .map(receiver => trackManager.get(receiver.track.id))\n      .filter(track => {\n        // Make sure the trackManager has the track and that its active.\n        // It's possible that Peer has the receiver but not the actual track yet.\n        return track && track.getState().state === 'live' && track.getStream().active\n      })\n  )\n}\n","/**\n * @method getRemoteTracks\n * @return {Array} List of active Track objects the Peer has received remotely.\n */\nexport default function getRemoteTracks () {\n  const { proxyPeer, trackManager, log } = this\n  log.info('Getting remote tracks.')\n\n  // Return the list of Tracks from active receivers.\n  return (\n    proxyPeer\n      .getReceivers()\n      /**\n       * Remove any Receivers that do not have an associated track.\n       * We only want to retrieve Receivers that do have tracks, because those are\n       *    the remote tracks that have been added to the Peer.\n       * Receivers without tracks are part of a Transceiver where the Sender has\n       *    a local track, but no remote track has been added to it. We don't\n       *    care about this for the \"get remote tracks\" operation.\n       */\n      .filter(receiver => Boolean(receiver.track))\n      .map(receiver => trackManager.get(receiver.track.id))\n      .filter(track => {\n        // Make sure the trackManager has the track\n        return track && track.getState().state === 'live'\n      })\n  )\n}\n","/**\n * This method is similar to the `localTracks` method, however this method returns\n *  all of the sender's tracks (ended or not) rather than just the active/live ones.\n *\n * @method senderTracks\n * @return {Array} List of Track objects added to the Peer locally.\n */\nexport default function senderTracks () {\n  const { proxyPeer, log } = this\n  log.info('Getting sender tracks.')\n\n  // Return the list of Tracks from senders.\n  return (\n    proxyPeer\n      .getSenders()\n      /**\n       * Remove any Senders that do not have an associated track.\n       * We only want to retrieve Senders that do have tracks, because those are\n       *    the local tracks that have been added to the Peer.\n       * Senders without tracks are part of a Transceiver where the Receiver has\n       *    a remote track, but no local track has been added to it. We don't\n       *    care about this for the \"get local tracks\" operation.\n       */\n      .filter(sender => Boolean(sender.track))\n      .map(sender => sender.track)\n  )\n}\n","import { PEER } from '../constants'\n\n/**\n * Configuration object for a Peer.\n * @typedef {Object} PeerConfig\n * @property {Object} [rtcConfig] Configuration for the native RTCPeerConnection.\n * @property {String} [trickleIceMode=FULL] The initial mode the Peer will use when receiving ICE candidates.\n * @property {Boolean} [removeBundling=false] Remove the a=group attribute to stop media bundling\n * @property {Function} [halfTrickleThreshold] Function that determines whether the threshold has been met when in HALF trickle mode.\n */\nexport default {\n  rtcConfig: {\n    sdpSemantics: PEER.SDP_SEMANTICS.PLAN_B\n  },\n  trickleIceMode: PEER.TRICKLE_ICE.FULL,\n  removeBundling: false,\n  halfTrickleThreshold: isPassedHalfTrickleThreshold\n}\n\n/**\n * Default function for determining whether the HALF trickle ICE threshold has\n *    been met, to start trickling ICE candidates.\n * Defines the threshold as one relay candidate being gathered.\n * @method isPassedHalfTrickleThreshold\n * @param  {String}             sdp          The local SDP of the Peer.\n * @param  {RTCIceCandidate}    iceCandidate The native candidate object that triggered this check.\n * @param  {Number}             time         The amount of time (ms) since ICE collection began.\n * @return {Boolean} Whether the \"half trickle\" threshold has been passed.\n */\nfunction isPassedHalfTrickleThreshold ({ sdp, iceCandidate, time }) {\n  const passedHalf = iceCandidate.candidate.indexOf('relay') !== -1\n  return passedHalf\n}\n","/**\n * Prototype for a timer object that can keep time and be stopped and started.\n */\nconst timerPrototype = {\n  /**\n   * Start the timer\n   * @returns {boolean} True if the timer was successfully started, false if it was already started.\n   */\n  start () {\n    if (!this.isStarted()) {\n      this._startTime = now()\n      return true\n    }\n    return false\n  },\n\n  /**\n   * Stops the timer\n   * @returns {boolean} True if the timer was successfully stopped, false if it was already stopped.\n   */\n  stop () {\n    if (this.isStarted()) {\n      this._startTime = undefined\n      return true\n    }\n\n    return false\n  },\n\n  /**\n   * @returns {boolean} True if the timer is started, false otherwise.\n   */\n  isStarted () {\n    return Boolean(this._startTime)\n  },\n\n  /**\n   * @returns {number} The time in milliseconds since the timer was started, or 0 if it wasn't started.\n   */\n  timeFromStart () {\n    return this.isStarted() ? now() - this._startTime : 0\n  }\n}\n\n/**\n * @returns A timestamp in milliseconds since the unix-epoch\n */\nfunction now () {\n  return new Date().getTime()\n}\n\n/**\n * Create a new timer object. Timers are not started when created and need to be started manually.\n *\n * @returns {Object} The timer object that supports the timer interface.\n */\nexport function createTimer () {\n  return Object.create(timerPrototype)\n}\n","import { logManager } from '../logs'\n\n// Models that this manager directly manages.\nimport Media from '../models/media'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Manager for Media objects.\n * Allows the creation and retrieval of media objects.\n * @class MediaManager\n */\nexport default function MediaManager (managers) {\n  const log = logManager.getLogger('Manager', 'Media')\n\n  // Internal variables.\n  const trackManager = managers.trackManager\n  const medias = new Map()\n  const emitter = new EventEmitter()\n\n  /**\n   * Retrieve a snapshot of all Media objects' current state.\n   * @method getState\n   * @return {Array}\n   */\n  function getState () {\n    return getAll().map(id => get(id).getState())\n  }\n\n  /**\n   * Workaround to get Firefox to behave similarly to Chrome regarding device permission prompts.\n   * @method browserConstraintsWorkaround\n   * @param  {MediaStreamConstraints}  constraints\n   * @return {Object}  media constraints\n   */\n\n  function browserConstraintsWorkaround (constraints) {\n    /**\n     * Firefox workaround.\n     *\n     * Issue Summary: Browser behaviour for prompting the user for device\n     *    permissions is not consistent for consecutive gUM calls. The following\n     *    workaround makes it consistent if the less-specific constraint is\n     *    provided.\n     *\n     * Context: The `deviceId` constraint format can be either a string or an\n     *    object. The object format allows precise control over how the browser\n     *    should try to get the track. It can be specified to fail if it can't\n     *    fulfill the constraint (exact), or whether the constraint is \"best\n     *    effort\" (ideal). When the string format is given, it follows the\n     *    \"ideal\" behaviour.\n     * See: https://developer.mozilla.org/en-US/docs/Web/API/ConstrainDOMString\n     *\n     *  - When the \"ideal\" behaviour is followed and the user has not given\n     *      permission (and not disallowed), the browser will prompt the user\n     *      for permission.\n     *  - [Issue] When the \"ideal\" behaviour is followed and the user has given\n     *      permission previously, the browser will not prompt the user for\n     *      permission.\n     *\n     * Problem: When gUM is called for a different device (ideal behaviour) than\n     *    permission was granted for previously, the browser will not prompt the\n     *    user to give permission for the (new) device. This results in gUM\n     *    using the original device for the new track.\n     *\n     * This happens on Firefox because the prompt for media permissions is\n     *    specific to a single device. For Chrome, the prompt is generic to any\n     *    device.\n     * If permissions are always allowed (\"remember my decision\" on Firefox or\n     *    default on Chrome), this issue wouldn't be seen.\n     *\n     * Workaround: When the behaviour (idea / exact) isn't specified, default\n     *    to exact (instead of letting the browser default to ideal; as per the\n     *    specification).\n     *\n     * This ensures that the browser always prompts the user to give permissions\n     *    for the device (if not already granted). It is also more in-line with\n     *    what might be expected when you ask for a certain device (ie. don't\n     *    return a different device unless it was specified that it's okay).\n     */\n    for (const kind in constraints) {\n      if (\n        constraints[kind] &&\n        typeof constraints[kind] === 'object' &&\n        typeof constraints[kind].deviceId === 'string'\n      ) {\n        // Don't allow a \"bare\" value be provided for deviceId. Change it to use\n        //    \"exact\".\n        const id = constraints[kind].deviceId\n        constraints[kind].deviceId = { exact: id }\n      }\n    }\n    return constraints\n  }\n\n  /**\n   * Wraps native mediaStream, adds tracks to trackManager and Media, and sets up event handlers on a given media.\n   * @method setupMedia\n   * @param {MediaStream} mediaStream Creating a Media object with it.\n   * @return {Media}\n   */\n\n  function setupMedia (mediaStream) {\n    const media = new Media(mediaStream, true)\n    log.debug(`Creating Media with ID: ${media.id}.`)\n\n    // Only add tracks to a Media objects using the `addTrack` method.\n    // Specify that this is a local track we're adding\n    mediaStream.getTracks().forEach(nativeTrack => {\n      const wrappedTrack = trackManager.add(nativeTrack, mediaStream, true)\n\n      media.addTrack(wrappedTrack)\n    })\n\n    media.once('media:stopped', mediaId => {\n      remove(mediaId)\n    })\n\n    media.on('track:removed', trackId => {\n      if (media.tracks.size === 0) {\n        remove(media.id)\n      }\n    })\n\n    media.on('track:ended', ({ mediaId, trackId }) => {\n      if (media.getTracks().length === 0) {\n        remove(mediaId)\n      }\n    })\n\n    media.on('track:muted', ({ mediaId, trackId }) => {\n      // TBD: Add any extra behaviour (if needed) here\n    })\n\n    return media\n  }\n\n  /**\n   * Create a new local Media object.\n   * Use the provided constraints to get user media as the base MediaStream.\n   * @method createLocal\n   * @param  {MediaStreamConstraints}  constraints\n   * @return {Promise}\n   */\n  function createLocal (constraints) {\n    const constraintsWorkaround = browserConstraintsWorkaround(constraints)\n\n    // Get user media, ...\n    return new Promise((resolve, reject) => {\n      // TODO: Proper error checking.\n      // TODO: Use the WebAPI directly here? Probably not.\n      navigator.mediaDevices\n        .getUserMedia(constraintsWorkaround)\n        .then(mediaStream => {\n          const media = setupMedia(mediaStream)\n\n          medias.set(media.id, media)\n          // TODO: Better event. Include metadata?\n          emitter.emit('media:new', media.id)\n\n          resolve(media)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Creates a new local Screen Media object.\n   * Use the provided constraints to get user media as the base MediaStream.\n   * @method createLocalScreen\n   * @param {MediaStreamConstraints} constraints\n   * @return {promise}\n   */\n\n  function createLocalScreen (constraints) {\n    const constraintsWorkaround = browserConstraintsWorkaround(constraints)\n\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices\n        .getDisplayMedia(constraintsWorkaround)\n        .then(mediaStream => {\n          const media = setupMedia(mediaStream)\n\n          medias.set(media.id, media)\n          // TODO: Better event. Include metadata?\n          emitter.emit('media:new', media.id)\n\n          resolve(media)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Create a new remote Media object.\n   * Use provided stream/tracks as the base media objects.\n   * @method createRemote\n   * @param  {MediaStream} mediaStream Native MediaStream object.\n   * @param  {Tracks[]} tracks Array of Track objects.\n   * @return {Media}\n   */\n  function createRemote (stream, tracks = []) {\n    const media = new Media(stream, false)\n\n    tracks.forEach(track => {\n      media.addTrack(track)\n    })\n\n    media.once('media:stopped', mediaId => {\n      remove(mediaId)\n    })\n\n    media.on('track:removed', trackId => {\n      if (media.tracks.size === 0) {\n        remove(media.id)\n      }\n    })\n\n    media.on('track:ended', ({ mediaId, trackId }) => {\n      if (media.getTracks().length === 0) {\n        remove(mediaId)\n      }\n    })\n\n    medias.set(media.id, media)\n    // TODO: Better event. Include metadata?\n    emitter.emit('media:new', media.id)\n    return media\n  }\n\n  /**\n   * Removes a Media object from the medias array.\n   * @private\n   * @method remove\n   * @param {String} mediaId\n   */\n  function remove (mediaId) {\n    const media = get(mediaId)\n    if (media) {\n      medias.delete(mediaId)\n      emitter.emit('media:removed', mediaId)\n    }\n  }\n\n  /**\n   * Retrieve an existing Media object.\n   * @method get\n   * @param  {String} mediaId ID of the desired Media object.\n   * @return {Media}\n   */\n  function get (mediaId) {\n    const media = medias.get(mediaId)\n    if (!media) {\n      log.debug(`No media found with ID: ${mediaId}.`)\n    }\n    return media\n  }\n\n  /**\n   * Retrieve a list of all existing Media object's IDs.\n   * @method getAll\n   * @return {Array} List of Media IDs.\n   */\n  function getAll () {\n    return Array.from(medias.keys())\n  }\n\n  /**\n   * Finds the Media object that contains the specified Track.\n   * @method findTrack\n   * @param  {string}  trackId The ID of the Track to find.\n   * @return {string} The ID of the Media object that contains the Track.\n   */\n  function findTrack (trackId) {\n    // Search through all Media objects for the one that has the desired track.\n    const allMedia = Array.from(medias.values())\n    const media = allMedia.find(media => media.getTrack(trackId))\n    if (media) {\n      log.debug(`Found Media (${media.id}) with Track ${trackId}.`)\n      return media.id\n    } else {\n      log.debug(`Found no Media with Track ${trackId}.`)\n    }\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    // Getter APIs.\n    get,\n    getAll,\n    getState,\n    findTrack,\n    // Create APIs.\n    createLocal,\n    createLocalScreen,\n    createRemote,\n    // Event APIs.\n    on,\n    once,\n    off\n  }\n}\n","import { logManager } from '../logs'\n\nimport Peer from '../Peer'\n\n// Libraries.\nimport { v4 as uuidV4 } from 'uuid'\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Manager for Peer objects.\n * Allows the creation and retrieval of peer objects.\n * @method PeerManager\n */\nexport default function PeerManager (managers) {\n  const log = logManager.getLogger('Manager', 'Peer')\n\n  // Internal variables.\n  const trackManager = managers.trackManager\n  const peers = new Map()\n  const emitter = new EventEmitter()\n\n  /**\n   * Retrieve a snapshot of all Peer objects' current state.\n   * @method getState\n   * @return {Array}\n   */\n  function getState () {\n    return getAll().map(id => get(id).getState())\n  }\n\n  /**\n   * Create a new Peer using the provided configs.\n   * @method create\n   * @param  {Object} [config={}]\n   * @return {Peer}\n   */\n  function create (config = {}) {\n    const peer = new Peer(uuidV4(), config, trackManager)\n    peer.once('peer:closed', id => peers.delete(id))\n    peers.set(peer.id, peer)\n    emitter.emit('peer:new', peer.id)\n    return peer\n  }\n\n  /**\n   * Retrieves an existing Peer object.\n   * @method get\n   * @param  {String} id ID of the desired Peer object.\n   * @return {Peer}\n   */\n  function get (id) {\n    const peer = peers.get(id)\n    if (!peer) {\n      log.debug(`No Peer found with ID: ${id}.`)\n    }\n    return peer\n  }\n\n  /**\n   * Retrieve a list of all existing Peer object's IDs.\n   * @method getAll\n   * @return {Array} List of Peer IDs.\n   */\n  function getAll () {\n    return Array.from(peers.keys())\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    getState,\n    get,\n    getAll,\n    create,\n    // Event APIs.\n    on,\n    once,\n    off\n  }\n}\n","import { logManager } from '../logs'\nimport Session from '../models/session'\n\n// Libraries.\nimport { v4 as uuidV4 } from 'uuid'\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Manager for Session objects.\n * Allows for creation and retrieval of session objects.\n * @method SessionManager\n */\nexport default function SessionManager (managers) {\n  const log = logManager.getLogger('Manager', 'Session')\n  // Internal variables.\n  const sessions = new Map()\n  const emitter = new EventEmitter()\n\n  /**\n   * Create a new Session object.\n   * @method create\n   * @param {Object} [config]\n   * @param {Object} [config.peer] Configs for the Session's Peer object.\n   * @return {Session}\n   */\n  function create (config = {}) {\n    const session = new Session(uuidV4(), managers, config)\n    session.once('session:ended', id => {\n      sessions.delete(id)\n      emitter.emit('session:removed', id)\n    })\n    sessions.set(session.id, session)\n    emitter.emit('session:new', session.id)\n    return session\n  }\n\n  /**\n   * Retrieve an existing Session object.\n   * @method get\n   * @param  {String} sessionId ID of the desired Session object.\n   * @return {Session}\n   */\n  function get (sessionId) {\n    const session = sessions.get(sessionId)\n    if (!session) {\n      log.debug(`No session found with ID: ${sessionId}.`)\n    }\n    return session\n  }\n\n  /**\n   * Retrieve a list of all existing Sessions.\n   * @method getAll\n   * @return {Array} List of Media IDs.\n   */\n  function getAll () {\n    return Array.from(sessions.values())\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    create,\n    get,\n    getAll,\n    on,\n    once,\n    off\n  }\n}\n","import { logManager } from '../logs'\n\n// Helpers.\nimport { PEER, ICE_COLLECTION_CHECK_REASONS, ICE_COLLECTION_RESULT_TYPES } from '../constants'\n\n// SDP Helpers.\nimport sdpPipeline from '../sdpUtils/pipeline'\nimport { isUnifiedPlan } from '../sdpUtils/sdpSemantics'\nimport { getSdpSessionId } from '../sdpUtils/extractors'\n\n// General Utils.\nimport { getBrowserDetails, mergeValues } from '../utils'\nimport iceCollectionScheduledCheck from '../Peer/utils/iceCollectionScheduledCheck'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\nimport { debounce } from 'lodash/fp'\nconst unfixedDebounce = debounce.convert({ fixed: false })\n\n/**\n * Object to represent a webRTC Session for a single peer.\n * \"Session\" being an abstraction of a webRTC connection between another peer.\n * Performs logic for initializing and connecting a peer connection.\n * Manages media added to / received from the peer connection.\n * @method Session\n */\nexport default function Session (id, managers, config = {}) {\n  const log = logManager.getLogger('Session', id)\n  log.info('Creating new Session.')\n  const sdpSemantics = config.peer && config.peer.rtcConfig && config.peer.rtcConfig.sdpSemantics\n  log.debug(`Session configured for ${sdpSemantics || 'default'} SDP semantics.`)\n\n  // Internal variables.\n  const sessionId = id\n  let peerId\n  const peerManager = managers.peerManager\n  const mediaManager = managers.mediaManager\n  const trackManager = managers.trackManager\n  const emitter = new EventEmitter()\n\n  // Session settings\n  const settings = {\n    dscpControls: {}\n  }\n\n  // This structure is used to remember the dtls role of a peer relative to some remote sdp.\n  // key: the remote sdp's session id (o= line).\n  // value: the dtls role that the current peer's local sdp has.\n  // This is needed because a remote SDP with the same sessionId as a previous one may reappear later on\n  //  (music-unhold scenario) and the roles will be expected to be the same.\n  const dtlsRoleRecord = new Map()\n\n  // The latest remote description successfully set, even if the Peer has\n  //    been recreated since it was set.\n  let latestRemoteDescription\n\n  // Create and initialize the peer\n  let peer = peerManager.create(config.peer)\n  if (peer) {\n    // The id of the created peer\n    peerId = peer.id\n    setupPeerEventHandlers(peer)\n  } else {\n    throw new Error(`Peer creation error in Session ${sessionId}.`)\n  }\n\n  /**\n   * Records the peer's dtlsRole if it hasn't been recorded yet and associates it with a remote sdp's sessionId.\n   * @method recordNewDtlsRole\n   */\n  function recordNewDtlsRole () {\n    const remoteSdpSessionId = getSdpSessionId(peer.remoteDescription.sdp)\n    if (!dtlsRoleRecord.get(remoteSdpSessionId)) {\n      dtlsRoleRecord.set(remoteSdpSessionId, peer.dtlsRole)\n    }\n  }\n\n  /**\n   * @property {Array} getLocalTracks List of active Track objects the Session has added locally.\n   */\n  function getLocalTracks () {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      return peer.localTracks\n    } else {\n      return []\n    }\n  }\n\n  /**\n   * @property {Array} getRemoteTracks List of active Track objects the Session has received remotely.\n   */\n  function getRemoteTracks () {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      return peer.remoteTracks\n    } else {\n      return []\n    }\n  }\n\n  /**\n   * Retrieve a snapshot of the Session object's current state.\n   * @method getState\n   * @return {Object}\n   */\n  function getState () {\n    return {\n      id: sessionId,\n      localTracks: getLocalTracks(),\n      remoteTracks: getRemoteTracks()\n    }\n  }\n\n  /**\n   * Setup a warm PeerConnection.\n   * @method warmup\n   */\n  function warmup () {}\n\n  /**\n   * Add Track objects to the Session.\n   * @method addTracks\n   * @param  {Array} tracks List of Track objects.\n   * @param  {Object} dscpTrackMapping Track - DSCPSettings map\n   */\n  function addTracks (tracks, dscpTrackMapping) {\n    const peer = peerManager.get(peerId)\n    // TODO: Better error handling?\n    if (peer) {\n      const addTrackOrReuseTransceiverPromises = tracks.map(track => {\n        return new Promise((resolve, reject) => {\n          // We try to find a reusable transceiver that we can attach the track to achieve the following:\n          // - Avoid transceiver pollution and needing to create a brand new transceiver to attach the track to.\n          // - Allow re-adding of the same track type that has been previously removed.\n          //   (This is so that we can still have re-adding of tracks when using the \"basic\" media API which imposes a 1-audio & 1-video limit)\n          const reusableTransceiver = peer.findReusableTransceiver(track.track.kind)\n\n          // If we can find a reusable transceiver, reuse it.\n          if (isUnifiedPlan(config.peer.rtcConfig.sdpSemantics) && reusableTransceiver) {\n            reusableTransceiver.sender\n              // Replace the dummy track on the Sender with the actual track we want to send.\n              .replaceTrack(track.track)\n              .then(() => {\n                /*\n                 * Set the correct direction on the Transceiver to include that we now want to send:\n                 *   - sendrecv --> sendrecv\n                 *   - sendonly --> sendonly\n                 *   - recvonly --> sendrecv\n                 *   - inactive --> sendonly\n                 */\n                reusableTransceiver.direction = ['sendrecv', 'recvonly'].includes(reusableTransceiver.direction)\n                  ? 'sendrecv'\n                  : 'sendonly'\n\n                // Ensure the track has an associated MediaStream. The remote endpoint will\n                //    get access to this MediaStream and be able to listen for events (for\n                //    example, when the track is removed from the MediaStream).\n                try {\n                  reusableTransceiver.sender.setStreams(track.getStream())\n                } catch (err) {\n                  /*\n                   * Known limitation: Firefox (v88) and Safari (v14) do not support this API.\n                   * Ref: https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/setStreams\n                   *    KAA-2628\n                   */\n                  log.info(\n                    'Browser does not support Sender.setStreams API. Issues may occur on the remote side when this Track is removed.'\n                  )\n                }\n\n                resolve(\n                  `Track (${track.track.kind} : ${track.id}) reused transceiver (mid: ${reusableTransceiver.mid}).`\n                )\n              })\n              .catch(err => {\n                log.error(err)\n                reject(err)\n              })\n          } else {\n            // To get around the current limitation described above, we use peerConnection's `addTrack` when we can't find a reusable transceiver.\n            // `addTrack` does one of the following when called:\n            // - Create a new transceiver and attaches the track and stream to the sender\n            // - Find and use an existing transceiver that has never been used to send data before and attach the track and stream to the sender.\n            peer.addTrack(track)\n            resolve(`Added track (${track.track.kind} : ${track.id}).`)\n          }\n        }).then(message => {\n          // Set event emitters and handlers\n          log.info(message)\n\n          // Indicate that the Session has a new Track.\n          emitter.emit('new:track', {\n            local: true,\n            trackId: track.id\n          })\n\n          settings.dscpControls = mergeValues(settings.dscpControls, dscpTrackMapping)\n\n          const media = mediaManager.get(track.getStream().id)\n          if (media) {\n            media.on('track:removed', trackId => {\n              emitter.emit('track:removed', {\n                local: true,\n                trackId: trackId\n              })\n            })\n          }\n\n          track.once('ended', ({ performRenegotiation }) => {\n            // If the PeerConnection is closed, we don't need to worry about\n            //    removing the track (and it would throw an error anyway).\n            if (peer.signalingState !== 'closed') {\n              peer.removeTrack(track.id)\n              emitter.emit('track:ended', {\n                local: true,\n                trackId: track.id,\n                performRenegotiation: performRenegotiation\n              })\n              // Remove track from session dscp settings\n              if (settings.dscpControls.hasOwnProperty(track.id)) {\n                log.debug(`Removing track ${track.id} from session dscp settings`)\n                delete settings.dscpControls[track.id]\n              }\n            }\n          })\n        })\n      })\n\n      return Promise.all(addTrackOrReuseTransceiverPromises)\n    }\n  }\n\n  /**\n   * Creates a local SDP offer.\n   * @method createOffer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Object} [options.mediaDirections] Directions to use for media.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the local offer.\n   * @return {Promise} Resolves with the offer.\n   */\n  function createOffer (options = {}) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      // If using unified-plan, remove options.mediaDirections.\n      // This is because directions are now set in transceivers.\n      if (isUnifiedPlan(config.peer.rtcConfig.sdpSemantics)) {\n        if (options.mediaDirections) {\n          setLocalAndRemoteTransceiversDirection(options.mediaDirections)\n          delete options.mediaDirections\n        }\n      }\n\n      peer\n        .createOffer(options)\n        .then(offer => {\n          if (options.sdpHandlers || sdpPipeline.getHandlers().length) {\n            log.debug('Modifying local offer with SDP pipeline.')\n            offer.sdp = sdpPipeline.run(options.sdpHandlers, offer.sdp, {\n              type: offer.type,\n              endpoint: PEER.ENDPOINT.LOCAL\n            })\n          }\n\n          resolve(offer)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Sets a local SDP.\n   * @method setLocalDescription\n   * @param  {Object} description The description containing the SDP to set as the local description.\n   * @return {Promise} Resolves with the description.\n   */\n  function setLocalDescription (description) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      peer\n        .setLocalDescription(description)\n        .then(() => {\n          // Record the peer's dtls role if setting a local answer.\n          if (description.type === 'answer') {\n            recordNewDtlsRole()\n          }\n\n          // Set any parameters on the peer's senders if applicable\n          setParameters()\n\n          // Resolve with the _current_ local description, which may be\n          //    different than the provided description due trickle ICE config.\n          resolve(peer.localDescription)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Rollback the local description.\n   * @method rollbackLocalDescription\n   * @return {Promise} Resolves with the rollbacked description or error.\n   */\n  function rollbackLocalDescription () {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      peer\n        .setLocalDescription({ type: 'rollback' })\n        .then(() => {\n          resolve(peer.localDescription)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Parse the result of a call to the ice collection check function and act accordingly:\n   *  'StartCall' type - emit the negotiation ready event\n   *  'Error' type - end the session\n   *  'Wait' type - Schedule a callback to the ice collection check function\n   * @method iceCollectionCheckResult\n   * @param {Object} result The result of ice collection check function.\n   * @param {string} result.type The action to take.\n   * @param {number} result.wait How many ms to wait for the next scheduled check.\n   * @return {Promise} Resolves with the rollbacked description or error.\n   */\n  function iceCollectionCheckResult (result) {\n    const peer = peerManager.get(peerId)\n    if (!peer) {\n      return new Error(`Peer not found in Session ${sessionId}.`)\n    }\n\n    if (result.type === ICE_COLLECTION_RESULT_TYPES.START_CALL) {\n      log.info('Proceeding with the negotiation as instructed by the ice collection check.')\n      peer.isIceCollectionCheckOngoing = false\n      peer.emitter.emit('onnegotiationready')\n    } else if (result.type === ICE_COLLECTION_RESULT_TYPES.ERROR) {\n      log.info('Cleaning up session as instructed by the ice collection check.')\n      peer.isIceCollectionCheckOngoing = false\n      const localTracks = getLocalTracks()\n      localTracks.forEach(track => track.cleanup())\n      end()\n    } else if (result.type === ICE_COLLECTION_RESULT_TYPES.WAIT) {\n      // If `result.wait` is not set, then the ice collection check function is only waiting for either\n      //  ice candidate events or ice gathering state change events\n      if (result.wait) {\n        log.debug(`Setting a scheduled check for the ice collection check after ${result.wait} ms`)\n        peer.iceLoop = setTimeout(() => iceCollectionScheduledCheck(peer), result.wait)\n      }\n    } else {\n      log.info('Unexpected result type from ICE collection check function, ending call.')\n      peer.isIceCollectionCheckOngoing = false\n      const localTracks = getLocalTracks()\n      localTracks.forEach(track => track.cleanup())\n      end()\n    }\n  }\n\n  /**\n   * Sets parameters on the RTCRtpSenders\n   * @param {Object} mediaConstraints\n   */\n  function setParameters (mediaConstraints) {\n    // RTCRtpSender.setParameters is currently unsupported on Firefox (or at least not supported as it should be)\n    if (getBrowserDetails().browser === 'firefox') {\n      log.debug('Setting sender parameters not supported on Firefox; skipping.')\n      return\n    }\n\n    const promises = []\n\n    // Set the DSCPControls (i.e., network priorities) if set in the session's settings\n    for (const trackId in settings.dscpControls) {\n      promises.push(\n        new Promise((resolve, reject) => {\n          log.debug(`Setting networkPriority ${settings.dscpControls[trackId]} for sender with track ${trackId}`)\n          setNetworkPriority(trackId, settings.dscpControls[trackId])\n            .then(resolve)\n            .catch(reject)\n        })\n      )\n    }\n\n    return Promise.all(promises)\n  }\n\n  /**\n   * Sets the networkPriority in the peer connection's sender's encodings.\n   * @method setNetworkPriority\n   * @param {string} trackId The track ID\n   * @param {string} networkPriority The network priority value to set\n   * @return {Promise} Resolves with the setParameters()\n   */\n  function setNetworkPriority (trackId, networkPriority) {\n    const peer = peerManager.get(peerId)\n    const senders = peer.getSenders()\n\n    // search for a sender associated with the provided track id\n    const sender = senders.find(sender => sender.track.id === trackId)\n    if (sender) {\n      // Need to perform a getParameters() prior to a setParameters()\n      const parameters = sender.getParameters()\n      parameters.encodings.forEach(encoding => {\n        encoding.networkPriority = networkPriority\n      })\n      return sender.setParameters(parameters)\n    } else {\n      const errMsg = `Cannot find sender associated with trackId: ${trackId}`\n      log.info(errMsg)\n      return Promise.reject(errMsg)\n    }\n  }\n\n  /**\n   * Generates (and sets) a local SDP offer.\n   * @method generateOffer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Object} [options.mediaDirections] Directions to use for media.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the local offer.\n   * @return {Promise} Resolves with the offer.\n   */\n  function generateOffer (options = {}) {\n    // Backwards compatibility: Create the offer and set it as one operation.\n    return new Promise((resolve, reject) => {\n      createOffer(options)\n        .then(setLocalDescription)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Replaces a specified transceiver's sender.track.\n   * @method replaceTrack\n   * @param {Object} newTrack The MediaStreamTrack we want to place into the sender.\n   * @param {Object} options Options for specifying which transceiver's sender should be replaced. They are ordered by priority.\n   * @param {String} [options.trackId] The transceiver with the specific sender.track.id.\n   * @param {String} [options.mid] The transceiver with the specific media id.\n   * @return {Object} A Promise object which is fulfilled once the track has been replaced\n   */\n  function replaceTrack (newTrack, options) {\n    const peer = peerManager.get(peerId)\n    const track = trackManager.get(newTrack.id)\n    return peer\n      .replaceTrack(track.track, options)\n      .then(() => {\n        // Setup handlers for the replaced track, same as adding a new track\n        const media = mediaManager.get(track.getStream().id)\n        if (media) {\n          media.on('track:removed', trackId => {\n            emitter.emit('track:removed', {\n              local: true,\n              trackId: trackId\n            })\n          })\n        }\n\n        track.once('ended', ({ performRenegotiation }) => {\n          // If the PeerConnection is closed, we don't need to worry about\n          //    removing the track (and it would throw an error anyway).\n          if (peer.signalingState !== 'closed') {\n            peer.removeTrack(track.id)\n            emitter.emit('track:ended', {\n              local: true,\n              trackId: track.id,\n              performRenegotiation: performRenegotiation\n            })\n            // Remove track from session dscp settings\n            if (settings.dscpControls.hasOwnProperty(track.id)) {\n              log.debug(`Removing track ${track.id} from session dscp settings`)\n              delete settings.dscpControls[track.id]\n            }\n          }\n        })\n\n        emitter.emit('track:replaced', {\n          oldTrackId: options.trackId,\n          trackId: newTrack.id\n        })\n      })\n      .catch(err => err)\n  }\n\n  /**\n   * Sets the direction of transceivers.\n   * @method setTransceiversDirection\n   * @param {String} targetDirection The desired direction to set the transceivers to.\n   * @param {Object} [options] Options for specifying which transceivers should be affected.\n   *  trackIds option has priority\n   * @param {Array} [options.trackIds] The optional list of track ids whose transceivers we want to set the direction of.\n   * @return {Object} An object containing an `error` flag and  an array `failures` of transceiver \"mid\"s whose directions weren't changed.\n   */\n  function setTransceiversDirection (targetDirection, options = {}) {\n    if (isUnifiedPlan(config.peer.rtcConfig.sdpSemantics)) {\n      const peer = peerManager.get(peerId)\n      return peer.setTransceiversDirection(targetDirection, options)\n    } else {\n      log.info('Transceiver direction modification is only available in unified-plan.')\n      return { error: true }\n    }\n  }\n\n  /**\n   * Sets the direction of transceivers by checking both the local and remote track IDs\n   * @method setLocalAndRemoteTransceiversDirection\n   * @param {Object} mediaDirections Options for specifying the directions we want to set for certain medias (i.e., audio and video)\n   * @param {Array} [mediaDirections.audio] The direction we want to set of the transceivers with audio tracks\n   * @param {Array} [mediaDirections.video] The direction we want to set of the transceivers with video tracks\n   * @return {Object} An object containing an `error` flag and  an array `failures` of transceiver \"mid\"s whose directions weren't changed.\n   */\n  function setLocalAndRemoteTransceiversDirection (mediaDirections) {\n    const peer = peerManager.get(peerId)\n\n    if (mediaDirections.audio) {\n      const localAudioTrackIds = peer.localTracks.filter(track => track.track.kind === 'audio').map(track => track.id)\n      const remoteAudioTrackIds = peer.remoteTracksAll\n        .filter(track => track.track.kind === 'audio')\n        .map(track => track.id)\n\n      const audioResult = peer.setTransceiversDirection(mediaDirections.audio, {\n        trackIds: [...localAudioTrackIds, ...remoteAudioTrackIds]\n      })\n      if (audioResult.error) {\n        log.info(`Failed to process the following transceivers: ${audioResult.failures}`)\n      }\n    }\n\n    if (mediaDirections.video) {\n      const localVideoTrackIds = peer.localTracks.filter(track => track.track.kind === 'video').map(track => track.id)\n      const remoteVideoTrackIds = peer.remoteTracksAll\n        .filter(track => track.track.kind === 'video')\n        .map(track => track.id)\n\n      const videoResult = peer.setTransceiversDirection(mediaDirections.video, {\n        trackIds: [...localVideoTrackIds, ...remoteVideoTrackIds]\n      })\n      if (videoResult.error) {\n        log.info(`Failed to process the following transceivers: ${videoResult.failures}`)\n      }\n    }\n  }\n\n  /**\n   * Processes (and sets) a remote SDP offer.\n   * @method processOffer\n   * @param  {RTCSessionDescription} offer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the remote offer.\n   * @return {Promise}\n   */\n  function processOffer (offer, options = {}) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      if (options.sdpHandlers || sdpPipeline.getHandlers().length) {\n        log.debug('Modifying remote offer with SDP pipeline.')\n        offer.sdp = sdpPipeline.run(options.sdpHandlers, offer.sdp, {\n          type: offer.type,\n          endpoint: PEER.ENDPOINT.REMOTE\n        })\n      }\n\n      peer\n        .setRemoteDescription(offer)\n        .then(() => {\n          // Set the offer as the latest remote description.\n          latestRemoteDescription = offer\n          resolve()\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Creates a local SDP answer.\n   * @method createAnswer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Object} [options.mediaDirections] Directions to use for media.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the local answer.\n   * @return {Promise} Resolves with the answer.\n   */\n  function createAnswer (options = {}) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      // If using unified-plan, remove options.mediaDirections.\n      // This is because directions are now set in transceivers.\n      if (isUnifiedPlan(config.peer.rtcConfig.sdpSemantics)) {\n        if (options.mediaDirections) {\n          setLocalAndRemoteTransceiversDirection(options.mediaDirections)\n          delete options.mediaDirections\n        }\n      }\n\n      // Set the dtlsRole here if the following are true:\n      // - It previously existed for this specific remote sdp.\n      // - It hasn't been set on a recreated peer yet.\n      const remoteSdpSessionId = getSdpSessionId(peer.remoteDescription.sdp)\n      const previousDtlsRole = dtlsRoleRecord.get(remoteSdpSessionId)\n      if (!peer.dtlsRole && previousDtlsRole) {\n        peer.dtlsRole = previousDtlsRole\n      }\n\n      peer\n        .createAnswer(options)\n        .then(answer => {\n          if (options.sdpHandlers || sdpPipeline.getHandlers().length) {\n            log.debug('Modifying local answer with SDP pipeline.')\n            answer.sdp = sdpPipeline.run(options.sdpHandlers, answer.sdp, {\n              type: answer.type,\n              endpoint: PEER.ENDPOINT.LOCAL\n            })\n          }\n          resolve(answer)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Generates (and sets) a local SDP answer.\n   * @method generateAnswer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Object} [options.mediaDirections] Directions to use for media.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the local answer.\n   * @return {Promise} Resolves with the answer.\n   */\n  function generateAnswer (options = {}) {\n    // For backwards compatibility: Should use other APIs directly.\n    return new Promise((resolve, reject) => {\n      createAnswer(options)\n        .then(setLocalDescription)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Processes (and sets) a remote SDP answer.\n   * @method processAnswer\n   * @param  {RTCSessionDescription} answer\n   * @param  {Object} [options] Options for configuring the SDP.\n   * @param  {Array}  [options.sdpHandlers] SDP handlers for modifying the remote answer.\n   * @return {Promise}\n   */\n  function processAnswer (answer, options = {}) {\n    if (options.sdpHandlers || sdpPipeline.getHandlers().length) {\n      log.debug('Modifying remote answer with SDP pipeline.')\n      answer.sdp = sdpPipeline.run(options.sdpHandlers, answer.sdp, {\n        type: answer.type,\n        endpoint: PEER.ENDPOINT.REMOTE\n      })\n    }\n\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      peer\n        .setRemoteDescription(answer)\n        .then(() => {\n          // Record the peer's dtls role.\n          recordNewDtlsRole()\n\n          // Set the answer as the latest remote description.\n          latestRemoteDescription = answer\n\n          resolve()\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Add an ICE candidate from the remote endpoint.\n   * @method addIceCandidate\n   * @param  {RTCIceCandidate} candidate\n   * @param  {Object} [options]\n   * @param  {string} [options.label] The Peer to perform the operation on.\n   * @return {Promise}\n   */\n  function addIceCandidate (candidate, options = {}) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n      }\n\n      peer\n        .addIceCandidate(candidate)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  /**\n   * End the Session.\n   * @method end\n   */\n  function end () {\n    log.info('Ending Session.')\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      peer.close()\n    }\n    emitter.emit('session:ended', sessionId)\n  }\n\n  /**\n   * Removes specified Track objects from the Session.\n   * @method removeTrack\n   * @param  {Array} trackIds List of IDs of Track objects to remove.\n   */\n  function removeTracks (trackIds) {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      trackIds.forEach(trackId => {\n        if (getLocalTracks().findIndex(track => track.id === trackId) > -1) {\n          peer.removeTrack(trackId)\n          // Remove the track from the session dscp settings\n          if (settings.dscpControls.hasOwnProperty(trackId)) {\n            log.debug(`Removing track ${trackId} from session dscp settings`)\n            delete settings.dscpControls[trackId]\n          }\n        }\n      })\n    }\n  }\n\n  /*\n   * Restarts ICE connection\n   * @method restartIce\n   */\n  function restartIce () {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      peer.restartIce()\n    }\n  }\n\n  /*\n   * Get the DTLS role of the Peer\n   * @method getDtlsRole\n   * @return {string} The DTLS role of the Peer\n   */\n  function getDtlsRole () {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      return peer.dtlsRole\n    }\n  }\n\n  /**\n   * Send DTMF tones on specified Track object from the Session.\n   * @method sendDTMF\n   * @param {Object} options The DTMF options.\n   * @param {string} options.tone DTMF tone to send. Valid values are [0,1,2,3,4,5,6,7,8,9,#].\n   * @param {number} [options.duration=100] The amount of time, in milliseconds, that each DTMF tone should last.\n   * @param {number} [options.intertoneGap=70] The length of time, in milliseconds, to wait between tones.\n   * @param {Object} [sendOptions] The send options.\n   * @param {func} [sendOptions.callback] Optional callback for tone event .\n   * @param {string} [sendOptions.trackId] The trackId of the sender to use.\n   * @return {boolean} The success or fail indicator\n   */\n  function sendDTMF (DTMFOptions, sendOptions = {}) {\n    const peer = peerManager.get(peerId)\n    if (peer) {\n      return peer.sendDTMF(DTMFOptions, sendOptions)\n    } else {\n      return false\n    }\n  }\n\n  /**\n   * Retrieve RTCStatsReport from a sender.\n   * @method getStats\n   * @param  {string} trackId The track id associated with a sender.\n   * @return {Promise}\n   */\n  function getStats (trackId) {\n    return new Promise((resolve, reject) => {\n      const peer = peerManager.get(peerId)\n      if (!peer) {\n        reject(new Error(`Peer not found in Session ${sessionId}.`))\n        return\n      }\n      peer\n        .getStats(trackId)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * Sets up event handlers on a given peer.\n   * @method setupPeerEventHandlers\n   * @param {PeerConnection} targetPeer The peer to set event handlers on.\n   */\n  function setupPeerEventHandlers (targetPeer) {\n    targetPeer.oniceconnectionstatechange = event => {\n      emitter.emit('peer:iceConnectionStateChange', {\n        iceConnectionState: targetPeer.iceConnectionState\n      })\n    }\n\n    // TODO: Use `uniqueLabel` when setting event listeners (and bubbling events).\n    // When the peer gets an ICE candidate, emit it as\n    //  a message to be sent to the other end.\n    targetPeer.onicecandidate = event => {\n      emitter.emit('onicecandidate', {\n        candidate: event.candidate\n      })\n    }\n\n    /*\n     * Ice Collection Check Events:\n     *\n     * Emit an event for the session channel everytime:\n     *  - the ICE gathering state changes\n     *  - an ICE candidate is collected\n     *  - it is time for a scheduled call to the collection check function\n     *\n     */\n    targetPeer.onicegatheringstatechange = event => {\n      // Only emit the event if we are in an ongoing ice collection check loop\n      if (targetPeer.isIceCollectionCheckOngoing) {\n        // Clear any previous timeout/loop\n        if (targetPeer.iceLoop) {\n          clearTimeout(targetPeer.iceLoop)\n          targetPeer.iceLoop = undefined\n        }\n        emitter.emit('peer:iceGatheringStateChange', {\n          reason: ICE_COLLECTION_CHECK_REASONS.ICE_GATHERING_STATE_CHANGE,\n          iceCollectionDuration: targetPeer.iceTimer.timeFromStart(),\n          iceCandidates: targetPeer.iceCandidates,\n          iceGatheringState: targetPeer.iceGatheringState,\n          rtcPeerConnectionConfig: targetPeer.config,\n          rtcLocalSessionDescription: targetPeer.localDescription\n        })\n      }\n    }\n\n    // Debounce the listener for the ice candidate event since they can be emitted quite quickly\n    //  one after another. Options: leading:true will ensure the first invocation always occur, and\n    //  trailing:false (default) ensures the last invocation will occur after the delay as appropriate.\n    targetPeer.on(\n      'iceCandidateCollected',\n      unfixedDebounce(50)(\n        iceCollectionInfo => {\n          // Only emit the event if we are in an ongoing ice collection check process\n          if (targetPeer.isIceCollectionCheckOngoing) {\n            // Clear any previous timeout/loop\n            if (targetPeer.iceLoop) {\n              clearTimeout(targetPeer.iceLoop)\n              targetPeer.iceLoop = undefined\n            }\n            emitter.emit('peer:iceCandidateCollected', {\n              reason: ICE_COLLECTION_CHECK_REASONS.NEW_CANDIDATE,\n              ...iceCollectionInfo\n            })\n          }\n        },\n        { leading: true }\n      )\n    )\n\n    targetPeer.on('scheduledCheck', iceCollectionInfo => {\n      // Only emit the event if we are in an ongoing ice collection check loop\n      if (targetPeer.isIceCollectionCheckOngoing) {\n        // Clear any previous timeout/loop\n        if (targetPeer.iceLoop) {\n          clearTimeout(targetPeer.iceLoop)\n          targetPeer.iceLoop = undefined\n        }\n        emitter.emit('peer:iceCollectionScheduledCheck', {\n          reason: ICE_COLLECTION_CHECK_REASONS.SCHEDULED,\n          ...iceCollectionInfo\n        })\n      }\n    })\n\n    // Handle when the Peer receives a new remote track.\n    targetPeer.ontrack = track => {\n      let media = mediaManager.get(track.getStream().id)\n      if (media) {\n        // Add the new Track to its Media object.\n        media.addTrack(track)\n      } else {\n        // Create a new Media object using the Track.\n        media = mediaManager.createRemote(track.getStream(), [track])\n      }\n\n      media.on('track:removed', trackId => {\n        // This is used as a workaround for an issue that was noticed on Chrome 76 plan-b\n        //  (it may have already been happening in previous versions):\n        //  - the remote audio track's `ended` event does not fire when remote sdp comes in with `inactive` media (hold).\n        //  - the remote audio track's `ended` event fires when sdp comes in with `sendrecv` media (unhold).\n        // Only do manual remote track cleanup when plan-b.\n        // Doing so for unified-plan will make the new track in `ontrack` event come in an `ended` state.\n        if (!isUnifiedPlan(config.peer.rtcConfig.sdpSemantics)) {\n          const trackToCleanup = trackManager.get(trackId)\n          if (trackToCleanup) {\n            trackToCleanup.cleanup()\n            log.info(`Cleaning up track ${trackId}.`)\n          } else {\n            log.info(`Track ${trackId} not found.`)\n          }\n        }\n\n        emitter.emit('track:removed', {\n          local: false,\n          trackId: trackId\n        })\n      })\n\n      track.once('ended', () => {\n        emitter.emit('track:ended', {\n          local: false,\n          trackId: track.id,\n          // If a remote track is ended, we don't want to manually perform a renegotiation\n          performRenegotiation: false\n        })\n      })\n\n      const { kind } = track.getState()\n      log.info(`Received new track (${kind} : ${track.id})`)\n\n      // Indicate that the Session has a new Track.\n      emitter.emit('new:track', {\n        local: false,\n        trackId: track.id\n      })\n    }\n  }\n\n  /**\n   * Creates a new peer and replaces the current peer being used by this session.\n   *     This will close the previous Peer, stopping any media being sent/received on it.\n   * @method recreatePeer\n   */\n  function recreatePeer () {\n    const oldPeer = peer\n    const newPeer = peerManager.create(config.peer)\n    if (newPeer) {\n      // The id of the created peer\n      peerId = newPeer.id\n      peer = newPeer\n\n      // Copy tracks\n      oldPeer.localTracks.forEach(oldLocalTrack => {\n        newPeer.addTrack(oldLocalTrack)\n      })\n\n      // Set event handlers\n      setupPeerEventHandlers(newPeer)\n\n      // Close the old peer\n      oldPeer.close()\n    } else {\n      throw new Error(`Peer creation error in Session ${sessionId}.`)\n    }\n  }\n\n  function getPeer () {\n    return peer\n  }\n\n  function getRemoteDescription () {\n    return peer.remoteDescription\n  }\n\n  function getLatestRemoteDesc () {\n    return latestRemoteDescription\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    id: sessionId,\n    config,\n    // Getter APIs.\n    get peer () {\n      return getPeer()\n    },\n    getState,\n    get localTracks () {\n      return getLocalTracks()\n    },\n    get remoteTracks () {\n      return getRemoteTracks()\n    },\n    warmup,\n    addTracks,\n    removeTracks,\n    replaceTrack,\n    setTransceiversDirection,\n    setLocalAndRemoteTransceiversDirection,\n    // Negotiation APIs.\n    createOffer,\n    createAnswer,\n    setLocalDescription,\n    getRemoteDescription,\n    getLatestRemoteDesc,\n    generateOffer,\n    processOffer,\n    generateAnswer,\n    processAnswer,\n    iceCollectionCheckResult,\n    // Other APIs.\n    recreatePeer,\n    rollbackLocalDescription,\n    addIceCandidate,\n    restartIce,\n    getDtlsRole,\n    end,\n    sendDTMF,\n    getStats,\n    setParameters,\n    // Event APIs.\n    on,\n    once,\n    off\n  }\n}\n","import { logManager } from '../logs'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/*\n * A conversion from MediaDeviceInfo.kind values to their more common terms.\n * See: https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/kind\n * @enum {String}\n */\nexport const WEBRTC_DEVICE_KINDS = {\n  audioinput: 'microphone',\n  videoinput: 'camera',\n  audiooutput: 'speaker'\n}\n\n/**\n * Manager for connected devices.\n * Keeps an up-to-date list of all devices.\n * @class DeviceManager\n */\nexport default function DeviceManager () {\n  const log = logManager.getLogger('Manager', 'Device')\n\n  // Internal variables.\n  const emitter = new EventEmitter()\n  // Store each device type separately, so that `deviceId` is unique\n  //    per kind (there is a `default` deviceId per kind).\n  let microphone = []\n  let camera = []\n  let speaker = []\n\n  // Check devices on initialization.\n  checkDevices().then(() => {\n    // Emit an initial event to notify that devices are available.\n    emitter.emit('change')\n  })\n\n  // Check devices whenever they change.\n  let recentDeviceChange = false\n  navigator.mediaDevices.addEventListener('devicechange', () => {\n    log.info('Media device change detected.')\n    // A physical device change results in one event per\n    // device \"kind\". Group the events together.\n    if (!recentDeviceChange) {\n      recentDeviceChange = true\n      setTimeout(() => {\n        recentDeviceChange = false\n        checkDevices().then(() => {\n          // Emit an event to notify of the change.\n          emitter.emit('change')\n        })\n      }, 50)\n    }\n  })\n\n  /**\n   * Updates the stored device lists with the latest devices.\n   * @method checkDevices\n   * @return {Promise}\n   */\n  function checkDevices () {\n    log.info('Checking media devices.')\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices\n        .enumerateDevices()\n        .then(devices => {\n          // Clear the stored devices, to prevent duplicates.\n          microphone = []\n          camera = []\n          speaker = []\n          devices.forEach(device => {\n            const kind = WEBRTC_DEVICE_KINDS[device.kind]\n            switch (kind) {\n              case 'microphone':\n                microphone.push(device)\n                break\n              case 'camera':\n                camera.push(device)\n                break\n              case 'speaker':\n                speaker.push(device)\n                break\n            }\n          })\n          resolve(get())\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Ask for permission and gets the list of available device(s) available from the end-user's devices.\n   * @method setupDeviceInitialization\n   * @param browserConstraints\n   * @return {Object}\n   */\n\n  function setupDeviceInitialization (browserConstraints) {\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices\n        .getUserMedia(browserConstraints)\n        .then(mediaStream => {\n          mediaStream.getTracks().forEach(track => {\n            track.stop()\n          })\n          const devices = checkDevices()\n          resolve(devices)\n        })\n        .catch(reject)\n    })\n  }\n\n  /**\n   * Retrieves the stored device lists.\n   * @method get\n   * @return {Object}\n   */\n  function get () {\n    return {\n      microphone,\n      camera,\n      speaker\n    }\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    checkDevices,\n    setupDeviceInitialization,\n    get,\n    on,\n    once,\n    off\n  }\n}\n","import Track from '../models/track'\n\n// Libraries.\nimport EventEmitter from 'eventemitter3'\n\n/**\n * Manager / store for Track objects.\n * @method TrackManager\n */\nexport default function TrackManager () {\n  /**\n   * The Track objects being managed.\n   * @type {Map}\n   */\n  const tracks = new Map()\n  const emitter = new EventEmitter()\n\n  /**\n   * Retrieve a Track object.\n   * @method get\n   * @param  {string} trackId\n   * @return {Track}\n   */\n  function get (trackId) {\n    return tracks.get(trackId)\n  }\n\n  /**\n   * Retrieve a list of Track objects.\n   * If no tracks are specified, will return all tracks.\n   * @method getTracks\n   * @param  {Array} [trackIds] List of tracks to retrieve.\n   * @return {Array}\n   */\n  function getTracks (trackIds) {\n    if (trackIds) {\n      return trackIds.map(trackId => tracks.get(trackId))\n    } else {\n      return Array.from(tracks.values())\n    }\n  }\n\n  /**\n   * Wraps a MediaStreamTrack into a Track object and adds\n   *    it to the manager.\n   * @method add\n   * @param  {MediaStreamTrack} track A native track object.\n   * @param  {MediaStream} stream\n   * @param  {boolean} isLocalTrack Specifies if the track parameter is a local one or a remote one.\n   * @return {Track} The added/wrapped Track object.\n   */\n  function add (track, stream, isLocalTrack) {\n    const targetTrack = tracks.get(track.id)\n\n    // Chrome issue: track.stream is outdated and needs to be updated to newStream.\n    // targetTrack.stream.active is false & targetTrack.stream.getTracks() gives us an empty array.\n    // stream.active is true & stream.getTracks() gives us the correct array of tracks.\n    // Set/update the new stream as the track's stream\n    if (targetTrack && !targetTrack.getStream().active && stream.active) {\n      // The track was previously registered and is being re-added with new stream\n      targetTrack.setStream(stream)\n      return targetTrack\n    } else if (targetTrack) {\n      // This track is already registered.\n      return targetTrack\n    } else {\n      // Wrap the track as a Track object.\n      const wrappedTrack = new Track(track, stream)\n\n      // Mark it as local (or remote) before we save it in the state\n      wrappedTrack.setIsLocal(isLocalTrack)\n\n      tracks.set(track.id, wrappedTrack)\n\n      // Remove the track from the manager when it ends.\n      wrappedTrack.once('ended', remove)\n\n      emitter.emit('add', wrappedTrack.id)\n      return wrappedTrack\n    }\n  }\n\n  /**\n   * Remove a Track from the manager.\n   * @method remove\n   * @param  {string} trackId\n   * @return {Boolean} Whether the Track existed (and hence removed).\n   */\n  function remove ({ trackId }) {\n    const track = get(trackId)\n    if (track) {\n      tracks.delete(trackId)\n      // Clean up any listeners.\n      track.off('ended', remove)\n      emitter.emit('remove', trackId)\n    }\n\n    return Boolean(track)\n  }\n\n  function on (...args) {\n    return emitter.on(...args)\n  }\n\n  function once (...args) {\n    return emitter.once(...args)\n  }\n\n  function off (...args) {\n    return emitter.off(...args)\n  }\n\n  /**\n   * The exposed API.\n   */\n  return {\n    get,\n    getTracks,\n    add,\n    remove,\n    on,\n    once,\n    off\n  }\n}\n","/**\n * \"Manager\" for general WebRTC functions.\n * @class WebRTCManager\n */\nexport default function WebRTCManager (managers) {\n  /**\n   * Retrieve the list of available and supported codecs based on the browser's capabilities for sending media.\n   * @method getAvailableCodecs\n   * @param {string} kind The kind of media of which to get the supported codecs of.\n   * @return {Array}\n   */\n  function getAvailableCodecs (kind) {\n    return RTCRtpSender.getCapabilities(kind).codecs\n  }\n  /**\n   * The exposed API.\n   */\n  return {\n    getAvailableCodecs\n  }\n}\n","// Call plugin.\nimport pluginInterface from '../interfaceNew'\nimport * as sagas from './sagas'\nimport events from '../interfaceNew/events'\nimport parseConfigs, { mergeDefaults } from '../configs'\n\n// Other plugins.\nimport { mapEvents } from '../../events/interface/actions'\nimport { update as updateConfig, setSdpHandlers } from '../../config/interface/actions'\nimport { logManager } from '../../logs'\n\n// Helpers.\nimport { autoRestart } from '../../common/utils'\n\n// Libraries.\nimport { values } from 'lodash/fp'\nimport { fork, put } from 'redux-saga/effects'\nimport { getWebRTCSupportCapabilities } from 'kandy-webrtc'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * Configuration options for the call feature.\n * @public\n * @name config.call\n * @memberof config\n * @instance\n * @param {Object} call The call configuration object.\n * @param {call.RTCPeerConnectionConfig} [call.defaultPeerConfig] A key-value dictionary that corresponds\n *    to the available RTCPeerConfiguration which is normally passed when creating an RTCPeerConnection.\n *    See {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection#parameters RTCPeerConnection's configuration parameters} for more information.\n *    This is the recommended way of setting ICE servers and other RTCPeerConnection-related configuration.\n * @param {number} [call.iceCollectionIdealTimeout=1000] The amount of time to wait for an ideal candidate in milliseconds.\n *    The default is 1000ms. An ideal list of candidates is a complete list of candidates considering the RTCPeerConnection configuration.\n *    Note that this values will not be considered if a custom function is passed through the `iceCollectionCheckFunction`, and\n *    any timeouts must be handled by the custom function.\n * @param {number} [call.iceCollectionMaxTimeout=3000] The maximum amount of time to wait for ICE collection in milliseconds.\n *    The default is 3000ms. After this time has been reached, the call will proceed with the currently gathered candidates.\n *    Note that this values will not be considered if a custom function is passed through the `iceCollectionCheckFunction`, and\n *    any timeouts must be handled by the custom function.\n * @param {Function} [call.iceCollectionCheckFunction] Override the default IceCollectionCheckFunction to manually decide when\n *    to proceed with operations, error out, or wait for the appropriate states and candidates. The function will an object containing\n *    the ice collection info. See {@link call.IceCollectionInfo IceCollectionInfo} for more details. The function must return\n *    a results object with details on how to proceed with the ICE collection check or operatiaon. See {@link call.IceCollectionCheckResult IceCollectionResult}\n *    object for details on the format of the return object. By default, the check is to ensure at least one relay candidate has been\n *    collected. For more information, see {@link call.IceCollectionCheckFunction IceCollectionCheckFunction}.\n * @param {boolean} [call.serverTurnCredentials=true] Whether server-provided TURN credentials should be used.\n * @param {Array<call.SdpHandlerFunction>} [call.sdpHandlers] List of SDP handler functions to modify SDP. Advanced usage.\n * @param {boolean} [call.removeH264Codecs=true] Whether to remove \"H264\" codec lines from incoming and outgoing SDP messages.\n * @param {boolean} [call.removeBundling=false] Whether to remove a=group attributes to stop media bundling from incoming and outgoing SDP messages.\n * @param {boolean} [call.mediaBrokerOnly=false] Whether all Calls will be anchored on the MediaBroker instead of being peer-to-peer. Set to true if the backend is configured for broker only mode.\n * @param {string} [call.ringingFeedbackMode='auto'] The mode for sending ringing feedback to the Caller ('auto', 'manual').\n *    By default, feedback will be automatically sent when a call has been received. In 'manual' mode, the application\n *    must initiate the feedback being sent. See the `call.sendRingingFeedback` API for more info.\n * @param {number} [call.callAuditTimer=25000] Time interval, in milliseconds between call audits.\n * @param {number} [call.mediaConnectionRetryDelay=3000] Delay, in milliseconds for the passive side of a call to wait before trying a media reconnection.\n */\n\n/**\n * @private\n * @name config.call\n * @memberof config\n * @instance\n * @param {string} [trickleIceMode='NONE'] The Trickle ICE method to use for calls. Currently, no mode is supported.\n * @param {boolean} [normalizeDestination=true] Specifies whether or not SIP address normalization will be applied.\n */\n\nexport default function cpaasCalls (options = {}) {\n  const { mediaDevices, peerConnection } = getWebRTCSupportCapabilities()\n  if (!mediaDevices || !peerConnection) {\n    log.warn('Calls are not supported on this platform due to lack of WebRTC support. Call APIs will not be available.')\n    return\n  }\n\n  // Parse the options provided by the application and make any adjustments needed\n  //    (for backwards-compatibility reasons).\n  options = parseConfigs(options)\n  // Then merge the defaults into them and validate the values.\n  options = mergeDefaults(options)\n\n  function * init ({ webRTC }) {\n    // Change sdpSemantics if not supported\n    const isPlanB = options.defaultPeerConfig.sdpSemantics === 'plan-b'\n    const browserDetails = webRTC.getBrowserDetails()\n\n    // SDP Semantic 'Plan-B' is only supported on Chrome and only prior to M93.\n    // If the configs say to use Plan-B, but the browser does not support it,\n    //    change to Unified-Plan automatically to prevent potential issues.\n    const noPlanBSupport =\n      browserDetails.browser !== 'chrome' || (browserDetails.browser === 'chrome' && browserDetails.version >= 93)\n\n    if (isPlanB && noPlanBSupport) {\n      log.warn('Only Chrome prior to M93 supports `plan-b` sdpSemantics. Switching to `unified-plan`.')\n      options.defaultPeerConfig.sdpSemantics = 'unified-plan'\n    }\n\n    yield put(updateConfig(options, pluginInterface.name))\n    yield put(mapEvents(events))\n\n    // Update the SDP handlers in the config (user provided + some of our own)\n    const sdpHandlerOptions = {\n      removeH264Codecs: options.removeH264Codecs\n    }\n    yield put(setSdpHandlers(options.sdpHandlers, sdpHandlerOptions))\n\n    // Dependencies to be provided to every call saga.\n    const deps = {\n      webRTC: webRTC.managers,\n      browserDetails: webRTC.getBrowserDetails\n    }\n\n    // Wrap the call sagas in a function that provides them with the webRTC stack.\n    const wrappedSagas = values(sagas).map(saga => {\n      return autoRestart(() => saga(deps))\n    })\n\n    // Run all of the sagas.\n    for (const saga of wrappedSagas) {\n      yield fork(saga)\n    }\n  }\n\n  return {\n    name: pluginInterface.name,\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer,\n    init,\n    capabilities: ['call', 'cpaas_call', 'cpaas_user_id', 'cpaas_pstn']\n  }\n}\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a call plugin.\n * @type {string}\n */\nconst name = 'call'\n\n// Export the interface as a single object.\nexport default {\n  name,\n  api,\n  reducer\n}\n","import callAPI from './call'\n\n/**\n * The 'call' namespace (within the 'api' type) is used to make audio and video calls to and from\n * SIP users and PSTN phones.\n *\n * Call functions are all part of the 'call' namespace.\n *\n * @public\n * @namespace call\n */\n\n/**\n * Information about a Call.\n *\n * Can be retrieved using the {@link call.getAll} or {@link call.getById} APIs.\n *\n * @public\n * @static\n * @typedef {Object} CallObject\n * @memberof call\n * @requires cpaas_call\n * @property {string} id The ID of the call.\n * @property {user.UserID} from A unique identifier (uri) of the person who made the call.\n * @property {user.UserID} to A unique identifier (uri) of the person who receives the call.\n * @property {string} direction The direction in which the call was created. Can be 'outgoing' or 'incoming'.\n * @property {string} state The current state of the call. See {@link call.states} for possible states.\n * @property {string} mediaConnectionState The current status of the call's media connection. See {@link call.mediaConnectionStates} for possible states.\n * @property {boolean} localHold Indicates whether this call is currently being held locally.\n * @property {boolean} remoteHold Indicates whether this call is currently being held remotely.\n * @property {Array<string>} localTracks A list of Track IDs that the call is sending to the remote participant.\n * @property {Array<string>} remoteTracks A list of Track IDs that the call is receiving from the remote participant.\n * @property {call.MediaOffered} [mediaOffered] Information about what media was offered by the person who made the call.\n * @property {Object} remoteParticipant Information about the other call participant.\n * @property {string} [remoteParticipant.displayNumber] The User ID of the remote participant in the form \"username@domain\".\n * @property {string} [remoteParticipant.displayName] The display name of the remote participant.\n * @property {call.BandwidthControls} bandwidth The bandwidth limitations set for the call.\n * @property {number} startTime The start time of the call in milliseconds since the epoch.\n * @property {number} [endTime] The end time of the call in milliseconds since the epoch.\n */\n\n/**\n * Information about a Call.\n *\n * Can be retrieved using the {@link call.getAll} or {@link call.getById} APIs.\n *\n * @public\n * @static\n * @module CallObject\n * @typedef {Object} CallObject\n * @memberof call\n * @requires link_call\n * @requires callMe\n * @property {string} id The ID of the call.\n * @property {user.UserID} from A unique identifier (uri) of the person who made the call.\n * @property {user.UserID} to A unique identifier (uri) of the person who receives the call.\n * @property {string} direction The direction in which the call was created. Can be 'outgoing' or 'incoming'.\n * @property {string} state The current state of the call. See {@link call.states} for possible states.\n * @property {string} mediaConnectionState The current status of the call's media connection. See {@link call.mediaConnectionStates} for possible states.\n * @property {boolean} localHold Indicates whether this call is currently being held locally.\n * @property {boolean} remoteHold Indicates whether this call is currently being held remotely.\n * @property {Array<string>} localTracks A list of Track IDs that the call is sending to the remote participant.\n * @property {Array<string>} remoteTracks A list of Track IDs that the call is receiving from the remote participant.\n * @property {call.MediaOffered} [mediaOffered] Information about what media was offered by the person who made the call.\n * @property {Object} remoteParticipant Information about the other call participant.\n * @property {string} [remoteParticipant.displayNumber] The User ID of the remote participant in the form \"username@domain\".\n * @property {string} [remoteParticipant.displayName] The display name of the remote participant.\n * @property {call.BandwidthControls} bandwidth The bandwidth limitations set for the call.\n * @property {Array<call.CustomParameter>} customParameters The locally set Custom Parameters for the call.\n * @property {number} startTime The start time of the call in milliseconds since the epoch.\n * @property {number} [endTime] The end time of the call in milliseconds since the epoch.\n */\n\n/**\n * The 'media' namespace provides an interface for interacting with Media that the\n *    SDK has access to. Media is used in conjunction with the {@link call Calls}\n *    feature to manipulate and render the Tracks sent and received from a Call.\n *\n * Media and Track objects are not created directly, but are created as part of\n *    Call operations. Media and Tracks will either be marked as \"local\" or\n *    \"remote\" depending on whether their source is the local user's machine\n *    or a remote user's machine.\n *\n * The Media feature also keeps track of media devices that the user's machine\n *    can access. Any media device (eg. USB headset) connected to the machine\n *    can be used as a source for media. Available devices can be found using\n *    the {@link media.getDevices} API.\n *\n * @public\n * @namespace media\n */\n\n/**\n * The MediaConstraint type defines the format for configuring media options.\n * Either the `exact` or `ideal` property should be provided. If both are present, the\n *    `exact` value will be used.\n *\n * When the `exact` value is provided, it will be the only value considered for the option.\n *    If it cannot be used, the constraint will be considered an error.\n *\n * When the `ideal` value is provided, it will be considered as the optimal value for the option.\n *    If it cannot be used, the closest acceptable value will be used instead.\n *\n * A string value can be provided directly instead of using the MediaConstraint format.\n *    Using a string directly is not recommended, since behaviour may differ depending\n *    on browser and media property. For most properties, a direct string value will be\n *    handled as `ideal` behaviour, but some properties may follow the `exact` behaviour\n *    (eg. `deviceId`).\n *\n * @public\n * @static\n * @typedef {Object} MediaConstraint\n * @memberof call\n * @property {string} [exact] The required value for the constraint. Other values will not be accepted.\n * @property {string} [ideal] The ideal value for the constraint. Other values will be considered if necessary.\n * @example\n * // Specify video resolution when making a call.\n * client.call.make(destination, {\n *    audio: true,\n *    video: true,\n *    videoOptions: {\n *      // Set height and width constraints to ideally be 1280x720.\n *      height: { ideal: 720 },\n *      width: { ideal: 1280 }\n *    }\n * })\n */\n\n/**\n * The MediaOffered type defines what media capabilities are offered by the person making a call.\n * This is an optional property and therefore may be null if it is not known or if it's associated with caller's side of the call.\n *\n * @public\n * @static\n * @typedef {Object} MediaOffered\n * @memberof call\n * @property {boolean} audio Specifies if any audio capability has been offered by the caller. If set to true, then the caller is capable of supporting at least one audio stream in the current call.\n * @property {boolean} video Specifies if any video capability has been offered by the caller. If set to true, then the caller is capable of supporting at least one video stream in the current call.\n */\n\n/**\n * The BandwidthControls type defines the format for configuring media and/or track bandwidth options.\n * BandwidthControls only affect received remote tracks of the specified type.\n *\n * @public\n * @static\n * @typedef {Object} BandwidthControls\n * @memberof call\n * @property {number} [call] The desired combined bandwidth bitrate in kilobits per second for all media in the call.\n * @property {number} [audio] The desired bandwidth bitrate in kilobits per second for received remote audio.\n * @property {number} [video] The desired bandwidth bitrate in kilobits per second for received remote video.\n * @example\n * // Specify received remote video bandwidth limits when making a call.\n * client.call.make(destination, mediaConstraints,\n *  {\n *    bandwidth: {\n *      video: 5\n *    }\n *  }\n * )\n */\n\n/**\n * The DSCPControls type defines the format for configuring network priorities (DSCP marking) for the media traffic.\n *\n * If DSCPControls are not configured for a call the network priority of the traffic for all media kinds will be the default (i.e., \"low\").\n *\n * @public\n * @static\n * @typedef {Object} DSCPControls\n * @memberof call\n * @property {RTCPriorityType} [audioNetworkPriority='low'] The desired network priority for audio traffic (see {@link https://www.w3.org/TR/webrtc-priority/#rtc-priority-type RTCPriorityType Enum} for the list of possible values).\n * @property {RTCPriorityType} [videoNetworkPriority='low'] The desired network priority for video traffic (see {@link https://www.w3.org/TR/webrtc-priority/#rtc-priority-type RTCPriorityType Enum} for the list of possible values).\n * @property {RTCPriorityType} [screenNetworkPriority='low'] The desired network priority for screen share traffic (see {@link https://www.w3.org/TR/webrtc-priority/#rtc-priority-type RTCPriorityType Enum} for the list of possible values).\n */\n\n/**\n * Configuration options for an RTCPeerConnection.\n * It represents an RTCPeerConfiguration dictionary, whose parameters are documented {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection#parameters here}.\n * @public\n * @static\n * @typedef {Object} RTCPeerConnectionConfig\n * @memberof call\n * @param {Array<RTCIceServer>} [iceServers] The list of ICE servers to be used for calls.\n *   The full set of properties defined for an RTCIceServer, are mentioned\n *   {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer#properties here}.\n * @param {string} [sdpSemantics='unified-plan'] The sdpSemantics to use (`'unified-plan'` or `'plan-b'`).\n *   As 'plan-b' has become a deprecated option, it will therefore be removed in the future.\n * @param {number} [iceCandidatePoolSize] An unsigned 16-bit integer value which specifies\n *   the size of the prefetched ICE candidate pool. The default value is 0 (meaning no candidate prefetching will occur).\n * @param {string} [iceTransportPolicy] The current ICE transport policy; if the policy isn't specified,\n *   'all' is assumed by default. Possible values are: 'all', 'public', 'relay'.\n * @param {string} [bundlePolicy] For further description on this and other properties,\n *   see {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection#parameters RTCPeerConnection's configuration parameters}.\n */\n\n/**\n * @public\n * @static\n * @typedef {Object} IceServer\n * @memberof call\n * @property {Array<string>|string} urls Either an array of URLs for reaching out several ICE servers or a single URL for reaching one ICE server. See {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer/urls RTCIceServers.urls documentation} to learn more about the actual url format.\n * @property {string} [credential] The credential needed by the ICE server.\n * @property {string} [username] The credential needed by the ICE server.\n */\n\n/**\n * This object is provided to the {@link call.IceCollectionCheckFunction` IceCollectionCheckFunction}, and contains the\n *  necessary information about the call (i.e., call ID, current call operation), and information about the ongoing ICE collection,\n *  such as the list of all ICE candidates collected so far and the ICE gathering state.\n *\n * @public\n * @static\n * @typedef {Object} IceCollectionInfo\n * @memberof call\n * @property {string} callId The ID of the call.\n * @property {string} callOperation The current operation of the call.\n * @property {string} reason The reason the check function was called. Three possible values:\n *  'NewCandidate' - A new ICE candidate was collected. Note: there may be multiple new ICE candidates collected.\n *  'IceGatheringStateChanged' - The ICE gathering state changed.\n *  'Scheduled' - A scheduled call (for first invocation, and subsequent invocations based on `wait` value returned by `IceCollectionCheckFunction`)\n * @property {Array<RTCIceCandidate>} iceCandidates An array of all ICE candidates collected so far.\n * @property {number} iceCollectionDuration The time elapsed since the start of the ICE collection process.\n * @property {string} iceGatheringState The current ICE gathering state.\n *    See {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceGatheringState RTCPeerConnection.iceGatheringState}\n * @property {Object} rtcPeerConnectionConfig The current configration for the RTCPeerConnection.\n * @property {string} rtcLocalSessionDescription The current local session description set on the peer.\n */\n\n/**\n * The form of the ICE collection check function, the arguments that it receives, and the outputs expected.\n *\n * This function is provided the necessary details of the current WebRTC session and ICE collection\n * ({@link call.IceCollectionInfo IceCollectionInfo}), which it can use to dictate how to proceed with a call.\n *  The function can be invoked for three different reasons:\n *  a new ICE candidate was collected, the ICE gathering state changed, or a scheduled call based on the `wait` time set after\n *  an initial invocation of the function (See {@link call.IceCollectionInfo IceCollectionInfo}.reason).\n *\n * The function must then return an appropriate result object in the format of {@link call.IceCollectionCheckResult IceCollectionCheckResult}\n *  which will dictate how the call will proceed. An incorrect return object, or result `type`, will cause the call to end with an error.\n *\n * [Default]\n * The default IceCollectionCheckFunction uses the following algorithm to determine if the call can proceed to negotiation:\n * 1. If the `iceGatheringState` is \"complete\" at any stage, then proceed with the negotiation.\n * 2. Otherwise, if before the ideal ICE collection timeout:\n *    - If every media has a relay ICE candidate for every configured TURN server, proceed with negotiation.\n *    - Else, wait until the ideal timeout, or when invoked for another reason.\n * 3. Otherwise, if before the max ICE collection timeout, but after the ideal ICE collection timeout:\n *    - If every media has atleast one relay ICE candidate, proceed with negotiation.\n *    - Else, wait until max timeout, or when invoked for another reason.\n * 4. Otherwise, if we are at, or past, the max ICE collection timeout:\n *    - If there are any ICE candidates collected, proceed with negotiation.\n *    - Else, end the call with an error.\n *\n * The ideal and max timeouts can be configured with the `idealIceCollectionTimeout` and `maxIceCollectionTimeout` properties of\n *  the call config.\n * @public\n * @static\n * @typedef {Function} IceCollectionCheckFunction\n * @memberof call\n * @param {call.IceCollectionInfo} iceCollectionInfo Information about the current status of the ICE candidate collection.\n * @returns {call.IceCollectionCheckResult} Information on how to proceed with the call and/or ICE collection.\n * @example\n * function isRelayCandidate (candidate) {\n * // NOTE: This would need to be different for Firefox since the `.type` property doesn't exist\n * // and we would need to parse it ourselves in the `.candidate` property.\n *   return candidate.type === 'relay'\n * }\n *\n * function myIceCollectionCheck ({ iceGatheringState, iceCandidates }) {\n *   if (iceGatheringState === 'complete') {\n *     if (iceCandidates.some(isRelayCandidate)) {\n *       return { type: 'StartCall' }\n *     } else {\n *       return { type: 'Error', error: new Error('Failed to start call because there is no relay candidates.') }\n *     }\n *   } else {\n *     return { type: 'Wait' }\n *   }\n * }\n */\n\n/**\n * @public\n * @static\n * @typedef {Object} IceCollectionCheckResult\n * @memberof call\n * @property {string} type Indicates how the system should proceed with the call operation / ICE collection. The possible values are:\n *    'StartCall' - instruct the system to start the call with the currently gathered ICE candidates and other information.\n *    'Error' - instruct the system to fail the call with an error. The error to communicate to the user should be specified in the `error` property.\n *    'Wait' - instruct the system to wait for the specified amount of time before triggering a new ICE collection check. The amount\n *        of wait time should be specified in the `wait` property.\n * @property {string} error An error to be sent the user when the `type` of the result is `IceCollectionCheckResultType.Error`\n * @property {number} wait The amount of time (in milliseconds) to wait before triggering a new ICE collection check. This is only\n *    valid if the `type` of result is `IceCollectionCheckResultType.Wait`. If a value is not provided, the ICE collection check function\n *    will only be triggered for new candidates or when the ICE gathering state changes.\n */\n\n/**\n * @public\n * @static\n * @typedef {Object} SdpHandlerInfo\n * @memberof call\n * @property {string} callId The id corresponding to the call for which the handler is being run.\n * @property {RTCSdpType} type The session description's type.\n * @property {string} step The step that will occur after the SDP Handlers are run.\n *    Will be either 'set' (the SDP will be set locally) or 'send' (the SDP will\n *    be sent to the remote endpoint).\n * @property {string} endpoint Which end of the connection created the SDP.\n */\n\n/**\n * The form of an SDP handler function and the expected arguments that it receives.\n * @public\n * @static\n * @typedef {Function} SdpHandlerFunction\n * @memberof call\n * @param {Object} newSdp The SDP so far (could have been modified by previous handlers).\n * @param {call.SdpHandlerInfo} info Additional information that might be useful when making SDP modifications.\n * @param {Object} originalSdp The SDP in its initial state.\n * @returns {Object} The resulting modified SDP based on the changes made by this function.\n */\n\n/**\n * The state representation of a Media object.\n * Media is a collection of Track objects.\n *\n * @public\n * @static\n * @typedef {Object} MediaObject\n * @memberof call\n * @property {string} id The ID of the Media object.\n * @property {boolean} local Indicator on whether this media is local or remote.\n * @property {Array<call.TrackObject>} tracks A list of Track objects that are contained in this Media object.\n */\n\n/**\n * A Track is a stream of audio or video media from a single source.\n * Tracks can be retrieved using the Media module's `getTrackById` API and manipulated with other functions of the Media module.\n *\n * @public\n * @static\n * @typedef {Object} TrackObject\n * @memberof call\n * @property {Array<string>} containers The list of CSS selectors that were used to render this Track.\n * @property {boolean} disabled Indicator of whether this Track is disabled or not. If disabled, it cannot be re-enabled.\n * @property {boolean} isLocal Indicator of whether this Track is a locally created one or is a remote one.\n * @property {string} id The ID of the Track.\n * @property {string} kind The kind of Track this is (audio, video).\n * @property {string} label The label of the device this Track uses.\n * @property {boolean} muted Indicator on whether this Track is muted or not.\n * @property {boolean} sourceMuted Indicator on whether this Track is receiving media from its source or not.\n *    When true, the Track can be considered removed. This indicator is affected by actions outside the\n *    control of the SDK, such as the remote endpoint of a Call stopping to send media for a remote Track,\n *    or the browser temporarily disabling the SDK's access to a local Track's source.\n * @property {string} state The state of this Track. Can be 'live' or 'ended'.\n * @property {string} streamId The ID of the Media Stream that includes this Track.\n */\n\n/**\n * A collection of media devices and their information.\n *\n * @public\n * @static\n * @typedef {Object} DevicesObject\n * @memberof call\n * @property {Array<call.DeviceInfo>} camera A list of camera device information.\n * @property {Array<call.DeviceInfo>} microphone A list of microphone device information.\n * @property {Array<call.DeviceInfo>} speaker A list of speaker device information.\n */\n\n/**\n * Contains information about a device.\n *\n * @public\n * @static\n * @typedef {Object} DeviceInfo\n * @memberof call\n * @property {string} deviceId The ID of the device.\n * @property {string} groupId The group ID of the device. Devices that share a `groupId` belong to the same physical device.\n * @property {string} kind The type of the device (audioinput, audiooutput, videoinput).\n * @property {string} label The name of the device.\n */\n\n/**\n * Custom SIP headers can be used to convey additional information to a SIP endpoint.\n *\n * These parameters must be configured on the server prior to making a request, otherwise the request will fail when trying to include the parameters.\n *\n * These parameters can be specified with the {@link call.make} and {@link call.answer} APIs.\n * They can also be set after a Call is established using the {@link call.setCustomParameters} API, and sent using the {@link call.sendCustomParameters} API.\n *\n * Custom headers may be received anytime throughout the duration a call. A remote endpoint may send custom headers when starting a call,\n *  answering a call, or during call updates such as hold/unhold and addition/removal of media in the call.\n *  When these custom headers are received, the SDK will emit a {@link call.event:call:customParameters call:customParameters} event\n *  which will contain the custom parameters that were received.\n *\n * A Call's custom parameters are stored on the Call's {@link call.CallObject CallObject},\n *  which can be retrieved using the {@link call.getById} or\n *  {@link call.getAll} APIs. These are the parameters that will be sent to the remote\n *  endpoint of the Call. Parameters received from a Call are not stored as\n *  part of the CallObject and are only provided via the {@link call.event:call:customParameters call:customParameters} event.\n *\n * @public\n * @static\n * @module CustomParameter\n * @typedef {Object} CustomParameter\n * @memberof call\n * @requires link_call\n * @requires callMe\n * @property {string} name - The name of the custom parameter\n * @property {string} value - The value of the custom parameter\n * @example\n * // Specify custom parameters when making a call.\n * client.call.make(destination, mediaConstraints,\n *  {\n *    customParameters: [\n *      {\n *        name: 'X-GPS',\n *        value: '42.686032,23.344565'\n *      }\n *    ]\n *  }\n * )\n */\n\n/**\n * Custom SIP bodies can be used to convey additional information to a SIP endpoint.\n *\n * The appropriate configuration for sending custom bodies must be enabled on the server prior to making call requests,\n *  otherwise the requests will fail when trying to include the bodies.\n *\n * The `contentType` of the custom body should be compliant with RFC 2045, RFC 3261 (and their updated versions),\n *  and the `contentDisposition` should be compliant with RFC 2183, RFC 3204, and RFC 3261 (and their updated versions).\n *\n * These custom bodies can be specified with the {@link call.make} and {@link call.answer} APIs.\n *  They can also be set after a Call is established using the {@link call.setCustomParameters} API.\n *\n * A Call's custom bodies are stored on the Call's {@link call.CallObject CallObject},\n *  which can be retrieved using the {@link call.getById} or\n *  {@link call.getAll} APIs. These custom bodies will be sent to the remote endpoint of the Call for all subsequent\n *  basic midcall operations, such as hold/unhold and add/remove media.\n *\n * @private\n * @static\n * @module CustomBody\n * @typedef {Object} CustomBody\n * @memberof call\n * @requires link_call\n * @requires callMe\n * @property {string} contentType - The media type of the message body.\n * @property {string} contentDisposition - How the message body is to be interpreted.\n * @property {string} body - The message body.\n * @example\n * // Specify custom bodies when making a call.\n * client.call.make(destination, mediaConstraints,\n *  {\n *    customBodies: [\n *      {\n *        contentType: 'text/plain;charset=UTF-8',\n *        contentDisposition: 'render;HANDLING=OPTIONAL',\n *        body: 'Geo location information is sent.'\n *      }\n *    ]\n *  }\n * )\n */\n\n/**\n * Call API index.\n * APIs are organized by their namespacing.\n * @method api\n * @param {Object} context\n * @param {Function} context.dispatch The redux store's dispatch function.\n * @param {Function} context.getState The redux store's getState function.\n * @return {Object} The plugin's API object.\n */\nexport default function api (context) {\n  return {\n    call: callAPI(context)\n  }\n}\n","// Call plugin.\nimport { callActions as actions } from '../actions'\nimport { getCalls, getCallById, getOptions } from '../selectors'\nimport { normalizeSipUri } from '../../utils/normalization'\n\n// Other plugins.\nimport { getUserInfo, getDomain } from '../../../auth/interface/selectors'\nimport { setSdpHandlers } from '../../../config/interface/actions'\n\n// Libraries.\nimport { v4 as uuidV4 } from 'uuid'\nimport { isEmpty } from 'lodash/fp'\nimport { defer } from '../../../common/utils'\n\nimport { CALL_STATES, CALL_MEDIA_CONNECTION_STATES } from '../../constants'\n\nimport { logManager, API_LOG_TAG } from '../../../logs'\n\nconst log = logManager.getLogger('CALL')\n\nexport default function callAPI ({ dispatch, getState }) {\n  return {\n    /**\n     * Starts an outgoing call to a {@link call.UserID UserID} or a\n     *    {@link call.PhoneNumber PhoneNumber}.\n     *\n     * The call will be tracked by a unique ID that is returned by the API. The\n     *    application will use this ID to identify and control the call after it\n     *    has been initiated.\n     *\n     * The {@link call.getById} API can be used to retrieve the\n     *    current information about the call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:start call:start} event\n     *    locally when the operation completes. When the remote participant\n     *    receives the call, a {@link call.event:call:receive call:receive}\n     *    event will be emitted remotely for them.\n     *\n     * The SDK requires access to the machine's media devices (e.g. microphone)\n     *    in order to make a call. If it does not already have permissions to\n     *    use the devices, the user may be prompted by the browser to give\n     *    permissions.\n     * @public\n     * @static\n     * @memberof call\n     * @requires cpaas_call\n     * @method make\n     * @param {call.UserID|call.PhoneNumber} destination The desired destination.\n     * @param {Object} media The media options the call should be initialized with.\n     * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n     * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n     * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n     * @param {boolean} [media.video=false] Whether the call should have video on start.\n     * @param {Object} [media.videoOptions] Options for configuring the call's video.\n     * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n     * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n     * @param {boolean} [media.screen=false] Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)\n     * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n     * @param {Object} [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n     * @returns {string} The generated ID of the newly created call.\n     * @example\n     * // Listen for the event emitted after making a call.\n     * client.on('call:start', function (params) {\n     *   const { callId, error } = params\n     *   if (error) {\n     *     // Call failed to initialize.\n     *   } else {\n     *     // Call was initialized, and the recipient user will be notified.\n     *   }\n     * })\n     * // Make an audio-only call.\n     * const newCallId = client.call.make(destination, { audio: true })\n     */\n\n    /**\n     * Starts an outgoing call to a {@link call.SIP_URI SIP_URI} or a\n     *    {@link call.TEL_URI TEL_URI}.\n     *\n     * The call will be tracked by a unique ID that is returned by the API. The\n     *    application will use this ID to identify and control the call after it\n     *    has been initiated.\n     *\n     * The {@link call.getById} API can be used to retrieve\n     *    the current information about the call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:start call:start} event\n     *    locally when the operation completes. When the remote participant\n     *    receives the call, a {@link call.event:call:receive call:receive}\n     *    event will be emitted remotely for them.\n     *\n     * The SDK requires access to the machine's media devices (eg. microphone)\n     *    in order to make a call. If it does not already have permissions to\n     *    use the devices, the user may be prompted by the browser to give\n     *    permissions.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method make\n     * @param {call.SIP_URI|call.TEL_URI} destination The desired destination.\n     * @param {Object} media The media options the call should be initialized with.\n     * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n     * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n     * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n     * @param {boolean} [media.video=false] Whether the call should have video on start.\n     * @param {Object} [media.videoOptions] Options for configuring the call's video.\n     * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n     * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n     * @param {boolean} [media.screen=false] Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)\n     * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n     * @param {Object} [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     * @param {string} [options.displayName] Custom display name to be provided to the destination. Not supported in all environments and may use default display name.\n     * @param {Array<call.CustomParameter>} [options.customParameters] Custom SIP header parameters for the SIP backend.\n     * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n     * @returns {string} The generated ID of the newly created call.\n     * @example\n     * // Listen for the event emitted after making a call.\n     * client.on('call:start', function (params) {\n     *   const { callId, error } = params\n     *   if (error) {\n     *     // Call failed to initialize.\n     *   } else {\n     *     // Call was initialized, and the recipient user will be notified.\n     *   }\n     * })\n     * // Make an audio-only call.\n     * const newCallId = client.call.make(destination, { audio: true })\n     */\n\n    /**\n     * @private\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @requires callMe\n     * @method make\n     * @param {Object} [options]\n     * @param {Array<call.CustomBody>} [options.customBodies] Custom SIP bodies for the SIP backend.\n     */\n    make (destination, media, options = {}) {\n      log.debug(API_LOG_TAG + 'call.make: ', destination, media, options)\n\n      const callId = uuidV4()\n      const from = getUserInfo(getState()).username\n\n      const mediaConstraints = {\n        audio: media.audio && !isEmpty(media.audioOptions) ? media.audioOptions : media.audio,\n        video: media.video && !isEmpty(media.videoOptions) ? media.videoOptions : media.video,\n        screenShare: media.screen && !isEmpty(media.screenOptions) ? media.screenOptions : media.screen\n      }\n\n      const config = getOptions(getState())\n      if (config.normalizeDestination) {\n        // Normalize callee addresses\n        destination = normalizeSipUri(destination, getDomain(getState()))\n        log.info('Address normalized to: ', destination)\n      }\n\n      dispatch(\n        actions.makeCall(callId, {\n          participantAddress: destination,\n          // TODO: Have better property names.\n          from,\n          mediaConstraints,\n          ...options\n        })\n      )\n      return callId\n    },\n\n    /**\n     * Rejects an incoming call.\n     *\n     * The specified call to reject must be in a ringing state with an incoming\n     *    direction. The call will be ended as a result of the operation.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. The remote participant\n     *    will be notified, through their own\n     *    {@link call.event:call:stateChange call:stateChange} event, that the\n     *    call was rejected.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @method reject\n     * @param {string} callId The ID of the call to reject.\n     */\n    reject (callId) {\n      log.debug(API_LOG_TAG + 'call.reject: ', callId)\n      dispatch(actions.rejectCall(callId))\n    },\n\n    /**\n     * Answers an incoming call.\n     *\n     * The specified call to answer must be in Initiated or Ringing state with an incoming\n     *    direction. The call will become connected as a result of the operation.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. This indicates that the\n     *    call has connected with the remote participant. The\n     *    {@link call.getById} API can be used to retrieve the latest call state\n     *    after the change. Further events will be emitted to indicate that the\n     *    call has received media from the remote participant. See the\n     *    {@link call.event:call:newTrack call:newTrack} event for more\n     *    information about this.\n     *\n     * The SDK requires access to the system's media devices (eg. microphone)\n     *    in order to answer a call. If it does not already have permissions to\n     *    use the devices, the user may be prompted by the browser to give\n     *    permissions.\n     * @public\n     * @static\n     * @memberof call\n     * @requires cpaas_call\n     * @method answer\n     * @param {string} callId The ID of the call to answer.\n     * @param {Object} media The media options the call should be initialized with.\n     * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n     * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n     * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n     * @param {boolean} [media.video=false] Whether the call should have video on start.\n     * @param {Object} [media.videoOptions] Options for configuring the call's video.\n     * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n     * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n     * @param {boolean} [media.screen=false] Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)\n     * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n     * @param {Object} [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n     */\n\n    /**\n     * Answers an incoming call.\n     *\n     * The specified call to answer must be in a ringing state with an incoming\n     *    direction. The call will become connected as a result of the operation.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. This indicates that the\n     *    call has connected with the remote participant. The\n     *    {@link call.getById} API can be used to retrieve the latest call state\n     *    after the change. Further events will be emitted to indicate that the\n     *    call has received media from the remote participant. See the\n     *    {@link call.event:call:newTrack call:newTrack} event for more\n     *    information about this.\n     *\n     * The SDK requires access to the system's media devices (eg. microphone)\n     *    in order to answer a call. If it does not already have permissions to\n     *    use the devices, the user may be prompted by the browser to give\n     *    permissions.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method answer\n     * @param {string} callId The ID of the call to answer.\n     * @param {Object} media The media options the call should be initialized with.\n     * @param {boolean} [media.audio=false] Whether the call should have audio on start. Currently, audio-less calls are not supported.\n     * @param {Object} [media.audioOptions] Options for configuring the call's audio.\n     * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n     * @param {boolean} [media.video=false] Whether the call should have video on start.\n     * @param {Object} [media.videoOptions] Options for configuring the call's video.\n     * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n     * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n     * @param {boolean} [media.screen=false] Whether the call should have screenshare on start. (Note: Screensharing is not supported on iOS Safari.)\n     * @param {Object} [media.screenOptions] Options for configuring the call's screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n     * @param {Object} [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     * @param {Array<call.CustomParameter>} [options.customParameters] Custom SIP header parameters for the SIP backend.\n     * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n     */\n\n    /**\n     * @private\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @requires callMe\n     * @method answer\n     * @param {Object} [options]\n     * @param {Array<call.CustomBody>} [options.customBodies] Custom SIP bodies for the SIP backend.\n     */\n    answer (callId, media, options = {}) {\n      log.debug(API_LOG_TAG + 'call.answer: ', callId, media, options)\n\n      const mediaConstraints = {\n        audio: media.audio && !isEmpty(media.audioOptions) ? media.audioOptions : media.audio,\n        video: media.video && !isEmpty(media.videoOptions) ? media.videoOptions : media.video,\n        screenShare: media.screen && !isEmpty(media.screenOptions) ? media.screenOptions : media.screen\n      }\n\n      dispatch(\n        actions.answerCall(callId, {\n          mediaConstraints,\n          ...options\n        })\n      )\n    },\n\n    /**\n     * Sends the \"ringing feedback\" notification to the remote participant of a call.\n     *\n     * When using the 'manual' `ringingFeedbackMode` configuration, the application\n     *    is responsible for transitioning the call into the `Ringing` state. This\n     *    API will notify both ends of the call to enter `Ringing` state at the same\n     *    time. The application may decide not to send the \"ringing feedback\"\n     *    notification by not using this API. The `ringingFeedbackMode` configuration\n     *    must be set to 'manual' to use this API.\n     *\n     * The specified call must be an incoming call in `Initiated` state. The call\n     *    will enter `Ringing` state as a result of the operation.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. The remote participant will\n     *    be notified of the operation through a\n     *    {@link call.event:call:stateChange call:stateChange} event as well.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @method sendRingingFeedback\n     * @param {string} callId The ID of the call.\n     */\n    sendRingingFeedback (callId) {\n      log.debug(API_LOG_TAG + 'call.sendRingingFeedback: ', callId)\n\n      dispatch(actions.sendRingingFeedback(callId))\n    },\n\n    /**\n     * Ignores an incoming call.\n     *\n     * The specified call to ignore must be in a ringing state with an incoming\n     *    direction. The call will be ended as a result of the operation.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. The remote participant\n     *    will not be notified that the call was ignored.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @method ignore\n     * @param {string} callId The ID of the call to ignore.\n     */\n    ignore (callId) {\n      log.debug(API_LOG_TAG + 'call.ignore: ', callId)\n      dispatch(actions.ignoreCall(callId))\n    },\n\n    /**\n     * Puts a call on hold.\n     *\n     * The specified call to hold must not already be locally held. Any/all\n     *    media received from the remote participant will stop being received,\n     *    and any/all media being sent to the remote participant will stop\n     *    being sent.\n     *\n     * Some call operations cannot be performed while the call is on hold. The\n     *    call can be taken off hold with the {@link call.unhold} API.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. The remote participant\n     *    will be notified of the operation through a\n     *    {@link call.event:call:stateChange call:stateChange} event as well.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @method hold\n     * @param {string} callId The ID of the call to hold.\n     */\n    hold (callId) {\n      log.debug(API_LOG_TAG + 'call.hold: ', callId)\n      dispatch(actions.holdCall(callId))\n    },\n\n    /**\n     * Takes a call off hold.\n     *\n     * The specified call to unhold must be locally held. If the call is not\n     *    also remotely held, call media will be reconnected as it was before\n     *    the call was held.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. The remote participant\n     *    will be notified of the operation through a\n     *    {@link call.event:call:stateChange call:stateChange} event as well.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @method unhold\n     * @param {string} callId The ID of the call to unhold.\n     */\n    unhold (callId) {\n      log.debug(API_LOG_TAG + 'call.unhold: ', callId)\n      dispatch(actions.unholdCall(callId))\n    },\n\n    /**\n     * Set the {@link call.CustomParameter Custom Parameters} of a Call, to be provided to the remote endpoint.\n     *\n     * The specified parameters will be saved as part of the call's information throughout the duration of the call.\n     * All subsequent call operations will include these custom parameters.\n     * Therefore, invalid parameters, or parameters not previously configured on the server, will cause subsequent call operations to fail.\n     *\n     * A Call's custom parameters are a property of the Call's {@link call.CallObject CallObject},\n     *    which can be retrieved using the {@link call.getById} or\n     *    {@link call.getAll} APIs.\n     *\n     * The custom parameters set on a call can be sent directly with the {@link call.sendCustomParameters} API.\n     *\n     * Custom parameters can be removed from a call's information by setting them as undefined (e.g., `call.setCustomParameters(callId)`).\n     * Subsequent call operations will no longer send custom parameters.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @requires callMe\n     * @method setCustomParameters\n     * @param {string} callId The ID of the call.\n     * @param {Array<call.CustomParameter>} customParameters The custom parameters to set.\n     */\n\n    /**\n     * Set custom SIP headers and bodies for a call, to be provided to the remote endpoint.\n     *\n     * This API takes either an array of {@link call.CustomParameter Custom Parameters}, or if custom bodies\n     *  also need to be set, an object consisting of either {@link call.CustomParameter Custom Parameters} or\n     *  {@link call.CustomBody Custom Bodies} or both.\n     *\n     * Note that usage of the `setCustomParameters` API will completely overwrite any previously set headers and bodies.\n     *  Therefore, if either parameters or headers are omitted during subsequent API calls, they will\n     *  be overwritten to undefined.\n     * @private\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method setCustomParameters\n     * @param {Array<call.CustomParameter> | Object} customParameters The custom parameters to set.\n     * @param {Array<call.CustomParameter>} [customParameters.customParameters] Custom SIP headers for the SIP backend.\n     * @param {Array<call.CustomBody>} [customParameters.customBodies] Custom SIP bodies for the SIP backend.\n     */\n    setCustomParameters (callId, customParameters) {\n      log.debug(API_LOG_TAG + 'call.setCustomParameters: ', callId, customParameters)\n      dispatch(actions.setCustomParameters(callId, customParameters))\n    },\n\n    /**\n     * Send the custom parameters on an ongoing call to the server. The server may either consume the headers or relay them\n     * to another endpoint, depending on how the server is configured.\n     *\n     * A Call's custom parameters are a property of the Call's {@link call.CallObject CallObject},\n     *    which can be retrieved using the {@link call.getById} or\n     *    {@link call.getAll} APIs.\n     *\n     * To change or remove the custom parameters on a call, use the {@link call.setCustomParameters} API.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @requires callMe\n     * @method sendCustomParameters\n     * @param {string} callId The ID of the call being acted on.\n     */\n    sendCustomParameters (callId) {\n      log.debug(API_LOG_TAG + 'call.sendCustomParameters: ', callId)\n      dispatch(actions.sendCustomParameters(callId))\n    },\n\n    /**\n     * Retrieves the information of all calls made during the current session.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @method getAll\n     * @return {Array<call.CallObject>} Call objects.\n     * @example\n     * let calls = client.call.getAll()\n     * let currentCalls = calls.filter(call => {\n     *     return call.state === client.call.states.CONNECTED\n     * })\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'call.getAll')\n      return getCalls(getState())\n    },\n\n    /**\n     * Retrieves the information of a single call with a specific call ID.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @static\n     * @method getById\n     * @param {string} callId The ID of the call to retrieve.\n     * @return {call.CallObject} A call object.\n     */\n    getById (callId) {\n      log.debug(API_LOG_TAG + 'call.getById: ', callId)\n      return getCallById(getState(), callId)\n    },\n\n    /**\n     * Ends an ongoing call.\n     *\n     * The SDK will stop any/all local media associated with the call. Events\n     *    will be emitted to indicate which media tracks were stopped. See the\n     *    {@link call.event:call:trackEnded call:trackEnded} event for more\n     *    information.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event locally when the operation completes. The remote participant\n     *    will be notified, through their own\n     *    {@link call.event:call:stateChange call:stateChange} event, that the\n     *    call was ended.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @method end\n     * @param {string} callId The ID of the call to end.\n     */\n    end (callId) {\n      log.debug(API_LOG_TAG + 'call.end: ', callId)\n      dispatch(actions.endCall(callId))\n    },\n\n    /**\n     * Add new media tracks to an ongoing call.\n     * Will get new media tracks from the specific sources to add to the call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:newTrack call:newTrack} event\n     *    both for the local and remote users to indicate a track has been\n     *    added to the Call.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string}  callId The ID of the call to add media to.\n     * @param {Object}  [media={}] The media options to add to the call.\n     * @param {boolean} [media.audio=false] Whether to add audio to the call.\n     * @param {boolean} [media.video=false] Whether to add video to the call.\n     * @param {boolean} [media.screen=false] Whether to add the screenshare to the call. (Note: Screensharing is not supported on iOS Safari.)\n     * @param {Object}  [media.audioOptions] Options for configuring the call's audio.\n     * @param {Object}  [media.videoOptions] Options for configuring the call's video.\n     * @param {Object}  [media.screenOptions] Options for configuring the call's screenShare.\n     * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n     * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n     * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n     * @param {call.MediaConstraint} [media.screenOptions.height] The height of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.width] The width of the screenShare.\n     * @param {call.MediaConstraint} [media.screenOptions.frameRate] The frame rate of the screenShare.\n     * @param {Object} [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     * @param {call.DSCPControls} [options.dscpControls] Options for configuring DSCP markings on the media traffic\n     */\n    addMedia (callId, media = {}, options = {}) {\n      log.debug(API_LOG_TAG + 'call.addMedia: ', callId, media)\n      const mediaConstraints = {\n        audio: media.audio && !isEmpty(media.audioOptions) ? media.audioOptions : media.audio,\n        video: media.video && !isEmpty(media.videoOptions) ? media.videoOptions : media.video,\n        screenShare: media.screen && !isEmpty(media.screenOptions) ? media.screenOptions : media.screen\n      }\n\n      dispatch(actions.addMedia(callId, { mediaConstraints, ...options }))\n    },\n\n    /**\n     * Remove tracks from an ongoing call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:trackEnded call:trackEnded}\n     *    event for both the local and remote users to indicate that a track\n     *    has been removed.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string} callId The ID of the call to remove media from.\n     * @param {Array} tracks A list of track IDs to remove.\n     * @param {Object} [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     */\n    removeMedia (callId, tracks, options = {}) {\n      log.debug(API_LOG_TAG + 'call.removeMedia: ', callId, tracks)\n      dispatch(actions.removeMedia(callId, { tracks, ...options }))\n    },\n\n    /**\n     * Adds local video to an ongoing Call, to start sending to the remote\n     *    participant.\n     *\n     * Can only be used in a basic media scenario, where the Call does not\n     *    already have video. For more advanced scenarios, the\n     *    {@link call.addMedia} API can be used.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:newTrack call:newTrack} event\n     *    both for the local and remote users to indicate a track has been\n     *    added to the Call.\n     *\n     * @public\n     * @static\n     * @method startVideo\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string}                 callId              ID of the call being acted on.\n     * @param {Object}                 [videoOptions]           Options for configuring the call's video.\n     * @param {call.MediaConstraint}   [videoOptions.deviceId]  ID of the camera to receive video from.\n     * @param {call.MediaConstraint}   [videoOptions.height]    The height of the video.\n     * @param {call.MediaConstraint}   [videoOptions.width]     The width of the video.\n     * @param {call.MediaConstraint}   [videoOptions.frameRate] The frame rate of the video.\n     * @param {Object}                 [options]\n     * @param {call.BandwidthControls} [options.bandwidth] Options for configuring media's bandwidth.\n     * @param {call.DSCPControls}      [options.dscpControls] Options for configuring DSCP markings on the media traffic.\n     */\n    startVideo (callId, videoOptions = {}, options = {}) {\n      log.debug(API_LOG_TAG + 'call.startVideo: ', callId, options)\n\n      const mediaConstraints = {\n        audio: false,\n        video: !isEmpty(videoOptions) ? videoOptions : true,\n        screenShare: false\n      }\n      dispatch(actions.addBasicMedia(callId, { mediaConstraints, kind: 'video', ...options }))\n    },\n\n    /**\n     * Removes local video from an ongoing Call, stopping it from being sent\n     *    to the remote participant.\n     *\n     * Can only be used in a basic media scenario, where the Call has only one\n     *    video track. For more advanced scenarios, the\n     *    {@link call.removeMedia} API can be used.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:trackEnded call:trackEnded}\n     *    event for both the local and remote users to indicate that a track\n     *    has been removed.\n     *\n     * @public\n     * @static\n     * @method stopVideo\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string} callId ID of the call being acted on.\n     */\n    stopVideo (callId) {\n      log.debug(API_LOG_TAG + 'call.stopVideo: ', callId)\n      dispatch(actions.removeBasicMedia(callId, { kind: 'video' }))\n    },\n\n    /**\n     * Adds local screenshare to an ongoing Call, to start sending to the remote\n     *    participant.\n     *\n     * The latest SDK release (v4.X+) has not yet implemented this API in the\n     *    same way that it was available in previous releases (v3.X). In place\n     *    of this API, the SDK has a more general API that can be used for this\n     *    same behaviour.\n     *\n     * The {@link call.addMedia} API can be used to perform the same behaviour\n     *    as `startScreenshare`. {@link call.addMedia} is a general-purpose API\n     *    for adding media to a call, which covers the same functionality as\n     *    `startScreenshare`. Selecting only screen options when using\n     *    {@link call.addMedia} will perform the same behaviour as using\n     *    `startScreenshare`.\n     *\n     * @public\n     * @static\n     * @method startScreenshare\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @example\n     * // Select media options for adding only screenshare.\n     * const media = {\n     *    audio: false,\n     *    video: false,\n     *    screen: true,\n     *    screenOptions: { ... }\n     * }\n     *\n     * // Add the selected media to the call.\n     * client.call.addMedia(callId, media)\n     */\n\n    /**\n     * Removes local screenshare from an ongoing Call, stopping it from being\n     *    sent to the remote participant.\n     *\n     * The latest SDK release (v4.X+) has not yet implemented this API in the\n     *    same way that it was available in previous releases (v3.X). In place\n     *    of this API, the SDK has a more general API that can be used for this\n     *    same behaviour.\n     *\n     * The {@link call.removeMedia} API can be used to perform the same\n     *    behaviour as `stopScreenshare`. {@link call.removeMedia} is a\n     *    general-purpose API for removing media from a call, which covers the\n     *    same functionality as `stopScreenshare`. Specifying only the screen\n     *    track when using {@link call.removeMedia} will perform the same\n     *    behaviour as using `stopScreenshare`.\n     *\n     * There is a caveat that if a Call has multiple video tracks (for example,\n     *    both a video and a screen track), the SDK itself cannot yet\n     *    differentiate one from the other. The application will need to know\n     *    which track was the screen track in this scenario.\n     * @public\n     * @static\n     * @method stopScreenshare\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @example\n     * const call = client.call.getById(callId)\n     * // Get the ID of any/all video tracks on the call.\n     * const videoTracks = call.localTracks.filter(trackId => {\n     *    const track = call.media.getTrackById(trackId)\n     *    // Both video and screen tracks have kind of 'video'.\n     *    return track.kind === 'video'\n     * })\n     *\n     * // Pick out the screen track.\n     * const screenTrack = videoTracks[0]\n     *\n     * // Remove screen from the call.\n     * client.call.removeMedia(callId, [ screenTrack ])\n     */\n\n    /**\n     * Send DTMF tones to a call's audio.\n     *\n     * The provided tone can either be a single DTMF tone (eg. '1') or a\n     *    sequence of DTMF tones (eg. '123') which will be played one after the\n     *    other.\n     *\n     * The specified call must be either in Connected, Ringing, or Early Media\n     *    state, otherwise invoking this API will have no effect.\n     *\n     * The tones will be sent as out-of-band tones if supported by the call,\n     *    otherwise they will be added in-band to the call's audio.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @method sendDTMF\n     * @param {string} callId ID of the call being acted on.\n     * @param {string} tone DTMF tone(s) to send. Valid characters are ['0','1','2','3','4','5','6','7','8','9','#','*' and ','].\n     * @param {number} [duration=100] The amount of time, in milliseconds, that each DTMF tone should last.\n     * @param {number} [intertoneGap=70] The length of time, in milliseconds, to wait between tones.\n     *\n     */\n    sendDTMF (callId, tone, duration = 100, intertoneGap = 70) {\n      log.debug(API_LOG_TAG + 'call.sendDTMF: ', callId, tone, duration, intertoneGap)\n      dispatch(actions.sendDTMF(callId, { tone, duration, intertoneGap }))\n    },\n\n    /**\n     * Retrieve a snapshot of the low-level information of the Call through statistical\n     *    report.\n     *\n     * The data retrieved is a [RTCStatsReport](https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport)\n     *    object, which contains many individual\n     *    [RTCStats](https://developer.mozilla.org/en-US/docs/Web/API/RTCStats).\n     *    These are advanced statistics gathered by the browser providing insights\n     *    into the Call at a certain point in time. Aggregating reports over a\n     *    period of time would allow a low-level analysis of the Call for that\n     *    period. As an example, this could be done to determine the media quality\n     *    during the Call.\n     *\n     * A Track ID can optionally be provided to get a report for a specific\n     *    Track of the Call.\n     *\n     * This API will return a promise which, when resolved, will contain the report of the particular call.\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a\n     *    {@link call.event:call:statsReceived call:statsReceived} event, after\n     *    the operation completes, that has the report.\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string} callId The ID of the Call to retrieve the report.\n     * @param {string} [trackId] ID of a Track being used by the Call. If not\n     *    provided, RTCStatsReport is generated for the Call itself.\n     * @example\n     * client.on('call:statsReceived', function (params) {\n     *    // Iterate over each individual statistic inside the RTCPStatsReport.\n     *    params.result.forEach(stats => {\n     *        // Handle the data on its own or collate with previously gathered stats\n     *        //    for analysis.\n     *        ...\n     *    })\n     * })\n     *\n     * // Get a snapshot of the Call's stats.\n     * //   This may be done on a regular interval to collect data over time.\n     * client.call.getStats(callId)\n     */\n    getStats (callId, trackId) {\n      log.debug(API_LOG_TAG + 'call.getStats: ', callId, trackId)\n      const deferredResult = defer()\n      dispatch(actions.getStats(callId, { trackId }, deferredResult))\n      return deferredResult.promise\n    },\n\n    /**\n     * Forwards an incoming call to another user.\n     *\n     * The specified destination will receive the Call instead of the current\n     *    user.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event after the operation completes.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method forward\n     * @param {string} callId ID of the call being acted on.\n     * @param {call.SIP_URI|call.TEL_URI} destination The destination to forward the call to.\n     */\n\n    /**\n     * Forwards an incoming call to another user.\n     *\n     * The specified destination will receive the Call instead of the current\n     *    user.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a {@link call.event:call:stateChange call:stateChange}\n     *    event after the operation completes.\n     * @private\n     * @static\n     * @memberof call\n     * @requires cpaas_call\n     * @method forward\n     * @param {string} callId ID of the call being acted on.\n     * @param {call.UserID|call.PhoneNumber} destination The destination to forward the call to.\n     */\n    forward (callId, destination) {\n      log.debug(API_LOG_TAG + 'call.forward: ', destination)\n\n      const config = getOptions(getState())\n      if (config.normalizeDestination) {\n        // Normalize callee addresses\n        destination = normalizeSipUri(destination, getDomain(getState()))\n        log.info('Address normalized to: ', destination)\n      }\n\n      dispatch(actions.forwardCall(callId, { destination }))\n    },\n\n    /**\n     * Performs a \"consultative\" transfer between two ongoing calls (also known\n     *    as an announced or warm transfer). This allows the current user to\n     *    transfer the remote participant of a call to another user, after\n     *    having spoken to both users.\n     *\n     * Both calls used for the transfer must be locally held. After the\n     *    operation, these calls will be ended, as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event.\n     *\n     * Both remote participants will see their call be unheld by the operation,\n     *    as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event, and will\n     *    be connected to one another afterwards.\n     *\n     * The progression of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event. Both local\n     *    calls will receive this event, since it is an operation on both calls,\n     *    and the remote calls will receive it as if it were a \"remote unhold\"\n     *    operation.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method consultativeTransfer\n     * @param {string} callId ID of the call being acted on.\n     * @param {string} otherCallId ID of the other call being acted on.\n     */\n\n    /**\n     * Performs a \"consultative\" transfer between two ongoing calls (also known\n     *    as an announced or warm transfer). This allows the current user to\n     *    transfer the remote participant of a call to another user, after\n     *    having spoken to both users.\n     *\n     * Both calls used for the transfer must be locally held. After the\n     *    operation, these calls will be ended, as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event.\n     *\n     * Both remote participants will see their call be unheld by the operation,\n     *    as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event, and will\n     *    be connected to one another afterwards.\n     *\n     * The progression of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event. Both local\n     *    calls will receive this event, since it is an operation on both calls,\n     *    and the remote calls will receive it as if it were a \"remote unhold\"\n     *    operation.\n     * @private\n     * @static\n     * @memberof call\n     * @requires cpaas_call\n     * @method consultativeTransfer\n     * @param {string} callId ID of the call being acted on.\n     * @param {string} otherCallId ID of the other call being acted on.\n     */\n    consultativeTransfer (callId, otherCallId) {\n      log.debug(API_LOG_TAG + 'call.consultativeTransfer: ', callId, otherCallId)\n\n      dispatch(actions.consultativeTransfer(callId, { otherCallId }))\n    },\n\n    /**\n     * Performs a \"direct\" transfer on a call (also known as an unannounced or\n     *    blind transfer). This allows the current user to transfer the remote\n     *    participant of a call to another user, similar to a \"forward\"\n     *    operation.\n     *\n     * The specified call must be locally held. After the operation, this call\n     *    will be ended, as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event.\n     *\n     * The \"destination\" user will receive an incoming call, and when answered,\n     *    they will be connected with the remote participant of the specified\n     *    call.\n     *\n     * The progression of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event. The remote\n     *    participant being transferred will receive it as if it were a \"remote\n     *    unhold\" operation.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method directTransfer\n     * @param {string} callId ID of the call being acted on.\n     * @param {call.SIP_URI|call.TEL_URI} destination The destination to transfer the call to.\n     */\n\n    /**\n     * Performs a \"direct\" transfer on a call (also known as an unannounced or\n     *    blind transfer). This allows the current user to transfer the remote\n     *    participant of a call to another user, similar to a \"forward\"\n     *    operation.\n     *\n     * The specified call must be locally held. After the operation, this call\n     *    will be ended, as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event.\n     *\n     * The \"destination\" user will receive an incoming call, and when answered,\n     *    they will be connected with the remote participant of the specified\n     *    call.\n     *\n     * The progression of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event. The remote\n     *    participant being transferred will receive it as if it were a \"remote\n     *    unhold\" operation.\n     * @private\n     * @static\n     * @memberof call\n     * @requires cpaas_call\n     * @method directTransfer\n     * @param {string} callId ID of the call being acted on.\n     * @param {call.UserID|call.PhoneNumber} destination The destination to transfer the call to.\n     */\n    directTransfer (callId, destination) {\n      log.debug(API_LOG_TAG + 'call.directTransfer: ', callId, destination)\n\n      const config = getOptions(getState())\n      if (config.normalizeDestination) {\n        // Normalize callee addresses\n        destination = normalizeSipUri(destination, getDomain(getState()))\n        log.info('Address normalized to: ', destination)\n      }\n\n      dispatch(actions.directTransfer(callId, { destination }))\n    },\n\n    /**\n     * Performs a \"join\" on two ongoing calls.\n     * This allows the current user to establish a call with audio with two\n     *    remote users.\n     *\n     * Both specified calls must be locally held. The new, \"joined\" call will be\n     *    audio-only, even if either previous call had video. Video cannot be\n     *    added to the \"joined\" call. Both remote participants will see their\n     *    call taken off hold, and will receive additional audio from other\n     *    participants after the operation. Both previous calls for the current\n     *    user will be ended after the operation, as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event.\n     *\n     * If the first call specified has custom parameters set, these parameters will be carried over to the new call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event. Both remote\n     *    participants will also receive this event as if it were a \"remote\n     *    unhold\" operation.\n     * @public\n     * @static\n     * @memberof call\n     * @requires link_call\n     * @method join\n     * @param {string} callId ID of the call being acted on.\n     * @param {string} otherCallId ID of the other call being acted on.\n     */\n\n    /**\n     * Performs a \"join\" on two ongoing calls.\n     * This allows the current user to establish a call with audio with two\n     *    remote users.\n     *\n     * Both specified calls must be locally held. The new, \"joined\" call will be\n     *    audio-only, even if either previous call had video. Video cannot be\n     *    added to the \"joined\" call. Both remote participants will see their\n     *    call taken off hold, and will receive additional audio from other\n     *    participants after the operation. Both previous calls for the current\n     *    user will be ended after the operation, as indicated by a\n     *    {@link call.event:call:stateChange call:stateChange} event.\n     *\n     * If the first call specified has custom parameters set, these parameters will be carried over to the new call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event. Both remote\n     *    participants will also receive this event as if it were a \"remote\n     *    unhold\" operation.\n     * @private\n     * @static\n     * @memberof call\n     * @requires cpaas_call\n     * @method join\n     * @param {string} callId ID of the call being acted on.\n     * @param {string} otherCallId ID of the other call being acted on.\n     */\n    join (callId, otherCallId) {\n      log.debug(API_LOG_TAG + 'call.join: ', callId, otherCallId)\n\n      const newCallId = uuidV4()\n      const from = getUserInfo(getState()).username\n      dispatch(actions.join(callId, { otherCallId, newCallId, from }))\n    },\n\n    /**\n     * Replace a call's track with a new track of the same media type.\n     *\n     * The operation will remove the old track from the call and add a\n     *    new track to the call. This effectively allows for changing the\n     *    track constraints (eg. device used) for an ongoing call.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     *\n     * The SDK will emit a\n     *    {@link call.event:call:trackReplaced call:trackReplaced} event\n     *    locally when the operation completes. The newly added track will need\n     *    to be handled by the local application. The track will be replaced\n     *    seamlessly for the remote application, which will not receive an event.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string} callId The ID of the call to replace the track of.\n     * @param {string} trackId The ID of the track to replace.\n     * @param {Object} [media={}] The media options.\n     * @param {boolean} [media.audio=false] Whether to create an audio track.\n     * @param {Object} [media.audioOptions] Options for configuring the audio track.\n     * @param {call.MediaConstraint} [media.audioOptions.deviceId] ID of the microphone to receive audio from.\n     * @param {boolean} [media.video=false] Whether to create a video track.\n     * @param {Object} [media.videoOptions] Options for configuring the video track.\n     * @param {call.MediaConstraint} [media.videoOptions.deviceId] ID of the camera to receive video from.\n     * @param {call.MediaConstraint} [media.videoOptions.height] The height of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.width] The width of the video.\n     * @param {call.MediaConstraint} [media.videoOptions.frameRate] The frame rate of the video.\n     * @example\n     * const callId = ...\n     * // Get the video track used by the call.\n     * const videoTrack = ...\n     *\n     * // Replace the specified video track of the call with a new\n     * //    video track.\n     * client.call.replaceTrack(callId, videoTrack.id, {\n     *   // The track should be replaced with a video track using\n     *   //    a specific device. This effectively changes the input\n     *   //    device for an ongoing call.\n     *   video: true,\n     *   videoOptions: {\n     *     deviceId: cameraId\n     *   }\n     * })\n     *\n     * @example\n     * const callId = ...\n     * // Get the video track used by the call.\n     * const videoTrack = ...\n     *\n     * // Can also replace the specified video track of the call with a new\n     * // screen sharing track because screen sharing is delivered as a video stream to remote peer.\n     * // User will then be prompted to pick a specific screen to share and thus the device id will be selected.\n     * client.call.replaceTrack(callId, videoTrack.id, {\n     *   // The track should be replaced with a screen sharing track.\n     *   // Note that 'screenOptions' property is not mandatory, as API will use default values\n     *   // for properties like: width, height, frameRate.\n     *   screen: true\n     * })\n     */\n    replaceTrack (callId, trackId, media) {\n      log.debug(API_LOG_TAG + 'call.replaceTrack: ', callId, trackId, media)\n\n      const mediaConstraints = {\n        audio: media.audio && !isEmpty(media.audioOptions) ? media.audioOptions : media.audio,\n        video: media.video && !isEmpty(media.videoOptions) ? media.videoOptions : media.video,\n        screenShare: media.screen && !isEmpty(media.screenOptions) ? media.screenOptions : media.screen\n      }\n      dispatch(actions.replaceTrack(callId, { trackId, mediaConstraints }))\n    },\n\n    /**\n     * Retrieve the list of available and supported codecs based on the browser's capabilities for sending media.\n     *\n     * This API will return a promise which, when resolved, it will contain the list of available and supported codecs.\n     * In addition, the SDK emits a {@link call.event:call:availableCodecs call:availableCodecs} event\n     *  upon retrieving that list of codecs.\n     *\n     * This API is a wrapper for the static method {@link https://w3c.github.io/webrtc-pc/#dom-rtcrtpsender-getcapabilities RTCRtpSender.getCapabilities()}.\n     *  Firefox browser does not currently support this method. Therefore, this API will not work on Firefox.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {string} kind The kind of media, i.e., 'audio' or 'video', to get the list of available codecs of.\n     */\n    getAvailableCodecs (kind) {\n      log.debug(`${API_LOG_TAG}call.getAvailableCodecs, kind: ${kind}`)\n\n      const deferredResult = defer()\n\n      // Trigger the action, but include a deferred result which caller can use when\n      // we actually obtain the data (i.e. list of codecs) from WebRTCManager.\n      dispatch(actions.getAvailableCodecs({ kind }, deferredResult))\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Set {@link call.SdpHandlerFunction SDP Handler Functions} that will be run as part of a pipeline for all future calls.\n     *  This will replace any SDP Handlers that were previously set.\n     *\n     * SDP handlers can be used to make modifications to the SDP (e.g., removing certain codecs)\n     *  before they are processed or sent to the other side.\n     *\n     * This is an advanced feature, changing the SDP handlers mid-call may cause\n     *  unexpected behaviour in future call operations for that call.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @param {Array<call.SdpHandlerFunction>} sdpHandlers The list of SDP handler functions to modify SDP.\n     */\n    setSdpHandlers (sdpHandlers) {\n      log.debug(`${API_LOG_TAG}call.setSdpHandlers, sdpHandlers:`, sdpHandlers)\n\n      const config = getOptions(getState())\n      const options = {\n        removeH264Codecs: config.removeH264Codecs\n      }\n      dispatch(setSdpHandlers(sdpHandlers, options))\n    },\n\n    /**\n     * Possible states that a Call can be in.\n     *\n     * A Call's state describes the current status of the Call. An application\n     *    should use the state to understand how the Call, and any media\n     *    associated with the Call, should be handled. Which state the Call is\n     *    in defines how it can be interacted with, as certain operations can\n     *    only be performed while in specific states, and tells an application\n     *    whether the Call currently has media flowing between users.\n     * Unless stated otherwise, the Call's state pertains to both caller & callee.\n     *\n     * The Call's state is a property of the {@link call.CallObject CallObject},\n     *    which can be retrieved using the {@link call.getById} or\n     *    {@link call.getAll} APIs.\n     *\n     * The SDK emits a {@link call.event:call:stateChange call:stateChange}\n     *    event when a Call's state changes from one state to another.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires callMe\n     * @requires call\n     * @type {Object}\n     * @property {string} INITIATING The (outgoing) call is being started. While in this state, no Call operations can be performed until Call gets into Initiated state.\n     * @property {string} INITIATED A call has been started and both the callee and caller may now perform further operations on the call object.\n     * @property {string} RINGING The call has been received by both parties, and is waiting to be answered.\n     * @property {string} EARLY_MEDIA The call has not been answered, but media\n     *    is already being received. This may be network-ringing media, IVR\n     *    system media, or other pre-answer medias. When early media is\n     *    supported, this state may replace the Ringing state. This is a state valid only for caller's side.\n     * @property {string} CANCELLED The call was disconnected before it could be answered. This is a state valid only for callee's side.\n     * @property {string} CONNECTED Both parties are connected and media is flowing.\n     * @property {string} ON_HOLD Both parties are connected but no media is flowing.\n     * @property {string} ENDED The call has ended.\n     * @example\n     * // Use the call states to know how to handle a change in the call.\n     * client.on('call:stateChange', function (params) {\n     *    const call = client.call.getById(params.callId)\n     *    // Check if the call now has media flowing.\n     *    if (call.state === client.call.states.CONNECTED) {\n     *      // The call is now active, and can perform midcall operations.\n     *    }\n     * })\n     */\n    states: CALL_STATES,\n\n    /**\n     * Possible states that a Call's media connection can be in.\n     *\n     * A Call's media connection state describes the current status of media within the call.\n     *  An application should use this state to understand whether the Call participants are\n     *  able to see/hear each other or may be experiencing connection issues. The media connection\n     *  state can be used alongside the {@link call.states Call state} to determine if media issues\n     *  are occurring while the participants are expecting to be connected.\n     *\n     * An important state to check for is the `FAILED` state. This state signifies that there is no\n     *    media connection between the call participants and an action must be taken to resolve the\n     *    problem. Using the {@link call.restartMedia} API will attempt to reconnect the media. See\n     *    the {@link call.restartMedia} API description for more information.\n     *\n     * These states are direct reflections of the possible\n     *  [RTCPeerConnection.iceConnectionState](https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState) values.\n     *\n     * The Call's media connection state is a property of the {@link call.CallObject CallObject},\n     *    which can be retrieved using the {@link call.getById} or\n     *    {@link call.getAll} APIs.\n     *\n     * The SDK emits a {@link call.event:call:mediaConnectionChange call:mediaConnectionChange}\n     *    event when a Call's media connection state changes from one state to another.\n     *\n     * @public\n     * @static\n     * @memberof call\n     * @requires callMe\n     * @requires call\n     * @type {Object}\n     * @property {string} NEW The Call is initializing the local side of the connection and waiting on information from the remote side.\n     *  When the information is received, the state will transition into `checking` as the Call automatically begins the connection process.\n     * @property {string} CHECKING The Call has received information from the remote endpoint and is working to establish the media connection.\n     *  When finished, the state will transition to either `connected` or `failed`.\n     * @property {string} CONNECTED A usable connection has been made and the Call will now have media.\n     *  The connection may not be optimal, though, so the Call will continue establishment to improve the connection before going into the `completed` state.\n     * @property {string} COMPLETED The media connection process has fully completed and the optimal connection has been established. While in this state,\n     *  the Call endpoints will receive each other's media.\n     * @property {string} DISCONNECTED Media has become disconnected and the Call endpoints have stopped receiving each other's media.\n     *  The Call will automatically attempt to reconnect, transitioning back to `completed` if successful or to `failed` if not.\n     * @property {string} FAILED The connection has failed and cannot be recovered automatically. A full media connection refresh is required to reestablish a connection. See the {@link call.restartMedia} API.\n     * @property {string} CLOSED The connection has been shut down and is no longer in use.\n     * @example\n     * // Use the media connection states to check the status of the media connection of the Call.\n     * client.on('call:mediaConnectionChange', function (params) {\n     *   // Retrieve the state of the Call this event is for.\n     *   const call = client.call.getById(params.callId)\n     *   const mediaConnectionStates = client.call.mediaConnectionStates\n     *\n     *   // Check the mediaConnectionState to determine which scenario the call is in.\n     *   switch (call.mediaConnectionState) {\n     *     case mediaConnectionStates.CONNECTED:\n     *     case mediaConnectionStates.COMPLETED:\n     *       // Media established: The Call's media is connected. The Call's participants\n     *       //    are able to see/hear each other.\n     *       // These states will occur after Call establishment.\n     *       ...\n     *       break\n     *     case mediaConnectionStates.NEW:\n     *     case mediaConnectionStates.CHECKING:\n     *     case mediaConnectionStates.DISCONNECTED:\n     *       // Media pending: The Call's media is not connected. The Call is working\n     *       //    to connect media automatically.\n     *       // These states will occur during Call establishment and may occur midcall if there are\n     *       //    connection issues (eg. poor network quality) or a Call participant has changed (eg. transfer).\n     *       ...\n     *       break\n     *     case mediaConnectionStates.FAILED:\n     *      // Media has failed. The call requires a media refresh to reestablish.\n     *      // This state will occur after the `DISCONNECTED` state is encountered.\n     *      ...\n     *       break\n     *     case mediaConnectionStates.CLOSED:\n     *       // Media ended due to the Call being ended.\n     *       // This state will occur after Call establishment.\n     *       ...\n     *       break\n     *   }\n     * }\n     */\n    mediaConnectionStates: CALL_MEDIA_CONNECTION_STATES,\n\n    /**\n     * Attempt to re-establish a media connection for a call.\n     *\n     * This API will perform a \"refresh\" operation on the call with the intention\n     *    of resolving media issues that may have been encountered. This API is only\n     *    necessary after the Call's {@link call.mediaConnectionStates mediaConnectionState}\n     *    has entered the `failed` state, but may be used in other scenarios.\n     *\n     * After the operation completes successfully, the Call will be re-establishing\n     *    its media connection. By this time, or shortly after, the Call's\n     *    {@link call.mediaConnectionStates mediaConnectionState} should have\n     *    transitioned to `checking` (via a\n     *    {@link call.event:call:mediaConnectionChange call:mediaConnectionChange}\n     *    event) to signify the re-establishment. It will then transition to either\n     *    `connected` or `failed` state, similar to during the initial Call establishment.\n     *\n     * If this operation fails, then the Call will not attempt the re-establishment\n     *    and will remain in the `failed` {@link call.mediaConnectionStates mediaConnectionState}.\n     *\n     * Behaviour during the operation may differ slightly based on the browser.\n     *    Notably, Firefox will always transition to the `checking`\n     *    {@link call.mediaConnectionStates mediaConnectionState} no matter what\n     *    the previous state was. Whereas Chrome will skip the `checking` state,\n     *    transitioning directly to either `connected` or `failed`. This has the\n     *    implication for Chrome that if the state does not change (for example,\n     *    the Call is in the `failed` state before the media restart operation,\n     *    and media re-establishment fails), then there will be no\n     *    {@link call.event:call:mediaConnectionChange call:mediaConnectionChange}\n     *    event emitted. For this reason, Chrome-based applications may need a\n     *    short delay after receiving the {@link call.event:call:mediaRestart call:mediaRestart}\n     *    event before checking the Call's updated\n     *    {@link call.mediaConnectionStates mediaConnectionState} to ensure the\n     *    application is acting on the \"latest\" state.\n     *\n     * The SDK will emit a {@link call.event:call:mediaRestart call:mediaRestart}\n     *    event when the operation completes.\n     *\n     * The progress of the operation will be tracked via the\n     *    {@link call.event:call:operation call:operation} event.\n     * @public\n     * @static\n     * @memberof call\n     * @method restartMedia\n     * @param {string} callId The ID of the call to act on.\n     */\n    restartMedia (callId) {\n      log.debug(`${API_LOG_TAG}call.restartMedia, callId: ${callId}`)\n      dispatch(actions.restartMedia(callId))\n    }\n\n    /**\n     * The `setDefaultDevices` API from previous SDK releases (3.X) has been\n     *    deprecated in the latest releases (4.X+). The SDK no longer keeps\n     *    track of \"default devices\" on behalf of the application.\n     *\n     * The devices used for a call can be selected as part of the APIs for\n     *    starting the call. Microphone and/or camera can be chosen in the\n     *    {@link call.make} and {@link call.answer} APIs, and speaker can be\n     *    chosen when the audio track is rendered with the\n     *    {@link media.renderTracks} API.\n     * @public\n     * @static\n     * @method setDefaultDevices\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     */\n\n    /**\n     * Changes the camera and/or microphone used for a Call's media input.\n     *\n     * The latest SDK release (v4.X+) has not yet implemented this API in the\n     *    same way that it was available in previous releases (v3.X). In place\n     *    of this API, the SDK has a more general API that can be used for this\n     *    same behaviour.\n     *\n     * The same behaviour as the `changeInputDevices` API can be implemented\n     *    using the general-purpose {@link call.replaceTrack} API. This API can\n     *    be used to replace an existing media track with a new track of the\n     *    same type, allowing an application to change certain aspects of the\n     *    media, such as input device.\n     * @public\n     * @static\n     * @method changeInputDevices\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @example\n     * const call = client.call.getById(callId)\n     * // Get the ID of the Call's video track.\n     * const videoTrack = call.localTracks.find(trackId => {\n     *    const track = client.media.getTrackById(trackId)\n     *    return track.kind === 'video'\n     * })\n     *\n     * // Select the new video options.\n     * const media = {\n     *    video: true,\n     *    videoOptions: {\n     *        deviceId: 'cameraId'\n     *    }\n     * }\n     *\n     * // Change the call's camera by replacing the video track.\n     * client.call.replaceTrack(callId, videoTrack, media)\n     */\n\n    /**\n     * Changes the speaker used for a Call's audio output. Supported on\n     *    browser's that support HTMLMediaElement.setSinkId().\n     *\n     * The latest SDK release (v4.X+) has not yet implemented this API in the\n     *    same way that it was available in previous releases (v3.X). In place\n     *    of this API, the SDK has a more general API that can be used for this\n     *    same behaviour.\n     *\n     * The same behaviour as the `changeSpeaker` API can be implemented by\n     *    re-rendering the Call's audio track.  A speaker can be selected when\n     *    rendering an audio track, so changing a speaker can be simulated\n     *    by unrendering the track with {@link media.removeTracks}, then\n     *    re-rendering it with a new speaker with {@link media.renderTracks}.\n     * @public\n     * @static\n     * @method changeSpeaker\n     * @memberof call\n     * @requires call\n     * @requires callMe\n     * @example\n     * const call = client.call.getById(callId)\n     * // Get the ID of the Call's audio track.\n     * const audioTrack = call.localTracks.find(trackId => {\n     *    const track = client.media.getTrackById(trackId)\n     *    return track.kind === 'audio'\n     * })\n     *\n     * // Where the audio track was previously rendered.\n     * const audioContainer = ...\n     *\n     * // Unrender the audio track we want to change speaker for.\n     * client.media.removeTrack([ audioTrack ], audioContainer)\n     * // Re-render the audio track with a new speaker.\n     * client.media.renderTrack([ audioTrack ], audioContainer, {\n     *    speakerId: 'speakerId'\n     * })\n     */\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n/**\n * Represents that TURN information has changed.\n * @method turnChanged\n * @return {Object}\n */\nexport function turnChanged ({ servers, credentials }) {\n  return {\n    type: actionTypes.TURN_CHANGED,\n    payload: {\n      servers,\n      credentials\n    }\n  }\n}\n","/**\n * Extracts the domain from an address if an @ symbol exists and isn't at the start or end of the address.\n * @param {string} addressString The address string to extract the domain from (if it exists).\n * @returns {string} The extracted domain. Empty string of none found.\n */\nfunction extractDomainFromAddress (addressString) {\n  const indexOfAtSymbol = addressString.lastIndexOf('@')\n  if (indexOfAtSymbol !== 0 && indexOfAtSymbol !== addressString.length - 1) {\n    // If '@' symbol found in middle of addressString, split it.\n    if (indexOfAtSymbol !== -1) {\n      return addressString.substr(indexOfAtSymbol + 1)\n    }\n  }\n  return ''\n}\n\n/**\n * Determines which address and domain to use depending on whether the address string contains a domain or not.\n * @param {string} addressString The address string to examine and extract a domain from (if any).\n * @param {string} defaultDomainString The domain to use if the address string does not contain a domain in it.\n * @returns {Object} An object containing the correct address and domain to use.\n */\nfunction separateAddressAndDomain (addressString, defaultDomainString) {\n  const extractedDomain = extractDomainFromAddress(addressString)\n  // If a domain was extracted from the address, use that as the domain and strip it from the address.\n  if (extractedDomain) {\n    return {\n      address: addressString.substr(0, addressString.length - extractedDomain.length - 1),\n      domain: extractedDomain\n    }\n  } else {\n    return {\n      address: addressString,\n      domain: defaultDomainString\n    }\n  }\n}\n\n/**\n * Extracts any pre-pended data before a \":\" (if it exists) from the beginning of a string.\n * @param {string} inputString The string to remove pre-pended data from.\n * @returns {string} The pre-pended data string.\n */\nfunction extractPrependedData (inputString) {\n  const prependedDataMatches = inputString.match(/^.*:/g)\n  if (prependedDataMatches && prependedDataMatches[0]) {\n    return prependedDataMatches[0]\n  } else {\n    return ''\n  }\n}\n\n/**\n * Finds the leading special characters (\"#\", \"+\", \"*\") of an address if it is a phone number.\n * If the address contains letters or any non-visual-separator characters,\n *  it is not a phone number and no leading special characters will be found.\n * @param {string} addressString The address string to find the leading characters of (if any).\n *  The addressString must not contain any pre-pended data such as \"sip:\".\n *  The addressString must not contain a domain.\n * @returns {string} The leading special characters as one string. Empty string if none found.\n */\nfunction extractLeadingSpecialCharacters (addressString) {\n  // A single or group of contiguous characters are considered leading character/s if it is  the following:\n  // - starts at the beginning of the string - ^\n  // - is any of the following characters - [#+*]+\n  // - is followed by a digit or \"(\" - [\\d|(]\n  // - is followed by any number of only digits and visual separators - [\\d \\-.()+]*$\n  const potentialLeadingChars = addressString.match(/^[#+*]+[\\d|(][\\d \\-.()+]*$/g)\n  if (potentialLeadingChars && potentialLeadingChars[0]) {\n    // Guaranteed to have a match for regex [#+*]+ since we have potentialLeadingChars\n    // which was a match for a similar regex and we are simply extracting the leading characters part.\n    const actualLeadingChars = potentialLeadingChars[0].match(/[#+*]+/g)\n    return actualLeadingChars[0]\n  }\n  return ''\n}\n\n/**\n * Outputs a new string without its phone number visual separators (\"-\", \".\", \"(\", \")\", \"+\").\n * @param {string} inputString The string to remove visual separators from.\n * @returns {string} A new string without visual separators.\n */\nfunction withoutVisualSeparators (inputString) {\n  return inputString.replace(/[ \\-.()+]/g, '')\n}\n\n/**\n * Determines whether a string should be considered a phone number or not.\n * @param {string} addressString The address string to check.\n *  The addressString must not contain any pre-pended data such as \"sip:\"\n *  The addressString must not contain any leading special characters.\n *  The addressString must not contain a domain.\n * @returns {boolean} True if the input string is a phone number. False if it is not.\n */\nfunction isPhoneNumber (addressString) {\n  const cleanNumber = withoutVisualSeparators(addressString)\n  const phoneNumberMatch = cleanNumber.match(/^\\d+$/g)\n  return phoneNumberMatch && phoneNumberMatch.length === 1\n}\n\n/**\n * Processes the address string and returns the correct output.\n * If the address is a phone number, visual separators are removed.\n * Otherwise, it will just return the address as-is.\n * @param {string} addressString The address string to process.\n *  The addressString must not contain any pre-pended data such as \"sip:\".\n *  The addressString must not contain any leading special characters (if it is a phone number).\n *  The addressString must not contain a domain.\n * @returns {string} A phone number without visual-separators or the addressString as-is.\n */\nfunction processAddress (addressString) {\n  return isPhoneNumber(addressString) ? withoutVisualSeparators(addressString) : addressString\n}\n\n/**\n * Processes the domain string and returns the correct output.\n * Adds an \"@\" symbol if it isn't present at the beginning of the domain.\n * @param {string} domainString The domain string to process.\n * @returns {string} The domain with \"@\" symbol at the beginning if it doesn't exist.\n */\nfunction processDomain (domainString) {\n  if (domainString === '' || domainString === undefined) {\n    return ''\n  } else if (domainString.indexOf('@') === 0) {\n    return domainString\n  } else {\n    return '@' + domainString\n  }\n}\n\n/**\n *The function takes in the input dial string and domain address of the user, performs a normalization process based on the phone number handling normalization rules\n * @function normalizeSipUri\n * @param {string} address   It contains the input dial string the user dials in or the callee address\n * @param {string} domain    It contains the user's domain address\n * @returns {string} output  The output which is the normalized callee address/phone number\n */\nexport function normalizeSipUri (address, domain) {\n  // Remove leading and trailing white spaces.\n  address = address.trim()\n\n  // Extract domain.\n  const resultingAddressAndDomain = separateAddressAndDomain(address, domain)\n  domain = resultingAddressAndDomain.domain\n  address = resultingAddressAndDomain.address\n\n  // Extract pre-pended \"sip:\".\n  const prepend = extractPrependedData(address)\n  address = address.substr(prepend.length)\n\n  // Extract leading characters.\n  const leadingChars = extractLeadingSpecialCharacters(address)\n  address = address.substr(leadingChars.length)\n\n  // Process and build parts into final output in the form of `<prepend>:<leadingChars><address>@<domain>`.\n  return 'sip:' + leadingChars + processAddress(address) + processDomain(domain)\n}\n","import calls from './call'\nimport turn from './turn'\n\n/**\n * Combine subreducers into a single call reducer.\n */\nexport default function (state = {}, action) {\n  return {\n    calls: calls(state.calls, action),\n    turn: turn(state.turn, action)\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\nimport * as webrtcActionTypes from '../../../webrtc/interface/actionTypes'\nimport { CALL_STATES, CALL_DIRECTION, OPERATIONS, OP_STATUS } from '../../constants'\nimport { setOperationState } from '../utils'\n\n// Libraries.\nimport { combineActions, handleActions } from 'redux-actions'\nimport { concat } from 'lodash/fp'\n\n/**\n * A no-op reducer.\n * Some reducers don't need to change state, but need to exist so their actions\n *    can be handled the same way as other actions (eg. wrapped to update local\n *    operation).\n * @method noop\n */\nconst noop = (state, action) => state\n\n/**\n * The reducer logic used for finish operations that end a call.\n * @method callEnder\n */\nconst callEnder = (state, action) => {\n  const now = Date.now()\n  return {\n    ...state,\n    state: CALL_STATES.ENDED,\n    // If there isn't a start time, then the call was never completed.\n    //    Meaning it's duration was 0, so set the start time appropriately.\n    startTime: state.startTime || now,\n    endTime: now,\n    remoteParticipant: {\n      ...state.remoteParticipant,\n      ...action.payload.remoteParticipant\n    },\n    // Closing the peer doesn't trigger an oniceconnectionstatechange event\n    // although it does change the iceConnectionState property to closed\n    mediaConnectionState: 'closed',\n    // TODO: Remove this later.\n    isPending: undefined\n  }\n}\n\n// Top-tier reducers: Handles the whole call state.\nconst reducers = {}\n// Call-tier reducers: Handles only a specific call's state.\nconst callReducers = {}\n\n/*\n * Top-tier reducers.\n * Receives the entire call substate as state.\n */\n\n// Add the new call to state.\nreducers[actionTypes.MAKE_CALL] = {\n  next (state, action) {\n    // TODO: Call model? (with defaults for call state)\n    let newCall = {\n      id: action.payload.id,\n      remoteParticipant: {\n        displayNumber: action.payload.participantAddress,\n        displayName: action.payload.participantName\n      },\n      // Number of the remote participant when the call was established.\n      to: action.payload.participantAddress,\n      from: action.payload.from,\n      mediaConstraints: action.payload.mediaConstraints,\n      dscpControls: action.payload.dscpControls,\n      // TODO: Proper constants.\n      state: CALL_STATES.INITIATING,\n      direction: CALL_DIRECTION.OUTGOING,\n      // Hold status.\n      localHold: false,\n      remoteHold: false,\n      isCaller: true,\n      // Flag indicating whether the call is anonymous or not\n      isAnonymous: action.payload.isAnonymous,\n      // The account token used to make the anonymous call\n      account: action.payload.account\n    }\n\n    // Set the call's operation substate.\n    newCall = setOperationState(newCall, action)\n\n    return concat(state, newCall)\n  }\n}\n\n// Add the new call to state.\nreducers[actionTypes.CALL_INCOMING] = {\n  next (state, action) {\n    return concat(state, {\n      isCaller: false,\n      ...action.payload\n    })\n  }\n}\n\n/*\n * Call-tier reducers.\n * Receive a single call's state as state.\n */\n\ncallReducers[actionTypes.SEND_RINGING_FEEDBACK_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      state: CALL_STATES.RINGING\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_RINGING] = {\n  next (state, action) {\n    if (action.payload.remoteParticipant) {\n      return {\n        ...state,\n        state: CALL_STATES.RINGING,\n        remoteParticipant: action.payload.remoteParticipant\n      }\n    } else {\n      return {\n        ...state,\n        state: CALL_STATES.RINGING\n      }\n    }\n  }\n}\n\n// Handle Early Media the same as Ringing, just with a different state.\ncallReducers[actionTypes.SESSION_PROGRESS] = {\n  next (state, action) {\n    return {\n      ...state,\n      state: CALL_STATES.EARLY_MEDIA,\n      remoteParticipant: action.payload.remoteParticipant\n    }\n  }\n}\n\n/*\n * Call-tier reducers.\n * Receive a single call's state as state.\n */\n\n/*\n * Some reducers don't need to change state directly, but need to exist.\n * Call-specific reducers are wrapped to keep information about on-going\n *    operations up-to-date.\n */\ncallReducers[actionTypes.PENDING_OPERATION] = noop\ncallReducers[actionTypes.SEND_RINGING_FEEDBACK] = noop\ncallReducers[actionTypes.CALL_HOLD] = noop\ncallReducers[actionTypes.CALL_UNHOLD] = noop\ncallReducers[actionTypes.SEND_CUSTOM_PARAMETERS] = noop\ncallReducers[actionTypes.END_CALL] = noop\ncallReducers[actionTypes.ADD_MEDIA] = noop\ncallReducers[actionTypes.REMOVE_MEDIA] = noop\ncallReducers[actionTypes.ADD_BASIC_MEDIA] = noop\ncallReducers[actionTypes.REMOVE_BASIC_MEDIA] = noop\ncallReducers[actionTypes.RENEGOTIATE] = noop\ncallReducers[actionTypes.SEND_DTMF] = noop\ncallReducers[actionTypes.SEND_DTMF_FINISH] = noop\ncallReducers[actionTypes.IGNORE_CALL] = noop\ncallReducers[actionTypes.DIRECT_TRANSFER] = noop\ncallReducers[actionTypes.REPLACE_TRACK] = noop\ncallReducers[actionTypes.REPLACE_TRACK_FINISH] = noop\ncallReducers[actionTypes.REMOTE_SLOW_START] = noop\ncallReducers[actionTypes.REMOTE_START_MOH_FINISH] = noop\ncallReducers[actionTypes.REMOTE_STOP_MOH_FINISH] = noop\ncallReducers[actionTypes.GET_STATS] = noop\ncallReducers[actionTypes.GET_STATS_FINISH] = noop\n\n/*\n * When answering, rejecting, or forwarding a call, update state to say that we\n *    are handling it.\n * This is needed for Link because KandyLink will send a \"call cancel\" notification\n *    to _ALL_ of the user's subscriptions. The intention is to stop the call from\n *    ringing on other subscribed devices, and for the handling device to ignore\n *    the notification. This flag is used to know when to ignore the call cancel.\n */\nconst setHandling = (state, action) => {\n  return {\n    ...state,\n    isHandling: true\n  }\n}\ncallReducers[actionTypes.ANSWER_CALL] = setHandling\ncallReducers[actionTypes.REJECT_CALL] = setHandling\ncallReducers[actionTypes.FORWARD_CALL] = setHandling\n\ncallReducers[actionTypes.CALL_CANCELLED] = {\n  next (state, action) {\n    return {\n      ...state,\n      state: CALL_STATES.CANCELLED\n    }\n  }\n}\n\ncallReducers[actionTypes.IGNORE_CALL_FINISH] = {\n  next (state, action) {\n    // The call being ignored means it was not completed. Ensure there are times\n    //    in state, and they reflect that the call was not completed.\n    // TODO: Better call times.\n    const now = Date.now()\n\n    return {\n      ...state,\n      startTime: now,\n      endTime: now,\n      state: CALL_STATES.ENDED\n    }\n  }\n}\n\ncallReducers[actionTypes.REJECT_CALL_FINISH] = {\n  next (state, action) {\n    // The call being rejected means it was not completed. Ensure there are\n    //    times in state, and they reflect that the call was not completed.\n    // TODO: Better call times.\n    const now = Date.now()\n\n    const newState = {\n      ...state,\n      startTime: now,\n      endTime: now,\n      state: CALL_STATES.ENDED\n    }\n\n    // After the reject operation finishes, remove the flag that indicates we\n    //    were handling the call.\n    delete newState.isHandling\n\n    return newState\n  }\n}\n\ncallReducers[actionTypes.SESSION_CREATED] = {\n  next (state, action) {\n    // When we get SESSION_CREATED action, the call object already exists as part of reducers state\n    // so we only add the webrtc session id. This way, when call:newTrack action is later triggered,\n    // we can find the call object by searching for this associated webrtcSessionId.\n    return {\n      ...state,\n      webrtcSessionId: action.payload.webrtcSessionId\n    }\n  }\n}\n\ncallReducers[actionTypes.PENDING_MAKE_CALL] = {\n  next (state, action) {\n    return {\n      ...state,\n      state: action.payload.state,\n      wrtcsSessionId: action.payload.wrtcsSessionId,\n      webrtcSessionId: action.payload.webrtcSessionId,\n      bandwidth: action.payload.bandwidth,\n      displayName: action.payload.displayName,\n      customParameters: action.payload.customParameters,\n      customBodies: action.payload.customBodies\n    }\n  }\n}\n\n// Update the new call state based on the outcome.\ncallReducers[actionTypes.MAKE_CALL_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      ...action.payload\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      ...action.payload\n    }\n  }\n}\n\n// Update the call state based on the outcome.\ncallReducers[actionTypes.ANSWER_CALL_FINISH] = {\n  next (state, action) {\n    // If the action has a Session ID, store it as the ID.\n    // In some scenarios (slow start), the we only get an ID\n    //    at the answer step.\n    const webrtcId = action.payload.webrtcSessionId || state.webrtcSessionId\n\n    const newState = {\n      ...state,\n      state: action.payload.state,\n      mediaConstraints: action.payload.mediaConstraints,\n      dscpControls: action.payload.dscpControls,\n      webrtcSessionId: webrtcId,\n      localHold: false,\n      remoteHold: false,\n      bandwidth: action.payload.bandwidth,\n      customParameters: action.payload.customParameters,\n      customBodies: action.payload.customBodies\n    }\n\n    // Add start time to the call's state here if the call is not a slowstart call\n    if (action.meta && !action.meta.isSlowStart) {\n      newState.startTime = action.payload.startTime\n    }\n\n    // If answering the Call puts us in Connected state (ie. not slow-start),\n    //    then we can remove this flag since we know not to cancel a connected call.\n    if (newState.state === CALL_STATES.CONNECTED) {\n      delete newState.isHandling\n    }\n\n    return newState\n  },\n  throw (state, action) {\n    const newState = {\n      ...state,\n      ...action.payload\n    }\n\n    // If we failed to answer the call, then we're not actually handling the\n    //    call, so remove the flag.\n    delete newState.isHandling\n\n    return newState\n  }\n}\n\ncallReducers[actionTypes.CALL_ACCEPTED] = {\n  next (state, action) {\n    const newState = {\n      ...state,\n      ...action.payload\n    }\n\n    // If we were answering, but it's the remote accept that puts us in the\n    //    Connected state (ie. slow-start), then we can remove this flag since\n    //    we know not to cancel a connected call.\n    if (newState.isHandling && newState.state === CALL_STATES.CONNECTED) {\n      delete newState.isHandling\n    }\n\n    return newState\n  },\n  throw (state, action) {\n    const newState = action.payload.state || state.state\n    return {\n      ...state,\n      state: newState\n    }\n  }\n}\n\n// Handles both success and failure actions the same way.\n// Instead of an object with `next` & `throw` properties, pass in a function.\n// https://redux-actions.js.org/api/handleaction#handleactiontype-reducer-defaultstate\ncallReducers[actionTypes.END_CALL_FINISH] = callEnder\n\ncallReducers[actionTypes.UPDATE_CALL] = {\n  next (state, action) {\n    const { transition, ...payloadWithoutTransition } = action.payload\n    const newState = {\n      ...state,\n      ...payloadWithoutTransition\n    }\n\n    /*\n     * Edge-case workaround.\n     * If the current operation is an on-going remote slow-start, then this remote\n     *   update call action is intended to be the \"finish\" for it. The \"update call\"\n     *   action being used here is an edge-case when the remote operation wasn't\n     *   something we can identify.\n     * This is being done manually because the \"update call\" action does not work\n     *   with the SDK's \"operation tracking\" logic in the reducers.\n     * See function `handleSlowUpdateResponse` in `/call/negotiation.js` for more info.\n     * Reference: KJS-542\n     */\n    if (\n      action.meta &&\n      action.meta.isRemote === true &&\n      newState.remoteOp &&\n      newState.remoteOp.operation === OPERATIONS.SLOW_START &&\n      newState.remoteOp.status === OP_STATUS.ONGOING\n    ) {\n      newState.remoteOp = undefined\n    }\n\n    return newState\n  }\n}\n\ncallReducers[actionTypes.CALL_HOLD_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      localHold: true,\n      state: CALL_STATES.ON_HOLD\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_UNHOLD_FINISH] = {\n  next (state, action) {\n    const callState = state.remoteHold ? CALL_STATES.ON_HOLD : CALL_STATES.CONNECTED\n    return {\n      ...state,\n      localHold: false,\n      state: callState\n    }\n  }\n}\n\ncallReducers[actionTypes.SET_CUSTOM_PARAMETERS] = {\n  next (state, action) {\n    return {\n      ...state,\n      customParameters: action.payload.customParameters,\n      customBodies: action.payload.customBodies\n    }\n  }\n}\n\ncallReducers[actionTypes.SEND_CUSTOM_PARAMETERS_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      ...action.payload\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_REMOTE_HOLD_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      remoteHold: true,\n      state: CALL_STATES.ON_HOLD,\n      remoteParticipant: {\n        ...state.remoteParticipant,\n        ...action.payload.remoteParticipant\n      }\n    }\n  }\n}\n\ncallReducers[actionTypes.CALL_REMOTE_UNHOLD_FINISH] = {\n  next (state, action) {\n    const callState = state.localHold ? CALL_STATES.ON_HOLD : CALL_STATES.CONNECTED\n    return {\n      ...state,\n      remoteHold: false,\n      state: callState,\n      remoteParticipant: {\n        ...state.remoteParticipant,\n        ...action.payload.remoteParticipant\n      }\n    }\n  }\n}\n\ncallReducers[actionTypes.FORWARD_CALL_FINISH] = {\n  next (state, action) {\n    const newState = {\n      ...state,\n      state: CALL_STATES.ENDED\n    }\n\n    // After the forward operation finishes, remove the flag that indicates we\n    //    were handling the call.\n    delete newState.isHandling\n\n    return newState\n  }\n}\n\ncallReducers[actionTypes.DIRECT_TRANSFER_FINISH] = {\n  next: callEnder\n}\n\nreducers[actionTypes.CONSULTATIVE_TRANSFER] = {\n  next (state, action) {\n    const callIds = [action.payload.id, action.payload.otherCallId]\n\n    // Iterate through the calls looking for the two being acted on.\n    //    Update them to set the operation substate.\n    return state.map(call => {\n      if (callIds.includes(call.id)) {\n        return setOperationState(call, action)\n      } else {\n        return call\n      }\n    })\n  }\n}\n\nreducers[actionTypes.PENDING_CONSULTATIVE_TRANSFER] = {\n  next (state, action) {\n    return state.map(call => {\n      if (call.id === action.payload.id || call.id === action.payload.otherCallId) {\n        // Update the local operation in the call's state.\n        return setOperationState(call, action)\n      } else {\n        return call\n      }\n    })\n  }\n}\n\nreducers[actionTypes.CONSULTATIVE_TRANSFER_FINISH] = {\n  next: (state, action) => {\n    return state.map(call => {\n      if (call.id === action.payload.id || call.id === action.payload.otherCallId) {\n        const endedCall = callEnder(call, action)\n        return setOperationState(endedCall, action)\n      } else {\n        return call\n      }\n    })\n  },\n  throw: (state, action) => {\n    return state.map(call => {\n      if (call.id === action.payload.id || call.id === action.payload.otherCallId) {\n        return setOperationState(call, action)\n      } else {\n        return call\n      }\n    })\n  }\n}\n\nreducers[actionTypes.JOIN] = {\n  next (state, action) {\n    // Update operation substate state for both calls used in the operation.\n    const callIds = [action.payload.id, action.payload.otherCallId]\n\n    return state.map(call => {\n      if (callIds.includes(call.id)) {\n        return setOperationState(call, action)\n      } else {\n        return call\n      }\n    })\n  }\n}\n\nreducers[actionTypes.JOIN_START] = {\n  next (state, action) {\n    // Create the new joined\n    let newCall = {\n      id: action.payload.id,\n      remoteParticipant: {\n        displayNumber: action.payload.participantAddress,\n        displayName: action.payload.participantName\n      },\n      // TODO: Have better names for `to` & `from`\n      to: action.payload.participantAddress,\n      from: action.payload.from,\n      mediaConstraints: action.payload.mediaConstraints,\n      state: CALL_STATES.INITIATING,\n      direction: CALL_DIRECTION.OUTGOING,\n      // Hold status.\n      localHold: false,\n      remoteHold: false,\n      isCaller: true,\n      isJoinedCall: true,\n      customParameters: action.payload.customParameters,\n      bandwidth: action.payload.bandwidth,\n      dscpControls: action.payload.dscpControls\n    }\n\n    // Set the call's operation substate.\n    newCall = setOperationState(newCall, action)\n\n    return concat(state, newCall)\n  }\n}\n\nreducers[actionTypes.PENDING_JOIN] = {\n  next (state, action) {\n    return state.map(call => {\n      if (call.id === action.payload.id) {\n        // Update the joined call with the new payload\n        return {\n          ...call,\n          wrtcsSessionId: action.payload.wrtcsSessionId,\n          webrtcSessionId: action.payload.webrtcSessionId,\n          state: action.payload.state\n        }\n      } else if (action.payload.usedCallIds.includes(call.id)) {\n        // Update the used calls' operation substates.\n        return setOperationState(call, action)\n      } else {\n        return call\n      }\n    })\n  }\n}\n\nreducers[actionTypes.JOIN_FINISH] = {\n  /*\n   * JOIN_FINISH for a success scenario is triggered by receiving \"sessionComplete\" notifications\n   * for the two initial calls that are joining (the action is dispatched with the initial calls' ids).\n   * For this scenario, end these calls since the new joined call is made.\n   */\n  next: (state, action) => {\n    return state.map(call => {\n      if (\n        call.id === action.payload.id ||\n        (action.payload.usedCallIds && action.payload.usedCallIds.includes(call.id))\n      ) {\n        const endedCall = callEnder(call, action)\n        return setOperationState(endedCall, action)\n      } else {\n        return call\n      }\n    })\n  },\n  throw: (state, action) => {\n    return state.map(call => {\n      // If this action was dispatched with the new call id, end the call\n      // How to determine if it was dispatched with new call id:\n      //  - The ID in the action is not in the `usedCallIds` of the action's payload\n      // If there is no `usedCallIds`, then likely this action is dispatched with the unjoined call ID's\n      // due to receiving a \"sessionFailed\" notification from the backend\n      if (\n        call.id === action.payload.id &&\n        action.payload.usedCallIds &&\n        !action.payload.usedCallIds.includes(call.id)\n      ) {\n        const endedCall = callEnder(call, action)\n        return setOperationState(endedCall, action)\n      } else if (\n        call.id === action.payload.id ||\n        (action.payload.usedCallIds && action.payload.usedCallIds.includes(call.id))\n      ) {\n        return setOperationState(call, action)\n      } else {\n        return call\n      }\n    })\n  }\n}\n\ncallReducers[actionTypes.ADD_MEDIA_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      bandwidth: action.payload.bandwidth\n    }\n  }\n}\n\ncallReducers[actionTypes.REMOVE_MEDIA_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      bandwidth: action.payload.bandwidth\n    }\n  }\n}\n\ncallReducers[actionTypes.RENEGOTIATE_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      bandwidth: action.payload.bandwidth\n    }\n  }\n}\n\ncallReducers[webrtcActionTypes.SESSION_ICE_CONNECTION_STATE_CHANGE] = {\n  next (state, action) {\n    return {\n      ...state,\n      mediaConnectionState: action.payload.iceConnectionState\n    }\n  }\n}\n/*\n * Combine all of the call-tier reducers into a single reducer,\n *      each with a default state of empty object.\n */\nconst callReducer = handleActions(callReducers, {})\n\n// Actions routed to call-tier reducers.\nconst specificCallActions = combineActions(\n  actionTypes.PENDING_OPERATION,\n  actionTypes.PENDING_MAKE_CALL,\n  actionTypes.MAKE_CALL_FINISH,\n  actionTypes.ANSWER_CALL,\n  actionTypes.ANSWER_CALL_FINISH,\n  actionTypes.REJECT_CALL,\n  actionTypes.REJECT_CALL_FINISH,\n  actionTypes.CALL_ACCEPTED,\n  actionTypes.SEND_RINGING_FEEDBACK,\n  actionTypes.SEND_RINGING_FEEDBACK_FINISH,\n  actionTypes.CALL_RINGING,\n  actionTypes.SESSION_PROGRESS,\n  actionTypes.CALL_CANCELLED,\n  actionTypes.IGNORE_CALL,\n  actionTypes.IGNORE_CALL_FINISH,\n  actionTypes.END_CALL,\n  actionTypes.END_CALL_FINISH,\n  actionTypes.CALL_HOLD,\n  actionTypes.CALL_HOLD_FINISH,\n  actionTypes.CALL_UNHOLD,\n  actionTypes.CALL_UNHOLD_FINISH,\n  actionTypes.SET_CUSTOM_PARAMETERS,\n  actionTypes.SEND_CUSTOM_PARAMETERS,\n  actionTypes.SEND_CUSTOM_PARAMETERS_FINISH,\n  actionTypes.CALL_REMOTE_HOLD_FINISH,\n  actionTypes.CALL_REMOTE_UNHOLD_FINISH,\n  actionTypes.ADD_MEDIA,\n  actionTypes.ADD_BASIC_MEDIA,\n  actionTypes.ADD_MEDIA_FINISH,\n  actionTypes.REMOVE_MEDIA,\n  actionTypes.REMOVE_BASIC_MEDIA,\n  actionTypes.REMOVE_MEDIA_FINISH,\n  actionTypes.RENEGOTIATE,\n  actionTypes.RENEGOTIATE_FINISH,\n  actionTypes.UPDATE_CALL,\n  actionTypes.FORWARD_CALL,\n  actionTypes.FORWARD_CALL_FINISH,\n  actionTypes.DIRECT_TRANSFER,\n  actionTypes.DIRECT_TRANSFER_FINISH,\n  actionTypes.SEND_DTMF,\n  actionTypes.SEND_DTMF_FINISH,\n  actionTypes.JOIN,\n  actionTypes.REPLACE_TRACK,\n  actionTypes.REPLACE_TRACK_FINISH,\n  actionTypes.MEDIA_RESTART,\n  actionTypes.MEDIA_RESTART_FINISH,\n  actionTypes.REMOTE_SLOW_START,\n  actionTypes.REMOTE_START_MOH_FINISH,\n  actionTypes.REMOTE_STOP_MOH_FINISH,\n  actionTypes.GET_STATS,\n  actionTypes.GET_STATS_FINISH,\n  actionTypes.SESSION_CREATED\n)\n\nconst specificWebrtcSessionActions = combineActions(webrtcActionTypes.SESSION_ICE_CONNECTION_STATE_CHANGE)\n\n/*\n * Reducer to handle specific call actions.\n * Routes the actions to the call-tier reducers.\n */\nreducers[specificCallActions] = (state, action) => {\n  return state.map(function (call) {\n    // Only update the call related to the action.\n    if (call.id === action.payload.id) {\n      // Update call state as per the reducer.\n      let updatedCall = callReducer(call, action)\n\n      // Update the operation portion of the call state. This handles both\n      //    successful and failure actions.\n      updatedCall = setOperationState(updatedCall, action)\n      return updatedCall\n    } else {\n      return call\n    }\n  })\n}\n\n/**\n * Reducer to handle specific webrtc actions.\n * Routes the actions to the call-tier reducers.\n */\nreducers[specificWebrtcSessionActions] = (state, action) => {\n  return state.map(function (call) {\n    if (call.webrtcSessionId === action.payload.id) {\n      return callReducer(call, action)\n    } else {\n      return call\n    }\n  })\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer,\n *      each with a default state of an empty array.\n */\nconst reducer = handleActions(reducers, [])\nexport default reducer\n","// Call plugin.\nimport { OPERATIONS, NO_FINISH_OPS, OP_STATUS, OP_TRANSITIONS } from './constants'\n\n// Lodash FP\nimport { contains, isNil, property } from 'lodash/fp'\n\n/*\n * Utility function to parse the operation and operation status from an action.\n * @method getOperationMeta\n * @param  {Object}  actionType A call action.\n * @return {Object}  opMeta             Information about the operation.\n * @return {string}  [opMeta.operation] The call operation the action is about.\n * @return {string}  opMeta.transition  The change in operation the action is for.\n * @return {boolean} opMeta.isLocal     Whether the operation was started locally or not.\n * @throws {Error}   Input must be a standard call action type.\n */\nexport function getOperationMeta (actionType) {\n  // Make sure the input is a call action type.\n  if (typeof actionType !== 'string' || !actionType.includes('/CALL/')) {\n    throw new Error('Invalid input parameter. Must be a Call action.')\n  }\n\n  // Grab the unique part of the action type, after /CALL/\n  const opType = actionType.match(/\\/CALL\\/(.*)/)[1]\n\n  /**\n   * The operation name can be `OPERATION` or `OPER_ATION` (or even multiple _).\n   * It may have the prefix `REMOTE` if it is a remote operation.\n   * It may have the prefix `PENDING` if the operation is now waiting on remote.\n   * It may have the suffix `FINISH` if the operation has ended.\n   * Prefixes / suffixes are separated by a `_`.\n   *\n   * Parse the operation type to split apart the possible sections. Use those\n   *    sections to infer informaton about the operation.\n   */\n  const opMeta = {}\n  const parts = opType.split('_')\n\n  /**\n   * Check the parts for prefixes and update opMeta based on whichever are found.\n   */\n  const validPrefixes = ['REMOTE', 'PENDING']\n  const prefixes = []\n\n  // Check the first parts for prefixes.\n  while (validPrefixes.includes(parts[0])) {\n    // Take the prefix from `parts` and add it to `prefixes`.\n    prefixes.push(parts.shift())\n  }\n\n  // Handle the 'REMOTE' prefix.\n  //    The lack of this prefix means the operation was started locally.\n  opMeta.isLocal = !prefixes.includes('REMOTE')\n\n  // Handle the 'PENDING' prefix.\n  //    The lack of this prefix means the operation is either starting or ending.\n  if (prefixes.includes('PENDING')) {\n    opMeta.transition = OP_TRANSITIONS.UPDATE\n    /**\n     * The `PENDING` prefix is a special-case because it means an operation was\n     *    `ongoing` and is changing to `pending`. We know there won't be a\n     *    suffix, and the operation is already in state, so we don't need to\n     *    find it here (also, it isn't included here).\n     */\n    return opMeta\n  }\n\n  /**\n   * Check the parts for suffixes and update opMeta based on whichever are found.\n   */\n  const validSuffixes = ['FINISH']\n  const suffixes = []\n\n  // Check the last parts for suffixes.\n  while (validSuffixes.includes(parts[parts.length - 1])) {\n    // Take the suffix out of `parts` and add it to `suffixes`.\n    suffixes.push(parts.pop())\n  }\n\n  // Handle the 'FINISH' suffix.\n  //    The lack of this suffix means the operation is just starting (since we\n  //    already checked for the `pending` change before this).\n  opMeta.transition = suffixes.includes('FINISH') ? OP_TRANSITIONS.FINISH : OP_TRANSITIONS.START\n\n  /**\n   * Recombine the remaining parts as the operation.\n   */\n  opMeta.operation = OPERATIONS[parts.join('_')]\n  return opMeta\n}\n\n/**\n * Reducer utility: Wraps a call reducer to update a call's operation subsate.\n *    Only affects either `call.localOp` or `call.remoteOp` portion of state.\n * @method setOperationState\n * @param  {Object} state  Redux state of a [single] call.\n * @param  {Object} action A call action.\n */\nexport function setOperationState (state, action) {\n  let meta\n  try {\n    meta = getOperationMeta(action.type)\n  } catch (err) {\n    // Action type is not a call operation, don't change operation state.\n    return state\n  }\n  const metaOp = meta.operation\n\n  // The operation has to be defined for start/finish transitions.\n  //    Don't update state if it isn't.\n  if (!metaOp && meta.transition !== OP_TRANSITIONS.UPDATE) {\n    return state\n  }\n\n  // Determine which operation substate we should be acting on.\n  const stateProp = meta.isLocal ? 'localOp' : 'remoteOp'\n  const current = state[stateProp]\n\n  if (meta.transition === OP_TRANSITIONS.START) {\n    // A new operation is starting...\n\n    if (current) {\n      // ...but there is still an on-going op.\n      // The new operation should be rejected, so state should not change.\n      return state\n    } else {\n      // ...and there is no current operation on-going.\n      // Set the new operation in state.\n      return {\n        ...state,\n        [stateProp]: {\n          operation: metaOp,\n          status: OP_STATUS.ONGOING\n        }\n      }\n    }\n  } else if (meta.transition === OP_TRANSITIONS.UPDATE) {\n    return {\n      ...state,\n      [stateProp]: {\n        ...state[stateProp],\n        status: OP_STATUS.PENDING,\n        operationData: action.payload.operationData\n      }\n    }\n  } else {\n    const isRemote = !meta.isLocal\n    const unsetOperation = {\n      ...state,\n      [stateProp]: undefined\n    }\n\n    const currentOp = property('operation')(current)\n    if (isNil(currentOp)) {\n      // Should be considered an error scenario.\n      return state\n    }\n\n    // An on-going operation is finishing...\n    if (currentOp === metaOp) {\n      // The operation matches the current on-going operation.\n      //    Unset it in state.\n      return unsetOperation\n    } else if (isRemote && currentOp === OPERATIONS.SLOW_START) {\n      // Special case: If the current operation was a remote slow start,\n      //    then the 'finish' won't match. Allow any 'finish' to unset it.\n      return unsetOperation\n    } else if (contains(currentOp)(NO_FINISH_OPS)) {\n      // Special case: If the current operation is one that doesn't have a finish\n      //    operation, allow any 'finish' to unset it.\n      return unsetOperation\n    } else if (metaOp === OPERATIONS.END) {\n      // Special-case: If the operation is an \"end call\" (but the on-going operation\n      //    doesn't match), then unset the current operation.\n      return unsetOperation\n    } else {\n      // ...but it wasn't tracked in state?\n      // Should be considered an error scenario.\n      return state\n    }\n  }\n}\n","// Call plugin.\nimport * as actionTypes from '../actionTypes'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\n\nconst reducers = {}\n\n// Replace any previous information with the new information.\nreducers[actionTypes.TURN_CHANGED] = {\n  next (state, action) {\n    return {\n      ...state,\n      servers: action.payload.servers || state.servers,\n      credentials: {\n        ...state.credentials,\n        ...action.payload.credentials\n      }\n    }\n  }\n}\n\n/*\n * Combine all of top-tier reducers into a single reducer.\n */\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","/**\n * Call saga index.\n * Defines which actions trigger which sagas.\n */\n\n// Call plugin.\nimport * as subSagas from './subscriptions'\nimport * as supportSagas from './support'\nimport * as actionTypes from '../../interfaceNew/actionTypes'\nimport * as webrtcActionTypes from '../../../webrtc/interface/actionTypes'\nimport * as requests from '../requests/calls'\nimport { CALL_STATES, CALL_MEDIA_CONNECTION_STATES } from '../../constants'\nimport { getOptions } from '../../interfaceNew/selectors'\n\n// Callstack plugin.\nimport * as establishSagas from '../../../callstack/call/establish'\nimport * as midcallSagas from '../../../callstack/call/midcall'\nimport {\n  incomingCall,\n  parseCallRequest,\n  parseCallResponse,\n  callStatusUpdateEnded,\n  callStatusUpdateRinging,\n  callCancelled\n} from '../../../callstack/call/notifications'\nimport { sendDtmf } from '../../../callstack/call/dtmf'\nimport { sendCallAudit, normalizeIceFailure, callIceCollectionCheck } from '../../../callstack/call/support'\n\n// Other plugins.\nimport { registerService } from '../../../subscription/interface/effects'\nimport { PLUGIN_SUBSCRIPTION_FINISHED } from '../../../subscription/interface/actionTypes'\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\nimport { getAvailableCodecs } from '../../../callstack/webrtc/codecs'\n\n// Libraries.\nimport { call, select, takeEvery } from 'redux-saga/effects'\n\n/**\n * Register the call service for subscriptions.\n * @method registerCall\n */\nexport function * registerCall () {\n  yield registerService('call', subSagas.subscribe, subSagas.unsubscribe)\n}\n\n/**\n * Call operations.\n */\n\n/**\n * Start an outgoing call.\n * @method createCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * createCall (deps) {\n  yield takeEvery(actionTypes.MAKE_CALL, establishSagas.makeCall, { ...deps, requests })\n}\n\n/**\n * Sending the \"ringing feedback\" notification to the server.\n * @method sendRingingEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * sendRingingEntry (deps) {\n  // Curry the signaling function to specify the status.\n  function * updateSessionRinging (...args) {\n    return yield call(requests.updateSessionStatus, ...args, 'Ringing')\n  }\n\n  // Dependencies provided to the Callstack saga.\n  const callDeps = {\n    ...deps,\n    requests: {\n      // Add the wrapped request to CPaaS's set of requests.\n      updateCallRinging: updateSessionRinging\n    }\n  }\n\n  yield takeEvery(actionTypes.SEND_RINGING_FEEDBACK, establishSagas.sendRingingFeedback, callDeps)\n}\n\n/**\n * Answer a ringing call.\n * @method answerCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * answerCallEntry (deps) {\n  yield takeEvery(actionTypes.ANSWER_CALL, establishSagas.answerCall, { ...deps, requests })\n}\n\n/**\n * Forward an incoming call.\n * @method forwardCallEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * forwardCallEntry (deps) {\n  yield takeEvery(actionTypes.FORWARD_CALL, establishSagas.forwardCall, { ...deps, requests })\n}\n\n/**\n * Direct Transfer an ongoing call.\n * @method directTransferEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * directTransferEntry (deps) {\n  yield takeEvery(actionTypes.DIRECT_TRANSFER, midcallSagas.directTransfer, { ...deps, requests })\n}\n\n/**\n * Transfers 2 ongoing calls to one another.\n * @method consultativeTransferEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * consultativeTransferEntry (deps) {\n  yield takeEvery(actionTypes.CONSULTATIVE_TRANSFER, midcallSagas.consultativeTransfer, { ...deps, requests })\n}\n\n/**\n * Put a call on hold.\n * Currently, \"hold\" is defined as setting media directions to inactive.\n * TODO: There will be different \"hold\" scenarios. Need to determine how to\n *    differentiate between them to know which saga to trigger.\n * @method holdCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * holdCall (deps) {\n  yield takeEvery(actionTypes.CALL_HOLD, midcallSagas.offerInactiveMedia, { ...deps, requests })\n}\n\n/**\n * Take a call off hold.\n * Currently, \"unhold\" is defined as setting media directions to sendrecv.\n * TODO: There will be different \"unhold\" scenarios. Need to determine how to\n *    differentiate between them to know which saga to trigger.\n * @method unholdCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * unholdCall (deps) {\n  yield takeEvery(actionTypes.CALL_UNHOLD, midcallSagas.offerFullMedia, { ...deps, requests })\n}\n\n/**\n * Add media to a call.\n * @method addMedia\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * addMediaEntry (deps) {\n  yield takeEvery(actionTypes.ADD_MEDIA, midcallSagas.addMedia, { ...deps, requests })\n}\n\n/**\n * Remove media from a call.\n * @method removeMedia\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * removeMediaEntry (deps) {\n  yield takeEvery(actionTypes.REMOVE_MEDIA, midcallSagas.removeMedia, { ...deps, requests })\n}\n\n/**\n * Add media to a call.\n * @method addMedia\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * addBasicMediaEntry (deps) {\n  yield takeEvery(actionTypes.ADD_BASIC_MEDIA, midcallSagas.addBasicMedia, { ...deps, requests })\n}\n\n/**\n * Remove media from a call.\n * @method removeMedia\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * removeBasicMediaEntry (deps) {\n  yield takeEvery(actionTypes.REMOVE_BASIC_MEDIA, midcallSagas.removeBasicMedia, { ...deps, requests })\n}\n\n/**\n * Check if renegotiation is needed.\n * @method checkRenegotiationFlagEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * checkRenegotiationFlagEntry (deps) {\n  yield takeEvery(webrtcActionTypes.SESSION_TRACK_ENDED, midcallSagas.checkRenegotiationFlag, { ...deps, requests })\n}\n\n/**\n * Perform a call renegotiation.\n * @method renegotiationEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * renegotiationEntry (deps) {\n  yield takeEvery(actionTypes.RENEGOTIATE, midcallSagas.renegotiate, { ...deps, requests })\n}\n\n/**\n * Send DTMF tones for a call.\n * @method sendDTMF\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * sendDTMFEntry (deps) {\n  yield takeEvery(actionTypes.SEND_DTMF, sendDtmf, deps)\n}\n\n/**\n * Call notifications.\n */\n\n/**\n * Handle a \"call incoming\" notification.\n * @method incomingCallNotification\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * incomingCallNotification (deps) {\n  // Curry the signaling function to specify the status.\n  function * updateSessionRinging (...args) {\n    return yield call(requests.updateSessionStatus, ...args, 'Ringing')\n  }\n\n  // Dependencies provided to the Callstack saga.\n  const callDeps = {\n    ...deps,\n    requests: {\n      // Add the wrapped request to CPaaS's set of requests.\n      updateCallRinging: updateSessionRinging,\n      endSession: requests.endSession\n    }\n  }\n\n  /**\n   * Intercept the CPaaS-specific notification, ensuring parameters are given\n   *    to the Callstack sagas into a generic format.\n   * @method cpaasIncomingCall\n   * @param {Object} action An \"incoming call notification\" action.\n   */\n  function * cpaasIncomingCall (action) {\n    const notification = action.payload.wrtcsSessionInvitationNotification\n\n    // Massage data into a generic format, instead of CPaaS-specific.\n    const params = {\n      sdp: notification.offer.sdp,\n      wrtcsSessionId: notification.link[0].href.split('sessions/')[1],\n      // Remote participant information.\n      remoteName: notification.originatorName,\n      remoteNumber: notification.originatorAddress,\n      calleeNumber: notification.tParticipantAddress\n    }\n\n    // Pass the incoming call parameters to the Callstack for handling.\n    yield call(incomingCall, callDeps, params)\n  }\n\n  // Redux-saga take() pattern.\n  function incomingCallPattern (action) {\n    return action.type === NOTIFICATION_RECEIVED && action.payload.wrtcsSessionInvitationNotification\n  }\n  yield takeEvery(incomingCallPattern, cpaasIncomingCall)\n}\n\n/**\n * Handle a \"call accepted\" notification.\n * @method callAcceptedNotification\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * callAcceptedNotification (deps) {\n  /**\n   * Intercept the CPaaS-specific notification, ensuring parameters are given\n   *    to the Callstack sagas into a generic format.\n   * @method parseAcceptedNotification\n   * @param {Object} action\n   */\n  function * parseAcceptedNotification (action) {\n    const notification = action.payload.wrtcsAcceptanceNotification\n\n    // Pull-out the parameters into a standard format for the Callstack.\n    const params = {\n      sdp: notification.answer.sdp,\n      wrtcsSessionId: notification.link[0].href.split('sessions/')[1]\n    }\n\n    yield call(parseCallResponse, deps, params)\n  }\n\n  // Redux-saga take() pattern.\n  function callAcceptedPattern (action) {\n    return action.type === NOTIFICATION_RECEIVED && action.payload.wrtcsAcceptanceNotification\n  }\n\n  yield takeEvery(callAcceptedPattern, parseAcceptedNotification)\n}\n\n/**\n * Handle a call status websocket notification.\n * @method callStatusNotification\n * @param  {Object} webRTC The webRTC stack.\n */\nexport function * callStatusNotification (deps) {\n  function statusUpdatePattern (status) {\n    return function statusPattern (action) {\n      return (\n        action.type === NOTIFICATION_RECEIVED &&\n        action.payload.wrtcsEventNotification &&\n        action.payload.wrtcsEventNotification.eventType === status\n      )\n    }\n  }\n\n  function * parseStatusNotification (action) {\n    const eventType = action.payload.wrtcsEventNotification.eventType\n    const params = {\n      wrtcsSessionId: action.payload.wrtcsEventNotification.link[0].href.split('sessions/')[1]\n    }\n    if (eventType === 'SessionEnded') {\n      yield call(callStatusUpdateEnded, deps, params)\n    } else if (eventType === 'Ringing') {\n      yield call(callStatusUpdateRinging, deps, params)\n    } else if (eventType === 'Cancelled') {\n      yield call(callCancelled, deps, params)\n    }\n  }\n\n  // Handle specific call statuses\n  yield takeEvery(statusUpdatePattern('Ringing'), parseStatusNotification)\n  yield takeEvery(statusUpdatePattern('SessionEnded'), parseStatusNotification)\n  yield takeEvery(statusUpdatePattern('Cancelled'), parseStatusNotification)\n}\n\n/**\n * Handle sending a call audit request\n * TODO: Move the common \"setup\" logic into the Callstack?\n * @method callAudit\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * callAudit (deps) {\n  const actionTypesToDoAuditOn = [actionTypes.UPDATE_CALL, actionTypes.PENDING_JOIN, actionTypes.PENDING_MAKE_CALL]\n\n  // Curry the signaling function to specify the status.\n  function * auditCall (...args) {\n    // For CPaaS, \"call audit\" is to update the call's status to 'Connected'.\n    return yield call(requests.updateSessionStatus, ...args, 'Connected')\n  }\n\n  function callStartAuditPattern (action) {\n    if (!action.error) {\n      if (actionTypesToDoAuditOn.indexOf(action.type) !== -1) {\n        const preConnectedState =\n          action.payload.state === CALL_STATES.INITIATED || action.payload.state === CALL_STATES.RINGING\n        return preConnectedState\n      }\n    }\n    return false\n  }\n\n  yield takeEvery([callStartAuditPattern], sendCallAudit, {\n    requests: {\n      auditCall\n    },\n    webRTC: deps.webRTC\n  })\n}\n\n/**\n * Handle receiving remote offer notifications in a CPaaS format.\n * Uses properties in the notification to create a standardized data object to\n *    be used by the Callstack.\n * @method callOfferNotification\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * callOfferNotification (deps) {\n  // Dependencies provided to the Callstack saga.\n  const callDeps = {\n    ...deps,\n    requests: {\n      /*\n       * CPaaS uses the same REST endpoint for both answering a call and\n       *    answering a renegotiation. Rename the saga so that the Callstack\n       *    uses the correct REST saga.\n       */\n      updateSessionResponse: requests.answerSession\n    }\n  }\n\n  /**\n   * Intercept the CPaaS-specific notification, ensuring parameters are given\n   *    to the Callstack sagas into a generic format.\n   * @method parseOfferNotification\n   * @param {Object} action\n   */\n  function * parseOfferNotification (action) {\n    const notification = action.payload.wrtcsOfferNotification\n\n    // Pull-out the parameters into a standard format for the Callstack.\n    const params = {\n      sdp: notification.offer.sdp,\n      wrtcsSessionId: notification.link[0].href.split('sessions/')[1]\n    }\n\n    yield call(parseCallRequest, callDeps, params)\n  }\n\n  // Redux-saga take() pattern.\n  function callOfferPattern (action) {\n    return action.type === NOTIFICATION_RECEIVED && action.payload.wrtcsOfferNotification\n  }\n\n  yield takeEvery(callOfferPattern, parseOfferNotification)\n}\n\n/**\n * Handle a \"call answer\" notification.\n * @method callAnswerNotification\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * callAnswerNotification (deps) {\n  /**\n   * Intercept the CPaaS-specific notification, ensuring parameters are given\n   *    to the Callstack sagas into a generic format.\n   * @method parseAnswerNotification\n   * @param {Object} action\n   */\n  function * parseAnswerNotification (action) {\n    const notification = action.payload.wrtcsAnswerNotification\n\n    // Pull-out the parameters into a standard format for the Callstack.\n    const params = {\n      sdp: notification.answer.sdp,\n      wrtcsSessionId: notification.link[0].href.split('sessions/')[1]\n    }\n\n    yield call(parseCallResponse, deps, params)\n  }\n\n  // Redux-saga take() pattern.\n  function callAnswerPattern (action) {\n    return action.type === NOTIFICATION_RECEIVED && action.payload.wrtcsAnswerNotification\n  }\n\n  yield takeEvery(callAnswerPattern, parseAnswerNotification)\n}\n\n/**\n * End an ongoing call.\n * @method endCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * endCallEntry (deps) {\n  yield takeEvery(actionTypes.END_CALL, midcallSagas.endCall, { ...deps, requests })\n}\n\n/**\n * Ignore an incoming call.\n * @method ignoreCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * ignoreCallEntry (deps) {\n  yield takeEvery(actionTypes.IGNORE_CALL, establishSagas.ignoreCall, deps)\n}\n\n/**\n * Reject an incoming call.\n * @method rejectCall\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * rejectCallEntry (deps) {\n  yield takeEvery(actionTypes.REJECT_CALL, establishSagas.rejectCall, { ...deps, requests })\n}\n\n/**\n * Get RTCStatsReport.\n * @method getStats\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * getStatsEntry (deps) {\n  yield takeEvery(actionTypes.GET_STATS, midcallSagas.getStats, deps)\n}\n\n/**\n * Other.\n */\n\n/**\n * After subscribing for the call service, set turn information for calls.\n * @method setTurnCredentials\n */\nexport function * setTurnCredentials () {\n  function callSubscribePattern (action) {\n    return action.type === PLUGIN_SUBSCRIPTION_FINISHED && action.payload.service === 'call' && !action.error\n  }\n\n  yield takeEvery(callSubscribePattern, supportSagas.setTurnCredentials)\n}\n\n/**\n * Replaces a track with a new track with specified constraints.\n * @method replaceTrackEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * replaceTrackEntry (deps) {\n  yield takeEvery(actionTypes.REPLACE_TRACK, midcallSagas.replaceTrack, deps)\n}\n\n/**\n * Retrieves the list of available codecs supported by the browser.\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * getAvailableCodecsEntry (deps) {\n  yield takeEvery(actionTypes.GET_AVAILABLE_CODECS, getAvailableCodecs, { ...deps })\n}\n\n/**\n * Restarts ICE candidate collection\n * @method restartIce\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * restartIce (deps) {\n  yield takeEvery(actionTypes.MEDIA_RESTART, midcallSagas.iceRestart, { ...deps, requests })\n}\n\n/**\n * Behaviour: Normalize ICE connection state changes between Plan-B\n *    and Unified-Plan PeerConnections.\n * See saga description of `normalizeIceFailure` for full context.\n * @param  {Object} deps\n */\nexport function * watchForMediaDisconnect (deps) {\n  // Watch for Session actions indicating the ICE connection has disconnected.\n  function onMediaDisconnect (action) {\n    return (\n      action.type === webrtcActionTypes.SESSION_ICE_CONNECTION_STATE_CHANGE &&\n      action.payload.iceConnectionState === CALL_MEDIA_CONNECTION_STATES.DISCONNECTED\n    )\n  }\n\n  // We only need this behaviour when using Unified-Plan.\n  const options = yield select(getOptions)\n  if (options.defaultPeerConfig.sdpSemantics === 'unified-plan') {\n    yield takeEvery(onMediaDisconnect, normalizeIceFailure)\n  }\n}\n\n/**\n * Entry saga for events that trigger a call to the ice collection check function.\n * @method callCollectionCheckEntry\n * @param {Object} deps             Dependencies to be injected.\n * @param {Object} deps.webRTC      The WebRTC stack.\n */\nexport function * callCollectionCheckEntry (deps) {\n  function onIceCollectionActions (action) {\n    return (\n      action.type === webrtcActionTypes.SESSION_ICE_GATHERING_STATE_CHANGE ||\n      action.type === webrtcActionTypes.SESSION_ICE_CANDIDATE_COLLECTED ||\n      action.type === webrtcActionTypes.SESSION_ICE_COLLECTION_SCHEDULED_CHECK\n    )\n  }\n\n  yield takeEvery(onIceCollectionActions, callIceCollectionCheck, deps)\n}\n","// Call plugin.\nimport { callSubscribe, callUnsubscribe } from '../requests/subscriptions'\n\n// Other plugins.\nimport { reportSubscriptionFinished, reportUnsubscriptionFinished } from '../../../subscription/interface/actions'\nimport { getNotificationChannels } from '../../../subscription/interface/selectors'\nimport { getRequestInfo } from '../../../auth/interface/selectors'\nimport { logManager } from '../../../logs'\n\n// Helpers.\nimport { platforms } from '../../../constants'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * Subscription saga. Creates a new call subscription channel.\n * @method callSubscribe\n * @param {Object} config   The subscription request config\n * @param {string} type     The type of notification channel for this subscription.\n */\nexport function * subscribe (config, type) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const channels = yield select(getNotificationChannels)\n  const channelInfo = channels.notificationChannels[type]\n\n  const requestOptions = {}\n  requestOptions.method = 'POST'\n  requestOptions.url =\n    `${requestInfo.baseURL}` +\n    `/cpaas/webrtcsignaling/${requestInfo.version}/${requestInfo.username}` +\n    '/subscriptions'\n\n  log.debug(`Subscribing to call service on ${type} channel.`)\n  const response = yield call(callSubscribe, requestInfo, channelInfo)\n\n  yield put(\n    reportSubscriptionFinished({\n      ...response,\n      service: 'call',\n      type: type\n    })\n  )\n}\n\n/**\n * Unsubscription saga. Deletes an existing call subscription.\n * @method unsubscribe\n */\nexport function * unsubscribe (action) {\n  const { subscriptions } = yield select(getNotificationChannels)\n  let callSubscription = subscriptions.filter(sub => {\n    return sub.service === 'call' && sub.channelType === action.payload.type\n  })\n\n  if (callSubscription.length === 0) {\n    // \"Error\" scenario: Can't unsubscribe to a service\n    //    that we don't have.\n  } else if (callSubscription.length > 1) {\n    // \"Error\" scenario: There shouldn't be able to have\n    //    more than 1 of the same service.\n  } else {\n    callSubscription = callSubscription[0]\n  }\n\n  log.info(`Unsubscribing from call service on ${action.payload.type} channel.`)\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  const response = yield call(callUnsubscribe, requestInfo, callSubscription)\n\n  yield put(\n    reportUnsubscriptionFinished({\n      ...response,\n      service: 'call',\n      type: action.payload.type\n    })\n  )\n}\n","// Helpers.\nimport request from '../../../request/effects'\nimport BasicError, { subscriptionCodes } from '../../../errors'\n\n/**\n * Request saga. Generates and sends a REST request to the backend.\n * @method callSubscribe\n * @param  {Object} requestInfo\n * @param  {Object} subInfo\n * @return {Object}\n */\nexport function * callSubscribe (requestInfo, channelInfo) {\n  const requestOptions = {\n    method: 'POST',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `webrtcsignaling/${requestInfo.version}/${requestInfo.username}/` +\n      'subscriptions',\n    body: JSON.stringify({\n      wrtcsNotificationSubscription: {\n        callbackReference: {\n          notifyURL: channelInfo.callbackURL\n        },\n        clientCorrelator: requestInfo.clientCorrelator\n      }\n    })\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      // TODO: An actual error.\n      error: new BasicError({\n        message: 'Failed to subscribe for call notifications',\n        code: subscriptionCodes.CPAAS_SERVICE_SUB_FAIL\n      })\n    }\n  } else {\n    return {\n      subscription: response.payload.body.wrtcsNotificationSubscription\n    }\n  }\n}\n\n/**\n * Request saga. Generates and sends a REST request to the backend.\n * @method callUnsubscribe\n * @param  {Object} requestInfo\n * @param  {Object} subInfo\n * @return {Object}\n */\nexport function * callUnsubscribe (requestInfo, subInfo) {\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url:\n      `${requestInfo.baseURL}/cpaas/` +\n      `webrtcsignaling/${requestInfo.version}/${requestInfo.username}/` +\n      `subscriptions/${subInfo.subscriptionId}`\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error && response.payload.result.code !== 404) {\n    return {\n      error: new BasicError({\n        message: 'Failed to unsubscribe from call notifications.',\n        code: subscriptionCodes.CPAAS_SERVICE_SUB_FAIL\n      })\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n","/**\n * Retrieves the flag which specifies wether or not this SDK should use a custom header as part of any requests being sent to server.\n * This custom header refers to the current agent version,\n * but it may also contain additional custom information (see customAgentVersionHeaderSuffix).\n * @param {Object} state  The current Redux state object.\n * @return {boolean} True if custom header should be used, false otherwise.\n */\nexport function injectAgentVersionHeader (state) {\n  return state.config.requests.injectAgentVersionHeader\n}\n\n/**\n * Retrieves a custom suffix value which specifies any extra information that can be appended to the custom header.\n * This custom header is sent by the SDK, as part of any requests being sent to server.\n * @param {Object} state  The current Redux state object.\n * @return {string} The suffix value.\n */\nexport function customAgentVersionHeaderSuffix (state) {\n  return state.config.requests.customAgentVersionHeaderSuffix\n}\n","/**\n * \"Support sagas\" handle call behaviours that are not directly related to calls\n *    themselves, but are required for establishing/maintaining a call.\n *\n * Some sagas do assume that there is an established session (both webRTC and\n *    server; eg. call audits), while others do not (eg. turn credentials).\n */\n\n// Call plugin.\nimport { fetchCredentials } from '../requests/calls'\nimport { turnActions } from '../../interfaceNew/actions'\nimport { getOptions } from '../../interfaceNew/selectors'\n\n// Other plugins.\nimport { getRequestInfo } from '../../../auth/interface/selectors'\nimport { logManager } from '../../../logs'\n\n// Helpers.\nimport { platforms } from '../../../constants'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * Handles setting/getting turn/stun information.\n * Fetches TURN credentials from the backend if configured.\n * @method setTurnCredentials\n */\nexport function * setTurnCredentials () {\n  const { serverTurnCredentials, defaultPeerConfig } = yield select(getOptions)\n\n  // Must have ICE servers configured. Check the new way of configuring them...\n  if (defaultPeerConfig.iceServers.length === 0) {\n    log.debug('No ICE servers provided during setup; not using TURN/STUN for calls.')\n    return\n  }\n\n  const turnInfo = { servers: defaultPeerConfig.iceServers }\n\n  if (serverTurnCredentials) {\n    log.debug('Retrieving turn credentials from server.')\n\n    // Collect the information needed to make the request.\n    const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n    const response = yield call(fetchCredentials, requestInfo)\n\n    if (response.error) {\n      // TODO: Better error handling; do more than just stop.\n      log.debug('Failed to retrieve turn credentials.')\n      return\n    } else {\n      turnInfo.credentials = response\n\n      // Map the server-provided credentials to the ICE server list.\n      turnInfo.servers = turnInfo.servers.map(server => {\n        return {\n          urls: server.urls || server.url,\n          username: response.username,\n          credential: response.password\n        }\n      })\n    }\n  } else {\n    log.debug('Using application provided turn credentials.')\n  }\n\n  yield put(turnActions.turnChanged(turnInfo))\n}\n","/**\n * \"Establish sagas\" handle establishing a call (ie. start or respond to a call).\n *\n * The sagas about starting a call locally assume there is no session established\n *    (since that's what it is doing). The sagas about responding to a call\n *    assume that there is a session (both webRTC and server).\n */\n\n// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport { getCallById, getOptions, getTurnInfo } from '../../call/interfaceNew/selectors'\nimport { CALL_STATES, CALL_DIRECTION } from '../../call/constants'\nimport { checkBandwidthControls } from '../utils/bandwidth'\n\n// Callstack plugin.\nimport { setupCall, answerWebrtcSession } from '../webrtc/establish'\nimport { closeCall } from '../webrtc/midcall'\n\n// Other plugins.\nimport { logManager } from '../../logs'\nimport BasicError, { callCodes } from '../../errors'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\n\n/**\n * Starts a new outgoing call.\n *\n * This saga defines how a call is started. It performs the webRTC and\n *    signalling operations to create a \"call\" both locally and on the server.\n * Assumptions:\n *     1. None.\n * Responsibilities:\n *     1. Setup the call locally, using the webRTC helper saga.\n *     2. Create the call on the server.\n *     3. Update call state (via redux action).\n * @method makeCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.createSession \"Make call\" signalling function.\n * @param {Object}   action        An action of type `MAKE_CALL`.\n */\nexport function * makeCall (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Initiating new outgoing call.')\n\n  // Create a new local media object for this call.\n  const mediaConstraints = {\n    audio: action.payload.mediaConstraints.audio,\n    video: action.payload.mediaConstraints.video,\n    screenShare: action.payload.mediaConstraints.screenShare\n  }\n\n  const turnInfo = yield select(getTurnInfo)\n  const callOptions = yield select(getOptions)\n\n  const bandwidth = checkBandwidthControls(action.payload.bandwidth)\n\n  const { error, offerSdp, sessionId, mediaIds } = yield call(setupCall, deps, mediaConstraints, {\n    defaultPeerConfig: callOptions.defaultPeerConfig,\n    turnInfo,\n    bandwidth,\n    dscpControls: action.payload.dscpControls,\n    callId: action.payload.id,\n    // ICE related configs.\n    trickleIceMode: callOptions.trickleIceMode,\n    removeBundling: callOptions.removeBundling,\n    serverTurnCredentials: callOptions.serverTurnCredentials\n  })\n\n  // An error occurred while trying to setup the WebRTC portion of the call.\n  //    Report the error and mark the call as ended.\n  if (error) {\n    log.info(`Failed to initiate call. Changing to ${CALL_STATES.ENDED}.`)\n    yield put(\n      callActions.makeCallFinish(action.payload.id, {\n        state: CALL_STATES.ENDED,\n        error: error\n      })\n    )\n\n    return\n  }\n\n  const callInfo = {\n    id: action.payload.id,\n    participantAddress: action.payload.participantAddress,\n    isAnonymous: action.payload.isAnonymous,\n    from: action.payload.from,\n    account: action.payload.account,\n    offer: offerSdp,\n    displayName: action.payload.displayName ? action.payload.displayName : '',\n    customParameters: action.payload.customParameters,\n    customBodies: action.payload.customBodies\n  }\n\n  const response = yield call(requests.createSession, callInfo)\n\n  if (!response.error) {\n    log.info(`Finished initiating call. Changing to ${CALL_STATES.INITIATED} and waiting on remote answer.`)\n    yield put(\n      callActions.pendingMakeCall(action.payload.id, {\n        state: CALL_STATES.INITIATED,\n        // The ID that the backend uses to track this webRTC session.\n        wrtcsSessionId: response.wrtcsSessionId,\n        // The ID that the webRTC stack uses to track this webRTC session.\n        webrtcSessionId: sessionId,\n        // The local Media object associated with this call.\n        mediaIds: mediaIds,\n        // The bandwidth of the call.\n        bandwidth,\n        // The custom display name to use. Not supported on all environments.\n        displayName: action.payload.displayName,\n        // The custom parameters (headers) and custom bodies of the call\n        customParameters: action.payload.customParameters,\n        customBodies: action.payload.customBodies\n      })\n    )\n  } else {\n    log.info('Failed to initiate call. Ending call and cleaning up WebRTC portions.')\n    // The call failed, so stop the Media object created for the call.\n    // TODO: Update redux state that the Media object is stopped.\n    //    Need an event from Media model to notify about the stop, and listener\n    //    set on Media when it is created (in `createLocalMedia` saga).\n    yield call(closeCall, deps.webRTC, sessionId)\n\n    yield put(\n      callActions.makeCallFinish(action.payload.id, {\n        state: CALL_STATES.ENDED,\n        error: response.error\n      })\n    )\n  }\n}\n\n/**\n * Sends ringing feedback to the server for an incoming, Initiated call.\n *\n * This saga defines how/when a call can send ringing feedback to the remote user.\n *    It performs signaling to send this notification to the server, which forwards\n *    it to the remote side of the call.\n * Assumptions:\n *    1. The call is in Initiated state.\n *    2. The call's direction is incoming.\n *    3. The SDK is configured `ringingFeedbackMode: 'manual'`.\n * Responsibilities:\n *    1. Perform signaling.\n *    2. Update call state (via redux action).\n * @method sendRingingFeedback\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateCallRinging \"Send ringing\" signalling function.\n * @param {Object}   action        An action of type `SEND_RINGING_FEEDBACK`.\n */\nexport function * sendRingingFeedback (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Sending ringing feedback for incoming call.')\n\n  const options = yield select(getOptions)\n  const targetCall = yield select(getCallById, action.payload.id)\n  // Requirements:\n  //  - call must exist\n  //  - configuration must be 'manual'\n  //  - call must be in Initiated state.\n  //  - call must be incoming.\n  let errorInfo\n  if (!targetCall) {\n    errorInfo = {\n      message: `Failed to send ringing feedback. Call ${action.payload.id} not found.`,\n      code: callCodes.INVALID_PARAM\n    }\n  } else if (options.ringingFeedbackMode !== 'manual') {\n    errorInfo = {\n      message: \"Failed to send ringing feedback. Configuration must be set to 'manual' mode.\",\n      code: callCodes.NOT_SUPPORTED\n    }\n  } else if (targetCall.state !== CALL_STATES.INITIATED) {\n    errorInfo = {\n      message: `Failed to send ringing feedback. Call must be in ${CALL_STATES.INITIATED} state.`,\n      code: callCodes.INVALID_STATE\n    }\n  } else if (targetCall.direction !== CALL_DIRECTION.INCOMING) {\n    errorInfo = {\n      message: 'Failed to send ringing feedback. Call must be incoming.',\n      code: callCodes.INVALID_STATE\n    }\n  }\n\n  // If the operation isn't allowable, dispatch an error and return.\n  if (errorInfo) {\n    log.info(errorInfo.message)\n    yield put(\n      callActions.sendRingingFeedbackFinish(action.payload.id, {\n        error: new BasicError(errorInfo)\n      })\n    )\n    return\n  }\n\n  const callInfo = { wrtcsSessionId: targetCall.wrtcsSessionId, id: targetCall.id }\n  const response = yield call(requests.updateCallRinging, callInfo)\n\n  if (response.error) {\n    log.info(`Failed to send ringing feedback: ${response.error.code}: ${response.error.message}`)\n    yield put(\n      callActions.sendRingingFeedbackFinish(targetCall.id, {\n        error: response.error\n      })\n    )\n  } else {\n    log.info(`Ringing feedback sent. Changing call to ${CALL_STATES.RINGING} state.`)\n    yield put(callActions.sendRingingFeedbackFinish(targetCall.id))\n  }\n}\n\n/**\n * Answers an incoming call.\n *\n * This saga defines how a call is answered. It performs the webRTC and\n *    signaling operations to respond to a call on the server. The local \"call\"\n *    may or may not exist at this point in time, depending if the call is slow\n *    start.\n * If the call is using regular negotiation, the call will exist locally.\n *    Signaling with an answer SDP will establish the call, so it can be\n *    considered \"Connected\" afterwards.\n * If the call is using slow start negotiation, the call needs to be created\n *    locally. An offer SDP from the call will be used for signaling (as per\n *    slow start), but the call cannot be considered \"Connected\" until we\n *    receive a response to the offer SDP.\n * Assumptions:\n *    1. The call is in Initiated or Ringing state.\n *    2. The call's direction is incoming.\n * Responsibilities:\n *    1. Determine whether Regular or Slow Start negotiation is to be used.\n *    2. Regular: Create an answer for the call, using the webRTC helpers.\n *    3. Regular: Update the call on the server with the answer.\n *    4. Regular: Update call state (via redux actions).\n *    2. Slow Start: Setup the call locally, using the webRTC helper saga.\n *    3. Slow Start: Update the call on the server with an offer.\n *    4. Slow Start: Update state (via redux actions).\n * @method answerCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.answerSession \"Answer call\" signalling function.\n * @param {Object}   action        An \"answer call\" action.\n */\nexport function * answerCall (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Answering incoming call.')\n\n  const incomingCall = yield select(getCallById, action.payload.id)\n\n  let errorInfo\n  // Make sure that we can perform this operation right now.\n  if (!incomingCall) {\n    // Call must exist.\n    errorInfo = {\n      message: `Failed to answer call. Call ${action.payload.id} not found.`,\n      code: callCodes.INVALID_PARAM\n    }\n  } else if (![CALL_STATES.INITIATED, CALL_STATES.RINGING].includes(incomingCall.state)) {\n    // Call must be in Initiated or Ringing state.\n    errorInfo = {\n      message: `Failed to answer call. Call must be in ${CALL_STATES.INITIATED} or ${CALL_STATES.RINGING} state.`,\n      code: callCodes.INVALID_STATE\n    }\n  } else if (incomingCall.direction !== CALL_DIRECTION.INCOMING) {\n    // Call must be incoming.\n    errorInfo = {\n      message: 'Failed to answer call. Call must be incoming.',\n      code: callCodes.INVALID_STATE\n    }\n  }\n\n  // If the operation isn't allowable, dispatch an error and return.\n  if (errorInfo) {\n    log.info(errorInfo.message)\n    yield put(\n      callActions.answerCallFinish(action.payload.id, {\n        error: new BasicError(errorInfo)\n      })\n    )\n    return\n  }\n\n  const bandwidth = checkBandwidthControls(action.payload.bandwidth)\n  const mediaConstraints = {\n    audio: action.payload.mediaConstraints.audio,\n    video: action.payload.mediaConstraints.video,\n    screenShare: action.payload.mediaConstraints.screenShare\n  }\n\n  const wrtcsSessionId = incomingCall.wrtcsSessionId\n  let webrtcInfo, callInfo, nextState\n  if (incomingCall.isSlowStart) {\n    /*\n     * If the call was a slow start call, then it doesn't have a webRTC session\n     *    yet. We need to setup the session and provide the signaling server\n     *    with an SDP offer.\n     */\n    log.debug('Answering call with slow start negotiation.')\n\n    const turnInfo = yield select(getTurnInfo)\n    const callOptions = yield select(getOptions)\n\n    // Setup a webRTC session.\n    webrtcInfo = yield call(setupCall, deps, mediaConstraints, {\n      callId: action.payload.id,\n      defaultPeerConfig: callOptions.defaultPeerConfig,\n      turnInfo,\n      bandwidth,\n      dscpControls: action.payload.dscpControls,\n      // ICE related configs.\n      trickleIceMode: callOptions.trickleIceMode,\n      removeBundling: callOptions.removeBundling,\n      serverTurnCredentials: callOptions.serverTurnCredentials\n    })\n\n    if (webrtcInfo.error) {\n      log.info('Failed to answer incoming call.')\n      yield put(\n        callActions.answerCallFinish(\n          action.payload.id,\n          {\n            error: webrtcInfo.error\n          },\n          {\n            isSlowStart: incomingCall.isSlowStart\n          }\n        )\n      )\n      return\n    }\n\n    callInfo = {\n      answer: webrtcInfo.offerSdp,\n      wrtcsSessionId,\n      customParameters: action.payload.customParameters,\n      customBodies: action.payload.customBodies\n    }\n\n    // Even if the answer request is successful, we still need to wait for a\n    //    notification from the signaling server to know if the call is complete.\n    nextState = CALL_STATES.RINGING\n  } else {\n    /*\n     * For a regular call scenario, we perform normal webRTC negotiation.\n     */\n\n    // Update the existing webRTC session with an answer.\n    const sessionOptions = {\n      sessionId: incomingCall.webrtcSessionId,\n      bandwidth,\n      dscpControls: action.payload.dscpControls,\n      callId: incomingCall.id\n    }\n    webrtcInfo = yield call(answerWebrtcSession, deps, mediaConstraints, sessionOptions)\n\n    if (webrtcInfo.error) {\n      log.info('Failed to incoming answer call.')\n      yield put(\n        callActions.answerCallFinish(\n          action.payload.id,\n          {\n            error: webrtcInfo.error\n          },\n          {\n            isSlowStart: incomingCall.isSlowStart\n          }\n        )\n      )\n\n      if (webrtcInfo.error.code === callCodes.NO_ICE_CANDIDATES) {\n        yield call(closeCall, deps.webRTC, wrtcsSessionId)\n        yield call(requests.endSession, { wrtcsSessionId })\n      }\n\n      return\n    }\n\n    callInfo = {\n      id: incomingCall.id,\n      answer: webrtcInfo.answerSDP,\n      wrtcsSessionId,\n      customParameters: action.payload.customParameters,\n      customBodies: action.payload.customBodies\n    }\n\n    // If the answer request is successful, then the call can be considered complete.\n    nextState = CALL_STATES.CONNECTED\n  }\n\n  // Perform the signaling to answer the call.\n  const response = yield call(requests.answerSession, callInfo)\n\n  if (!response.error) {\n    if (incomingCall.isSlowStart) {\n      log.info(`Finished answering slow-start call. Changing to ${nextState} and waiting for remote slow-start answer.`)\n    } else {\n      log.info(`Finished answering call. Changing to ${nextState}.`)\n    }\n\n    yield put(\n      callActions.answerCallFinish(\n        action.payload.id,\n        {\n          state: nextState,\n          // TODO: Proper start time for slow-start calls.\n          startTime: Date.now(),\n          // The local Media object associated with this call.\n          mediaIds: webrtcInfo.mediaIds,\n          // For slow start calls, there isn't a webRTC session yet.\n          webrtcSessionId: webrtcInfo.sessionId,\n          // TODO: Properly track the media that the call has.\n          mediaConstraints,\n          // The bandwidth of the call\n          bandwidth,\n          // The custom parameters (headers) and custom bodies of the call\n          customParameters: action.payload.customParameters,\n          customBodies: action.payload.customBodies\n        },\n        {\n          isSlowStart: incomingCall.isSlowStart\n        }\n      )\n    )\n  } else {\n    log.info('Failed to answer call.')\n    yield put(\n      callActions.answerCallFinish(\n        action.payload.id,\n        { error: response.error },\n        { isSlowStart: incomingCall.isSlowStart }\n      )\n    )\n  }\n}\n\n/**\n * Rejects an incoming call.\n *\n * This saga defines how a call is rejected. It performs the webRTC and\n *    signalling operations to reject a \"call\" both locally and on the server.\n * Assumptions:\n *    1. None\n * Responsibilities:\n *    1. Cleanup the call locally, using the webRTC helper saga.\n *    2. Reject the call on the server.\n *    3. Update call state (via redux action).\n * @method rejectCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.rejectSession \"Reject call\" signalling function.\n * @param {Object}   action        An action of type `REJECT_CALL`.\n */\nexport function * rejectCall (deps, action) {\n  const { webRTC, requests } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Rejecting incoming call.')\n\n  const incomingCall = yield select(getCallById, action.payload.id)\n\n  let errorInfo\n  // Ensure the call is in a valid state for this operation.\n  if (!incomingCall) {\n    // Call must exist.\n    errorInfo = {\n      message: `Failed to reject call. Call ${action.payload.id} not found.`,\n      code: callCodes.INVALID_PARAM\n    }\n  } else if (![CALL_STATES.INITIATED, CALL_STATES.RINGING].includes(incomingCall.state)) {\n    // Call must be in Initiated or Ringing state.\n    errorInfo = {\n      message: `Failed to reject call. Call must be in ${CALL_STATES.INITIATED} or ${CALL_STATES.RINGING} state.`,\n      code: callCodes.INVALID_STATE\n    }\n  } else if (incomingCall.direction !== CALL_DIRECTION.INCOMING) {\n    // Call must be incoming.\n    errorInfo = {\n      message: 'Failed to reject call. Call must be incoming.',\n      code: callCodes.INVALID_STATE\n    }\n  }\n\n  // If the operation isn't allowable, dispatch an error and return.\n  if (errorInfo) {\n    log.info(errorInfo.message)\n    yield put(\n      callActions.rejectCallFinish(action.payload.id, {\n        error: new BasicError(errorInfo)\n      })\n    )\n    return\n  }\n\n  yield call(closeCall, webRTC, incomingCall.webrtcSessionId)\n\n  // Collect the information needed to make the request.\n  const callInfo = {\n    wrtcsSessionId: incomingCall.wrtcsSessionId\n  }\n  const response = yield call(requests.rejectSession, callInfo)\n\n  if (!response.error) {\n    log.info(`Finished rejecting call. Changing to ${CALL_STATES.ENDED}.`)\n    yield put(callActions.rejectCallFinish(action.payload.id))\n  } else {\n    log.info('Failed to reject call.')\n    yield put(\n      callActions.rejectCallFinish(action.payload.id, {\n        error: response.error\n      })\n    )\n  }\n}\n\n/**\n * Ignores an incoming call.\n *\n * This saga defines how a call is ignored. It performs the webRTC\n *    operations to ignore a \"call\".\n * Assumptions:\n *    1. None\n * Responsibilities:\n *    1. Cleanup the call locally, using the webRTC helper saga.\n *    2. Update call state (via redux action).\n * @method ignoreCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   action        An action of type `IGNORE_CALL`.\n */\nexport function * ignoreCall (deps, action) {\n  const { webRTC } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Ignoring incoming call.')\n\n  const targetCall = yield select(getCallById, action.payload.id)\n\n  let errorInfo\n  // Ensure the call is in a valid state for this operation.\n  if (!targetCall) {\n    // Call must exist.\n    errorInfo = {\n      message: `Failed to ignore call. Call ${action.payload.id} not found.`,\n      code: callCodes.INVALID_PARAM\n    }\n  } else if (![CALL_STATES.INITIATED, CALL_STATES.RINGING].includes(targetCall.state)) {\n    // Call must be in Initiated or Ringing state.\n    errorInfo = {\n      message: `Failed to ignore call. Call must be in ${CALL_STATES.INITIATED} or ${CALL_STATES.RINGING} state.`,\n      code: callCodes.INVALID_STATE\n    }\n  } else if (targetCall.direction !== CALL_DIRECTION.INCOMING) {\n    // Call must be incoming.\n    errorInfo = {\n      message: 'Failed to ignore call. Call must be incoming.',\n      code: callCodes.INVALID_STATE\n    }\n  }\n\n  // If the operation isn't allowable, dispatch an error and return.\n  if (errorInfo) {\n    log.info(errorInfo.message)\n    yield put(\n      callActions.ignoreCallFinish(action.payload.id, {\n        error: new BasicError(errorInfo)\n      })\n    )\n    return\n  }\n\n  // Clean-up webRTC objects. Ignore any errors returned, since we want the\n  //    call / session to be ended either way.\n  yield call(closeCall, webRTC, targetCall.webrtcSessionId)\n\n  log.info(`Finished ignoring call. Changing to ${CALL_STATES.ENDED}.`)\n  // Report the operation complete.\n  yield put(callActions.ignoreCallFinish(targetCall.id))\n}\n\n/**\n *\n * Forwards an incoming call.\n *\n * This saga handles the WebRTC and signalling portions of forwarding an incoming call\n * Assumptions:\n *    1. The action contains a destination address\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we want to forward the call to a specified destination address.\n *    2. Update call state (via redux actions).\n * @method forwardCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.forwardSession \"Forward call\" signalling function.\n * @param {Object}   action An action of type `FORWARD_CALL`.\n */\nexport function * forwardCall (deps, action) {\n  const { webRTC, requests } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Forwarding incoming call.')\n\n  const incomingCall = yield select(getCallById, action.payload.id)\n\n  let errorInfo\n  // Ensure the call is in a valid state for this operation.\n  if (!incomingCall) {\n    // Call must exist.\n    errorInfo = {\n      message: `Failed to forward call. Call ${action.payload.id} not found.`,\n      code: callCodes.INVALID_PARAM\n    }\n  } else if (![CALL_STATES.INITIATED, CALL_STATES.RINGING].includes(incomingCall.state)) {\n    // Call must be in Initiated or Ringing state.\n    errorInfo = {\n      message: `Failed to forward call. Call must be in ${CALL_STATES.INITIATED} or ${CALL_STATES.RINGING} state.`,\n      code: callCodes.INVALID_STATE\n    }\n  } else if (incomingCall.direction !== CALL_DIRECTION.INCOMING) {\n    // Call must be incoming.\n    errorInfo = {\n      message: 'Failed to forward call. Call must be incoming.',\n      code: callCodes.INVALID_STATE\n    }\n  }\n\n  // If the operation isn't allowable, dispatch an error and return.\n  if (errorInfo) {\n    log.info(errorInfo.message)\n    yield put(\n      callActions.forwardCallFinish(action.payload.id, {\n        error: new BasicError(errorInfo)\n      })\n    )\n    return\n  }\n\n  // Collect the information needed to make the request.\n  const callInfo = {\n    wrtcsSessionId: incomingCall.wrtcsSessionId,\n    address: action.payload.destination\n  }\n  const response = yield call(requests.forwardSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to forward call.')\n    yield put(\n      callActions.forwardCallFinish(action.payload.id, {\n        error: response.error\n      })\n    )\n    return\n  }\n\n  yield call(closeCall, webRTC, incomingCall.webrtcSessionId)\n\n  log.info(`Finished forwarding call. Changing to ${CALL_STATES.ENDED}.`)\n  yield put(callActions.forwardCallFinish(action.payload.id))\n}\n","'use strict';\n\nvar chalk = require('chalk');\n\nvar typeColors = {\n  modified: 'yellow',\n  added: 'green',\n  removed: 'red'\n};\n\nvar defaultOptions = {\n  indent: '  ',\n  newLine: '\\n',\n  wrap: function wrap(type, text) {\n    return chalk[typeColors[type]](text);\n  },\n  color: true\n};\n\nfunction isObject(obj) {\n  return typeof obj === 'object' && obj && !Array.isArray(obj);\n}\n\nfunction printVar(variable) {\n  if (typeof variable === 'function') {\n    return variable.toString().replace(/\\{.+\\}/,'{}');\n  } else if((typeof variable === 'object' || typeof variable === 'string') && !(variable instanceof RegExp)) {\n    return JSON.stringify(variable);\n  }\n\n  return '' + variable;\n}\n\nfunction indentSubItem(text, options) {\n  return text.split(options.newLine).map(function onMap(line, index) {\n    if (index === 0) {\n      return line;\n    }\n    return options.indent + line;\n  }).join(options.newLine);\n}\n\nfunction keyChanged(key, text, options) {\n  return options.indent + key + ': ' + indentSubItem(text, options) + options.newLine\n}\n\nfunction keyRemoved(key, variable, options) {\n  return options.wrap('removed', '- ' + key + ': ' + printVar(variable)) + options.newLine;\n}\n\nfunction keyAdded(key, variable, options) {\n  return options.wrap('added', '+ ' + key + ': ' + printVar(variable)) + options.newLine;\n}\n\nfunction diffInternal(left, right, options) {\n  var text = '';\n  var changed = false;\n  var itemDiff;\n  var keys;\n  var subOutput = '';\n\n  if (Array.isArray(left) && Array.isArray(right)) {\n    for (var i = 0; i < left.length; i++) {\n      if (i < right.length) {\n        itemDiff = diffInternal(left[i], right[i], options);\n        if (itemDiff.changed) {\n          subOutput += keyChanged(i, itemDiff.text, options);\n          changed = true;\n        }\n      } else {\n        subOutput += keyRemoved(i, left[i], options);\n        changed = true;\n      }\n    }\n    if (right.length > left.length) {\n      for (; i < right.length; i++) {\n        subOutput +=  keyAdded(i, right[i], options);\n      }\n      changed = true;\n    }\n    if (changed) {\n      text = '[' + options.newLine + subOutput + ']';\n    }\n  } else if (isObject(left) && isObject(right)) {\n    keys = Object.keys(left);\n    var rightObj = Object.assign({}, right);\n    var key;\n    keys.sort();\n    for (var i = 0; i < keys.length; i++) {\n      key = keys[i];\n      if (right.hasOwnProperty(key)) {\n        itemDiff = diffInternal(left[key], right[key], options);\n        if (itemDiff.changed) {\n          subOutput += keyChanged(key, itemDiff.text, options);\n          changed = true;\n        }\n        delete rightObj[key];\n      } else {\n        subOutput += keyRemoved(key, left[key], options);\n        changed = true;\n      }\n    }\n\n    var addedKeys = Object.keys(rightObj);\n    for (var i = 0; i < addedKeys.length; i++) {\n      subOutput += keyAdded(addedKeys[i], right[addedKeys[i]], options);\n      changed = true;\n    }\n\n    if (changed) {\n      text = '{' + options.newLine + subOutput + '}';\n    }\n\n  } else if (left !== right) {\n    text = options.wrap('modified', printVar(left) + ' => ' + printVar(right));\n    changed = true;\n  }\n\n  return {\n    changed: changed,\n    text: text\n  };\n}\n\nfunction diff(left, right, options) {\n  options = options || {};\n  if (!options.color && options.wrap) {\n    throw new Error('Can\\'t specify wrap and color options together.')\n  }\n\n  var combinedOptions = Object.assign({}, defaultOptions, options);\n  if (!combinedOptions.color) {\n    combinedOptions.wrap = function(type, text) { return text }\n  }\n\n  return diffInternal(left, right, combinedOptions)\n}\n\n\nmodule.exports = diff;","'use strict';\nconst ansiStyles = require('ansi-styles');\nconst {stdout: stdoutColor, stderr: stderrColor} = require('supports-color');\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = require('./util');\n\nconst {isArray} = Array;\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = require('./templates');\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n","'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","/**\n * \"Midcall sagas\" handle performing local mid-call operations.\n *\n * These sagas assume that there is an established session (webRTC and server-\n *    side) to perform the operation on. Otherwise, it is considered an error.\n */\n\n// Callstack plugin.\nimport { setupCall } from '../webrtc/establish'\nimport { generateOffer, closeCall, webRtcRemoveMedia, webRtcAddMedia, webRtcReplaceTrack } from '../webrtc/midcall'\nimport * as rollbackOps from '../webrtc/rollback'\nimport { checkBandwidthControls } from '../utils/bandwidth'\n\n// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport { getCallById, getOptions, getTurnInfo, getCallByWebrtcSessionId } from '../../call/interfaceNew/selectors'\n\n// Other plugins.\nimport { logManager } from '../../logs'\nimport BasicError, { callCodes, subscriptionCodes } from '../../errors'\nimport { getTrackById } from '../../webrtc/interface/selectors'\nimport { getPlatform } from '../../auth/interface/selectors'\nimport { getConnectionState } from '../../connectivity/interface/selectors'\nimport { waitForReconnect } from '../../connectivity/interface/effects'\n\n// Helpers.\nimport { validateCallState } from '../../call/cpaas/utils'\nimport { CALL_STATES, CALL_DIRECTION } from '../../call/constants'\n\n// Libraries.\nimport { all, call, put, select, delay } from 'redux-saga/effects'\nimport { isArray, isEmpty } from 'lodash/fp'\n\n// Utils\nimport { getVersion } from '../../common/version'\nimport { platforms } from '../../constants'\nimport sdkId from '../../common/sdkId'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * This saga ends a call, it performs the webRTC and signaling operations to\n *    update the local and server sessions of a call.\n * Assumptions:\n *    1. None.\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we want to end the session\n *    2. Update call state (via redux actions).\n * @method endCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.endSession \"End session\" signalling function.\n * @param {Object}   action An action of type `END_CALL`.\n */\nexport function * endCall (deps, action) {\n  const { webRTC, requests } = deps\n  const { id } = action.payload\n\n  const log = logManager.getLogger('CALL', id)\n  log.info('Ending call.')\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, action.payload.id, {})\n  if (stateError) {\n    log.debug(`Call not found: ${stateError.message}`)\n    yield put(\n      callActions.endCallFinish(id, {\n        isLocal: true,\n        error: stateError\n      })\n    )\n    return\n  }\n\n  const { wrtcsSessionId, webrtcSessionId, isAnonymous, account } = yield select(getCallById, id)\n\n  // Perform webRTC functions\n  yield call(closeCall, webRTC, webrtcSessionId)\n\n  // Perform signalling to end the session\n  const response = yield call(requests.endSession, { wrtcsSessionId, isAnonymous, account })\n\n  log.info(`Finished ending call. Changing to ${CALL_STATES.ENDED}.`)\n  if (!response.error) {\n    yield put(callActions.endCallFinish(id, { isLocal: true }))\n  } else {\n    yield put(\n      callActions.endCallFinish(id, {\n        isLocal: true,\n        error: response.error\n      })\n    )\n  }\n}\n\n/**\n * Updates an existing call to have inactive media.\n * Can be used as a \"hold\" operation for plain webRTC scenarios.\n *\n * This saga defines how a call is put \"on hold\". It performs the webRTC and\n *    signaling operations to update the local and server sessions of a call.\n *    This represents the start of the webRTC renegotiation process for the\n *    local side.\n * Assumptions:\n *    1. The call is in the correct state for the operation.\n *        - The call exists, and is not already locally held.\n * Responsibilities:\n *    1. Generate an offer with the media directions as \"locally held\".\n *    2. Perform signaling to update the server session with the offer.\n *    3. Update call state (via redux actions).\n * @method offerInactiveMedia\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSession \"Update call\" signalling function.\n * @param {Object}   action An action of type `CALL_HOLD`.\n */\nexport function * offerInactiveMedia (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Holding call.')\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, action.payload.id, { localHold: false })\n  if (stateError) {\n    log.debug(`Invalid call state: ${stateError.message}`)\n    yield put(\n      callActions.holdCallFinish(action.payload.id, {\n        local: true,\n        error: stateError\n      })\n    )\n    return\n  }\n\n  const targetCall = yield select(getCallById, action.payload.id)\n  const { wrtcsSessionId, webrtcSessionId, isAnonymous, account, customParameters, customBodies } = targetCall\n\n  // TODO: Make sure the session is in the correct signaling state to start a\n  //    renegotiation operation.\n  const offer = yield call(\n    generateOffer,\n    deps,\n    webrtcSessionId,\n    {\n      audio: 'inactive',\n      video: 'inactive'\n    },\n    targetCall.bandwidth\n  )\n\n  if (!offer) {\n    log.debug('Failed to generate SDP offer')\n    yield put(\n      callActions.holdCallFinish(action.payload.id, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_OFFER,\n          message: 'Failed to generate SDP offer'\n        })\n      })\n    )\n    return\n  }\n\n  const callInfo = {\n    wrtcsSessionId,\n    offer: offer.sdp,\n    isAnonymous,\n    account,\n    customParameters,\n    customBodies\n  }\n\n  const response = yield call(requests.updateSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to hold call.')\n\n    // Rollback is not supported on plan-b\n    const { defaultPeerConfig } = yield select(getOptions)\n    if (defaultPeerConfig.sdpSemantics === 'unified-plan') {\n      const result = yield call(\n        rollbackOps.rollbackLocalHoldOperation,\n        deps,\n        webrtcSessionId,\n        targetCall.localOp.operation\n      )\n      // There is a \"browser issue\" with Chrome where the remote track is removed from the call when the local description\n      //  offer is set. This track is not recovered during rollback so call remains in an awkward state.\n      //  See comments on PR-3224.\n      const browser = deps.browserDetails().browser\n      if (result.error || browser === 'chrome') {\n        // Although Safari can automatically rollback and set another local offer while in `have-local-offer`\n        //  signalling state, Safari does not perform an automatic rollback when a remote offer is\n        //  received while in that state. An InvalidStateError is thrown instead and call is in an awkward state.\n        if (browser === 'safari' || browser === 'chrome') {\n          log.info('Ending call due to unrecoverable state after call hold failure.')\n          // Hangup the call from WebRTC perspective\n          yield call(closeCall, deps.webRTC, webrtcSessionId)\n\n          // Cleanup Redux state by sending END_CALL_FINISH action\n          yield put(\n            callActions.endCallFinish(targetCall.id, {\n              isLocal: true,\n              transition: { reasonText: 'Call has ended due to call hold failure.' }\n            })\n          )\n          return\n        }\n        log.info('Unable to reset state after hold operation failure, future operations may not work as intended.')\n      }\n    }\n\n    yield put(\n      callActions.holdCallFinish(action.payload.id, {\n        local: true,\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished local portion of holding call. Waiting on remote response.')\n    yield put(\n      callActions.pendingOperation(action.payload.id, {\n        operation: targetCall.localOp.operation\n      })\n    )\n  }\n}\n\n/**\n * Updates an existing call to have \"full\" media.\n * Can be used as an \"unhold\" operation for plain webRTC scenarios.\n *\n * This saga defines how a call is taken off \"hold\". It performs the webRTC and\n *    signaling operations to update the local and server sessions of a call.\n *    This represents the start of the webRTC renegotiation process for the\n *    local side.\n * Assumptions:\n *    1. The call is in the correct state for the operation.\n *        - The call exists, and is locally held.\n * Responsibilities:\n *    1. Generate an offer with the media directions as \"connected\".\n *    2. Perform signaling to update the server session with the offer.\n *    3. Update call state (via redux actions).\n * @method offerFullMedia\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSession \"Update call\" signalling function.\n * @param {Object}   action        A \"unhold call\" action.\n */\nexport function * offerFullMedia (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Unholding call.')\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, action.payload.id, { localHold: true })\n  if (stateError) {\n    log.debug(`Invalid call state, not on hold: ${stateError.message}`)\n    yield put(\n      callActions.unholdCallFinish(action.payload.id, {\n        local: true,\n        error: stateError\n      })\n    )\n    return\n  }\n\n  const targetCall = yield select(getCallById, action.payload.id)\n  const { wrtcsSessionId, webrtcSessionId, isAnonymous, account, customParameters, customBodies } = targetCall\n\n  // If we're not sending any audio or video, change the media direction(s) to recvonly to prevent the other side\n  //  from getting empty tracks.\n  const localTracks = yield call(getLocalTracks, targetCall.id)\n  const mediaDirections = {\n    audio: localTracks.some(track => track.kind === 'audio') ? 'sendrecv' : 'recvonly',\n    video: localTracks.some(track => track.kind === 'video') ? 'sendrecv' : 'recvonly'\n  }\n\n  // TODO: Make sure the session is in the correct signaling state to start a\n  //    renegotiation operation.\n  const offer = yield call(generateOffer, deps, webrtcSessionId, mediaDirections, targetCall.bandwidth)\n\n  if (!offer) {\n    log.debug('Invalid SDP offer or SDP offer not received.')\n    yield put(\n      callActions.unholdCallFinish(action.payload.id, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_OFFER,\n          message: 'Invalid SDP offer or SDP offer not received'\n        })\n      })\n    )\n    return\n  }\n\n  const callInfo = {\n    wrtcsSessionId,\n    offer: offer.sdp,\n    isAnonymous,\n    account,\n    customParameters,\n    customBodies\n  }\n\n  const response = yield call(requests.updateSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to unhold call.')\n\n    // Rollback is not supported on plan-b\n    const { defaultPeerConfig } = yield select(getOptions)\n    if (defaultPeerConfig.sdpSemantics === 'unified-plan') {\n      const result = yield call(\n        rollbackOps.rollbackLocalUnholdOperation,\n        deps,\n        webrtcSessionId,\n        targetCall.localOp.operation\n      )\n      if (result.error) {\n        // Although Safari can automatically rollback and set another local offer while in `have-local-offer`\n        //  signalling state, Safari does not perform an automatic rollback when a remote offer is\n        //  received while in that state. An InvalidStateError is thrown instead and call is in an awkward state.\n        if (deps.browserDetails().browser === 'safari') {\n          log.info('Ending call due to unrecoverable state after call unhold failure.')\n          // Hangup the call from WebRTC perspective\n          yield call(closeCall, deps.webRTC, webrtcSessionId)\n\n          // Cleanup Redux state by sending END_CALL_FINISH action\n          yield put(\n            callActions.endCallFinish(targetCall.id, {\n              isLocal: true,\n              transition: { reasonText: 'Call has ended due to call unhold failure.' }\n            })\n          )\n          return\n        }\n        log.info('Unable to reset state after unhold operation failure, future operations may not work as intended.')\n      }\n    }\n\n    yield put(\n      callActions.unholdCallFinish(action.payload.id, {\n        local: true,\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished local portion of unholding call. Waiting on remote response.')\n    yield put(\n      callActions.pendingOperation(action.payload.id, {\n        operation: targetCall.localOp.operation\n      })\n    )\n  }\n}\n\n/**\n * Sends custom parameters for a call.\n * @param {Object}   deps                                   Dependencies that the saga uses.\n * @param {Object}   deps.webRTC                            The WebRTC stack.\n * @param {Object}   deps.requests                          The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateCustomParameters   \"Update call\" signalling function.\n * @param {Object} action A \"sent Custom Parameters\" action.\n */\nexport function * sendCustomParameters (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Sending custom parameters for call.')\n\n  // Get the call.\n  const targetCall = yield select(getCallById, action.payload.id)\n\n  // Validate call exists and call state is correct\n  if (!targetCall) {\n    log.debug(`Invalid Call ID. No call found with Call ID: ${action.payload.id}`)\n    yield put(\n      callActions.sendCustomParametersFinish(action.payload.id, {\n        error: new BasicError({\n          code: callCodes.INVALID_PARAM,\n          message: `Invalid Call ID. No call found with Call ID: ${action.payload.id}`\n        })\n      })\n    )\n    return\n  } else if (targetCall.state !== CALL_STATES.CONNECTED && targetCall.state !== CALL_STATES.ON_HOLD) {\n    log.debug(`Call in invalid state for sending custom parameters. Call state: ${targetCall.state}`)\n    yield put(\n      callActions.sendCustomParametersFinish(action.payload.id, {\n        error: new BasicError({\n          code: callCodes.INVALID_STATE,\n          message: `Call in invalid state for sending custom parameters. Call state: ${targetCall.state}`\n        })\n      })\n    )\n    return\n  }\n\n  const { wrtcsSessionId, isAnonymous, account, customParameters } = targetCall\n\n  const callInfo = {\n    wrtcsSessionId,\n    isAnonymous,\n    account,\n    customParameters\n  }\n\n  const response = yield call(requests.updateCustomParameters, callInfo)\n\n  if (response.error) {\n    log.info('Failed to send custom parameters.')\n    yield put(\n      callActions.sendCustomParametersFinish(action.payload.id, {\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished sending custom parameters.')\n    yield put(\n      callActions.sendCustomParametersFinish(action.payload.id, {\n        error: false\n      })\n    )\n  }\n}\n\n/**\n * Gets low-level statistics about a call (or track).\n *\n * This saga defines how/what statistics are retrieved about a call. It performs\n *    the webRTC operations on the local session. No signaling is involved.\n * The retrieved call statistics are a RTCStatsReport as provided by the WebRTC\n *    specification. Stats can be retrieved for either an entire call or\n *    individual tracks.\n * Assumptions:\n *    1. The call is on-going.\n * Responsibilities:\n *    1. Ensure the call exists.\n *    2. Use the webRTC layer to retrieve the stats.\n *    3. Dispatch an action with the results (which triggers an event).\n * @method getStats\n * @param {Object} deps        Dependencies that the saga uses.\n * @param {Object} deps.webRTC The WebRTC stack.\n * @param {Object} action      A \"get Stats\" action.\n */\nexport function * getStats (deps, action) {\n  const { webRTC, browserDetails } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Getting call statistics.')\n\n  // TODO: Actually check something other than \"call exists\"?\n  const stateError = yield call(validateCallState, action.payload.id, {})\n\n  if (stateError) {\n    log.debug(`Invalid call state: ${stateError.message}`)\n\n    yield call([action.meta.deferred, 'reject'], {\n      error: stateError,\n      trackId: action.payload.trackId\n    })\n\n    yield put(\n      callActions.getStatsFinish(action.payload.id, {\n        error: stateError,\n        trackId: action.payload.trackId\n      })\n    )\n    return\n  }\n\n  // Get the call.\n  const targetCall = yield select(getCallById, action.payload.id)\n\n  // Get the local Session for the call.\n  const session = yield call([webRTC.sessionManager, 'get'], targetCall.webrtcSessionId)\n\n  const trackId = action.payload.trackId\n  // Retrieve the RTCStatsReport from the session.\n  let rtcStatsReport\n  try {\n    rtcStatsReport = yield call([session, 'getStats'], trackId)\n  } catch (error) {\n    log.info('Failed to get call statistics.')\n    const basicError = new BasicError({\n      code: callCodes.GENERIC_ERROR,\n      message: error.message\n    })\n\n    yield call([action.meta.deferred, 'reject'], {\n      error: basicError\n    })\n    yield put(\n      callActions.getStatsFinish(action.payload.id, {\n        error: basicError,\n        trackId\n      })\n    )\n  }\n  if (rtcStatsReport) {\n    log.info('Finished getting call statistics.')\n\n    // Extract values for our own custom Statistics\n    const type = 'kandy_sdk_info'\n    const id = 'kandy-sdk-info_' + sdkId\n    const version = getVersion()\n    const platform = yield select(getPlatform)\n\n    let sdk\n    if (platform === platforms.CPAAS) {\n      sdk = '@kandy-io/cpaas-sdk'\n    } else if (platform === platforms.UC) {\n      sdk = '@kandy-io/uc-sdk'\n    } else if (platform === platforms.LINK) {\n      // callMe service also uses Link platform for call requests as well.\n      if (targetCall.isAnonymous) {\n        sdk = '@kandy-io/callme-sdk'\n      } else {\n        sdk = '@kandy-io/link-sdk'\n      }\n    }\n\n    // Note that getting browser details is only intended for local browser.\n    // For proxy mode this would return undefined. (see getBrowserDetails() on proxyStack)\n    const details = browserDetails()\n\n    // Define our custom Stats object\n    const sdkMetaData = {\n      id,\n      type,\n      sdk,\n      version,\n      callId: action.payload.id\n    }\n\n    if (details) {\n      sdkMetaData.platform = details.browser + '/' + details.version\n    }\n\n    // Set the timestamp value of our custom report to be same value as\n    // the timestamp associated with any stat coming from original webRTC report.\n    const iter = rtcStatsReport.keys()\n    const rtcStatValue = rtcStatsReport.get(iter.next().value)\n    if (rtcStatValue) {\n      sdkMetaData.timestamp = rtcStatValue.timestamp\n    }\n    // Add our custom stats to the ones reported by Web RTC.\n    // Since rtcStatsReport seems to be read-only Map, create a new Map\n    // which includes both our stat & the ones from webrtc.\n    const result = new Map()\n    result.set(id, sdkMetaData)\n    rtcStatsReport.forEach(stat => {\n      result.set(stat.id, stat)\n    })\n    yield call([action.meta.deferred, 'resolve'], result)\n\n    yield put(callActions.getStatsFinish(action.payload.id, { result, trackId }))\n  }\n}\n\n/**\n * Adds media to the call\n *\n * This saga performs the webRTC and signaling operations to\n *    update local and server sessions of a call.\n * Assumptions:\n *    1. Validate that the call state is \"Connected\".\n *        - The call is connected.\n * Responsibilities:\n *    1. Perform webRTC operations to add media.\n *    2. Update the backend with the new state.\n *    3. Update local state, using Redux\n * @method addMedia\n * @param {Object}   deps          Injected dependencies that addMedia relies on\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests requests that addMedia relies on\n * @param {Function} deps.requests.updateSession request to update the session on the backend\n * @param {Object}   action        An \"add media\" action.\n */\nexport function * addMedia (deps, action) {\n  const requests = deps.requests\n  const { bandwidth, mediaConstraints, dscpControls, id } = action.payload\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Adding media to call.')\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, id, { state: CALL_STATES.CONNECTED })\n  if (stateError) {\n    log.debug(`Invalid call state: ${stateError.message}`)\n    yield put(\n      callActions.addMediaFinish(id, {\n        local: true,\n        error: stateError\n      })\n    )\n    return\n  }\n\n  // Get some call data.\n  const {\n    webrtcSessionId,\n    wrtcsSessionId,\n    bandwidth: callBandwidth,\n    isAnonymous,\n    account,\n    localOp,\n    customParameters,\n    customBodies\n  } = yield select(getCallById, id)\n\n  const finalBandwidth = {\n    audio: bandwidth && bandwidth.audio ? bandwidth.audio : callBandwidth.audio,\n    video: bandwidth && bandwidth.video ? bandwidth.video : callBandwidth.video\n  }\n  // Create media and add tracks using webRTC\n  const { error, sdp, medias } = yield call(webRtcAddMedia, deps, mediaConstraints, {\n    sessionId: webrtcSessionId,\n    bandwidth: finalBandwidth,\n    dscpControls\n  })\n\n  if (error) {\n    yield put(\n      callActions.addMediaFinish(id, {\n        local: true,\n        error: error\n      })\n    )\n    return\n  }\n\n  const callInfo = {\n    wrtcsSessionId,\n    offer: sdp,\n    isAnonymous,\n    account,\n    customParameters,\n    customBodies\n  }\n\n  // Perform signalling to add media\n  const response = yield call(requests.updateSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to add media to call.')\n    // Rollback is not supported on safari or plan-b\n    const { defaultPeerConfig } = yield select(getOptions)\n    if (defaultPeerConfig.sdpSemantics === 'unified-plan') {\n      const result = yield call(rollbackOps.rollbackLocalAddMedia, deps, webrtcSessionId, medias)\n      const browser = deps.browserDetails().browser\n      // There is an issue on Chrome where the remote track is removed from the call when the SDP rolls back\n      //  leaving the call in an awkward state.\n      if (result.error || browser === 'chrome') {\n        // Although Safari can automatically rollback and set another local offer while in `have-local-offer`\n        //  signalling state, Safari does not perform an automatic rollback when a remote offer is\n        //  received while in that state. An InvalidStateError is thrown instead and call is in an awkward state.\n        if (browser === 'safari' || browser === 'chrome') {\n          log.info('Ending call due to unrecoverable state after call add media failure.')\n          // Hangup the call from WebRTC perspective\n          yield call(closeCall, deps.webRTC, webrtcSessionId)\n\n          // Cleanup Redux state by sending END_CALL_FINISH action\n          yield put(\n            callActions.endCallFinish(id, {\n              isLocal: true,\n              transition: { reasonText: 'Call has ended due to call add media failure.' }\n            })\n          )\n          return\n        }\n        log.info('Unable to reset state after add media operation failure, future operations may not work as intended.')\n      }\n    }\n\n    yield put(\n      callActions.addMediaFinish(id, {\n        local: true,\n        error: response.error\n      })\n    )\n  } else {\n    let tracks = []\n    medias.forEach(media => {\n      tracks = tracks.concat(media.tracks.map(track => track.id))\n    })\n    log.info('Finished local portion of adding media. Waiting on remote response.')\n    yield put(\n      callActions.pendingOperation(id, {\n        operation: localOp.operation,\n        operationData: {\n          local: true,\n          mediaIds: medias.map(media => media.id),\n          tracks,\n          bandwidth: finalBandwidth\n        }\n      })\n    )\n  }\n}\n\n/**\n *\n * Removes media from an existing session.\n *\n * This saga handles the WebRTC and signalling portions of removing media from an existing call\n * Assumptions:\n *    1. The action contains a tracks object that is neither an array or an empty object\n *    2. The call is in the 'Connected' state\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we want to to remove the specified track\n *    2. Update call state (via redux actions).\n * @method removeMedia\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSession \"Update call\" signalling function.\n * @param {Object}   action An action of type `REMOVE_MEDIA`.\n */\nexport function * removeMedia (deps, action) {\n  const requests = deps.requests\n  const { id, tracks, bandwidth } = action.payload\n\n  const log = logManager.getLogger('CALL', id)\n  log.info('Removing media from call.')\n\n  // Handle scenario where no track ids are provided or not in an array.\n  if (!isArray(tracks) || isEmpty(tracks)) {\n    log.debug('No track ids specified to remove.')\n    yield put(\n      callActions.removeMediaFinish(id, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_PARAM,\n          message: 'No track ids specified to remove.'\n        })\n      })\n    )\n    return\n  }\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, id, { state: CALL_STATES.CONNECTED })\n  if (stateError) {\n    log.debug(`Invalid call state:  ${stateError.message}`)\n    yield put(\n      callActions.removeMediaFinish(id, {\n        local: true,\n        error: stateError\n      })\n    )\n    return\n  }\n  // Get some call data.\n  const {\n    webrtcSessionId,\n    wrtcsSessionId,\n    bandwidth: callBandwidth,\n    isAnonymous,\n    account,\n    localOp,\n    customParameters,\n    customBodies\n  } = yield select(getCallById, id)\n\n  const finalBandwidth = {\n    audio: bandwidth && bandwidth.audio ? bandwidth.audio : callBandwidth.audio,\n    video: bandwidth && bandwidth.video ? bandwidth.video : callBandwidth.video\n  }\n  // Remove media and tracks using webRTC\n  const { sdp, error } = yield call(webRtcRemoveMedia, deps, {\n    sessionId: webrtcSessionId,\n    tracks: tracks,\n    bandwidth: finalBandwidth\n  })\n  if (error) {\n    log.debug(`Failed to remove media: ${error.message}`)\n    yield put(\n      callActions.removeMediaFinish(id, {\n        local: true,\n        error\n      })\n    )\n    return\n  }\n\n  const callInfo = {\n    wrtcsSessionId,\n    offer: sdp,\n    isAnonymous,\n    account,\n    customParameters,\n    customBodies\n  }\n\n  const response = yield call(requests.updateSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to remove media from call.')\n    // Rollback is not supported on Safari or plan-b\n    const { defaultPeerConfig } = yield select(getOptions)\n    if (defaultPeerConfig.sdpSemantics === 'unified-plan') {\n      const result = yield call(rollbackOps.rollbackLocalRemoveMedia, deps, webrtcSessionId)\n      if (result.error) {\n        // Although Safari can automatically rollback and set another local offer while in `have-local-offer`\n        //  signalling state, Safari does not perform an automatic rollback when a remote offer is\n        //  received while in that state. An InvalidStateError is thrown instead and call is in an awkward state.\n        if (deps.browserDetails().browser === 'safari') {\n          log.info('Ending call due to unrecoverable state after call hold failure.')\n          // Hangup the call from WebRTC perspective\n          yield call(closeCall, deps.webRTC, webrtcSessionId)\n\n          // Cleanup Redux state by sending END_CALL_FINISH action\n          yield put(\n            callActions.endCallFinish(id, {\n              isLocal: true,\n              transition: { reasonText: 'Call has ended due to call hold failure.' }\n            })\n          )\n          return\n        }\n        log.info('Unable to reset state after hold operation failure, future operations may not work as intended.')\n      }\n    }\n\n    yield put(\n      callActions.removeMediaFinish(id, {\n        local: true,\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished local portion of removing media. Waiting on remote response.')\n    yield put(\n      callActions.pendingOperation(id, {\n        operation: localOp.operation,\n        operationData: {\n          local: true,\n          tracks: tracks,\n          bandwidth: finalBandwidth\n        }\n      })\n    )\n  }\n}\n\n/**\n *\n * Checks whether a renegotiation is necessary depending on the flag\n *\n * Responsibilities:\n *    1. If renegotiation is necessary, dispatch a call action to start the renegotiation operation\n * @method renegotiate\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   action An action of type `SESSION_TRACK_ENDED`.\n * @param {Object}   action.payload The action's payload.\n * @param {string}   action.payload.id The webRTC session ID.\n * @param {string}   action.payload.trackId The ID of the track that was ended.\n * @param {boolean}  action.payload.performRenegotiation A flag that determines whether renegotiation is necessary.\n */\nexport function * checkRenegotiationFlag (deps, action) {\n  const { id, trackId, performRenegotiation } = action.payload\n\n  // This saga could be triggered by the removeMedia API or by a remote notification of a track being removed.\n  // (since it picks up on the SESSION_TRACK_REMOVED action).\n  // In these scenario this flag will be set to `false` as the saga that handles these scenarios will perform the renegotiation itself.\n  if (performRenegotiation) {\n    log.debug('Renegotiation is needed.')\n    const { id: callId } = yield select(getCallByWebrtcSessionId, id)\n    yield put(\n      callActions.renegotiate(callId, {\n        trackId\n      })\n    )\n  }\n}\n\n/**\n *\n * Performs a call renegotiation\n *\n * This saga handles creating the new SDP offer and performs the signalling for renegotiation.\n * Assumptions:\n *    2. The call is in the 'Connected' state\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we are renegotiating\n *    2. Update call state (via redux actions).\n * @method renegotiate\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSession \"Update call\" signalling function.\n * @param {Object}   action An action of type `RENEGOTIATE`.\n */\nexport function * renegotiate (deps, action) {\n  const requests = deps.requests\n  const { id, trackId } = action.payload\n\n  const log = logManager.getLogger('CALL', id)\n  log.info('Performing call renegotiation.')\n\n  // Get some call data.\n  const {\n    id: callId,\n    webrtcSessionId,\n    wrtcsSessionId,\n    bandwidth,\n    isAnonymous,\n    account,\n    localOp,\n    customParameters,\n    customBodies\n  } = yield select(getCallById, id)\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, callId, { state: CALL_STATES.CONNECTED })\n  if (stateError) {\n    log.debug(`Invalid call state:  ${stateError.message}`)\n    yield put(\n      callActions.renegotiateFinish(callId, {\n        local: true,\n        error: stateError\n      })\n    )\n    return\n  }\n\n  // Update media and tracks using webRTC\n  const offer = yield call(generateOffer, deps, webrtcSessionId, {}, bandwidth)\n  if (!offer) {\n    log.debug('Failed to generate offer.')\n    yield put(\n      callActions.renegotiateFinish(callId, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_OFFER,\n          message: 'Failed to generate SDP offer'\n        })\n      })\n    )\n    return\n  }\n\n  const callInfo = {\n    wrtcsSessionId,\n    offer: offer.sdp,\n    isAnonymous,\n    account,\n    customParameters,\n    customBodies\n  }\n\n  const response = yield call(requests.updateSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to renegotiate call.')\n    yield put(\n      callActions.renegotiateFinish(callId, {\n        local: true,\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished local portion of renegotiation. Waiting on remote response.')\n    yield put(\n      callActions.pendingOperation(callId, {\n        operation: localOp.operation,\n        operationData: {\n          local: true,\n          tracks: [trackId],\n          bandwidth\n        }\n      })\n    )\n  }\n}\n\n/**\n * Adds basic media scenario to the call\n *\n * This saga wraps addMedia as an easier to use function for simple scenarios\n * Assumptions:\n *    1. Validate that the call state is \"Connected\".\n *        - The call is connected.\n *    2. The track being added cannot already be on the call.\n * Responsibilities:\n *    1. Check that there isn't already a track of the same kind on the call\n *    2. Call addMedia with the correct parameters\n * @method addBasicMedia\n * @param {Object}   deps          Injected dependencies that addMedia relies on\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests requests that addMedia relies on\n * @param {Function} deps.requests.updateSession request to update the session on the backend\n * @param {Object}   action        An action of type `ADD_BASIC_MEDIA`.\n */\nexport function * addBasicMedia (deps, action) {\n  const { id, kind } = action.payload\n\n  const log = logManager.getLogger('CALL', id)\n  log.debug(`Adding ${kind} media to call.`)\n\n  const tracks = yield call(getLocalTracks, id, kind)\n  if (tracks.length >= 1) {\n    const message = `Too many ${kind} tracks for basic scenario!`\n    log.debug(message)\n    yield put(\n      callActions.addMediaFinish(id, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_PARAM,\n          message: message\n        })\n      })\n    )\n  } else {\n    yield call(addMedia, deps, action)\n  }\n}\n\n/**\n *\n * Removes basic media from an existing session.\n *\n * This saga wraps removeMedia as an easier to use function for simple scenarios\n * Assumptions:\n *    1. The call is in the 'Connected' state\n *    2. The track being removed should be the only one of its kind on the call.\n * Responsibilities:\n *    1. Check that this is a basic scenario (removing the only kind of track on the call)\n *    2. Call removeMedia with the correct parameters\n * @method removeMedia\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSession \"Update call\" signalling function.\n * @param {Object}   action An action of type `REMOVE_BASIC_MEDIA`.\n */\nexport function * removeBasicMedia (deps, action) {\n  const { id, kind } = action.payload\n\n  const log = logManager.getLogger('CALL', id)\n  log.debug(`Removing ${kind} media from call.`)\n\n  const tracks = yield call(getLocalTracks, id, kind)\n  if (tracks.length !== 1) {\n    const message = `Must have only one ${kind} track for basic scenario!`\n    log.debug(message)\n    yield put(\n      callActions.removeMediaFinish(id, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_PARAM,\n          message: message\n        })\n      })\n    )\n  } else {\n    yield call(removeMedia, deps, {\n      ...action,\n      payload: {\n        ...action.payload,\n        tracks: tracks.map(trackObj => trackObj.trackId)\n      }\n    })\n  }\n}\n\n/**\n *\n * Helper function to get all local tracks of a certain type\n *\n * @param {string} id the id of the call\n * @param {string} [kind] Kind must be of type 'audio' or 'video'\n * @return {Array<Object>} returns an array of tracks of the given type\n */\nexport function * getLocalTracks (id, kind) {\n  const call = yield select(getCallById, id)\n  const localTracks = call ? call.localTracks : []\n  const tracks = yield all(localTracks.map(id => select(getTrackById, id)))\n  return kind ? tracks.filter(track => track.kind === kind) : tracks\n}\n\n/**\n *\n * Direct Transfers an ongoing call.\n *\n * This saga handles the WebRTC and signalling portions of direct transferring an ongoing call\n * Assumptions:\n *    1. The action contains a destination address\n *    2. The call is in the 'On Hold' state\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we want to direct transfer the call to a specified destination address.\n *    2. Update call state (via redux actions).\n * @method directTransfer\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.directTransferSession \"Direct transfer\" signalling function.\n * @param {Object}   action An action of type `DIRECT_TRANSFER`.\n */\nexport function * directTransfer (deps, action) {\n  const { requests } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Performing direct transfer on call.')\n\n  const currentCall = yield select(getCallById, action.payload.id)\n\n  // Ensure the call is in a valid state for this operation.\n  const stateError = yield call(validateCallState, action.payload.id, { state: CALL_STATES.ON_HOLD })\n\n  if (stateError) {\n    log.debug(`Cannot direct transfer call: ${stateError.message}`)\n    // Report the operation failure.\n    yield put(callActions.directTransferFinish(action.payload.id, { error: stateError }))\n    return\n  }\n\n  // Collect the information needed to make the request.\n  const callInfo = {\n    wrtcsSessionId: currentCall.wrtcsSessionId,\n    address: action.payload.destination\n  }\n  const response = yield call(requests.directTransferSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to direct transfer call.')\n    yield put(\n      callActions.directTransferFinish(action.payload.id, {\n        error: response.error\n      })\n    )\n    return\n  }\n\n  log.info('Finished local portion of direct transfer. Waiting on remote response.')\n  yield put(\n    callActions.pendingOperation(action.payload.id, {\n      operation: currentCall.localOp.operation\n    })\n  )\n}\n\n/**\n *\n * Transfers 2 ongoing calls to one another.\n *\n * This saga handles the WebRTC and signalling portions of transferring 2 ongoing calls to one another.\n * Assumptions:\n *    1. The action contains the other call id\n *    2. The calls are in the 'On Hold' state\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we want to transfer 2 ongoing calls to one other.\n *    2. Update call state (via redux actions).\n * @method consultativeTransfer\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.consultativeTransferSessions \"Consultative transfer\" signalling function.\n * @param {Object}   action An action of type `CONSULTATIVE_TRANSFER`.\n */\nexport function * consultativeTransfer (deps, action) {\n  const { requests } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Performing consultative transfer on call.')\n\n  const currentCall = yield select(getCallById, action.payload.id)\n  const otherCall = yield select(getCallById, action.payload.otherCallId)\n\n  // Ensure the call is in a valid state for this operation.\n  const currentStateError = yield call(validateCallState, action.payload.id, {\n    state: CALL_STATES.ON_HOLD\n  })\n  const otherStateError = yield call(validateCallState, action.payload.otherCallId, {\n    state: CALL_STATES.ON_HOLD\n  })\n\n  if (currentStateError) {\n    log.debug(`Cannot transfer call ${action.payload.id}: ${currentStateError.message}`)\n    // Report the operation failure.\n    yield put(\n      callActions.consultativeTransferFinish(action.payload.id, {\n        error: currentStateError,\n        otherCallId: action.payload.otherCallId\n      })\n    )\n    return\n  }\n\n  if (otherStateError) {\n    log.debug(`Cannot transfer call ${action.payload.otherCallId}: ${otherStateError.message}`)\n    // Report the operation failure.\n    yield put(\n      callActions.consultativeTransferFinish(action.payload.id, {\n        error: otherStateError,\n        otherCallId: action.payload.otherCallId\n      })\n    )\n    return\n  }\n\n  // Collect the information needed to make the request.\n  const callInfo = {\n    wrtcsSessionId: currentCall.wrtcsSessionId,\n    otherWrtcsSessionId: otherCall.wrtcsSessionId,\n    destination: otherCall.direction === 'outgoing' ? otherCall.to : otherCall.from\n  }\n  const response = yield call(requests.consultativeTransferSessions, callInfo)\n\n  if (response.error) {\n    log.info('Failed to consultative transfer call.')\n    yield put(\n      callActions.consultativeTransferFinish(action.payload.id, {\n        error: response.error,\n        otherCallId: action.payload.otherCallId\n      })\n    )\n    return\n  }\n\n  log.info('Finished local portion of consultative transfer. Waiting on remote response.')\n  yield put(callActions.pendingConsultativeTransfer(currentCall.id, { otherCallId: otherCall.id }))\n}\n\n/**\n *\n * Joins 2 ongoing calls.\n *\n * This saga handles the WebRTC and signalling portions of joining 2 ongoing calls\n * Assumptions:\n *    1. The action contains the other call id\n *    2. The calls are in the 'On Hold' state\n * Responsibilities:\n *    1. Perform the signaling to tell the server that we want to join 2 ongoing calls.\n *    2. Update call state (via redux actions).\n * @method join\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.joinSessions \"Join\" signalling function.\n * @param {Object}   action An action of type `JOIN`.\n */\nexport function * join (deps, action) {\n  const requests = deps.requests\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Performing join on call.')\n\n  const currentCall = yield select(getCallById, action.payload.id)\n  const otherCall = yield select(getCallById, action.payload.otherCallId)\n\n  // Ensure the call is in a valid state for this operation.\n  const currentStateError = yield call(validateCallState, action.payload.id, {\n    state: CALL_STATES.ON_HOLD\n  })\n  const otherStateError = yield call(validateCallState, action.payload.otherCallId, {\n    state: CALL_STATES.ON_HOLD\n  })\n\n  if (currentStateError) {\n    log.debug(`Cannot join call ${action.payload.id}: ${currentStateError.message}`)\n    // Report the operation failure.\n    yield put(\n      callActions.joinFinish(action.payload.id, {\n        error: currentStateError,\n        usedCallIds: [action.payload.id, action.payload.otherCallId]\n      })\n    )\n    return\n  }\n\n  if (otherStateError) {\n    log.debug(`Cannot join call ${action.payload.otherCallId}: ${otherStateError.message}`)\n    // Report the operation failure.\n    yield put(\n      callActions.joinFinish(action.payload.id, {\n        error: otherStateError,\n        usedCallIds: [action.payload.id, action.payload.otherCallId]\n      })\n    )\n    return\n  }\n\n  // Determine combined participant name if any\n  const currentCallRemoteName = currentCall.remoteParticipant.displayName\n  const otherCallRemoteName = otherCall.remoteParticipant.displayName\n  let participantName\n  if (currentCallRemoteName && otherCallRemoteName) {\n    participantName = `${currentCallRemoteName},${otherCallRemoteName}`\n  } else if (currentCallRemoteName) {\n    participantName = `${currentCallRemoteName},`\n  } else if (otherCallRemoteName) {\n    participantName = `,${otherCallRemoteName}`\n  }\n\n  // Determine combined remote participant address\n  const currentCallRemoteAddress = currentCall.direction === CALL_DIRECTION.OUTGOING ? currentCall.to : currentCall.from\n  const otherCallRemoteAddress = otherCall.direction === CALL_DIRECTION.OUTGOING ? otherCall.to : otherCall.from\n  const participantAddress = `${currentCallRemoteAddress},${otherCallRemoteAddress}`\n\n  // User the audio constraints from the current call and set video to false.\n  const mediaConstraints = {\n    video: false,\n    audio: currentCall.mediaConstraints ? currentCall.mediaConstraints.audio || true : true\n  }\n\n  // Use the bandwidth constraints from the current call\n  const bandwidth = checkBandwidthControls(currentCall.bandwidth)\n\n  const dscpControls = currentCall.dscpControls\n\n  const turnInfo = yield select(getTurnInfo)\n  const { trickleIceMode, defaultPeerConfig, removeBundling, serverTurnCredentials } = yield select(getOptions)\n\n  // Create the new joined call in state right away\n  yield put(\n    callActions.joinStart(action.payload.newCallId, {\n      // The media constraints this call has.\n      mediaConstraints,\n      // The combined addresses of the 2 other participants in the joined call.\n      participantAddress,\n      // The combined names of the 2 other participants in the joined call.\n      participantName,\n      // This call's current user\n      from: action.payload.from,\n      // The ids of the calls that were used for joining.\n      usedCallIds: [currentCall.id, otherCall.id],\n      // The custom parameters of the combined call.\n      customParameters: currentCall.customParameters,\n      // The DSCP Controls of the combined call.\n      dscpControls,\n      // The bandwidth from the original call.\n      bandwidth\n    })\n  )\n\n  const { error, offerSdp, sessionId, mediaIds } = yield call(setupCall, deps, mediaConstraints, {\n    defaultPeerConfig,\n    turnInfo,\n    trickleIceMode,\n    dscpControls,\n    removeBundling,\n    bandwidth,\n    callId: action.payload.newCallId,\n    serverTurnCredentials\n  })\n\n  // An error occurred while trying to setup the WebRTC portion of the joined call.\n  //    Report the error and mark the call as ended.\n  if (error) {\n    log.info(`Failed to initiate call. Changing to ${CALL_STATES.ENDED}.`)\n    yield put(\n      callActions.joinFinish(action.payload.newCallId, {\n        usedCallIds: [currentCall.id, otherCall.id],\n        error: error\n      })\n    )\n    return\n  }\n\n  // Collect the information needed to make the request.\n  const callInfo = {\n    wrtcsSessionId: currentCall.wrtcsSessionId,\n    otherWrtcsSessionId: otherCall.wrtcsSessionId,\n    sdp: offerSdp,\n    // Use the customParameters of the current call\n    customParameters: currentCall.customParameters\n  }\n  const response = yield call(requests.joinSessions, callInfo)\n\n  if (response.error) {\n    log.info('Failed to join call.')\n    yield put(\n      callActions.joinFinish(action.payload.newCallId, {\n        error: response.error,\n        usedCallIds: [action.payload.id, action.payload.otherCallId]\n      })\n    )\n    return\n  }\n\n  log.info('Finished local portion of join. Waiting on remote response.')\n  // Dispatch an action to do the following:\n  //  - create a new \"joined\" call in state\n  //  - update calls used in the join to have isPending property\n  yield put(\n    callActions.pendingJoin(action.payload.newCallId, {\n      // The ID that the backend uses to track this webRTC session.\n      wrtcsSessionId: response.newWrtcsSessionId,\n      // The ID that the webRTC stack uses to track this webRTC session.\n      webrtcSessionId: sessionId,\n      // The local Media object associated with this call.\n      mediaIds,\n      // The ids of the calls that were used for joining.\n      usedCallIds: [currentCall.id, otherCall.id],\n      // Set the state of the joined call to Initiated.\n      state: CALL_STATES.INITIATED\n    })\n  )\n}\n\n/**\n *\n * Replaces an existing track with a new track.\n *\n * This saga handles the WebRTC portion of replacing a track.\n * Assumptions:\n *    1. The action contains call id, trackId, and mediaConstraints\n * Responsibilities:\n *    1. Creates a new track.\n *    2. Replaces an an existing track with the newly created track.\n *    3. Update call state (via redux actions).\n * @method replaceTrack\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   action An action of type `REPLACE_TRACK`.\n */\nexport function * replaceTrack (deps, action) {\n  const { webRTC } = deps\n\n  const log = logManager.getLogger('CALL', action.payload.id)\n  log.info('Replacing track on call.')\n\n  const { trackId, mediaConstraints } = action.payload\n\n  const currentCall = yield select(getCallById, action.payload.id)\n  if (!currentCall) {\n    log.debug(`Call ${action.payload.id} not found.`)\n    yield put(\n      callActions.replaceTrackFinish(action.payload.id, {\n        error: new BasicError({\n          code: callCodes.INVALID_PARAM,\n          message: 'Call state not found; invalid call ID.'\n        })\n      })\n    )\n    return\n  }\n\n  if ([CALL_STATES.CANCELLED, CALL_STATES.ENDED, CALL_STATES.INITIATING].includes(currentCall.state)) {\n    log.debug(`Invalid call state: ${currentCall.state}`)\n    yield put(\n      callActions.replaceTrackFinish(action.payload.id, {\n        error: new BasicError({\n          code: callCodes.INVALID_STATE,\n          message: `Call is in an invalid state: ${currentCall.state}.`\n        })\n      })\n    )\n    return\n  }\n\n  const { error, newTrackId, oldTrackState } = yield call(webRtcReplaceTrack, webRTC, {\n    sessionId: currentCall.webrtcSessionId,\n    trackId,\n    mediaConstraints\n  })\n\n  if (error) {\n    log.info('Failed to replace track on call.')\n    yield put(callActions.replaceTrackFinish(action.payload.id, { error }))\n  } else {\n    log.info('Finished replacing track on call.')\n    yield put(callActions.replaceTrackFinish(action.payload.id, { newTrackId, oldTrackState }))\n  }\n}\n\n/**\n * Updates an existing call with unchanged media to trigger an ICE restart and renegotiation.\n *\n * This saga defines how a call's media is restarted. It performs the webRTC and\n *    signaling operations to update the local and server sessions of a call.\n *    This represents the start of the webRTC renegotiation process for the\n *    local side.\n * Assumptions:\n *    1. The call is in the correct state for the operation.\n *        - The call exists.\n * Responsibilities:\n *    1. Flag the Peer to restart ICE.\n *    2. Generate an offer with unchanged media directions.\n *    3. Perform signaling to update the server session with the offer.\n *    4. Update call state (via redux actions).\n * @method iceRestart\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSession \"Update call\" signalling function.\n * @param {Object}   action An action of type `ICE_RESTART`.\n */\nexport function * iceRestart (deps, action) {\n  const requests = deps.requests\n  const { id: callId } = action.payload\n  // Get some call data.\n  const {\n    webrtcSessionId,\n    wrtcsSessionId,\n    bandwidth,\n    isAnonymous,\n    account,\n    localOp,\n    localHold,\n    customParameters,\n    customBodies\n  } = yield select(getCallById, callId)\n\n  const session = yield call([deps.webRTC.sessionManager, 'get'], webrtcSessionId)\n\n  const dtlsRole = yield call([session, 'getDtlsRole'])\n\n  // The passive side of the call should wait a short amount of time before restarting media connection\n  // to avoid a glare scenario where both sides of the call try to restart the media connection\n  // at the same time.\n  if (dtlsRole === 'passive') {\n    const { mediaConnectionRetryDelay } = yield select(getOptions)\n\n    yield delay(mediaConnectionRetryDelay)\n  }\n\n  // Tell the RTCPeerConnection to restart the ICE connection as part of the\n  //    next negotiation.\n  yield call([session, 'restartIce'])\n\n  const log = logManager.getLogger('CALL', callId)\n\n  // Before doing the negotiation for ICE Restart, make sure we have network.\n  const platform = yield select(getPlatform)\n  const { connected: isConnected } = yield select(getConnectionState, platform)\n\n  if (!isConnected) {\n    log.debug('Websocket not connected; waiting for reconnect before performing media restart.')\n    const isConnected = yield call(waitForReconnect)\n\n    if (!isConnected) {\n      log.info('Subscription lost; stopping media restart attempt.')\n      yield put(\n        callActions.restartIceFinish(callId, {\n          local: true,\n          error: new BasicError({\n            code: subscriptionCodes.WS_CONNECTION_ERROR,\n            message: 'No subscription for operation.'\n          })\n        })\n      )\n      return\n    }\n  }\n\n  log.info('Performing call renegotiation to reconnect media connection.')\n\n  // Make we have the right media directions in the negotiation.\n  //    We don't want to accidentally unhold media while on local hold.\n  const mediaDirections = {\n    audio: localHold ? 'inactive' : 'sendrecv',\n    video: localHold ? 'inactive' : 'sendrecv'\n  }\n  // If we're not on hold nor sending any audio or video, change the media direction(s) to recvonly to\n  //  prevent the other side from getting empty tracks.\n  if (!localHold) {\n    const localTracks = yield call(getLocalTracks, callId)\n    mediaDirections.audio = localTracks.some(track => track.kind === 'audio') ? 'sendrecv' : 'recvonly'\n    mediaDirections.video = localTracks.some(track => track.kind === 'video') ? 'sendrecv' : 'recvonly'\n  }\n  const offer = yield call(generateOffer, deps, webrtcSessionId, mediaDirections, bandwidth)\n  if (!offer) {\n    log.debug('Failed to generate offer.')\n    yield put(\n      callActions.restartMediaFinish(callId, {\n        local: true,\n        error: new BasicError({\n          code: callCodes.INVALID_OFFER,\n          message: 'Failed to generate SDP offer'\n        })\n      })\n    )\n    return\n  }\n\n  const callInfo = {\n    wrtcsSessionId,\n    offer: offer.sdp,\n    isAnonymous,\n    account,\n    customParameters,\n    customBodies\n  }\n\n  const response = yield call(requests.updateSession, callInfo)\n\n  if (response.error) {\n    log.info('Failed to renegotiate call.')\n    yield put(\n      callActions.restartMediaFinish(callId, {\n        local: true,\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished local portion of media restart. Waiting on remote response.')\n    yield put(\n      callActions.pendingOperation(callId, {\n        operation: localOp.operation\n      })\n    )\n  }\n}\n","// Other Plugins\nimport { logManager } from '../../logs'\n\n// Libraries\nimport { all, call } from 'redux-saga/effects'\nimport { isEmpty, isUndefined } from 'lodash/fp'\n\nconst log = logManager.getLogger('CALLSTACK')\n\n/**\n * Performs the webRTC session functions associated rolling back the local portion\n *  of a \"hold\" (inactive media) offer\n *\n * Responsibilities:\n *  1. Revert the direction of the local and remote transceivers to \"sendrecv\"\n *  2. Rollback the local description SDP offer\n * @method rollbackLocalHoldOperation\n * @param {Object} deps\n * @param {Object} deps.webRTC      The WebRTC stack.\n * @param {string} sessionId the local webRTC session id, used to lookup the session object\n * @return {Object} offer object containing a Session Description Protocol\n */\nexport function * rollbackLocalHoldOperation (deps, sessionId) {\n  const { webRTC } = deps\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n\n  if (!session) {\n    log.debug(`WebRTC session ${sessionId} not found.`)\n    return\n  }\n\n  // Set the direction of the transceivers back to 'sendrecv'\n  yield call([session, 'setLocalAndRemoteTransceiversDirection'], {\n    audio: 'sendrecv',\n    video: 'sendrecv'\n  })\n\n  // Rollback the local offer\n  let offer\n  try {\n    offer = yield call([session, 'rollbackLocalDescription'])\n  } catch (error) {\n    log.debug('Failed to rollback local description offer SDP:', error)\n    return {\n      error\n    }\n  }\n\n  return { offer }\n}\n\n/**\n * Performs the webRTC session functions associated rolling back the local portion\n *  of an \"unhold\" (full media) offer\n *\n * Responsibilities:\n *  1. Revert the direction of the local and remote transceivers to \"inactive\"\n *  2. Rollback the local description SDP offer\n * @method rollbackLocalUnholdOperation\n * @param {Object} deps\n * @param {Object} deps.webRTC      The WebRTC stack.\n * @param {string} sessionId the local webRTC session id, used to lookup the session object\n * @return {Object} offer object containing a Session Description Protocol\n */\nexport function * rollbackLocalUnholdOperation (deps, sessionId) {\n  const { webRTC } = deps\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n\n  if (!session) {\n    log.debug(`WebRTC session ${sessionId} not found.`)\n    return\n  }\n\n  // Set the direction of the transceivers back to 'inactive'\n  yield call([session, 'setLocalAndRemoteTransceiversDirection'], {\n    audio: 'inactive',\n    video: 'inactive'\n  })\n\n  // Rollback the local offer\n  let offer\n  try {\n    offer = yield call([session, 'rollbackLocalDescription'])\n  } catch (error) {\n    log.debug('Failed to rollback local description offer SDP:', error)\n    return {\n      error\n    }\n  }\n\n  return { offer }\n}\n\n/**\n * Performs the webRTC session functions associated rolling back the local portion\n *  of an \"Add Media\" offer\n *\n * Responsibilities:\n *  1. Remove and cleanup the tracks added to the peer\n *  2. Rollback the local description SDP offer\n * @method rollbackLocalAddMedia\n * @param {Object} deps\n * @param {Object} deps.webRTC  The WebRTC stack.\n * @param {string} sessionId    The local webRTC session id, used to lookup the session object\n * @param {Array}  medias       A list of Media state objects\n * @return {Object} offer object containing a Session Description Protocol\n */\nexport function * rollbackLocalAddMedia (deps, sessionId, medias) {\n  const { webRTC } = deps\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n\n  if (!session) {\n    log.debug(`WebRTC session ${sessionId} not found.`)\n    return\n  }\n\n  // Remove the new local media(s) that were added\n  let tracks = []\n  medias.forEach(media => {\n    tracks = tracks.concat(media.tracks.map(track => track.id))\n  })\n\n  // Get the tracks that we want to remove\n  const localTracksToRemove = yield call([webRTC.track, 'getTracks'], tracks)\n  // Get the indexes of undefined tracks.\n  const invalidIndexes = localTracksToRemove.reduce((acc, cur, ind) => {\n    return isUndefined(cur) ? acc.concat(ind) : acc\n  }, [])\n  // Get the track IDs of those indexes.\n  const invalidTracks = invalidIndexes.map(ind => tracks[ind])\n\n  if (!isEmpty(invalidTracks)) {\n    const message = `The following tracks could not be found for rollback: ${invalidTracks.join(', ')}`\n    log.debug(message)\n  }\n\n  // Removes tracks from peer (Will stop tracks from being sent to remote participant).\n  // Does NOT end the tracks.\n  yield call([session, 'removeTracks'], tracks)\n\n  // Ends the tracks.\n  // Clean-up the local tracks.\n  yield all(localTracksToRemove.map(track => call([track, 'cleanup'])))\n\n  // Rollback the local offer\n  let offer\n  try {\n    offer = yield call([session, 'rollbackLocalDescription'])\n  } catch (error) {\n    log.debug('Failed to rollback local description offer SDP:', error)\n    return {\n      error\n    }\n  }\n\n  return { offer }\n}\n\n/**\n * Performs the webRTC session functions associated rolling back the local portion\n *  of a \"Remove Media\" offer.\n *\n * Unlike other rollback operations, for a remove media operation we will not try and re-add\n *  the removed tracks since the application's intention was to stop the media.\n *\n * Responsibilities:\n *  1. Rollback the local description SDP offer\n * @method rollbackLocalRemoveMedia\n * @param {Object} deps\n * @param {Object} deps.webRTC  The WebRTC stack.\n * @param {string} sessionId    The local webRTC session id, used to lookup the session object\n * @return {Object} offer object containing a Session Description Protocol\n */\nexport function * rollbackLocalRemoveMedia (deps, sessionId) {\n  const { webRTC } = deps\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n\n  if (!session) {\n    log.debug(`WebRTC session ${sessionId} not found.`)\n    return\n  }\n\n  // Rollback the local offer\n  let offer\n  try {\n    offer = yield call([session, 'rollbackLocalDescription'])\n  } catch (error) {\n    log.debug('Failed to rollback local description offer SDP:', error)\n    return {\n      error\n    }\n  }\n\n  return { offer }\n}\n","import { v4 as uuidV4 } from 'uuid'\n\n// Generate a unique SDK GUID for the running SDK instance.\nconst sdkId = uuidV4()\n\nexport default sdkId\n","/**\n * \"Notification sagas\" handle received notifications.\n * Each saga handles a single websocket notification that may be received from\n *    the backend.\n *\n * There may not be an established webRTC session for these sagas. This may be\n *    because (1) the notification is a new incoming call, or (2) there is a\n *    de-sync between SDK state and server state. This may or may not be\n *    considered as an error scenario (eg. a \"call ended\" notification for a\n *    call the SDK doesn't know about may be safely ignored).\n */\n\n// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport { getOptions, getTurnInfo, getCallByWrtcsSessionId } from '../../call/interfaceNew/selectors'\nimport { CALL_STATES, COMPLEX_OPERATION_MESSAGES, STATUS_CODES } from '../../call/constants'\nimport { OPERATIONS, OP_STATUS } from '../../call/interfaceNew/constants'\n\n// Callstack plugin.\nimport * as negotiation from './negotiation'\nimport runPipeline from '../sdp/pipeline'\n\n// Other plugins\nimport { logManager } from '../../logs'\nimport { setupIncomingCall } from '../webrtc/establish'\nimport { closeCall } from '../webrtc/midcall'\nimport BasicError, { callCodes } from '../../errors'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\nimport { v4 as uuidV4 } from 'uuid'\nimport sdpTransform from 'sdp-transform'\n\n// Helpers\n// TODO: Move this to a shared location.\nimport { validateCallState } from '../../call/cpaas/utils'\nimport { generateEndParams } from '../utils/index.js'\n\n/**\n * A \"call incoming\" notification has been received and needs to be handled.\n *\n * This saga is intended to be the entry point for all \"call incoming\"\n *    notifications. A \"call incoming\" notification is the initial offer to\n *    establish a call with a remote endpoint. It represents the start of both\n *    the call flow and webRTC negotiation process for the local side.\n * Handling the notification will create a new call in state.\n * Responsibilities:\n *    1. Have the callstack perform the required webRTC negotiation process.\n *        - Regular or Slow Start negotiation.\n *    2. Respond that the call has been received (ie. ringing).\n *    3. Create call state (via redux action).\n * @method incomingCall\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateCallRinging \"Update call\" signalling function.\n * @param {Object}   params        Parameters describing the incoming call.\n * @param {string}   [params.sdp]  The remote SDP offer included with the notification (if any).\n * @param {string}   params.wrtcsSessionId ID that the server uses to identify the session.\n * @param {string}   params.remoteNumber   Number of the remote participant.\n * @param {string}   params.remoteName     Display name of the remote participant.\n * @param {string}   params.calleeNumber  Number of the intended call recipient\n */\nexport function * incomingCall (deps, params) {\n  const requests = deps.requests\n  const { sdp, wrtcsSessionId, remoteNumber, remoteName, calleeNumber, customParameters } = params\n  const callConfig = yield select(getOptions)\n\n  const callId = yield call(uuidV4)\n\n  const log = logManager.getLogger('CALL', callId)\n  log.info('Received new incoming call; initiating.', { wrtcsSessionId })\n\n  let mediaOffered = null\n  if (sdp) {\n    // For a regular call, parse the SDP & collect what media has been offered by the caller:\n    // We only support two types\n    mediaOffered = { audio: false, video: false }\n    sdpTransform.parse(sdp).media.forEach(aMedia => {\n      mediaOffered[aMedia.type] = true\n    })\n  }\n\n  // Dispatch the action right away so the call is in state at this point.\n  yield put(\n    callActions.callIncoming(callId, {\n      // TODO: Proper constants.\n      direction: 'incoming',\n      state: CALL_STATES.INITIATING,\n      remoteParticipant: {\n        displayName: remoteName,\n        displayNumber: remoteNumber\n      },\n      to: calleeNumber,\n      // Number of the remote participant when the call was established.\n      from: remoteNumber,\n      // The ID that the backend uses to track this webRTC session.\n      wrtcsSessionId,\n\n      // Whether the call was received as a slow start call or not.\n      isSlowStart: !sdp,\n\n      // Capture what the caller offered in terms of media\n      // For a slow-start call, this will be null.\n      mediaOffered\n    })\n  )\n\n  // Dispatch a custom parameters received action/event if any custom parameters were received as part of the notification\n  if (customParameters) {\n    const customNames = customParameters.map(param => param.name)\n    log.debug(`Received custom parameters as part of the Call: ${customNames}.`)\n    yield put(\n      callActions.customParametersReceived(callId, {\n        customParameters\n      })\n    )\n  }\n\n  /**\n   * An incoming call may or may not have an SDP offer associated with it.\n   * If it has an SDP, then it is a \"regular\" call scenario and can be handled\n   *    as a normal webRTC negotiation.\n   * If it has no SDP, then it is a \"slow start\" call scenario. In a slow start\n   *    scenario, the signaling server acts as a webRTC-middleman, requiring\n   *    both sides to provide it with offers and generating the answers itself.\n   */\n  if (sdp) {\n    // Regular call.\n    const turnInfo = yield select(getTurnInfo)\n\n    // Since we have the remote offer SDP, we can setup a webRTC session.\n    const { error } = yield call(setupIncomingCall, deps, {\n      offer: {\n        sdp,\n        type: 'offer'\n      },\n      trickleIceMode: callConfig.trickleIceMode,\n      defaultPeerConfig: callConfig.defaultPeerConfig,\n      turnInfo,\n      callId,\n      removeBundling: callConfig.removeBundling,\n      serverTurnCredentials: callConfig.serverTurnCredentials\n    })\n\n    if (error) {\n      log.info(`Failed to initiate incoming call. Changing to ${CALL_STATES.ENDED}.`)\n      yield put(\n        callActions.endCallFinish(callId, {\n          isLocal: true,\n          error\n        })\n      )\n      return\n    }\n  } else {\n    log.debug('Incoming call is a slow-start call.')\n    // Slow start call.\n    /*\n     * We can't setup a webRTC session yet because generating an offer requires\n     *   media constraints. We need to wait until the application provides\n     *   media information before we can setup the call.\n     */\n  }\n\n  // Next state will be Initiated normally, or Ringing if ringing feedback is sent.\n  let nextState = CALL_STATES.INITIATED\n\n  // If in 'auto' mode for `ringingFeedbackMode`, send the feedback immediately.\n  if (callConfig.ringingFeedbackMode === 'auto') {\n    log.info('Sending ringing feedback automatically for incoming call.')\n    const callInfo = { wrtcsSessionId, id: callId }\n    const ringingResponse = yield call(requests.updateCallRinging, callInfo)\n\n    if (ringingResponse.error) {\n      log.info(`Failed to send ringing feedback - ${ringingResponse.error.code}: ${ringingResponse.error.message} `)\n    } else {\n      log.debug('Successfully sent ringing feedback.')\n      nextState = CALL_STATES.RINGING\n    }\n  }\n\n  log.info(`Finished initiating incoming call. Changing to ${nextState} and waiting on local answer.`)\n  yield put(\n    callActions.updateCall(callId, {\n      state: nextState\n    })\n  )\n}\n\n/**\n * A \"call request\" notification has been received for an established call\n *    and needs to be handled.\n *\n * This saga is intended to be the entry point for all \"call request\"\n *    notifications received from the call's remote side. This does not include\n *    \"call incoming\" notifications, and so it is assumed the call has already\n *    been established. A \"call request\" notification is the offer from a remote\n *    operation, and so represents the start of the webRTC renegotiation process\n *    for the local side.\n * This saga does not handle the request itself. It determines if it should be\n *    handled and what process is needed to handle it.\n * Responsibilities:\n *    1. Ensure this is a valid request notification.\n *        - Call exists, Call is not ended, TODO: Call is able to receive a request.\n *    2. Determine how the request should be handled.\n *        - Regular or slow start negotiation process.\n *    3. Pass the request off to the appropriate handler.\n * @method parseCallRequest\n * @param {Object} deps         Dependencies that the saga uses.\n * @param {Object} params       Parameters describing the incoming call.\n * @param {string} [params.sdp] The remote SDP offer included with the notification (if any).\n * @param {string} params.wrtcsSessionId ID that the server uses to identify the session.\n * @param {string} params.remoteName   Name of the remote participant.\n * @param {string} params.remoteNumber Number of the remote participant.\n */\nexport function * parseCallRequest (deps, params) {\n  const { wrtcsSessionId, sdp, remoteName, remoteNumber, customParameters } = params\n  const targetCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (targetCall || {}).id)\n  log.info('Received new update call request; handling.', { wrtcsSessionId })\n\n  if (!targetCall) {\n    // Scenario: No call is associated with the wrtcsSessionId.\n    log.info('Update request is for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  } else if (targetCall.state === CALL_STATES.ENDED) {\n    // Scenario: The associated call is ended, and should not have an active\n    //    webRTC session.\n    log.info('Update request is for ended call. Ignoring.', { wrtcsSessionId })\n    return\n  }\n  // TODO: Make sure the call is able to receive a `respondCallRequest`\n  //    notification (ie. has no pending operation).\n  log.debug(`Update request ${sdp ? 'with' : 'without'} SDP for call. Processing.`)\n\n  // Dispatch a custom parameters received action/event if any custom parameters were received as part of the notification\n  if (customParameters) {\n    const customNames = customParameters.map(param => param.name)\n    log.debug(`Received custom parameters as part of the Call: ${customNames}.`)\n    yield put(\n      callActions.customParametersReceived(targetCall.id, {\n        customParameters\n      })\n    )\n  }\n\n  /**\n   * How the request should be handled depends on whether it includes an SDP.\n   *    - SDP: Regular webRTC negotiation.\n   *    - No SDP: Slow start webRTC negotiation.\n   */\n  if (sdp) {\n    yield call(negotiation.handleUpdateRequest, deps, targetCall, { sdp, remoteNumber, remoteName })\n  } else {\n    yield call(negotiation.handleSlowUpdateRequest, deps, targetCall, { remoteNumber, remoteName })\n  }\n}\n\n/**\n * A \"call response\" notification has been received and needs to be handled.\n *\n * This saga is intended to be the entry point for all \"call response\"\n *    notifications received from the call's remote side. A \"call response\"\n *    notification is the answer to an operation that was previously\n *    performed (a \"call request\"), and so represents the last step in the\n *    webRTC negotiation process.\n * This saga does not handle the response itself. It determines if it should be\n *    handled and what process is needed to handle it.\n * Responsibilities:\n *    1. Ensure this is a valid notification.\n *        - Call exists, Call is not ended, TODO: Call expects the response.\n *    2. Determine what negotiation process the response is from.\n *        - Regular or slow start negotiation process.\n *    3. Pass the request off to the appropriate handler.\n * @method parseCallResponse\n * @param  {Object} webRTC The webRTC stack.\n * @param {Object} deps         Dependencies that the saga uses.\n * @param {Object} params       Parameters describing the incoming call.\n * @param {string} [params.sdp] The remote SDP offer included with the notification (if any).\n * @param {string} params.wrtcsSessionId ID that the server uses to identify the session.\n * @param {string} params.remoteName   Name of the remote participant.\n * @param {string} params.remoteNumber Number of the remote participant.\n */\nexport function * parseCallResponse (deps, params) {\n  const { wrtcsSessionId, sdp, customParameters } = params\n  const targetCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (targetCall || {}).id)\n  log.info('Received new update call response; handling.', { wrtcsSessionId })\n\n  if (!targetCall) {\n    // Scenario: The notification is about a call that state does not know about.\n    //    Ignore the notification.\n    log.info('Update response for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  } else if (targetCall.state === CALL_STATES.ENDED) {\n    const log = logManager.getLogger('CALL', targetCall.id)\n    // Scenario: The notification is about a call that state says is ended.\n    //    Ignore the notification, since ended calls should not have an active\n    //    webRTC Session.\n    log.info('Update response for ended call. Ignoring.', { wrtcsSessionId })\n    return\n  }\n  // TODO: Make sure the call is expecting a `respondCallUpdate` notification.\n  //    ie. has a pending operation.\n\n  // Dispatch a custom parameters received action/event if any custom parameters were received as part of the notification\n  if (customParameters) {\n    const customNames = customParameters.map(param => param.name)\n    log.debug(`Received custom parameters as part of the Call: ${customNames}.`)\n    yield put(\n      callActions.customParametersReceived(targetCall.id, {\n        customParameters\n      })\n    )\n  }\n\n  /**\n   * Check that the notification was not an \"error\" notification.\n   * Status code 49 with a `retryAfter` value indicates the original operation\n   *    failed (likely glare condition) and the SDK should retry the operation.\n   * TODO: This check is currently Link-specific. Depending on how CPaaS\n   *    indicates a failed/glare operation, either standardize this check or\n   *    move this into Link-specific saga.\n   */\n  if (!sdp && params.code === 49 && params.retryAfter) {\n    // TODO: Properly handle this scenario. The call may be in a bad state\n    //    because we set an offer but not an answer. May need to revert\n    //    signaling state and/or re-perform operation internally.\n    // For now, fail loudly and abort the operation to prevent crashes. The\n    //    negotiation sagas expect there to be an SDP.\n    // The call state will be left in a broken state because of KAA-1607.\n    log.error(`Response indicates an error scenario (${params.message}). Aborting operation.`)\n    return\n  }\n\n  /**\n   * Determine if the original operation was done locally or remotely. This\n   *    indicates whether it was regular or slow start negotiation.\n   * If it was from a remote slow start operation, it will be tracked in the\n   *    call state.\n   */\n  if (targetCall.remoteOp && targetCall.remoteOp.operation === OPERATIONS.SLOW_START) {\n    yield call(negotiation.handleSlowUpdateResponse, deps, targetCall, params)\n  } else {\n    yield call(negotiation.handleUpdateResponse, deps, targetCall, params)\n  }\n}\n\n/**\n * A call status notification indicating other session has ended has been received and needs to be handled.\n *\n * This saga is intended to handle the call status notifications that indicates a call has ended.\n * This notification means that the session has ended on the other side and we need to end our session as well.\n * Handling the notification will cleanup the session's media and puts the call in ENDED state.\n * Responsibilities:\n *    1. Have the callstack perform the required webRTC cleanup process.\n *    2. Update call state to ENDED (via redux action).\n * @method callStatusUpdateEnded\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   params        Parameters describing the incoming call.\n * @param {string}   params.wrtcsSessionId ID that the server uses to identify the session.\n * @param {string}   [params.reasonText]   Human-readable explanation for the call change.\n * @param {string}   [params.statusCode]     Code representing the reason for the call change.\n */\nexport function * callStatusUpdateEnded (deps, params) {\n  const { wrtcsSessionId, reasonText, statusCode } = params\n  const currentCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (currentCall || {}).id)\n  log.info('Received call status ended notice; handling.', { wrtcsSessionId })\n\n  if (!currentCall) {\n    log.info('Call ended notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  }\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, currentCall.id, {})\n  if (stateError) {\n    log.info('Call ended notice for unknown Call. Ignoring.')\n    return\n  }\n\n  if (currentCall.state === CALL_STATES.ENDED) {\n    log.info('Call ended notice for already Ended call. Ignoring.', { wrtcsSessionId })\n    return\n  }\n\n  log.debug(`Call ended notice caused by ${reasonText} (Status Code: ${statusCode}).`)\n\n  // Close the local webRTC session\n  yield call(closeCall, deps.webRTC, currentCall.webrtcSessionId)\n\n  log.info(`Finished handling call ended notice. Changing to ${CALL_STATES.ENDED}.`)\n  // TODO: Don't expose these directly. Create our own convention so that transition data\n  //       can be consistent across different operations.\n  yield put(callActions.endCallFinish(currentCall.id, generateEndParams(currentCall.state, false, params)))\n}\n\n/**\n * This saga is intended to handle the call status notifications that indicates a session has completed.\n * A session has completed (in this context) means completing a midcall operation such as:\n *\n * - direct transfer\n * - consultative transfer\n * - join\n * , where user A transferred user B to user C.\n *\n * For the direct & consultative transfer operations, the 'sessionComplete' notification\n * will just refer to the original call between: A<->B, which has now completed.\n * Therefore this saga will send a 'DELETE' REST request to inform backend to tear down\n * this particular original call.\n *\n * Note that for the other original call, which is A<->C, server already knows\n * that it has ended and callStatusUpdateEnded saga (above) already handles it by simply\n * marking it locally as ended (i.e. in local Redux state). Therefore there is no need\n * to send any 'DELETE' REST request for A<->C call.\n *\n * For the join operation, SDK will receive two separate 'sessionComplete' notifications from backend.\n * Therefore this saga will send two 'DELETE' REST requests to inform backend to tear down those\n * two original calls.\n *\n * @method sessionStatusUpdateEnded\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Object}   params        Parameters describing the incoming call.\n * @param {string}   params.wrtcsSessionId ID that the server uses to identify the session.\n * @param {string}   [params.reasonText]   Human-readable explanation for the call change.\n * @param {string}   [params.statusCode]     Code representing the reason for the call change.\n */\nexport function * sessionStatusUpdateEnded (deps, params) {\n  const { wrtcsSessionId, reasonText, statusCode } = params\n  const requests = deps.requests\n\n  const currentCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (currentCall || {}).id)\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, currentCall.id, {})\n  if (stateError) {\n    log.info('Session completed notice for unknown Call. Ignoring.')\n    return\n  }\n\n  log.info('Received session status completed notice; handling.', { wrtcsSessionId })\n\n  if (reasonText) {\n    let customStatusCode = statusCode\n    if (!statusCode && statusCode !== 0) {\n      if (reasonText === COMPLEX_OPERATION_MESSAGES.DIRECT_TRANSFER_SUCCESS) {\n        customStatusCode = STATUS_CODES.DIRECT_TRANSFER_SUCCESS\n      } else if (reasonText === COMPLEX_OPERATION_MESSAGES.CONSULTATIVE_TRANSFER_SUCCESS) {\n        customStatusCode = STATUS_CODES.CONSULTATIVE_TRANSFER_SUCCESS\n      } else if (reasonText === COMPLEX_OPERATION_MESSAGES.JOIN_SUCCESS) {\n        customStatusCode = STATUS_CODES.JOIN_SUCCESS\n      }\n    }\n    log.debug(`Session completed notice caused by ${reasonText} (${customStatusCode}).`)\n  }\n\n  log.info(`Ending webRTC session with id: ${currentCall.webrtcSessionId}, locally ...`)\n\n  // Close the local webRTC session\n  yield call(closeCall, deps.webRTC, currentCall.webrtcSessionId)\n\n  // If we had the local operation tracked in state, then we can dispatch the action\n  //    intended to \"finish\" the operation.\n  const localOp = currentCall.localOp\n  if (localOp && localOp.operation && localOp.status === OP_STATUS.PENDING) {\n    let transition\n    let finishAction\n    switch (localOp.operation) {\n      case OPERATIONS.DIRECT_TRANSFER:\n        finishAction = callActions.directTransferFinish\n        transition = {\n          reasonText: COMPLEX_OPERATION_MESSAGES.DIRECT_TRANSFER_SUCCESS,\n          statusCode: STATUS_CODES.DIRECT_TRANSFER_SUCCESS\n        }\n        break\n      case OPERATIONS.CONSULTATIVE_TRANSFER:\n        finishAction = callActions.consultativeTransferFinish\n        transition = {\n          reasonText: COMPLEX_OPERATION_MESSAGES.CONSULTATIVE_TRANSFER_SUCCESS,\n          statusCode: STATUS_CODES.CONSULTATIVE_TRANSFER_SUCCESS\n        }\n        break\n      case OPERATIONS.JOIN:\n        finishAction = callActions.joinFinish\n        transition = {\n          reasonText: COMPLEX_OPERATION_MESSAGES.JOIN_SUCCESS,\n          statusCode: STATUS_CODES.JOIN_SUCCESS\n        }\n        break\n      default:\n        log.info('Unknown local call operation for completed notice. Cannot provide transition information.')\n        break\n    }\n    if (finishAction) {\n      yield put(finishAction(currentCall.id, { transition }))\n    }\n  }\n\n  // We also need to notify the backend that call with currentCall.id should be removed\n  // by sending a DELETE REST request.\n  // Perform signalling to end the session on server's side.\n  const isAnonymous = currentCall.isAnonymous\n  const account = currentCall.account\n  log.debug('Ending call session on server-side.')\n  const response = yield call(requests.endSession, { wrtcsSessionId, isAnonymous, account })\n\n  if (!response.error) {\n    log.info(`Finished ending call. Changing call state to ${CALL_STATES.ENDED}.`)\n    yield put(callActions.endCallFinish(currentCall.id, generateEndParams(currentCall.state, true, params)))\n  } else {\n    log.debug(\n      `Error received when attempting to end the session: ${response.error}. Changing call state to ${CALL_STATES.ENDED}.`\n    )\n    yield put(\n      callActions.endCallFinish(currentCall.id, {\n        isLocal: true,\n        error: response.error\n      })\n    )\n  }\n}\n\n/**\n * A \"call status update\" has been received and needs to be handled.\n * The update specifies the server session is in \"ringing\" state.\n *\n * This saga handles the \"call ringing\" notification by updating the local\n *    session state to match the server session state. This only affects the\n *    local call state.\n * Responsibilities:\n *    1. Update call state to RINGING (via redux action).\n * @method callStatusUpdateRinging\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   params        Parameters describing the incoming call.\n * @param {string}   params.wrtcsSessionId ID that the server uses to identify the session.\n * @param {string}   params.remoteName   Name of the remote participant.\n * @param {string}   params.remoteNumber Number of the remote participant.\n */\nexport function * callStatusUpdateRinging (deps, params) {\n  const { wrtcsSessionId, customParameters } = params\n  const currentCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (currentCall || {}).id)\n  log.info('Received call status ringing notice; handling.', { wrtcsSessionId })\n\n  if (!currentCall) {\n    log.info('Call ringing notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  }\n\n  // Make sure the call state is what we expect\n  const stateError = yield call(validateCallState, currentCall.id, { state: CALL_STATES.INITIATED })\n  if (stateError) {\n    log.info(`Call ringing notice for Call in an invalid state: ${stateError.message}. Ignoring.`)\n    return\n  }\n\n  // Dispatch a custom parameters received action/event if any custom parameters were received as part of the notification\n  if (customParameters) {\n    const customNames = customParameters.map(param => param.name)\n    log.debug(`Received custom parameters as part of the Call: ${customNames}.`)\n    yield put(\n      callActions.customParametersReceived(currentCall.id, {\n        customParameters\n      })\n    )\n  }\n\n  log.info(`Finished handling call ringing notice. Changing to ${CALL_STATES.RINGING}.`)\n  yield put(\n    callActions.callRinging(currentCall.id, {\n      // Remote participant's information.\n      remoteParticipant: {\n        displayNumber: params.remoteNumber,\n        displayName: params.remoteName\n      }\n    })\n  )\n}\n\n/**\n * A call status notification indicating that an operation has failed and needs to be handled.\n *\n * This saga handles the \"session fail\" notification by generating a transition object\n *    containing proper statusCode and reasonText and removing the current pending operation.\n * Responsibilities:\n *    1. Generate transition object containing proper statusCode and reasonText depending on pending operation.\n * @method callStatusUpdateFailed\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   params        Parameters describing the incoming call.\n * @param {string}   params.wrtcsSessionId ID that the server uses to identify the session.\n */\nexport function * callStatusUpdateFailed (deps, params) {\n  const { wrtcsSessionId, reasonText, statusCode } = params\n  const currentCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (currentCall || {}).id)\n  log.info('Received call operation failed notice; handling.', { wrtcsSessionId })\n\n  if (!currentCall) {\n    log.info('Call operation failed notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  }\n\n  const localOp = currentCall.localOp\n  if (localOp && localOp.operation && localOp.status === OP_STATUS.PENDING) {\n    let transition\n    let finishAction\n    switch (localOp.operation) {\n      case OPERATIONS.DIRECT_TRANSFER:\n        finishAction = callActions.directTransferFinish\n        // TODO: May or may not need this when generic operation event is setup.\n        transition = {\n          reasonText: reasonText || COMPLEX_OPERATION_MESSAGES.DIRECT_TRANSFER_FAILURE,\n          statusCode: statusCode || STATUS_CODES.DIRECT_TRANSFER_FAILURE\n        }\n        break\n      case OPERATIONS.CONSULTATIVE_TRANSFER:\n        finishAction = callActions.consultativeTransferFinish\n        transition = {\n          reasonText: reasonText || COMPLEX_OPERATION_MESSAGES.CONSULTATIVE_TRANSFER_FAILURE,\n          statusCode: statusCode || STATUS_CODES.CONSULTATIVE_TRANSFER_FAILURE\n        }\n        break\n      case OPERATIONS.JOIN:\n        finishAction = callActions.joinFinish\n        transition = {\n          reasonText: reasonText || COMPLEX_OPERATION_MESSAGES.JOIN_FAILURE,\n          statusCode: statusCode || STATUS_CODES.JOIN_FAILURE\n        }\n        break\n    }\n    log.debug(`Processing as a local ${localOp.operation} failure (${transition.statusCode}).`)\n\n    if (finishAction) {\n      log.info('Finished handling call operation failed notice.')\n      yield put(\n        finishAction(currentCall.id, {\n          error: new BasicError({\n            message: `Operation ${localOp.operation} failed.`,\n            code: callCodes.GENERIC_ERROR\n          }),\n          transition\n        })\n      )\n      return\n    }\n  }\n\n  yield put(callActions.updateCall(currentCall.id))\n}\n\n/**\n * A \"call cancelled\" notification needs to be handled.\n *\n * A call can be \"cancelled\" for different reasons. In general, it means that\n *    the call was not established (locally) but it is no longer available for\n *    the user to respond. For example, it may have been answered on another\n *    device, or the caller may have ended it while it was ringing.\n *\n * The call is cancelled locally by cleaning up any/all Webrtc resources and\n *    changing the call state to indicate it was cancelled.\n *\n * @method callCancelled\n * @param {Object} deps         Dependencies that the saga uses.\n * @param {Object} deps.webRTC  The WebRTC stack.\n * @param {Object} params       Parameters describing the notification.\n */\nexport function * callCancelled (deps, params) {\n  const { wrtcsSessionId } = params\n  const targetCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (targetCall || {}).id)\n  log.info('Received call cancelled notice; handling.', { wrtcsSessionId })\n\n  if (!targetCall) {\n    log.info('Call cancelled notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  } else if ([CALL_STATES.ENDED, CALL_STATES.CANCELLED].includes(targetCall.state)) {\n    log.info(`Call cancelled notice for already ${targetCall.state} call. Ignoring.`, { wrtcsSessionId })\n    return\n  }\n\n  // Clean up the Webrtc portion of the Call.\n  yield call(closeCall, deps.webRTC, targetCall.webrtcSessionId)\n\n  log.info(`Finished handling call cancelled notice. Changing to ${CALL_STATES.CANCELLED}.`)\n  // Dispatch an action to handle the redux portion of the Call.\n  yield put(callActions.callCancelled(targetCall.id))\n}\n\n/**\n * A \"session progress\" notification has been received. It contains an \"early\n *    media\" SDP (pranswer) that needs to be processed.\n *\n * Processing a pranswer is done by:\n *    1. Validating the Call / Session.\n *    2. Running the SDP through the SDP pipeline.\n *    3. Setting the SDP as the Session's remote description (as pranswer).\n *    4. Updating the Call state.\n *\n * @method receiveEarlyMedia\n * @param {Object} deps         Dependencies that the saga uses.\n * @param {Object} deps.webRTC  The WebRTC stack.\n * @param {Object} params       Parameters describing the notification.\n */\nexport function * receiveEarlyMedia (deps, params) {\n  const { wrtcsSessionId, customParameters } = params\n  const { webRTC } = deps\n\n  /**\n   * Get the call from state.\n   */\n  const currentCall = yield select(getCallByWrtcsSessionId, wrtcsSessionId)\n\n  const log = logManager.getLogger('CALL', (currentCall || {}).id)\n  log.info('Received early media notice; handling.', { wrtcsSessionId })\n\n  if (!currentCall) {\n    log.info('Early media notice for unknown wrtcsSession. Ignoring.', { wrtcsSessionId })\n    return\n  }\n\n  /**\n   * Get the Webrtc Session.\n   */\n  const session = yield call([webRTC.sessionManager, 'get'], currentCall.webrtcSessionId)\n  if (!session) {\n    log.info('Early media notice for missing wrtcsSession. Ignoring.', { wrtcsSessionId })\n    // TODO: Better error.\n    return\n  }\n\n  // Dispatch a custom parameters received action/event if any custom parameters were received as part of the notification\n  if (customParameters) {\n    const customNames = customParameters.map(param => param.name)\n    log.debug(`Received custom parameters as part of the Call: ${customNames}.`)\n    yield put(\n      callActions.customParametersReceived(currentCall.id, {\n        customParameters\n      })\n    )\n  }\n\n  try {\n    /*\n     * Run the remote SDP pranswer through any SDP handlers provided, then set it\n     *    as the Session's remote description.\n     * This is the \"pre set remote\" stage.\n     */\n    const callConfigOptions = yield select(getOptions)\n    const sdp = yield call(runPipeline, callConfigOptions.sdpHandlers, params.sdp, {\n      callId: currentCall.id,\n      type: 'pranswer',\n      step: 'set',\n      endpoint: 'remote'\n    })\n    yield call([session, 'processAnswer'], {\n      type: 'pranswer',\n      sdp: sdp\n    })\n  } catch (err) {\n    log.debug(`Failed to process pranswer for Call ${currentCall.id}; ignoring.`)\n    return\n  }\n\n  log.info(`Finished handling early media notice. Changing to ${CALL_STATES.EARLY_MEDIA}.`)\n  yield put(\n    callActions.sessionProgress(currentCall.id, {\n      // Remote participant's information.\n      remoteParticipant: {\n        displayNumber: params.remoteNumber,\n        displayName: params.remoteName\n      }\n    })\n  )\n}\n","// Callstack.\nimport compareMedia from '../sdp/compareMedia'\nimport getOperation from '../sdp/operations'\n\n// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport * as actionTypes from '../../call/interfaceNew/actionTypes'\nimport { getOptions } from '../../call/interfaceNew/selectors'\n\n// Call plugin helpers.\nimport { CALL_STATES, CALL_MEDIA_STATES } from '../../call/constants'\nimport { hasMediaFlowing, setMediaInactive } from '../../call/utils/sdp'\nimport { getMediaState } from '../../call/utils/state'\nimport { OPERATIONS, OP_STATUS } from '../../call/interfaceNew/constants'\n\n// Other plugins.\nimport { logManager } from '../../logs'\nimport { recreatePeer, handleOffer, generateOffer } from '../../callstack/webrtc/midcall'\nimport { receivedAnswer, isSameSdpSessionId } from '../webrtc/negotiation'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * A \"call update request\" has been received and needs to be handled.\n * The request includes an offer SDP, so this is a regular webRTC scenario.\n *\n * This saga is intended to process all \"call update requests\", that have an\n *    SDP, received from the call's remote side. It is assumed the call has\n *    already been established, so this represents the start of the webRTC\n *    renegotiation process for the local side.\n * Handling the request is expected (but may not necessarily) affect the call's\n *    media. The call state will be updated depending on the requested changes\n *    and the current call state.\n * Assumptions:\n *    1. The request notification is valid.\n *        - Call exists, Call is not Ended, Call is able to receive a request.\n *    2. The SDP is a remote offer SDP.\n *        - Indicates regular webRTC negotiation should occur.\n * Responsibilities:\n *    1. Determine what the remote operation was (ie. what is being offered).\n *    2. Process the offer based on remote operation and current local state.\n *    3. Respond to the request.\n *    4. Update call state (via redux action).\n * @method handleUpdateRequest\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSessionResponse \"Respond to offer\" signalling function.\n * @param {Object}   targetCall    The call being acted on.\n * @param {Object}   params        Parameters of the update request.\n * @param {string}   params.sdp          A remote offer SDP.\n * @param {string}   params.remoteNumber Number of the remote participant.\n * @param {string}   params.remoteName   Name of the remote participant.\n */\nexport function * handleUpdateRequest (deps, targetCall, params) {\n  const { webRTC, requests } = deps\n\n  const log = logManager.getLogger('CALL', targetCall.id)\n  log.info('Processing regular update request from remote endpoint.')\n\n  let { sdp } = params\n  const { remoteNumber, remoteName } = params\n\n  const mediaState = yield call(getMediaState, targetCall)\n  log.debug(`Current call info; State: ${targetCall.state}, MediaState: ${mediaState}.`)\n\n  /*\n   * Determine what the remote operation was. The remote operation and our\n   *    current local state will affect how we process the received offer. Our\n   *    response needs to reflect our desired local state, so that the remote\n   *    side does not change the call in an undesired way (eg. offering media\n   *    in a dual hold scenario should not reconnect media).\n   */\n  const session = yield call([webRTC.sessionManager, 'get'], targetCall.webrtcSessionId)\n  if (!session) {\n    log.debug(`webRTC session ${targetCall.webrtcSessionId} not found.`)\n    return\n  }\n  /*\n   * Use the currently set remote SDP and the newly-received remote SDP to\n   *    determine what the remote operation was.\n   */\n  const remoteDesc = yield call([session, 'getLatestRemoteDesc'])\n  const mediaDiff = yield call(compareMedia, remoteDesc.sdp, sdp)\n  let remoteOp = yield call(getOperation, mediaDiff)\n\n  log.debug(`Interpreted update request as a ${remoteOp} operation.`)\n  /**\n   * Check for remoteOp special-cases.\n   *  This is needed for complex operations, where a few renegotiations occur\n   *      as a single remote operation. Some of those renegotiations are\n   *      special-cases (ie. not actual SDK operations).\n   *  If the remoteOp is not \"standard\", then try to fit it to a \"standard\"\n   *    operation that \"fits best\".\n   */\n  const isMediaFlowing = yield call(hasMediaFlowing, sdp)\n  if (remoteOp === 'UNKNOWN') {\n    /*\n     * If the media state is remotely held but the latest renegotiation has\n     *    media flowing, then handle it as an unhold.\n     * This occurs:\n     *  - As part of a remote direct transfer operation (when this user is being\n     *      transferred to another user). When the transferee accepts the call,\n     *      a renegotiation occurs that changes from 'MoH' to 'media flowing'\n     *      state. This needs to be handled as an unhold by the SDK so that\n     *      the call state is updated to reflect the media state.\n     *  - As part of a remote consultative transfer operation (when this user was\n     *      the first call specified in the transfer operation, but not for the\n     *      second user). Same 'MoH' to 'media flowing' scenario as direct\n     *      transfer.\n     */\n    if (mediaState === CALL_MEDIA_STATES.REMOTE_HOLD && isMediaFlowing) {\n      remoteOp = OPERATIONS.UNHOLD\n    } else {\n      log.debug('Could not determine remote operation; retrying.')\n      // Try it again, but this time match medias naively.\n      const mediaDiff = yield call(compareMedia, remoteDesc.sdp, sdp, true)\n      remoteOp = yield call(getOperation, mediaDiff)\n      log.debug(`Re-interpreted update request as a ${remoteOp} operation.`)\n    }\n  } else if (remoteOp === 'NO_CHANGE') {\n    /*\n     * Renegotiation did not change anything media related. This renegotiation\n     *    may have been for a different purpose, such as changing the remote\n     *    endpoint during a transfer.\n     *\n     * Let this remoteOp default to the generic \"update call\" operation except when we're on locally hold.\n     */\n\n    /*\n     * When our media state is Local Hold, this means that our sdp has media as inactive.\n     * Therefore, when we receive remote sdp with media as also inactive, this means the remote side is doing a hold operation.\n     * Because of this, we get a remoteOp of `NO_CHANGE` when we actually want to handle it as a remote operation\n     *  inorder to get into a dual hold state.\n     */\n    if (mediaState === CALL_MEDIA_STATES.LOCAL_HOLD) {\n      remoteOp = OPERATIONS.HOLD\n    }\n  }\n\n  log.info(`Processing update request as remote ${remoteOp} operation in ${mediaState} scenario.`)\n  const callAction = yield call(getCallAction, remoteOp)\n\n  /*\n   * If the remote operation is offering media but the call is locally held,\n   *    then we need to modify the offer to ensure that media does not restart.\n   */\n  if (isMediaFlowing && [CALL_MEDIA_STATES.DUAL_HOLD, CALL_MEDIA_STATES.LOCAL_HOLD].includes(mediaState)) {\n    log.debug('Modifying remote offer to prevent resetting media while in local hold.')\n    sdp = yield call(setMediaInactive, sdp)\n    if (!sdp) {\n      log.debug('SDP is either undefined or not a string.')\n      return\n    }\n  }\n\n  /**\n   * Decision: When we receive a remote offer SDP that has a different \"session\n   *    ID\" as the currently set remote SDP, recreate the call's PeerConnection.\n   * This is a workaround/fix for scenarios where the remote endpoint changes.\n   *    It avoids possible DTLS role conflict issues.\n   */\n  // TODO: Also check fingerprint?\n  const sameSession = yield call(isSameSdpSessionId, webRTC, targetCall.webrtcSessionId, sdp)\n  if (!sameSession) {\n    log.debug(`Received offer SDP is from a different session. Recreating Peer for call ${targetCall.id}.`)\n    yield call(recreatePeer, webRTC, targetCall.webrtcSessionId)\n  }\n\n  /**\n   * If the offer SDP has a DTLS role of active (which is invalid), change it to\n   *    actpass. This is a workaround for transfer scenarios where the offer SDP\n   *    is the remote endpoint's answer SDP from them answering the call. This\n   *    happens when slow-start is not done for the transfer.\n   */\n  if (sdp.includes('setup:active')) {\n    log.debug(`Received offer SDP with active role for call ${targetCall.id}. Changing.`)\n    sdp = sdp.replace(/setup:active/g, 'setup:actpass')\n  }\n\n  // Handle the offer SDP to receive an answer SDP.\n  // TODO: Handle the offer differently depending on remote operation.\n  const { error, answerSDP } = yield call(handleOffer, deps, sdp, targetCall.webrtcSessionId, targetCall.bandwidth)\n\n  if (error) {\n    log.debug('Failed to receive offer SDP.', error)\n    // TODO: Dispatch an error action to notify of the error scenario.\n    // The call may now be in a bad state and needs to be fixed.\n    return\n  }\n\n  // Send answer sdp back to remote side\n  const callInfo = {\n    wrtcsSessionId: targetCall.wrtcsSessionId,\n    answer: answerSDP,\n    isAnonymous: targetCall.isAnonymous,\n    account: targetCall.account,\n    customParameters: targetCall.customParameters,\n    customBodies: targetCall.customBodies\n  }\n\n  const response = yield call(requests.updateSessionResponse, callInfo)\n\n  if (response.error) {\n    // Scenario: The offer was processed, but failed to respond with the answer.\n    // The remote side needs the answer SDP before the call is \"connected\".\n    // TODO: Handle this scenario (retry request or fail/revert operation?)\n    log.info('Failed to respond to remote offer with an answer.')\n    yield put(\n      callAction(targetCall.id, {\n        remote: true,\n        error: response.error\n      })\n    )\n  } else {\n    log.info('Finished responding to remote update. Changing state based on the remote operation.')\n    yield put(\n      callAction(targetCall.id, {\n        remote: true,\n        remoteParticipant: {\n          displayNumber: remoteNumber,\n          displayName: remoteName\n        }\n      })\n    )\n  }\n}\n\n/**\n * A \"call update request\" has been received and needs to be handled.\n * The request does not include an SDP, so this is a slow start webRTC scenario.\n *\n * This saga is intended to process all \"call update requests\", that have no\n *    SDP, received from the call's remote side. It is assumed the call has\n *    already been established, so this represents the start of the slow start\n *    webRTC renegotiation process for the local side.\n * Handling the request will not affect the call's media at this point. As\n *    opposed to regular negotiation, we require an additional \"call response\"\n *    notification before negotiation is complete. Media and call state will\n *    only be affected by that response notification.\n * Assumptions:\n *    1. The request notification is valid.\n *        - Call exists, Call is not Ended, Call is able to receive a request.\n *    2. There is no SDP.\n *        - Indicates slow start webRTC negotiation should occur.\n * Responsibilities:\n *    1. Generate an offer SDP based on our current local state.\n *    2. Respond to the request with our offer.\n * @method handleSlowUpdateRequest\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.updateSessionResponse \"Respond to offer\" signalling function.\n * @param  {Object} targetCall The call being acted on.\n * @param {Object}   params       Parameters of the update request.\n * @param {string}   params.remoteNumber Number of the remote participant.\n * @param {string}   params.remoteName   Name of the remote participant.\n */\nexport function * handleSlowUpdateRequest (deps, targetCall, params) {\n  const { webRTC, requests } = deps\n  const { remoteNumber, remoteName } = params\n\n  const log = logManager.getLogger('CALL', targetCall.id)\n  log.info('Processing slow-start update request from remote endpoint.')\n\n  const mediaState = yield call(getMediaState, targetCall)\n  log.debug(`Current call info; State: ${targetCall.state}, MediaState: ${mediaState}.`)\n\n  /**\n   * Decision: Whenever we receive a slow-start notification, recreate the Peer.\n   *    This is needed in certain situations (but not all...)\n   * Known Scenarios:\n   * 1. Link direct transfer:\n   *    - The user being transferred will be on remote hold and will receive a\n   *        slow-start notification as part of the \"transfer renegotitions\".\n   *        Not recreating the Peer will result in a DTLS role conflict.\n   *    - The user receiving the transfer will negotiate the initial connection,\n   *        then will receive a slow-start notification (when Connected). Not\n   *        recreating the Peer for the slow-start results in DTLS conflict.\n   * Exception: If client has set the call option 'mediaBrokerOnly' to true, then\n   *    we don't need to recreate the call's PeerConnection.\n   */\n  const { mediaBrokerOnly } = yield select(getOptions)\n  if (!mediaBrokerOnly) {\n    log.debug(`Recreating Peer for Session ${targetCall.webrtcSessionId}.`)\n    yield call(recreatePeer, webRTC, targetCall.webrtcSessionId)\n  } else {\n    log.debug('Not recreating PeerConnection as mediaBrokerOnly is set to true in configuration.')\n  }\n  /*\n   * Decision: Whenever we receive an offer without an SDP (slow start), and\n   *    we're not locally held, respond with all media directions as sendrecv.\n   *    This is to signal what we are capable of, rather than what we want.\n   *    When we are locally held, we don't want to allow the remote side to\n   *    restart media, hence respond with media directions as inactive.\n   * This handles two (non-local hold) scenarios specifically:\n   *  1. Re-invite: We have already negotiated to perform the remote operation,\n   *      but we received a second offer (without an SDP) as a side-effect to\n   *      further update media.\n   *    Eg. Music on Hold: The remote operation is to set media to inactive,\n   *      and the re-invite updates media so we can receive the hold audio.\n   *  2. Slow start unhold: We receive an offer without an SDP, but we have no\n   *      idea what the remote operation was. If we are on remote hold, we\n   *      assume that it's a remote unhold operation.\n   */\n  const mediaDirections = {\n    audio: targetCall.localHold ? 'inactive' : 'sendrecv',\n    video: targetCall.localHold ? 'inactive' : 'sendrecv'\n  }\n\n  // Create an offer to use for responding to the slow start notification.\n  const slowOffer = yield call(generateOffer, deps, targetCall.webrtcSessionId, mediaDirections)\n\n  const callInfo = {\n    wrtcsSessionId: targetCall.wrtcsSessionId,\n    answer: slowOffer.sdp,\n    isAnonymous: targetCall.isAnonymous,\n    account: targetCall.account,\n    customParameters: targetCall.customParameters,\n    customBodies: targetCall.customBodies\n  }\n\n  // Respond with our \"offer\".\n  const response = yield call(requests.updateSessionResponse, callInfo)\n\n  if (response.error) {\n    // TODO: Handle this scenario (retry request or fail/revert operation?)\n    log.info('Failed to respond to slow-start remote update.', response.error)\n    return\n  }\n\n  log.info('Finished responding to slow-start remote update. Waiting on remote response.')\n  /*\n   * The operation is not complete until we receive a response to our offer. The\n   *    response will be handled by the `handleSlowUpdateResponse` saga.\n   */\n  yield put(\n    callActions.remoteSlowStart(targetCall.id, {\n      remoteParticipant: {\n        displayNumber: remoteNumber,\n        displayName: remoteName\n      }\n    })\n  )\n}\n\n/**\n * A \"call update response\" has been received and needs to be handled.\n * The response is for a local operation, so this a regular webRTC scenario.\n *\n * This saga is intended to process all \"call update responses\", that are from\n *    local operations, received from the call's remote side. The call may or\n *    may not be established at this point. This represents the end of the\n *    regular webRTC negotiation process for the local side.\n * Handling the response will affect the call's media, and the call state will\n *    be updated depending on the new media and the current call state.\n * Assumptions:\n *    1. Ensure this is a valid notification.\n *        - Call exists, Call is not ended, Call expects the response.\n *    2. The original operation was started locally.\n *        - Indicates that it was a regular negotiation process.\n * Responsibilities:\n *    1. Have the callstack process the answer SDP.\n *    2. TODO: Determine what the original operation was.\n *    3. Update call state (via redux action).\n * @method handleUpdateResponse\n * @param {Object}  deps          Dependencies that the saga uses.\n * @param {Object}  deps.webRTC   The WebRTC stack.\n * @param {Object}  deps.requests The set of platform-specific signalling functions.\n * @param  {Object} targetCall The call being acted on.\n * @param  {Object} params\n * @param  {string} params.sdp A remote answer SDP.\n * @param  {string} params.remoteName   Name of the remote participant.\n * @param  {string} params.remoteNumber Number of the remote participant.\n */\nexport function * handleUpdateResponse (deps, targetCall, params) {\n  const { sdp } = params\n\n  const log = logManager.getLogger('CALL', targetCall.id)\n  log.info('Processing remote response from regular, local update request.')\n\n  const mediaState = yield call(getMediaState, targetCall)\n  log.debug(`Current call info; State: ${targetCall.state}, MediaState: ${mediaState}.`)\n\n  // Handle the remote answer SDP.\n  const sessionInfo = { sessionId: targetCall.webrtcSessionId, answerSdp: sdp }\n  const error = yield call(receivedAnswer, deps, sessionInfo, targetCall)\n\n  if (error) {\n    log.debug('Failed to receive answer SDP', error)\n    // TODO: Better error handling.\n    yield put(\n      callActions.callAccepted(targetCall.id, {\n        state: CALL_STATES.ENDED,\n        error\n      })\n    )\n    return\n  }\n\n  const localOp = targetCall.localOp\n\n  // Update call state depending on what the current call state is.\n  if ([CALL_STATES.RINGING, CALL_STATES.INITIATED, CALL_STATES.EARLY_MEDIA].includes(targetCall.state)) {\n    log.info(`Handling state change as remote answer operation. Changing to ${CALL_STATES.CONNECTED}.`)\n    // Scenario: The call was previously ringing, so this response is a \"call\n    //    accepted\" notification. The call should now be established.\n    // It's possible that the call never entered Ringing state (from Initiated).\n    //    Handle Initiated the same as Ringing.\n    // Transition to Connected state.\n    if (localOp && localOp.status === OP_STATUS.PENDING && localOp.operation === OPERATIONS.MAKE) {\n      yield put(\n        callActions.makeCallFinish(targetCall.id, {\n          state: CALL_STATES.CONNECTED,\n          // TODO: Make sure this is the correct units\n          startTime: Date.now(),\n          // Remote participant's information.\n          remoteParticipant: {\n            displayNumber: params.remoteNumber,\n            displayName: params.remoteName\n          }\n        })\n      )\n    } else {\n      // TODO: Still need this for complex Direct Transfer & Join (remote side). Figure out a better way.\n      yield put(\n        callActions.callAccepted(targetCall.id, {\n          // TODO: Determine when we're actually \"in call\".\n          state: CALL_STATES.CONNECTED,\n          // TODO: Make sure this is the correct units\n          startTime: Date.now(),\n          // Remote participant's information.\n          remoteParticipant: {\n            displayNumber: params.remoteNumber,\n            displayName: params.remoteName\n          }\n        })\n      )\n    }\n  } else if (targetCall.state === CALL_STATES.CONNECTED || targetCall.state === CALL_STATES.ON_HOLD) {\n    // Scenario: The call was previously established, so this response is \"call\n    //    update\" notification. The call is still established.\n    // Transition to next state depending on what the operation was and the\n    //    updated media.\n    if (localOp && localOp.status === OP_STATUS.PENDING) {\n      let finishAction\n      switch (localOp.operation) {\n        case OPERATIONS.HOLD:\n          finishAction = callActions.holdCallFinish\n          break\n        case OPERATIONS.UNHOLD:\n          finishAction = callActions.unholdCallFinish\n          break\n        case OPERATIONS.ADD_BASIC_MEDIA:\n          finishAction = callActions.addMediaFinish\n          break\n        case OPERATIONS.ADD_MEDIA:\n          finishAction = callActions.addMediaFinish\n          break\n        case OPERATIONS.REMOVE_BASIC_MEDIA:\n          finishAction = callActions.removeMediaFinish\n          break\n        case OPERATIONS.REMOVE_MEDIA:\n          finishAction = callActions.removeMediaFinish\n          break\n        case OPERATIONS.RENEGOTIATE:\n          finishAction = callActions.renegotiateFinish\n          break\n        case OPERATIONS.MEDIA_RESTART:\n          finishAction = callActions.restartMediaFinish\n      }\n      if (finishAction) {\n        log.info(\n          `Finished processing remote response to local ${localOp.operation}. Changing state based on operation.`\n        )\n        yield put(finishAction(targetCall.id, localOp.operationData))\n        return\n      }\n    }\n\n    // TODO: Leave this here for now to not break other operations. Need to update this as we convert the other operations.\n    // Determine whether the SDP has active media.\n    const mediaFlowing = yield call(hasMediaFlowing, params.sdp)\n    const nextState = mediaFlowing ? CALL_STATES.CONNECTED : CALL_STATES.ON_HOLD\n\n    log.info(`Handling state change as local midcall operation ${mediaFlowing ? 'with' : 'without'} media flowing.`)\n    log.info(`Finished processing remote response. Changing to ${nextState}.`)\n    yield put(\n      callActions.updateCall(targetCall.id, {\n        state: nextState\n      })\n    )\n  } else {\n    // Scenario: The call is in an unexpected state for receiving a remote\n    //    answer SDP. This should never happen.\n    log.error('The call is in a bad state for receiving response. Cannot update.')\n  }\n}\n\n/**\n * A \"call update response\" has been received and needs to be handled.\n * The response is for a remote operation, so this a slow start webRTC scenario.\n *\n * This saga is intended to process all \"call update responses\", that are from\n *    remote operations, received from the call's remote side. This represents\n *    the end of slow start webRTC negotiation process for the local side.\n * Handling the response will affect the call's media, and the call state will\n *    be updated depending on the new media and the current call state.\n * Assumptions:\n *    1. Ensure this is a valid notification.\n *        - Call exists, Call is not ended, Call expects the response.\n *    2. The original operation was started remotely.\n *        - Indicates that it a was slow start negotiation process.\n *        - The call has a pending remote operation.\n * Responsibilities:\n *    1. Determine what the original operation was.\n *    2. Have the callstack process the answer SDP.\n *    3. Update call state (via redux action) based on original operation.\n * @method handleSlowUpdateResponse\n * @param {Object}  deps          Dependencies that the saga uses.\n * @param {Object}  deps.webRTC   The WebRTC stack.\n * @param {Object}  deps.requests The set of platform-specific signalling functions.\n * @param  {Object} targetCall The call being acted on.\n * @param  {Object} params\n * @param  {string} params.sdp A remote answer SDP.\n * @param  {string} params.remoteName   Name of the remote participant.\n * @param  {string} params.remoteNumber Number of the remote participant.\n */\nexport function * handleSlowUpdateResponse (deps, targetCall, params) {\n  let { sdp } = params\n\n  const log = logManager.getLogger('CALL', targetCall.id)\n  log.info('Processing remote response from slow-start remote update request.')\n\n  const mediaState = yield call(getMediaState, targetCall)\n  log.debug(`Current call info; State: ${targetCall.state}, MediaState: ${mediaState}.`)\n\n  /*\n   * Determine what the remote operation was. The remote operation and our\n   *    current local state will affect how we update the call's state.\n   */\n  const session = yield call([deps.webRTC.sessionManager, 'get'], targetCall.webrtcSessionId)\n  if (!session) {\n    log.debug(`webRTC session ${targetCall.webrtcSessionId} not found.`)\n    return\n  }\n  /*\n   * Use the currently set remote SDP and the newly-received remote SDP to\n   *    determine what the remote operation was.\n   */\n  const remoteDesc = yield call([session, 'getLatestRemoteDesc'])\n  const mediaDiff = yield call(compareMedia, remoteDesc.sdp, sdp)\n\n  let remoteOp = yield call(getOperation, mediaDiff)\n  log.debug(`Interpreted slow-start response as a ${remoteOp} operation.`)\n  const mediaFlowing = yield call(hasMediaFlowing, sdp)\n\n  if (remoteOp === 'UNKNOWN') {\n    log.debug('Could not determine remote operation; retrying.')\n    // Try it again, but this time match medias naively.\n    const mediaDiff = yield call(compareMedia, remoteDesc.sdp, sdp, true)\n    remoteOp = yield call(getOperation, mediaDiff)\n    log.debug(`Re-interpreted slow-start response as a ${remoteOp} operation.`)\n  }\n\n  /**\n   * Special case: Assume the remote operation was actually a Hold.\n   * The operation was interpreted as \"no change\" because the remote media did\n   *    not change in the remote operation. But all media is inactive and we are\n   *    in a Local Hold state. This means that the previous media was inactive\n   *    because of our local hold. So the new media being inactive is a change\n   *    that was done on the remote side, ie. it was actually a remote hold.\n   */\n  if (remoteOp === 'NO_CHANGE' && !mediaFlowing && mediaState === CALL_MEDIA_STATES.LOCAL_HOLD) {\n    remoteOp = OPERATIONS.HOLD\n    log.debug(`Interpreting NO_CHANGE operation as ${remoteOp} due to ${mediaState} state.`)\n  }\n\n  log.info(`Handling state change as remote ${remoteOp} in ${mediaState} scenario.`)\n\n  /*\n   * If the remote operation was an unhold and we're in a dual hold scenario,\n   *    then make sure the remote SDP can't restart media. Do this by ensuring\n   *    that all media directions in the remote SDP are inactive.\n   *\n   * This won't affect the remote end, but it prevents the local side from\n   *    thinking it is receiving a track when it shouldn't be.\n   *\n   * This can occur during slow start renegotiation, if the server doesn't\n   *    respect the media directions we set (assuming we set them correctly).\n   */\n  if (remoteOp === OPERATIONS.UNHOLD && targetCall.localHold === true) {\n    const undesired = ['sendrecv', 'sendonly', 'recvonly']\n    // If any undesirable direction is found in the SDP, replace it with inactive.\n    if (undesired.some(dir => sdp.includes(dir))) {\n      log.debug('Modifying remote SDP to prevent media in local hold scenario.')\n      sdp = sdp.replace(/sendrecv|sendonly|recvonly/gi, 'inactive')\n    }\n  }\n\n  // Handle the remote answer SDP.\n  const sessionInfo = { sessionId: targetCall.webrtcSessionId, answerSdp: sdp }\n  const error = yield call(receivedAnswer, deps, sessionInfo, targetCall)\n\n  if (error) {\n    log.debug('Failed to receive answer SDP', error)\n    // TODO: Dispatch an error action to notify of the error scenario.\n    // The call may now be in a bad state and needs to be fixed.\n    return\n  }\n\n  if (targetCall.state === CALL_STATES.CONNECTED || targetCall.state === CALL_STATES.ON_HOLD) {\n    const callAction = yield call(getCallAction, remoteOp)\n    const nextState = mediaFlowing ? CALL_STATES.CONNECTED : CALL_STATES.ON_HOLD\n\n    log.info(`Finished processing remote slow-start response. Changing to ${nextState}.`)\n\n    const action = callAction(targetCall.id, {\n      state: nextState,\n      // Remote participant's information.\n      remoteParticipant: {\n        displayNumber: params.remoteNumber,\n        displayName: params.remoteName\n      }\n    })\n\n    if (action.type === actionTypes.UPDATE_CALL) {\n      /*\n       * This is a hack. The proper solution would be to never use a generic action for state changes.\n       * This action doesn't work with the SDK's \"operation tracking\" logic in the call reducers, so\n       *     the call state becomes out-of-sync with the operations.\n       *  In this scenario, the operation start was a remote slow-start negotiation, but the SDK fails\n       *      to determine what the actual operation was, so it falls-back to using the generic action\n       *      for the \"finish\". This means that the remoteOp in state never gets cleaned-up, which can\n       *      cause issues later.\n       *  The workaround is to mark the action as a remote update action, so that the reducer can\n       *      manually clean-up the remote operation in this scenario.\n       * Reference: KJS-542\n       */\n      action.meta = {\n        isRemote: true\n      }\n    }\n\n    yield put(action)\n  } else {\n    // Scenario: The call is in an unexpected state for receiving a remote\n    //    answer SDP. This should never happen.\n    log.error('The call is in a bad state for receiving response. Cannot update.')\n  }\n}\n\n/**\n * Helper function that returns a call action function based on the\n * remote operation being requested\n * TODO: Move this somewhere better.\n * TODO: Do this differently / better.\n * @method getCallAction\n * @param (string) remoteOp Remote operation being requested\n * @returns {function} A redux action creator\n */\nexport function * getCallAction (remoteOp) {\n  // Determine what redux action the operation represents.\n  switch (remoteOp) {\n    case OPERATIONS.HOLD:\n      return callActions.remoteHoldFinish\n    case OPERATIONS.UNHOLD:\n      return callActions.remoteUnholdFinish\n    case OPERATIONS.ADD_MEDIA:\n      return callActions.remoteAddMediaFinish\n    case OPERATIONS.REMOVE_MEDIA:\n      return callActions.remoteRemoveMediaFinish\n    case OPERATIONS.START_MOH:\n      return callActions.remoteStartMohFinish\n    case OPERATIONS.STOP_MOH:\n      return callActions.remoteStopMohFinish\n    case OPERATIONS.SLOW_START:\n      return callActions.remoteSlowStart\n  }\n\n  log.debug(`Call action for ${remoteOp} not known; using generic action.`)\n  return callActions.updateCall\n}\n","import { MEDIA_TRANSITIONS } from './compareMedia'\n\n// Constants.\nimport { OPERATIONS } from '../../call/interfaceNew/constants'\n\n/**\n * Based on a MediaDiff object, determine what the call operation was that\n *    caused the SDP/media change.\n * @method getOperation\n * @param  {MediaDiff} mediaDiff\n * @return {string}\n */\nexport default function getOperation (mediaDiff) {\n  // Naively just check one operation after the other.\n  // TODO: Make this more efficient?\n  // TODO: These MoH checks should take into account current call state.\n  //    Start/Stop MoH should only be possible in specific states.\n  if (wasHold(mediaDiff) || was3xHold(mediaDiff)) {\n    return OPERATIONS.HOLD\n  } else if (wasUnhold(mediaDiff) || was3xUnhold(mediaDiff)) {\n    return OPERATIONS.UNHOLD\n  } else if (wasStartMoh(mediaDiff)) {\n    // Check 'start MoH' before 'add media' because 'start MoH' is a special\n    //    case of 'add media'.\n    return OPERATIONS.START_MOH\n  } else if (wasAddMedia(mediaDiff)) {\n    return OPERATIONS.ADD_MEDIA\n  } else if (wasStopMoh(mediaDiff)) {\n    // Check 'stop MoH' before 'remove media' because 'stop MoH' is a special\n    //    case of 'remove media'.\n    return OPERATIONS.STOP_MOH\n  } else if (wasRemoveMedia(mediaDiff)) {\n    return OPERATIONS.REMOVE_MEDIA\n  } else if (wasNoChange(mediaDiff)) {\n    return 'NO_CHANGE'\n  } else {\n    return 'UNKNOWN'\n  }\n}\n\n/**\n * A \"hold\" operation is when all media lines change to be \"inactive\".\n * Some media may have already been inactive. \"Hold\" is specifically when\n *    all active media becomes inactive, hence there is no longer any media\n *    flowing.\n *\n * This differs from a \"stop MoH\" operation by requiring at least one media to\n *    be \"flowing\" (both sending and receiving) before the operation. For\n *    \"stop MoH\", the media would only be sending (and not receiving) before.\n *\n * In terms of SDP changes, it is defined as:\n *    1) At least one media was 'flowing' before the SDP change.\n *    2) No media is 'flowing' after the SDP change.\n *    3) No active media was added.\n *    4) No media was removed.\n *    5) All media that changed was stopped.\n *        ie. is being \"held\".\n *    6) All media that is unchanged is not sending/receiving.\n *        ie. was already \"held\".\n * @method wasHold\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasHold (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * 1 & 2) Some media was flowing before the change, and no media is flowing\n   *    after the change. This ensures \"hold\" is distinct from \"stop MoH\"\n   *    scenarios.\n   */\n  const stoppedFlowing = hadMediaFlowing(mediaDiff) && !hasMediaFlowing(mediaDiff)\n\n  /*\n   * 3) No active media was added.\n   * For any added media we need to check if it's inactive to determine if this was a hold\n   */\n  const noActiveMediaAdded = !added.some(media => media.willSend || media.willReceive)\n\n  /*\n   * 4) No media was removed\n   */\n  const noMediaRemoved = removed.length === 0\n\n  /*\n   * 5a) Some media did change.\n   */\n  const didChange = changed.length > 0\n\n  /*\n   * 5b) For all media that changed,\n   *    all changes were either `stop` or `remain stopped`.\n   */\n  const allStopped = changed.every(({ media, changes }) => {\n    // This media is not sending.\n    const notSending =\n      changes.sending === MEDIA_TRANSITIONS.STOP || (changes.sending === MEDIA_TRANSITIONS.SAME && !media.willSend)\n    // This media is not receiving.\n    const notReceiving =\n      changes.receiving === MEDIA_TRANSITIONS.STOP ||\n      (changes.receiving === MEDIA_TRANSITIONS.SAME && !media.willReceive)\n\n    return notSending && notReceiving\n  })\n\n  /*\n   * 6) For all media that was not changed,\n   *    no media is being sent/received.\n   */\n  const stillStopped = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return stoppedFlowing && noActiveMediaAdded && noMediaRemoved && didChange && allStopped && stillStopped\n}\n\n/**\n * An \"unhold\" operation is when all media lines were previously inactive and\n *    some change to be active.\n * Not all media needs to change to be active, only some.\n *\n * This differs from a \"start MoH\" operation by requiring some media to be\n *    \"flowing\" (both sending and receiving) after the operation. For\n *    \"start MoH\", the media would only be sending (and not receiving) after.\n *\n * In terms of SDP changes, it is defined as:\n *    1) No media was flowing beforehand.\n *    2) At least one media is flowing afterwards.\n *    3) No media was added.\n *    4) No media was removed.\n *    5) All media that changed was started.\n *        ie. is being \"unheld\"\n *    6) All media that is unchanged is not sending/receiving.\n *        ie. was (and still is) \"held\"\n * @method wasUnhold\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasUnhold (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * 1 & 2) No media was flowing before the change, and some media is flowing\n   *    after the change. This ensures \"unhold\" is distinct from \"start MoH\"\n   *    scenarios.\n   */\n  const startedFlowing = !hadMediaFlowing(mediaDiff) && hasMediaFlowing(mediaDiff)\n\n  /*\n   * 3 & 4) No media was added or removed.\n   */\n  const sameMedia = added.length === 0 && removed.length === 0\n\n  /*\n   * 6) For all media that was not changed,\n   *    no media is being sent/received.\n   */\n  const noUnchangedSend = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  /*\n   * 5a) Some media did change.\n   */\n  const didChange = changed.length > 0\n\n  /*\n   * 5b) For all media that was changed,\n   *    all changes were either `start` or `remain stopped`.\n   */\n  const onlyStartChanges = changed.every(({ media, changes }) => {\n    const onlyStartSending =\n      changes.sending === MEDIA_TRANSITIONS.START || (changes.sending === MEDIA_TRANSITIONS.SAME && !media.willSend)\n\n    const onlyStartReceiving =\n      changes.receiving === MEDIA_TRANSITIONS.START ||\n      (changes.receiving === MEDIA_TRANSITIONS.SAME && !media.willReceive)\n\n    return onlyStartSending && onlyStartReceiving\n  })\n\n  return startedFlowing && sameMedia && noUnchangedSend && didChange && onlyStartChanges\n}\n\n/**\n * A \"3.X hold\" operation is when a hold operation changes media to `sendonly`\n *    instead of `inactive`. This is what the 3.X SDK and Mobile SDK does. This\n *    is for interop with remote endpoints other than the 4.X SDK.\n *\n * In terms of SDP changes, it is defined as:\n *    1) At least one media was 'flowing' before the SDP change.\n *    2) All changed audio media is now 'sendonly'.\n *        ie. is being \"v3.X held\"\n *       All changed video media is not receiving.\n *    3) No active media was added.\n *    4) No media was removed.\n *    5) All media that is unchanged is not sending/receiving.\n *        ie. was already \"held\".\n *\n * @method was3xUnhold\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function was3xHold (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * 1) Handles when some media was flowing before the change.\n   *  or a special case where media was flowing but assumes media wasn't flowing.\n   * 2) All changed media is now \"sendonly\".\n   *    All changed video media is not receiving.\n   */\n  const wasFlowing = hadMediaFlowing(mediaDiff)\n  const allSendOnly = changed.every(({ media, changes }) => {\n    /**\n     * Possible scenarios:\n     *\n     *  1. Audio-only 3.X Hold:\n     *    - A sendrecv --> A sendonly\n     *\n     *  2. Two way Audio-Video (eg. KAA-2639):\n     *    - A/V sendrecv/sendrecv --> A/V sendonly/inactive\n     *  3. Two way Audio-Video (eg. KAA-2463):\n     *    - A/V sendrecv/sendrecv --> A/V sendonly/sendonly\n     *\n     *  4. Two way Audio, One way receive Video:\n     *    - A/V sendrecv/recvonly --> A/V sendonly/inactive\n     *  5. Two way Audio, One way receive Video:\n     *    - A/V sendrecv/recvonly --> A/V sendonly/sendonly\n     *\n     *  6. Two way Audio, One way send Video:\n     *    - A/V sendrecv/sendonly --> A/V sendonly/inactive\n     *  7. Two way Audio, One way send Video:\n     *    - A/V sendrecv/sendonly --> A/V sendonly/sendonly (video checked by 5) below)\n     *\n     * The summary of these scenarios are:\n     *  - Audio always stops receiving.\n     *  - Audio always continues sending.\n     *  - Video is never receiving afterwards (stop, same).\n     *  - Video sending can be anything (same, start, stop).\n     */\n    if (media.type === 'audio') {\n      // Changed audio always stops being received by the remote endpoint.\n      // Changed audio always continues being sent by the remote endpoint.\n      return changes.receiving === MEDIA_TRANSITIONS.STOP && changes.sending === MEDIA_TRANSITIONS.SAME\n    } else {\n      return (\n        // Changed video is never received afterwards.\n        //     Either stopped or stayed \"not receiving\".\n        changes.receiving === MEDIA_TRANSITIONS.STOP ||\n        (changes.receiving === MEDIA_TRANSITIONS.SAME && media.willReceive === false)\n      )\n    }\n  })\n\n  /*\n   * 3) No active media was added.\n   * For any added media we need to check if it's inactive to determine if this was a hold\n   */\n  const noActiveMediaAdded = !added.some(media => media.willSend || media.willReceive)\n\n  /*\n   * 4) No media was removed\n   */\n  const noMediaRemoved = removed.length === 0\n\n  /*\n   * 5) For all media that was not changed,\n   *      no media is being sent/received,\n   *      or video might still be sendonly.\n   */\n  const noUnchangedSend = unchanged.every(media => {\n    return (\n      (!media.willSend && !media.willReceive) ||\n      // Edge-case: One-way video was being received, and the hold did not\n      //    change the direction but just stopped the video being sent.\n      (media.type === 'video' && media.willSend && !media.willReceive)\n    )\n  })\n\n  return wasFlowing && allSendOnly && noActiveMediaAdded && noMediaRemoved && noUnchangedSend\n}\n\n/**\n * A \"3.X unhold\" operation is when a v3.X SDK performs unhold. This is for\n *    interop.\n *\n * This operation is the same as a \"regular\" unhold, except that media changes\n *    from sendonly instead of inactive.\n *\n * In terms of SDP changes, it is defined as:\n *    1) Some media is flowing afterwards.\n *    2) All media that changed was started receiving.\n *        ie. is being \"3.X unheld\"\n *    3) No media was added.\n *    4) No media was removed.\n *    5) All media that is unchanged is not sending/receiving.\n *        ie. was (and still is) \"held\"\n *\n * @method was3xUnhold\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function was3xUnhold (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * 1) Some media was flowing before the change.\n   * 2) All changed media is now went from \"sendonly\" to \"sendrecv\".\n   */\n  const isFlowing = hasMediaFlowing(mediaDiff)\n  const allSending = changed.every(({ media, changes }) => {\n    return (\n      (changes.sending === MEDIA_TRANSITIONS.SAME && changes.receiving === MEDIA_TRANSITIONS.START) ||\n      /*\n       * Special-case: If the media is video, it's possible to go from \"inactive\" to \"sendrecv\".\n       *    This can happen when the SDK is receiving MoH then is unheld immediately (without\n       *    going through a stop MoH operation).\n       * This behaviour was seen when the remote endpoint was a SIP device. See KAA-2593.\n       */\n      (media.type === 'video' &&\n        changes.sending === MEDIA_TRANSITIONS.START &&\n        changes.receiving === MEDIA_TRANSITIONS.START)\n    )\n  })\n\n  /*\n   * 3) & 4) No media was added or removed.\n   */\n  const sameMedia = added.length === 0 && removed.length === 0\n\n  /*\n   * 5) For all media that was not changed,\n   *    no media is being sent/received.\n   */\n  const noUnchangedSend = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return isFlowing && allSending && sameMedia && noUnchangedSend\n}\n\n/**\n * An \"add media\" operation is when the latest SDP is sending tracks that the\n *    previous SDP was not sending. This can either be a new, sending media\n *    section or an existing media section that was changed to now send.\n *\n * The \"start MoH\" scenario is a special-case of \"add media\". When one audio\n *    track is added/started, with no media flowing beforehand, then that could\n *    either be a \"start MoH\" or \"add media\" operation. From a webrtc/SDP\n *    viewpoint, they are the same thing in that scenario, so there is no way\n *    to tell them apart using only a MediaDiff object.\n * If both ends of the Call are SDK clients, then \"start MoH\" can only be done\n *    when the Call is on hold (by definition), and \"add media\" can only be\n *    done when the Call is not on hold (requirement set by the API), but we\n *    can't make that assumption.\n *\n * In terms of SDP changes, it is defined as:\n *    1) No media [sections] was removed.\n *    2) Any media added is sending.\n *    3) Any media that changed started sending.\n * @method wasAddMedia\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasAddMedia (mediaDiff) {\n  const { added, removed, changed } = mediaDiff\n\n  /*\n   * 1) No media sections were removed.\n   */\n  const wasntRemoved = removed.length === 0\n\n  /*\n   * 2a & 3a) Something was added or changed.\n   */\n  const somethingStarted = added.length > 0 || changed.length > 0\n\n  /*\n   * 2b) Any media sections added are sending.\n   */\n  const addedSending = added.every(media => media.willSend)\n\n  /*\n   * 3b) Any media that changed was to start sending.\n   */\n  const changedSending = changed.every(({ media, changes }) => {\n    return changes.sending === MEDIA_TRANSITIONS.START && changes.receiving === MEDIA_TRANSITIONS.SAME\n  })\n\n  /*\n   * Unchanged media is not checked for.\n   *    By definition, it is the same as before, and could be in any state.\n   */\n\n  return wasntRemoved && somethingStarted && addedSending && changedSending\n}\n\n/**\n * A \"remove media\" operation is when some media sections stop sending (with no\n *    other changes).\n *\n * The \"stop MoH\" scenario is a special-case of \"remove media\". When one audio\n *    track is removed, leaving no media flowing afterwards, then that could\n *    either be a \"stop MoH\" or \"remove media\" operation. From a webrtc/SDP\n *    viewpoint, they are the same thing in that scenario, so there is no way\n *    to tell them apart using only a MediaDiff object.\n * If both ends of the Call are SDK clients, then \"stop MoH\" can only be done\n *    when the Call is on hold (by definition), and \"remove media\" can only be\n *    done when the Call is not on hold (requirement set by the API), but we\n *    can't make that assumption.\n *\n * In terms of SDP changes, it is defined as:\n *    1) No media was added.\n *    2) No media [sections] were removed.\n *    3) Some existing media stopped sending (ie. tracks were removed).\n * @method wasRemoveMedia\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasRemoveMedia (mediaDiff) {\n  const { added, removed, changed } = mediaDiff\n\n  /*\n   * 1 & 2) No media sections were added or removed.\n   */\n  const wasntAdded = added.length === 0\n  const wasntRemoved = removed.length === 0\n\n  /*\n   * 3a) Some media sections changed.\n   */\n  const wasChanged = changed.length > 0\n\n  /*\n   * 3b) For all media sections that changed,\n   *      the only change was to stop sending.\n   */\n  const onlyStopSending = changed.every(({ media, changes }) => {\n    return (\n      changes.sending === MEDIA_TRANSITIONS.STOP &&\n      // Receiving may be SAME or START, depending if the previous media\n      //    direction was sendrecv (SAME) or sendonly (START).\n      // TODO: Update `ChangedMedia` to include the pre-change media summary?\n      changes.receiving !== MEDIA_TRANSITIONS.STOP\n    )\n  })\n\n  /*\n   * Unchanged media is not checked for.\n   *    By definition, it is the same as before, and could in any state.\n   */\n\n  return wasntAdded && wasntRemoved && wasChanged && onlyStopSending\n}\n\n/**\n * A \"start Music on Hold\" operation is when media is currently held, and one\n *    audio media is changed to \"send only\".\n *\n * This checker does not guarantee that it was a \"start MoH\" scenario, and not\n *    a very specific \"add media\" scenario. It is an edge-case, but it is\n *    possible that both sides of the Call removed all media, then one side\n *    adds a single audio track. There is no way to tell the difference with\n *    only a MediaDiff object.\n *\n * In terms of SDP changes, it is defined as:\n *    0) A \"add media\" scenario where:\n *    1) One inactive audio section starts sending.\n *    2) All other media remains unchanged.\n *    3) Any unchanged media is inactive.\n * @method wasStartMoh\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasStartMoh (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  // 0) \"Start MoH\" is a \"add media\" scenario that has extra requirements.\n  if (!wasAddMedia(mediaDiff)) {\n    return false\n  }\n\n  /*\n   * 1) Only one audio line should be changed, to send only.\n   */\n  const onlyAudioChange =\n    // Only one audio line changed.\n    changed.length === 1 &&\n    changed[0].media.type === 'audio' &&\n    // The change was to start sending media.\n    changed[0].changes.sending === MEDIA_TRANSITIONS.START &&\n    // Receiving media remains unchanged; not receiving.\n    changed[0].changes.receiving === MEDIA_TRANSITIONS.SAME &&\n    !changed[0].media.willReceive\n\n  /*\n   * 2) No media was added or removed.\n   */\n  const sameMedia = added.length === 0 && removed.length === 0\n\n  /*\n   * 3) For all media that is unchanged,\n   *    they are not sending/receiving.\n   */\n  const inactiveUnchanged = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return sameMedia && inactiveUnchanged && onlyAudioChange\n}\n\n/**\n * A \"stop Music on Hold\" operation is when media starts in a MoH state, then\n *    reverts back to an \"on hold\" state.\n *\n * This checker does not guarantee that it was a \"stop MoH\" scenario, and not\n *    a very specific \"remove media\" scenario. It is possible that a Call is\n *    established with one-way audio (and no video), then the audio is removed.\n *    There is no way to tell the difference with only a MediaDiff object.\n *\n * In terms of SDP changes, it is defined as:\n *    0) A \"remove media\" scenario where:\n *    1) One audio section changed stopped sending.\n *    2) All other media remains unchanged.\n *    3) Any unchanged media is inactive.\n * @method wasStopMoh\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasStopMoh (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  // 0) \"Stop MoH\" is a \"remove media\" scenario that has extra requirements.\n  if (!wasRemoveMedia(mediaDiff)) {\n    return false\n  }\n\n  /*\n   * 1) Only one audio line should be changed, from send only to inactive.\n   */\n  const stopSendAudio =\n    // Only one audio line changed.\n    changed.length === 1 &&\n    changed[0].media.type === 'audio' &&\n    // The change was to stop sending media.\n    changed[0].changes.sending === MEDIA_TRANSITIONS.STOP &&\n    // Receiving media remains unchanged; not receiving.\n    changed[0].changes.receiving === MEDIA_TRANSITIONS.SAME &&\n    !changed[0].media.willReceive\n\n  /*\n   * 2) No media was added or removed.\n   */\n  const sameMedia = added.length === 0 && removed.length === 0\n\n  /*\n   * 3) For all media that is unchanged,\n   *    they are not sending/receiving.\n   */\n  const inactiveUnchanged = unchanged.every(media => {\n    return !media.willSend && !media.willReceive\n  })\n\n  return sameMedia && inactiveUnchanged && stopSendAudio\n}\n\n/**\n * A \"no change\" media operation is when all media sections remain the same.\n *    The remote operation was something other than changing media.\n *\n * In terms of SDP comparison, it is defined as:\n *    1) No media sections were added, removed, or changed.\n *    2) Some media remained unchanged.\n * @method wasNoChange\n * @param  {MediaDiff} mediaDiff Media differences described between two SDPs.\n * @return {boolean}\n */\nexport function wasNoChange (mediaDiff) {\n  const { added, removed, changed, unchanged } = mediaDiff\n\n  /*\n   * No media did anything other than `unchanged`.\n   */\n  const noChange = added.length === 0 && removed.length === 0 && changed.length === 0\n\n  /*\n   * ...but there is media in the SDP.\n   */\n  const hasUnchanged = unchanged.length > 0\n\n  return noChange && hasUnchanged\n}\n\n/**\n * Determines whether a MediaDiff object describes the SDP as having had media\n *    flowing (a media both sending and receiving; flowing in both directions)\n *    _before_ the SDP changes.\n * @method hadMediaFlowing\n * @param  {MediaDiff} mediaDiff\n * @return {boolean}   Whether the MediaDiff has media flowing before the change.\n */\nexport function hadMediaFlowing (mediaDiff) {\n  const { removed, changed, unchanged } = mediaDiff\n\n  /*\n   * If any unchanged media is sending and receiving, then media was (and still\n   *    is) flowing before the SDP change.\n   */\n  const unchangedFlowing = unchanged.some(media => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * If any changed media was sending and receiving, then media was flowing\n   *    before the SDP change.\n   */\n  const changedFlowing = changed.some(({ media, changes }) => {\n    /*\n     * A changed media was sending before the change if\n     *    1) the change was to stop sending, or\n     *    2) sending didn't change, and is still sending.\n     */\n    const wasSending =\n      changes.sending === MEDIA_TRANSITIONS.STOP || (changes.sending === MEDIA_TRANSITIONS.SAME && media.willSend)\n\n    /*\n     * A changed media was receiving before the change if\n     *    1) the change was to stop receiving, or\n     *    2) receiving didn't change, and is still receiving.\n     */\n    const wasReceiving =\n      changes.receiving === MEDIA_TRANSITIONS.STOP ||\n      (changes.receiving === MEDIA_TRANSITIONS.SAME && media.willReceive)\n\n    return wasSending && wasReceiving\n  })\n\n  /*\n   * If any removed media was sending and receiving, then media was flowing\n   *    before the SDP change.\n   */\n  const removedFlowing = removed.some(media => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * Ignore `added` media, since that tells us nothing about media before the\n   *    SDP change.\n   */\n\n  return unchangedFlowing || changedFlowing || removedFlowing\n}\n\n/**\n * Determines whether a MediaDiff object describes the SDP as having media\n *    flowing (a media both sending and receiving; flowing in both directions)\n *    _after_ the SDP changes.\n * @method hasMediaFlowing\n * @param  {MediaDiff} mediaDiff\n * @return {boolean}   Whether the MediaDiff has media flowing after the change.\n */\nexport function hasMediaFlowing (mediaDiff) {\n  const { added, changed, unchanged } = mediaDiff\n\n  /*\n   * If any unchanged media is sending and receiving, then media is (and was)\n   *    flowing after the SDP change.\n   */\n  const unchangedFlowing = unchanged.some(media => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * If any changed media is sending and receiving, then media is flowing\n   *    after the SDP change.\n   */\n  const changedFlowing = changed.some(({ media, changes }) => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * If any added media is sending and receiving, then media is flowing\n   *    after the SDP change.\n   */\n  const addedFlowing = added.some(media => {\n    return media.willSend && media.willReceive\n  })\n\n  /*\n   * Ignore `removed` media, since that tells us nothing about media after the\n   *    SDP change.\n   */\n\n  return unchangedFlowing || changedFlowing || addedFlowing\n}\n","// Libraries\nimport sdpTransform from 'sdp-transform'\n\n/**\n * Set all media to inactive in a given sdp string\n * @method setMediaInactive\n * @param  {string}  sdp An sdp string\n * @return {string}  Modified sdp string with media direction set to inactive\n */\nexport function setMediaInactive (sdp) {\n  const regex = /sendrecv|sendonly|recvonly/gi\n  if (!sdp || typeof sdp !== 'string') {\n    return\n  }\n\n  return sdp.replace(regex, 'inactive')\n}\n\n/**\n * Helper function that returns a boolean if media is active or not.\n * @method hasMediaFlowing\n * @param  {string} sdp String representation of a calls sdp.\n */\nexport function * hasMediaFlowing (sdp) {\n  const objectSdp = sdpTransform.parse(sdp)\n\n  // Check that video directions (if there are any) indicate a \"hold\" scenario.\n  const isVideoInactive = objectSdp.media\n    .filter(item => item.type === 'video')\n    .every(media => media && media.direction === 'inactive')\n\n  // Check that audio directions (if there are any) indicate a \"hold\" scenario.\n  const isAudioInactive = objectSdp.media\n    .filter(item => item.type === 'audio')\n    // Special case: In music on hold scenarios, audio may be `sendonly`\n    //    so that the held user can still receive the \"hold music\".\n    .every(media => media && ['inactive', 'sendonly'].includes(media.direction))\n\n  return !isVideoInactive || !isAudioInactive\n}\n\n/**\n * Helper function that returns a boolean if media sendonly (music on hold).\n * @method hasMusicOnHold\n * @param  {string} sdp String representation of a calls sdp.\n */\nexport function * hasMusicOnHold (sdp) {\n  const objectSdp = sdpTransform.parse(sdp)\n  const isMusicOnHold = objectSdp.media\n    .filter(item => item.type === 'audio')\n    .some(media => media && media.direction === 'sendonly')\n\n  // Check that video directions (if there are any) indicate a \"hold\" scenario.\n  const isVideoInactive = objectSdp.media\n    .filter(item => item.type === 'video')\n    .every(media => media && media.direction === 'inactive')\n\n  return isMusicOnHold && isVideoInactive\n}\n","// Helpers.\nimport { CALL_STATES, CALL_MEDIA_STATES } from '../constants'\n\n/**\n * Retrieves the current state of media flow based on a call's state.\n * @method getMediaState\n * @param  {Object} callState A call's state.\n * @return {string} A CALL_MEDIA_STATES enum value.\n */\nexport function getMediaState (callState) {\n  if (hasMedia(callState)) {\n    return CALL_MEDIA_STATES.CONNECTED\n  } else if (isLocalHold(callState)) {\n    return CALL_MEDIA_STATES.LOCAL_HOLD\n  } else if (isRemoteHold(callState)) {\n    return CALL_MEDIA_STATES.REMOTE_HOLD\n  } else if (isDualHold(callState)) {\n    return CALL_MEDIA_STATES.DUAL_HOLD\n  }\n}\n\n/**\n * Checks whether the call state indicates that the call has media.\n * @method hasMedia\n * @param  {Object}  callState Redux call state.\n * @return {boolean}\n */\nexport function hasMedia (callState) {\n  return callState.state === CALL_STATES.CONNECTED && !callState.localHold && !callState.remoteHold\n}\n\n/**\n * Checks whether the call state indicates that the call is locally held (only).\n * @method isLocalHold\n * @param  {Object}  callState Redux call state.\n * @return {boolean}\n */\nexport function isLocalHold (callState) {\n  return callState.state === CALL_STATES.ON_HOLD && callState.localHold && !callState.remoteHold\n}\n\n/**\n * Checks whether the call state indicates that the call is remotely held (only).\n * @method isRemoteHold\n * @param  {Object}  callState Redux call state.\n * @return {boolean}\n */\nexport function isRemoteHold (callState) {\n  return callState.state === CALL_STATES.ON_HOLD && !callState.localHold && callState.remoteHold\n}\n\n/**\n * Checks whether the call state indicates that the call is both locally and\n *    remote held.\n * @method isDualHold\n * @param  {Object}  callState Redux call state.\n * @return {boolean}\n */\nexport function isDualHold (callState) {\n  return callState.state === CALL_STATES.ON_HOLD && callState.localHold && callState.remoteHold\n}\n","// Other Plugins\nimport { logManager } from '../../logs'\nimport BasicError, { callCodes } from '../../errors'\nimport { getOptions } from '../../call/interfaceNew/selectors'\n\n// Helpers.\nimport { changeDtlsRoleTo } from '../utils'\nimport { hasSameSessionId } from '../utils/sdp'\nimport runPipeline from '../sdp/pipeline'\n\n// Libraries.\nimport { call, select } from 'redux-saga/effects'\n\n/**\n * Compares whether a new remote SDP for a Session has the same SDP session ID\n *    of the previous remote SDP.\n * @method isSameSdpSessionId\n * @param  {Object}  webRTC    The webRTC stack.\n * @param  {string}  sessionId ID of the Session under question.\n * @param  {string}  sdp       New remote SDP to compare the current one with.\n * @return {boolean}\n */\nexport function * isSameSdpSessionId (webRTC, sessionId, sdp) {\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n  const currentDesc = yield call([session, 'getRemoteDescription'])\n\n  // TODO: How to act when there isn't a remote SDP set?\n  // Currently: Return falsy to cause a recreate. If there isn't a remote SDP\n  //    set, it's possible we're in an error scenario.\n  if (currentDesc && currentDesc.sdp) {\n    const sameId = yield call(hasSameSessionId, currentDesc.sdp, sdp)\n    return sameId\n  }\n}\n\n/**\n * An answer SDP has been received and should be applied to the Session.\n *\n * This saga is intended to handle all webRTC scenarios where a remote answer\n *    SDP has been received and needs to be added to the Session. At this point\n *    in negotiation, a Session should have been created and a local offer SDP\n *    set. This can be for initial negotiation or for midcall renegotiation, so\n *    the Session may or may not have a \"current remote SDP\" already.\n * This saga will complete the negotiation process, as both ends will have both\n *    an offer and answer SDP set.\n * Responsibilities:\n *    1. Ensure this is a valid operation.\n *        - Session exists, Session is in correct signaling state.\n *    2. Check the answer SDP for abnormal scenarios.\n *        - DTLS role issue.\n *    3. Process the answer SDP via Session's APIs.\n * @method receivedAnswer\n * @param {Object} webRTC An instance of webRTC\n * @param {Object} sessionInfo Session related information for the operation.\n * @param {string} sessionInfo.sessionId ID for the local webRTC Session.\n * @param {string} sessionInfo.answerSdp The received answer SDP.\n * @param {Object} targetCall Information about the call that this Session is associated with.\n * @returns {Object} Error object if any have occurred. Undefined otherwise.\n */\nexport function * receivedAnswer (deps, sessionInfo, targetCall) {\n  const { webRTC } = deps\n  const log = logManager.getLogger('CALL', targetCall.id)\n  log.debug(`Processing SDP answer for session ${sessionInfo.sessionId}.`)\n\n  const sessionId = sessionInfo.sessionId\n  let answerSdp = sessionInfo.answerSdp\n  const session = yield call([webRTC.sessionManager, 'get'], sessionId)\n\n  if (!session) {\n    log.debug(`webRTC session ${sessionId} not found.`)\n    // TODO: Better error.\n    return\n  }\n  // TODO: Ensure Session is in the correct signaling state for an answer SDP.\n\n  const callConfigOptions = yield select(getOptions)\n  let sdpHandlers = callConfigOptions.sdpHandlers\n  /*\n   * If the answer we received has DTLS role of 'actpass', then this is not a\n   *    normal webRTC scenario. An answer SDP cannot have 'actpass' as the role.\n   * It is assumed that the reason for this is a slow start call.\n   */\n  if (answerSdp.includes('a=setup:actpass')) {\n    /*\n     * Change the DTLS role depending on which side of the call the user is.\n     * Change the caller to passive and the callee to active roles, because\n     *    this is how it would be set for a regular call.\n     */\n    const newRole = targetCall.isCaller ? 'passive' : 'active'\n    log.debug(`Received answer SDP has role of actpass. Changing to ${newRole}.`)\n    sdpHandlers = [...sdpHandlers, changeDtlsRoleTo(newRole)]\n  }\n\n  /*\n   * Provide the answer SDP to the Session for \"processing\".\n   * If successful, the webRTC negotiation process is considered complete.\n   */\n  let error\n  try {\n    /*\n     * Run the remote SDP answer through any SDP handlers provided, then set it\n     *    as the Session's remote description.\n     * This is the \"pre set remote\" stage.\n     */\n    answerSdp = yield call(runPipeline, sdpHandlers, answerSdp, {\n      callId: targetCall.id,\n      type: 'answer',\n      step: 'set',\n      endpoint: 'remote'\n    })\n    yield call([session, 'processAnswer'], {\n      type: 'answer',\n      sdp: answerSdp\n    })\n  } catch (err) {\n    // TODO: Better error handling.\n    log.debug(`Failed to process answer: ${err.message}`)\n    let errorInfo\n    if (err.message.includes('The order of m-lines')) {\n      errorInfo = {\n        code: callCodes.SESSION_MISMATCH,\n        message: 'Failed to receive answer due to media negotiation mismatch.'\n      }\n    } else {\n      errorInfo = {\n        code: callCodes.GENERIC_ERROR,\n        message: `Failed to receive answer: ${err.message}`\n      }\n    }\n    error = new BasicError(errorInfo)\n  }\n\n  // TODO: Handle webRTC errors here.\n\n  return error\n}\n","import { getSdpSessionId } from '../../../../webrtc/src/sdpUtils/extractors'\n\n/**\n * Checks whether two SDPs have the same session ID.\n * @method hasSameSessionId\n * @param  {string}  sdp    A valid SDP string.\n * @param  {string}  newSdp A valid SDP string.\n * @return {boolean} Whether the two SDPs have the same session ID.\n */\nexport function hasSameSessionId (sdp, newSdp) {\n  const firstSdpSessionId = getSdpSessionId(sdp)\n  const secondSdpSessionId = getSdpSessionId(newSdp)\n\n  if (firstSdpSessionId && secondSdpSessionId) {\n    return firstSdpSessionId === secondSdpSessionId\n  }\n}\n","/**\n * dtmf.js contains one call operation:\n *    - sendDtmf: Send DTMF tone(s) over a call.\n *\n * and several \"helper\" functions for it:\n *    - playInBand: Functionality for in-band DTMF.\n *    - playOutBand: Functionality for out-of-band DTMF.\n *      - addTones: Generates DTMF tones and adds them to the audio.\n *    - hasTelephoneEvent: Helper to determine out-of-band DTMF support.\n *    - convertTone, splitTones: Helpers for parsing input.\n */\n\n// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport { getCallById } from '../../call/interfaceNew/selectors'\nimport { CALL_STATES } from '../../call/constants'\n\n// Other plugins.\nimport { logManager } from '../../logs'\nimport BasicError, { callCodes } from '../../errors'\n\n// Libraries.\nimport { call, delay, put, select } from 'redux-saga/effects'\nimport sdpTransform from 'sdp-transform'\n\nconst log = logManager.getLogger('CALL')\n\n/**\n * Entry saga for sending DTMF tones on a call.\n *\n * Determines if the DTMF tones need to be out-of-band (preferred) or in-band.\n *    Refers to helper functions to send the tones.\n *\n * Assumptions:\n *    1. None; everything is checked.\n * Responsibilities:\n *    1. Validate the operation is currently possible.\n *    2. Determine if out-of-band tones are possible for the call.\n *    3. Send the tones, depending on method available.\n * @method sendDtmf\n * @param {Object} deps        Dependencies that the saga uses.\n * @param {Object} deps.webRTC The WebRTC stack.\n * @param {Object} action      A \"send dtmf\" action.\n */\nexport function * sendDtmf (deps, action) {\n  const { webRTC } = deps\n\n  // Get the call.\n  const targetCall = yield select(getCallById, action.payload.id)\n\n  let error\n  /**\n   * Operation requirements:\n   *    1. The call exists.\n   *    2. The call is either Connected, Ringing, or Early Media.\n   *    3. A valid tone was provided.\n   */\n  if (!targetCall) {\n    log.info(`Failed to send DTMF tones on unknown call ${action.payload.id}`)\n    error = new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'Call state not found; invalid call ID.'\n    })\n  } else if (![CALL_STATES.CONNECTED, CALL_STATES.RINGING, CALL_STATES.EARLY_MEDIA].includes(targetCall.state)) {\n    log.info(`Failed to send DTMF tones on call ${targetCall.id}: Bad call state.`)\n    error = new BasicError({\n      code: callCodes.INVALID_STATE,\n      message: `Call is in an invalid state (${targetCall.state}).`\n    })\n  } else if (!action.payload.tone) {\n    log.info(`Failed to send DTMF tones on call ${targetCall.id}: Invalid tone.`)\n    error = new BasicError({\n      code: callCodes.INVALID_PARAM,\n      message: 'No DTMF tone specified.'\n    })\n  }\n\n  if (error) {\n    // Stop the operation if it cannot be performed right now.\n    yield put(callActions.sendDTMFFinish(action.payload.id, { error }))\n    return\n  }\n\n  // Get the webrtc Session for the call.\n  const session = yield call([webRTC.sessionManager, 'get'], targetCall.webrtcSessionId)\n  // Get the remote description for the Session.\n  const remoteDesc = yield call([session, 'getRemoteDescription'])\n\n  // TODO: Is this the correct SDP to use?\n  const canSendOutBand = yield call(hasTelephoneEvent, remoteDesc.sdp)\n\n  let result\n  if (canSendOutBand) {\n    log.debug(`Sending DTMF tones out-of-band for call ${targetCall.id}.`)\n    result = yield call(playOutBand, session, action.payload)\n  } else {\n    log.debug(`Sending DTMF tones in-band for call ${targetCall.id}.`)\n    result = yield call(playInBand, session, action.payload)\n  }\n\n  if (result) {\n    log.info(`Successfully sent DTMF tones for call ${targetCall.id}.`)\n    yield put(callActions.sendDTMFFinish(action.payload.id))\n  } else {\n    log.debug(`Failed to send DTMF tones for call ${targetCall.id}.`)\n    yield put(\n      callActions.sendDTMFFinish(action.payload.id, {\n        error: new BasicError({\n          code: callCodes.GENERIC_ERROR,\n          message: `Unable to send DTMF tones for call ${targetCall.id}.`\n        })\n      })\n    )\n  }\n}\n\n/**\n * Sends DTMF tones out-of-band over a Session.\n * This saga defines how out-of-band tones are sent over a call.\n *\n * The Callstack implementation uses the WebRTC stack's implementation for this.\n *    There is no signaling involved.\n *\n * @method playOutBand\n * @param  {Session} session A Webrtc Session object.\n * @param  {Object}  options\n * @param  {string}  options.tone           The tone sequence.\n * @param  {number}  [options.duration]     The length of each DTMF tone.\n * @param  {number}  [options.intertoneGap] The gap between each DTMF tone.\n * @return {boolean} Whether the operation was successful or not.\n */\nexport function * playOutBand (session, options) {\n  const result = yield call([session, 'sendDTMF'], options)\n  return result\n}\n\n/**\n * Sends DTMF tones in-band over a Session.\n * This saga defines how in-band tones are sent over a call.\n *\n * DTMF tones are added to the audio track by using AudioContext nodes. A\n *    MediaStream is converted into an audio node, which allows us to add more\n *    audio inputs into the node. The original audio and DTMF tones are mixed\n *    into a single node this way, and the track from this node temporarily\n *    replaces the original track in the Session.\n *\n *                       +-------------------------+\n *    Original           | Additional Audio Source |\n *   MediaStream         +---------+---------------+\n *       |                         |\n *       |                         |\n *       v                         v\n * +-----+-------+         +-------+----------+\n * | Source Node +-------->| Destination Node |\n * +-------------+         +-------+----------+\n *                                 |\n *                                 |\n *                                 v\n *                         MediaStream w/ DTMF\n *\n * @method playInBand\n * @param  {Session} session A Webrtc Session object.\n * @param  {Object}  options\n * @param  {string}  options.tone           The tone sequence.\n * @param  {number}  [options.duration=100]     The length of each DTMF tone.\n * @param  {number}  [options.intertoneGap=70]  The gap between each DTMF tone.\n * @return {boolean} Whether the operation was successful or not.\n */\nexport function * playInBand (session, options) {\n  let { tone, duration, intertoneGap: gap } = options\n\n  // Ensure optional options are numbers (not strings). If not numbers, or\n  //    undefined, use default values.\n  duration = Number(duration) > 0 ? Number(duration) : 100\n  gap = Number(gap) > -1 ? Number(gap) : 70\n\n  // Get the (native) track the tones will be inserted into.\n  let track\n  for (const localTrack of session.localTracks) {\n    // Matching the track is done this way because we need to yield to getState,\n    //    but we can't yield inside of a `.find(func)` or similar. So iterate\n    //    over the new tracks \"manually\".\n    const state = yield call([localTrack, 'getState'])\n    if (state.kind === 'audio') {\n      track = localTrack\n      break\n    }\n  }\n\n  const stream = yield call([track, 'getStream'])\n  const context = new AudioContext()\n\n  // Create a source node that has the stream media.\n  const source = context.createMediaStreamSource(stream)\n\n  /**\n   * Create the \"destination node\". All audio sources will be connected to This\n   *    node, and it will be used as the \"final output\".\n   */\n  const dest = context.createMediaStreamDestination()\n  // Connect the source node to it, so that it has the original audio.\n  source.connect(dest)\n\n  // Get the track from the destination node and replace the original track\n  //    on the PeerConnection with it. The remote endpoint will now receive\n  //    any/all audio that is connected to the destination node.\n  const newTrack = dest.stream.getAudioTracks()[0]\n  yield call([session.peer, 'replaceTrack'], newTrack, { trackId: track.id })\n\n  // Add the DTMF tones to the destination node.\n  yield call(addTones, context, dest, tone, { duration, gap })\n\n  // Un-replace track on the PeerConnection. This resets the tracks back to\n  //    \"normal\".\n  yield call([session.peer, 'replaceTrack'], track.track, { trackId: newTrack.id })\n\n  // Clean-up the AudioContext nodes.\n  context.close()\n\n  return true\n}\n\n/**\n * Generates DTMF tones based on input, and connects the audio to the provided\n *    target node.\n * @method addTones\n * @param  {AudioContext} context      The AudioContext being used.\n * @param  {AudioNode} targetNode      The AudioNode to add DTMF tones to.\n * @param  {string} tones              The input tones.\n * @param  {Object} [options]\n * @param  {number} [options.duration] The length of each DTMF tone.\n * @param  {number} [options.gap]      The gap between each DTMF tone.\n */\nfunction * addTones (context, targetNode, tones, options) {\n  /**\n   * Node Diagram:\n   * +--------------+\n   * | Oscillator 1 +--+\n   * +--------------+  |    +--------------+\n   *                   +--->|   Osc Node   |\n   * +--------------+  |    +------+-------+\n   * | Oscillator 2 +--+           |\n   * +--------------+              | Connect generated audio\n   *                               v to the provided node.\n   *                        +------+--------+\n   *                        |  Target Node  |\n   *                        +---------------+\n   */\n\n  /**\n   * Step 1: Setup the audio nodes.\n   */\n  // Create the Oscillator nodes that will generate the frequencies.\n  const oscillators = [context.createOscillator(), context.createOscillator()]\n  oscillators[0].type = 'sine'\n  oscillators[1].type = 'sine'\n\n  /**\n   * Create an intermediary Gain node to control the volume of the oscillator\n   *   frequencies before connecting them to anything else.\n   */\n  const oscNode = context.createGain()\n  oscillators[0].connect(oscNode)\n  oscillators[1].connect(oscNode)\n  oscNode.gain.value = 0.1\n\n  // Connect the combined oscillators to the target node. Any tones created\n  //    by the oscillators will be heard in the target node.\n  oscNode.connect(targetNode)\n\n  // Connect the oscillators to the \"destination\" as well, which works magically.\n  // `context.destination` connects to the \"default destination\" (or something\n  //    like that), which will be the machine's speakers. This will play the\n  //    audio locally.\n  oscNode.connect(context.destination)\n\n  /**\n   * Step 2: Use the oscillators to generate DTMF tones.\n   */\n\n  /**\n   * Schedule a frequency to be played for a period of time.\n   * @method scheduleTone\n   * @param  {number} tone  A frequency.\n   * @param  {number} start When the tone should start.\n   * @param  {number} dur   The duration of the tone, in seconds.\n   */\n  function scheduleTone (tone, start, dur) {\n    oscillators[0].frequency.setValueAtTime(tone[0], start)\n    oscillators[0].frequency.setValueAtTime(0, start + dur)\n\n    oscillators[1].frequency.setValueAtTime(tone[1], start)\n    oscillators[1].frequency.setValueAtTime(0, start + dur)\n  }\n\n  const toneSequence = splitTones(tones).map(convertTone)\n\n  // Convert the time units to seconds.\n  const dur = options.duration / 1000\n  const gap = options.gap / 1000\n\n  let toneStart = context.currentTime\n  for (let i = 0; i < toneSequence.length; i++) {\n    scheduleTone(toneSequence[i], toneStart, dur)\n\n    toneStart = toneStart + dur + gap\n  }\n\n  // Start playing the scheduled tones.\n  oscillators[0].start()\n  oscillators[1].start()\n\n  /**\n   * Step 3: Clean-up the audio nodes.\n   */\n\n  // Wait until all tones have finished playing.\n  const numTones = toneSequence.length\n  const delayTime = numTones * (options.duration + options.gap)\n  yield delay(delayTime)\n\n  // Disconnect all nodes from each other.\n  oscNode.disconnect()\n  oscillators[0].stop()\n  oscillators[0].disconnect()\n  oscillators[1].stop()\n  oscillators[1].disconnect()\n}\n\n/**\n * Checks whether an SDP has at least one telephone-event codec.\n *\n * TODO: If there isn't a telephone-event, then the PeerConnection won't have\n *    a \"dtmf sender\" (RTCRtpSender.dtmf). Should preferably check for that\n *    rather than looking through the SDP.\n * This isn't being done because the Session/Peer models wrap \"send dtmf\" in a\n *    way that makes it inconvenient to use.\n *\n * @method hasTelephoneEvent\n * @param  {string}  stringSdp An SDP.\n * @return {boolean}\n */\nexport function hasTelephoneEvent (stringSdp) {\n  const sdp = sdpTransform.parse(stringSdp)\n\n  const hasCodec = sdp.media\n    .filter(media => media.type === 'audio')\n    .some(media => {\n      return media.rtp.some(rtp => rtp.codec === 'telephone-event')\n    })\n\n  return hasCodec\n}\n\n/**\n * Converts a single tone input to its dual-frequencies.\n * @method convertTone\n * @param  {string} tone A DTMF tone input character.\n * @return {Array} The set of frequencies for the DTMF tone.\n */\nexport function convertTone (tone) {\n  if (typeof tone !== 'string' || tone.length > 1) {\n    throw new Error('Invalid input for DTMF tone.')\n  }\n\n  switch (tone) {\n    case '1':\n      return ['697', '1209']\n    case '2':\n      return ['697', '1336']\n    case '3':\n      return ['697', '1477']\n    case '4':\n      return ['770', '1209']\n    case '5':\n      return ['770', '1336']\n    case '6':\n      return ['770', '1477']\n    case '7':\n      return ['852', '1209']\n    case '8':\n      return ['852', '1336']\n    case '9':\n      return ['852', '1477']\n    case '0':\n      return ['941', '1209']\n    case '*':\n      return ['941', '1336']\n    case '#':\n      return ['941', '1477']\n  }\n}\n\n/**\n * Splits a DTMF tone sequence into individual tones.\n * @method splitTones\n * @param  {string} tone A DTMF tone string.\n * @return {Array} List of single-character tones.\n */\nexport function splitTones (tone) {\n  const matches = tone.match(/[\\d*#]+/)\n  if (!matches || matches[0] !== tone) {\n    throw new Error('Invalid characters in tone.')\n  }\n\n  return tone.split('')\n}\n","// Call plugin.\nimport { callActions } from '../../call/interfaceNew/actions'\nimport * as actionTypes from '../../call/interfaceNew/actionTypes'\nimport { getCallById, getCallByWebrtcSessionId, getCalls, getOptions } from '../../call/interfaceNew/selectors'\nimport { CALL_STATES, CALL_MEDIA_CONNECTION_STATES, ICE_COLLECTION_RESULT_TYPES } from '../../call/constants'\n\n// Callstack plugin.\nimport { closeCall } from '../webrtc/midcall'\n\n// Other plugins.\nimport { logManager } from '../../logs'\nimport { sessionActions } from '../../webrtc/interface/actions'\nimport * as webrtcActionTypes from '../../webrtc/interface/actionTypes'\n\n// Libraries.\nimport { all, call, put, race, select, take, delay } from 'redux-saga/effects'\n\n/**\n * Performs a call audit and manages the audit loop.\n *\n * This saga is responsible for sending a call audit repeatedly on a consistent interval.\n *  Consistency is ensured by calculating the time it takes to perform the actual\n *  audit request, and subtracting that from the configured call audit timer.\n *\n * The saga determines which interval to use for the delay between requests by analyzing\n *  the response to the audit request:\n *    - for a successful response we use __Max(10s, configured `callAuditTimer`) - request duration__\n *    - for an error response we use __Min(5s, 45% of `callAuditTimer`) - request duration__\n *    - for a \"Closed\" status response, we stop the audit loop and tear down the call\n *\n * Responsibilities:\n *    1. Determine if an audit should be sent.\n *        - Check call's state.\n *    2. Perform signaling (if needed).\n *    3. Return the status of the audit\n * @method sendCallAudit\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.auditCall \"Call audit\" signalling function.\n * @param {Object}   action        The action that triggered the audit.\n */\nexport function * sendCallAudit (deps, action) {\n  const { webRTC, requests } = deps\n  let currentCall = yield select(getCallById, action.payload.id)\n\n  const log = logManager.getLogger('CALL', currentCall ? action.payload.id : '')\n\n  // Basic validation\n  if (!currentCall) {\n    log.debug(`Call ${action.payload.id} not found; no audit loop needed.`)\n    return\n  }\n\n  const config = yield select(getOptions)\n  const successDelay = Math.max(10000, config.callAuditTimer)\n  const errorDelay = Math.min(5000, config.callAuditTimer * 0.45)\n\n  log.info('Starting audit loop for new call.')\n  while (true) {\n    const lastAudit = Date.now()\n\n    currentCall = yield select(getCallById, action.payload.id)\n\n    if (currentCall.state === CALL_STATES.ENDED) {\n      log.info('Call has ended; stopping audit loop.')\n      return\n    }\n\n    // Race between the audit and the audit request timeout of 4s\n    log.info('Sending call audit.')\n    const { audit, timeout } = yield race({\n      audit: call(requests.auditCall, {\n        wrtcsSessionId: currentCall.wrtcsSessionId,\n        isAnonymous: currentCall.isAnonymous,\n        account: currentCall.account\n      }),\n      timeout: delay(4000)\n    })\n\n    /*\n     * Audit response error scenarios include the response having an `error: true` and `status` property.\n     *  The status will be either 'Retry' or 'Closed' (depending on statusCode we get from response),\n     *  and nothing else. See `auditCall` request sagas.\n     * Success scenarios will have `error: false` along with the call's `status`.\n     */\n    if (audit && audit.status === 'Retry') {\n      // We have an error but status is not Closed, so we continue sending audit request in hoping audit will recover\n      const { message, code } = audit.error\n      log.debug(`Call audit failed, caused by ${message} (${code}); will retry failed audit for call.`)\n      const auditDuration = Date.now() - lastAudit\n      yield delay(errorDelay - auditDuration)\n    } else if (audit && audit.status === 'Closed') {\n      // If this audit returned 'Closed', then the audit loop should stop right away.\n      log.info(`Ending audit loop and Call due to Closed status. Changing to ${CALL_STATES.ENDED}.`)\n\n      // Hangup call automatically (from webRTC perspective)\n      yield call(closeCall, webRTC, currentCall.webrtcSessionId)\n\n      // Cleanup Redux state by sending END_CALL_FINISH action\n      yield put(\n        callActions.endCallFinish(currentCall.id, {\n          isLocal: true,\n          transition: { statusCode: 9909, reasonText: 'Call has ended due to call audit failure.' }\n        })\n      )\n      return\n    } else if (audit) {\n      log.debug(`Call audit status is ${audit.status}.`)\n      const auditDuration = Date.now() - lastAudit\n      yield delay(successDelay - auditDuration)\n    } else if (timeout) {\n      // No need to cancel the audit task since the effect that loses the race is automatically cancelled\n      log.debug('Audit request timed out, retrying in 1 second.')\n      yield delay(1000)\n    } else {\n      log.debug('Audit loop encountered an unknown scenario; ending.')\n      return\n    }\n  }\n}\n\n/**\n * Filters which call needs to be re-synched and calls the helper saga (`updateCallState`) to perform the re-synching.\n *\n * Responsibilities:\n *    1. Ensure resyncOnConnect config is set\n *    2. Filter out inactive calls (calls already in an ended state)\n *    3. In parallel, use the helper saga (`updateCallState`) to perform the re-synching of the active calls\n * @method sendCallAudit\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   action        The action that triggered the audit.\n */\nexport function * getSessions (deps, action) {\n  const config = yield select(getOptions)\n  if (!config.resyncOnConnect) {\n    return\n  }\n  // Grab all active calls\n  const calls = yield select(getCalls)\n  const activeCalls = calls.filter(call => call.state !== CALL_STATES.CANCELLED && call.state !== CALL_STATES.ENDED)\n\n  // Check and update the call state of each call if necessary\n  yield all(activeCalls.map(activeCall => call(updateCallState, deps, activeCall)))\n}\n\n// eslint-disable-next-line no-warning-comments\n/**\n * Sends a GET session request and updates call if required.\n *\n * This saga performs the signaling operation to get the status of a call session on the server.\n *    There are no local webRTC operations involved.\n *\n * Assumptions:\n *    1. The server uses Kandy Link 4.7.1+\n * Responsibilities:\n *    2. Update the call state if the call is out of sync (call's status does not match response from server)\n * @method updateCallState\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   deps.requests The set of platform-specific signalling functions.\n * @param {Function} deps.requests.getSession GET session signalling function.\n * @param {Object}   action        The call being acted on.\n */\nexport function * updateCallState (deps, activeCall) {\n  const { webRTC, requests } = deps\n  const log = logManager.getLogger('CALL', activeCall.id)\n  const callStateAfterConnect = activeCall.state\n\n  // If there is an ongoing operation when the WS connects, the response to that operation will re-sync the state\n  // Otherwise, we need to get the status of the session from the server\n  if (!activeCall.localOp && !activeCall.remoteOp) {\n    const sessionStatusResponse = yield call(requests.getSession, {\n      wrtcsSessionId: activeCall.wrtcsSessionId\n    })\n\n    // Get state of the call again before evaluating the response as an operation request and response\n    // could have been processed in between the request to get the session and the response received\n    const currentCall = yield select(getCallById, activeCall.id)\n\n    // Do nothing if an operation was triggered in between the GET sessions request and response, and is ongoing\n    if (!currentCall.localOp && !currentCall.remoteOp) {\n      /*\n       * If the current call state is ringing OR if the state of the call was connected/on hold before we\n       * did the GET, look at the response of the GET request.\n       * If call is ringing and GET session returns ringing, we don't need to do anything\n       * Also, if we were previously connected, but GET returns ringing, this could be due to an operation that was resolved\n       * between the GET request and response. In any case, no need to look at GET response for this scenario.\n       */\n      if (currentCall.state === CALL_STATES.RINGING || callStateAfterConnect !== CALL_STATES.RINGING) {\n        // Call not found\n        if (sessionStatusResponse.error && sessionStatusResponse.error.code === 47) {\n          // End the call as the session does not exist on the server anymore (statusCode 47 response)\n          yield call(closeCall, webRTC, activeCall.webrtcSessionId)\n\n          log.info(`Call re-sync found that call is ended. Changing to ${CALL_STATES.ENDED}.`)\n          yield put(\n            callActions.endCallFinish(activeCall.id, {\n              isLocal: true,\n              error: sessionStatusResponse.error\n            })\n          )\n\n          // GET response errors other than session not found\n        } else if (sessionStatusResponse.error) {\n          log.debug(`Call re-sync failure (${sessionStatusResponse.error.code}).`, sessionStatusResponse.error)\n\n          // If the call is answered, but not by us\n        } else if (\n          sessionStatusResponse.state === 'ANSWERED' &&\n          currentCall.state !== CALL_STATES.CONNECTED &&\n          currentCall.state !== CALL_STATES.ON_HOLD\n        ) {\n          // Report call as cancelled\n          yield call(closeCall, deps.webRTC, activeCall.webrtcSessionId)\n          log.info(`Call re-sync found that call is cancelled. Changing to ${CALL_STATES.CANCELLED}.`)\n          yield put(callActions.callCancelled(activeCall.id))\n        }\n      }\n    }\n  }\n}\n\n/**\n * This saga is meant to normalize ICE connection state changes between Plan-B\n *    and Unified-Plan PeerConnections.\n *\n * Expectation: When ICE connection has an issue, it moves into `disconnected`\n *    state. If it can't automatically fix the issue, it should move into `failed`\n *    state shortly afterwards.\n * Reality: Unified-Plan behaves a little differently, where it never transitions\n *    into `failed` state. Plan-B uses heuristics to know when to give up and\n *    transition into `failed` state, but Unified-Plan does not.\n * Ref: https://docs.google.com/document/d/1-ZfikoUtoJa9k-GZG1daN0BU3IjIanQ_JSscHxQesvU/edit#heading=h.xy9xt6bk24e\n *\n * So this saga is meant to \"fill-in\" that missing behaviour for Unified-Plan:\n *    If a Unified-Plan call enters `disconnected` state, we want to wait a short\n *    amount of time (due to lacking any real heuristic). If the call is still\n *    disconnect after that time, we assume it should be in `failed` state and\n *    manually update the call state.\n *\n * The purpose for doing this is to enter other behaviours that rely on the `failed`\n *    state (eg. ICE restart, telling the application there is no media) still occur.\n *\n * @param  {Action} action A \"ICE connection state change\" action specifically\n *    for the disconnected state.\n */\nexport function * normalizeIceFailure (action) {\n  /**\n   * Determines if a call is in limbo disconnected media state.\n   * @param  {CallObject}  targetCall\n   * @return {boolean} Whether the call is on-going but in disconnected ICE state.\n   */\n  function isDisconnected (targetCall) {\n    // 1) Call exists, 2) Call is on-going, 3) Call's media is disconnected.\n    return (\n      targetCall &&\n      ![CALL_STATES.ENDED, CALL_STATES.CANCELLED].includes(targetCall.state) &&\n      targetCall.mediaConnectionState === CALL_MEDIA_CONNECTION_STATES.DISCONNECTED\n    )\n  }\n\n  let currentCall = yield select(getCallByWebrtcSessionId, action.payload.id)\n  const options = yield select(getOptions)\n  if (options.defaultPeerConfig.sdpSemantics !== 'unified-plan') {\n    // We only want to act when the PeerConnection is configured for Unified-Plan.\n    return\n  } else if (!isDisconnected(currentCall)) {\n    // We only want to act if the call is currently disconnected.\n    return\n  }\n\n  /*\n   * Wait a short time to let the Call try fixing things itself.\n   * The number \"10000\" was determined by comparing how long it takes for the\n   *    disconnected-->failed transition to happen when on Plan-B. It consistently\n   *    took [almost] exactly 10 seconds for the change to happen, no matter\n   *    if it was an audio-only or audio+video call.\n   * Note: This test was done on Chrome, since it is the only browser to support\n   *    Plan-B.\n   * Note: 10s is also Chrome's timeout for collecting ICE candidates on an\n   *    interface. I assume this isn't a coincidence.\n   */\n  const { ended, changedState } = yield race({\n    timeout: delay(10000),\n    // Watch for if this call ends while we're delaying.\n    ended: take(action => {\n      return action.type === actionTypes.END_CALL_FINISH && action.payload.id === currentCall.id\n    }),\n    // Watch for if this call's media connection state changes again.\n    changedState: take(action => {\n      return (\n        action.type === webrtcActionTypes.SESSION_ICE_CONNECTION_STATE_CHANGE &&\n        action.payload.id === currentCall.webrtcSessionId\n      )\n    })\n  })\n\n  if (ended || changedState) {\n    // If the call has ended, or is no longer disconnected, do nothing.\n    return\n  }\n\n  // Get the call state again, to make sure we have the latest state.\n  currentCall = yield select(getCallByWebrtcSessionId, action.payload.id)\n  // If the call is still disconnected, assume that it should have moved into\n  //    failed state. Manually trigger the action to transition into failed state.\n  if (isDisconnected(currentCall)) {\n    const log = logManager.getLogger('CALL', currentCall.id)\n    log.debug(\n      'Call has remained in disconnected media connection state too long. Manually transitioning to failed state.'\n    )\n\n    yield put(\n      sessionActions.sessionIceConnectionStateChange(currentCall.webrtcSessionId, {\n        iceConnectionState: CALL_MEDIA_CONNECTION_STATES.FAILED\n      })\n    )\n  }\n}\n\n/**\n * Add the necessary information to the ice collection info object and call the\n *  ice collection check function. Then pass the results of the check back to the\n *  WebRTC stack for further processing\n *\n * @method callIceCollectionCheck\n * @param {Object}   deps          Dependencies that the saga uses.\n * @param {Object}   deps.webRTC   The WebRTC stack.\n * @param {Object}   action        The action being acted on.\n */\nexport function * callIceCollectionCheck (deps, action) {\n  const { webRTC } = deps\n\n  const { id: webrtcSessionId, ...iceCollectionInfo } = action.payload\n  const currentCall = yield select(getCallByWebrtcSessionId, webrtcSessionId)\n  const log = logManager.getLogger('CALL', currentCall ? action.payload.id : '')\n  const config = yield select(getOptions)\n\n  log.debug('Calling ICE collection check function for reason:', iceCollectionInfo.reason)\n  let result\n  try {\n    result = config.iceCollectionCheckFunction({\n      callId: currentCall.id,\n      callOperation: currentCall.localOp && currentCall.localOp.operation,\n      ...iceCollectionInfo\n    })\n  } catch (e) {\n    log.info('Error thrown by the iceCollectionCheckFunction. Ending call.', e)\n    result = {\n      type: 'Error',\n      error: e\n    }\n  }\n\n  // Get the webrtc Session for the call.\n  const session = yield call([webRTC.sessionManager, 'get'], webrtcSessionId)\n  // Get the remote description for the Session.\n  log.debug('Handling ICE collection check result:', result.type)\n  yield call([session, 'iceCollectionCheckResult'], result)\n\n  // If the result is neither 'StartCall' or 'Wait', then it is either an error or an undefined result type.\n  //   In either case, the session will cleanup the WebRTC portions of the call so just cleanup the state here.\n  if (result.type !== ICE_COLLECTION_RESULT_TYPES.START_CALL && result.type !== ICE_COLLECTION_RESULT_TYPES.WAIT) {\n    yield put(\n      callActions.endCallFinish(currentCall.id, {\n        isLocal: true,\n        error: result.error || true\n      })\n    )\n  }\n}\n","// Call Plugin\nimport * as callActions from '../../call/interfaceNew/actions/call'\n\n// Helpers\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { call, put } from 'redux-saga/effects'\n\n/**\n * Uses the WebRTC stack to get the list of available and supported codecs by the browser\n *\n * @method getAvailableCodecs\n * @param  {Object} deps\n * @param  {Object} deps.webRTC      The WebRTC stack.\n * @param  {Object} action           A `GET_AVAILABLE_CODECS` action.\n */\nexport function * getAvailableCodecs (deps, action) {\n  const { webRTC } = deps\n\n  const log = logManager.getLogger('CALL')\n\n  const { kind } = action.payload\n\n  // TODO: Remove this once parameter validation is available for APIs\n  if (kind !== 'audio' && kind !== 'video') {\n    const errorMsg = `Cannot retrieve codecs for media kind ${kind}. Only 'audio' or 'video' kind supported.`\n    log.info(errorMsg)\n    yield call([action.meta.deferred, 'reject'], {\n      error: errorMsg\n    })\n    return\n  }\n\n  log.info(`Retrieving list of available codecs for media kind '${kind}'.`)\n\n  // Get the list of codecs from the general WebRTCManager\n  const codecs = yield call([webRTC.webrtcManager, 'getAvailableCodecs'], kind)\n  log.debug('Successfully retrieved codec list:', codecs)\n\n  // We got codecs, so 'resolve' the deferred result and respond with the list of codecs.\n  // NOTE: There does not seem to be a path for failure, as RTCRtpSender.getCapabilities(kind)\n  //       always returns something according to API doc\n  //       (including null, if there are simply no capabilities present),\n  //       so no need to handle 'reject' case.\n  yield call([action.meta.deferred, 'resolve'], codecs)\n\n  // Signal the completion of request by triggering an action complete, which\n  // in turn will issue an event at the application layer.\n  yield put(\n    callActions.availableCodecsRetrieved({\n      kind,\n      codecs\n    })\n  )\n}\n","// Call plugin.\nimport * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\nimport { OPERATIONS, OP_TRANSITIONS } from './constants'\n\n// Webrtc plugin.\nimport * as webrtcActionTypes from '../../webrtc/interface/actionTypes'\n\n// Helpers\nimport { getCallById, getCallByWebrtcSessionId, getOptions } from './selectors'\nimport { cloneDeep } from 'lodash/fp'\n\n/**\n * Helper function to format call events.\n * @method callEventHandler\n * @param  {string} type        The type of event.\n * @param  {Object} action      The action that triggered the event.\n * @param  {Object} [params={}] Any non-consistent information to be included in the event.\n * @return {Object} An event object.\n */\nfunction callEventHandler (type, action, params = {}) {\n  /**\n   * Call event format.\n   * Call events follow a consistent format, based on the consistent format of\n   *    their actions.\n   */\n  const args = {\n    ...params\n  }\n  // There are cases where there is a callId in the params, in that case don't use the payload's id\n  // Example: See call event for SESSION_NEW_TRACK\n  if (!args.hasOwnProperty('callId') && action.payload.id) {\n    args.callId = action.payload.id\n  }\n\n  return {\n    type,\n    args\n  }\n}\n\n/**\n * Helper function for converting an action to a \"call state change\" event.\n * Ensures that all such events have consistent parameters.\n * @method stateChangeHandler\n * @param  {Object} action\n * @param  {Object} params\n * @param  {Object} params.prevState Redux state from before the action was processed by reducers.\n * @param  {Object} params.state     Redux state from after the action was processed by reducers.\n * @return {Object} An event object.\n */\nfunction stateChangeHandler (action, params) {\n  // Get the call state before this action updated state.\n  const prevCall = getCallById(params.prevState, action.payload.id)\n\n  return callEventHandler(eventTypes.CALL_STATE_CHANGE, action, {\n    error: action.payload.error,\n    transition: action.payload.transition,\n    previous: {\n      state: prevCall.state,\n      localHold: prevCall.localHold,\n      remoteHold: prevCall.remoteHold\n    }\n  })\n}\n\n/**\n * Helper function for converting an action to a \"call operation\" event.\n * Ensures that all such events have consistent parameters.\n * @method callOperationHandler\n * @param {Object} action\n * @param {Object} params\n * @param {Object} params.prevState The SDK state before this action updated state.\n * @param {string} params.operation The currently occurring operation.\n * @param {string} params.transition The transition reason for the operation change.\n * @param {string} params.isLocal Flag indicating whether the operation is local or not.\n * @param {Object} [any] Additional data provided depending on the operation.\n * @return {Object} An event object.\n */\nfunction callOperationHandler (action, params) {\n  // Get the call state before this action updated state.\n  const prevCall = getCallById(params.prevState, action.payload.id)\n  let previous\n\n  if (prevCall) {\n    previous = params.isLocal ? prevCall.localOp : prevCall.remoteOp\n  }\n\n  return callEventHandler(eventTypes.CALL_OPERATION, action, {\n    // operation params\n    operation: params.operation,\n    transition: params.transition,\n    isLocal: params.isLocal,\n    // previous operation state data\n    previous,\n    // error\n    error: action.payload.error\n  })\n}\n\nexport const callEvents = {}\n\n// START actions\nconst startActionTypesAndOperations = [\n  { type: actionTypes.SEND_RINGING_FEEDBACK, operation: OPERATIONS.SEND_RINGING_FEEDBACK },\n  { type: actionTypes.ANSWER_CALL, operation: OPERATIONS.ANSWER },\n  { type: actionTypes.REJECT_CALL, operation: OPERATIONS.REJECT },\n  { type: actionTypes.IGNORE_CALL, operation: OPERATIONS.IGNORE },\n  { type: actionTypes.END_CALL, operation: OPERATIONS.END },\n  { type: actionTypes.FORWARD_CALL, operation: OPERATIONS.FORWARD_CALL },\n  { type: actionTypes.CALL_HOLD, operation: OPERATIONS.HOLD },\n  { type: actionTypes.CALL_UNHOLD, operation: OPERATIONS.UNHOLD },\n  { type: actionTypes.SEND_CUSTOM_PARAMETERS, operation: OPERATIONS.SEND_CUSTOM_PARAMETERS },\n  { type: actionTypes.ADD_MEDIA, operation: OPERATIONS.ADD_MEDIA },\n  { type: actionTypes.ADD_BASIC_MEDIA, operation: OPERATIONS.ADD_BASIC_MEDIA },\n  { type: actionTypes.REMOVE_MEDIA, operation: OPERATIONS.REMOVE_MEDIA },\n  { type: actionTypes.REMOVE_BASIC_MEDIA, operation: OPERATIONS.REMOVE_BASIC_MEDIA },\n  { type: actionTypes.RENEGOTIATE, operation: OPERATIONS.RENEGOTIATE },\n  { type: actionTypes.MEDIA_RESTART, operation: OPERATIONS.MEDIA_RESTART },\n  { type: actionTypes.SEND_DTMF, operation: OPERATIONS.SEND_DTMF },\n  { type: actionTypes.GET_STATS, operation: OPERATIONS.GET_STATS },\n  { type: actionTypes.CONSULTATIVE_TRANSFER, operation: OPERATIONS.CONSULTATIVE_TRANSFER },\n  { type: actionTypes.DIRECT_TRANSFER, operation: OPERATIONS.DIRECT_TRANSFER },\n  { type: actionTypes.JOIN, operation: OPERATIONS.JOIN },\n  { type: actionTypes.REPLACE_TRACK, operation: OPERATIONS.REPLACE_TRACK }\n]\nstartActionTypesAndOperations.forEach(startActionTypeAndOperation => {\n  callEvents[startActionTypeAndOperation.type] = (action, params) => {\n    return callOperationHandler(action, {\n      ...params,\n      operation: startActionTypeAndOperation.operation,\n      transition: OP_TRANSITIONS.START,\n      isLocal: true\n    })\n  }\n})\n\ncallEvents[actionTypes.MAKE_CALL] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.MAKE,\n      transition: OP_TRANSITIONS.START,\n      isLocal: true\n    }),\n    callEventHandler(eventTypes.CALL_STARTED, action, {\n      error: action.payload.error\n    })\n  ]\n}\n\n// PENDING actions\ncallEvents[actionTypes.PENDING_MAKE_CALL] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.MAKE,\n      transition: OP_TRANSITIONS.UPDATE,\n      isLocal: true\n    }),\n    stateChangeHandler(action, params)\n  ]\n}\n\ncallEvents[actionTypes.PENDING_OPERATION] = (action, params) => {\n  return callOperationHandler(action, {\n    ...params,\n    operation: action.payload.operation,\n    transition: OP_TRANSITIONS.UPDATE,\n    isLocal: true\n  })\n}\n\ncallEvents[actionTypes.PENDING_CONSULTATIVE_TRANSFER] = (action, params) => {\n  const otherCallAction = cloneDeep(action)\n  otherCallAction.payload.id = action.payload.otherCallId\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.CONSULTATIVE_TRANSFER,\n      transition: OP_TRANSITIONS.UPDATE,\n      isLocal: true\n    }),\n    callOperationHandler(otherCallAction, {\n      ...params,\n      operation: OPERATIONS.CONSULTATIVE_TRANSFER,\n      transition: OP_TRANSITIONS.UPDATE,\n      isLocal: true\n    })\n  ]\n}\n\ncallEvents[actionTypes.PENDING_JOIN] = (action, params) => {\n  const operationEvents = action.payload.usedCallIds.map(callId => {\n    const newAction = cloneDeep(action)\n    newAction.payload.id = callId\n    return callOperationHandler(newAction, {\n      ...params,\n      operation: OPERATIONS.JOIN,\n      transition: OP_TRANSITIONS.UPDATE,\n      isLocal: true\n    })\n  })\n  operationEvents.push(callEventHandler(eventTypes.CALL_JOIN, action))\n  return operationEvents\n}\n\n// FINISH actions\nconst finishActionTypesAndData = [\n  { type: actionTypes.MAKE_CALL_FINISH, operation: OPERATIONS.MAKE, isLocal: true },\n  { type: actionTypes.SEND_RINGING_FEEDBACK_FINISH, operation: OPERATIONS.SEND_RINGING_FEEDBACK, isLocal: true },\n  { type: actionTypes.CALL_HOLD_FINISH, operation: OPERATIONS.HOLD, isLocal: true },\n  { type: actionTypes.CALL_UNHOLD_FINISH, operation: OPERATIONS.UNHOLD, isLocal: true },\n  { type: actionTypes.CALL_REMOTE_HOLD_FINISH, operation: OPERATIONS.HOLD, isLocal: false },\n  { type: actionTypes.CALL_REMOTE_UNHOLD_FINISH, operation: OPERATIONS.UNHOLD, isLocal: false },\n  { type: actionTypes.REJECT_CALL_FINISH, operation: OPERATIONS.REJECT, isLocal: true },\n  { type: actionTypes.IGNORE_CALL_FINISH, operation: OPERATIONS.IGNORE, isLocal: true },\n  { type: actionTypes.DIRECT_TRANSFER_FINISH, operation: OPERATIONS.DIRECT_TRANSFER, isLocal: true },\n  { type: actionTypes.CONSULTATIVE_TRANSFER_FINISH, operation: OPERATIONS.CONSULTATIVE_TRANSFER, isLocal: true },\n  { type: actionTypes.JOIN_FINISH, operation: OPERATIONS.JOIN, isLocal: true },\n  { type: actionTypes.FORWARD_CALL_FINISH, operation: OPERATIONS.FORWARD_CALL, isLocal: true }\n]\nfinishActionTypesAndData.forEach(finishActionTypeAndData => {\n  callEvents[finishActionTypeAndData.type] = (action, params) => {\n    return [\n      callOperationHandler(action, {\n        ...params,\n        operation: finishActionTypeAndData.operation,\n        isLocal: finishActionTypeAndData.isLocal,\n        transition: OP_TRANSITIONS.FINISH\n      }),\n      stateChangeHandler(action, params)\n    ]\n  }\n})\n\ncallEvents[actionTypes.END_CALL_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.END,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: action.payload.isLocal\n    }),\n    stateChangeHandler(action, params)\n  ]\n}\n\ncallEvents[actionTypes.ANSWER_CALL_FINISH] = (action, params) => {\n  const events = []\n  // Emit Call Operation Event\n  events.push(\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.ANSWER,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: true\n    })\n  )\n\n  // Don't emit a stateChange event if it was a slow start answer. The call isn't actually\n  //    answered yet, so state hasn't changed.\n  // TODO: Don't have this in meta?\n  if (action.meta && action.meta.isSlowStart) {\n    return events\n  }\n\n  events.push(stateChangeHandler(action, params))\n  return events\n}\n\ncallEvents[actionTypes.ADD_MEDIA_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.ADD_MEDIA,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: action.payload.local\n    }),\n    callEventHandler(eventTypes.CALL_ADDED_MEDIA, action, {\n      local: action.payload.local,\n      tracks: action.payload.tracks,\n      mediaId: action.payload.mediaId,\n      error: action.payload.error\n    })\n  ]\n}\n\ncallEvents[actionTypes.REMOVE_MEDIA_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.REMOVE_MEDIA,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: action.payload.local\n    }),\n    callEventHandler(eventTypes.CALL_REMOVED_MEDIA, action, {\n      local: action.payload.local,\n      tracks: action.payload.tracks,\n      error: action.payload.error\n    })\n  ]\n}\n\n/*\n * Currently the RENEGOTIATE operation is only triggered after an unsolicited removal of media,\n *  hence the CALL_REMOVED_MEDIA event handler is used\n */\ncallEvents[actionTypes.RENEGOTIATE_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.RENEGOTIATE,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: action.payload.local\n    }),\n    callEventHandler(eventTypes.CALL_REMOVED_MEDIA, action, {\n      local: action.payload.local,\n      tracks: action.payload.tracks,\n      error: action.payload.error\n    })\n  ]\n}\n\ncallEvents[actionTypes.GET_STATS_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.GET_STATS,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: true\n    }),\n    callEventHandler(eventTypes.STATS_RECEIVED, action, {\n      result: action.payload.result,\n      error: action.payload.error,\n      trackId: action.payload.trackId\n    })\n  ]\n}\n\ncallEvents[actionTypes.REPLACE_TRACK_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.REPLACE_TRACK,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: true\n    }),\n    callEventHandler(eventTypes.CALL_TRACK_REPLACED, action, {\n      error: action.payload.error,\n      newTrackId: action.payload.newTrackId,\n      oldTrack: action.payload.oldTrackState\n    })\n  ]\n}\n\ncallEvents[actionTypes.SEND_DTMF_FINISH] = (action, params) => {\n  return callOperationHandler(action, {\n    ...params,\n    operation: OPERATIONS.SEND_DTMF,\n    transition: OP_TRANSITIONS.FINISH,\n    isLocal: true\n  })\n}\n\ncallEvents[actionTypes.SEND_CUSTOM_PARAMETERS_FINISH] = (action, params) => {\n  return callOperationHandler(action, {\n    ...params,\n    operation: OPERATIONS.SEND_CUSTOM_PARAMETERS,\n    isLocal: true,\n    transition: OP_TRANSITIONS.FINISH\n  })\n}\n\n// other actions\ncallEvents[actionTypes.CUSTOM_PARAMETERS_RECEIVED] = action => {\n  return callEventHandler(eventTypes.CUSTOM_PARAMETERS, action, {\n    customParameters: action.payload.customParameters\n  })\n}\n\ncallEvents[actionTypes.AVAILABLE_CODECS_RETRIEVED] = action => {\n  return callEventHandler(eventTypes.AVAILABLE_CODECS, action, {\n    kind: action.payload.kind,\n    codecs: action.payload.codecs\n  })\n}\n\ncallEvents[actionTypes.CALL_INCOMING] = action => {\n  return callEventHandler(eventTypes.CALL_INCOMING, action, {\n    error: action.payload.error,\n    mediaOffered: action.payload.mediaOffered\n  })\n}\n\ncallEvents[actionTypes.CALL_RINGING] = stateChangeHandler\ncallEvents[actionTypes.SESSION_PROGRESS] = stateChangeHandler\ncallEvents[actionTypes.CALL_CANCELLED] = stateChangeHandler\ncallEvents[actionTypes.CALL_ACCEPTED] = stateChangeHandler\n// TODO: Have a proper event for this since UPDATE_CALL does not change the call's state property.\ncallEvents[actionTypes.UPDATE_CALL] = stateChangeHandler\n\ncallEvents[webrtcActionTypes.SESSION_NEW_TRACK] = (action, context) => {\n  const state = context.state\n  // The webrtc session should have been already created (by handling SESSION_CREATED action -- see above)\n  const call = getCallByWebrtcSessionId(state, action.payload.id)\n\n  if (call) {\n    // By passing callId in the params object it will overwrite\n    // callId that is set in callEventHandler\n    return callEventHandler(eventTypes.CALL_NEW_TRACK, action, {\n      ...action.payload,\n      callId: call.id\n    })\n  }\n  return null\n}\n\ncallEvents[webrtcActionTypes.SESSION_TRACK_REMOVED] = (action, context) => {\n  const state = context.state\n  const call = getCallByWebrtcSessionId(state, action.payload.id)\n\n  if (call) {\n    const callOptions = getOptions(state)\n    if (callOptions.defaultPeerConfig.sdpSemantics === 'plan-b') {\n      // For plan-b we won't trigger another 'call:trackEnded' event because it\n      // is already triggered by the SESSION_TRACK_ENDED action.\n      return null\n    }\n    return callEventHandler(eventTypes.CALL_TRACK_ENDED, action, {\n      ...action.payload,\n      callId: call.id\n    })\n  }\n}\n\ncallEvents[webrtcActionTypes.SESSION_TRACK_ENDED] = (action, context) => {\n  const state = context.state\n  const call = getCallByWebrtcSessionId(state, action.payload.id)\n\n  if (call) {\n    return callEventHandler(eventTypes.CALL_TRACK_ENDED, action, {\n      ...action.payload,\n      callId: call.id\n    })\n  }\n}\n\ncallEvents[webrtcActionTypes.SESSION_ICE_CONNECTION_STATE_CHANGE] = (action, context) => {\n  const prevState = context.prevState\n  const call = getCallByWebrtcSessionId(prevState, action.payload.id)\n\n  if (call) {\n    const prevMediaConnectionState = call.mediaConnectionState\n    return callEventHandler(eventTypes.MEDIA_CONNECTION_CHANGE, action, {\n      callId: call.id,\n      previous: {\n        state: prevMediaConnectionState\n      }\n    })\n  }\n}\n\ncallEvents[actionTypes.MAKE_ANONYMOUS_CALL_FINISH] = (action, context) => {\n  return callEventHandler(eventTypes.CALL_STARTED, action, {\n    error: action.payload.error\n  })\n}\n\ncallEvents[actionTypes.MEDIA_RESTART_FINISH] = (action, params) => {\n  return [\n    callOperationHandler(action, {\n      ...params,\n      operation: OPERATIONS.MEDIA_RESTART,\n      transition: OP_TRANSITIONS.FINISH,\n      isLocal: true\n    }),\n    callEventHandler(eventTypes.MEDIA_RESTART, action, {\n      error: action.payload.error\n    })\n  ]\n}\n\nexport default {\n  ...callEvents\n}\n","/**\n * A call operation has either started, been updated, or finished.\n *\n * Information about ongoing call operations are stored with the call\n *    information (see the {@link call.getById} API). This event indicates that\n *    an operation's information has been changed.\n *\n * Local call operations will be tracked from start to finish. An operation may\n *    be updated as it progresses, based on the status of the operation. The\n *    operation status may be ongoing or pending, depending if the operation is\n *    waiting on activity on the local or remote end of the call, respectively.\n *\n * Except in the case of slow-start operations, remote operations will only be\n *    tracked as a \"finish\", to indicate that it occurred.\n * @public\n * @memberof call\n * @event call:operation\n * @param {Object} params\n * @param {string} params.operation The call operation causing this event.\n * @param {string} params.transition The transition reason for the operation change.\n * @param {boolean} params.isLocal Flag indicating whether the operation was local or not.\n * @param {Object} [params.previous] The operation information before this change.\n *    If the transition is to \"start\" the operation, there will be no previous information.\n * @param {string} [params.previous.operation] The operation that was ongoing.\n * @param {string} [params.previous.status] The operation status before this change.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const CALL_OPERATION = 'call:operation'\n\n/**\n * An outgoing call has been started.\n *\n * Information about the Call can be retrieved using the {@link call.getById}\n *    API.\n *\n * @public\n * @memberof call\n * @event call:start\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const CALL_STARTED = 'call:start'\n\n/**\n * A new joined call has been started.\n *\n * Information about the Call can be retrieved using the {@link call.getById}\n *    API.\n *\n * @public\n * @memberof call\n * @requires link_call\n * @event call:join\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const CALL_JOIN = 'call:join'\n\n/**\n * A new incoming call has been received.\n *\n * Information about the Call can be retrieved using the {@link call.getById}\n *    API.\n *\n * @public\n * @memberof call\n * @event call:receive\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n * @example\n * client.on('call:receive', function(params) {\n *     // We have received a call, prompt the user to respond.\n *     promptUser(client.call.getById(params.callId));\n * });\n */\nexport const CALL_INCOMING = 'call:receive'\n\n/**\n * A Call's state has changed.\n *\n * See {@link call.states} for information about call states.\n * @public\n * @memberof call\n * @event call:stateChange\n * @param {Object} params\n * @param {string} params.callId The ID of the Media object that was operated on.\n * @param {Object} params.previous The call's properties before the operation changed it.\n * @param {string} params.previous.state The previous state of the call.\n * @param {Object} [params.transition]\n * @param {number} [params.transition.statusCode] The status code associated with the particular state change's reason.\n * @param {string} [params.transition.reasonText] The reason for the state change.\n * @param {boolean} [params.previous.localHold] The previous local hold state. Present when the state change was a hold/unhold operation.\n * @param {boolean} [params.previous.remoteHold] The previous remote hold state. Present when the state change was a hold/unhold operation.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n * @example\n * client.on('call:stateChange', function (params) {\n *     const call = client.call.getById(params.callId)\n *     const prevState = params.previous.state\n *     log(`Call changed from ${prevState} to ${call.state} state.`)\n *\n *     // Handle the event depending on the new call state.\n *     switch (call.state) {\n *         case client.call.states.CONNECTED:\n *             // Handle being on call with media.\n *             break\n *         case client.call.states.ENDED:\n *             // Handle call ending.\n *             break\n *         ...\n *     }\n * })\n */\nexport const CALL_STATE_CHANGE = 'call:stateChange'\n\n/**\n * New media has been added to the call.\n * @public\n * @memberof call\n * @event call:newMedia\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {boolean} params.local Whether the new media is local or not.\n * @param {Array} params.tracks The list of new Tracks.\n * @param {string} params.mediaId The ID of the Media object the Tracks belong to.\n */\nexport const CALL_ADDED_MEDIA = 'call:newMedia'\n\n/**\n * Media has been removed from the call.\n * @public\n * @memberof call\n * @event call:removedMedia\n * @param {Object} params\n * @param {string} params.callId The ID of the call.\n * @param {boolean} params.local Whether the removed Media was local or not.\n * @param {Array} params.tracks The list of removed Tracks.\n */\nexport const CALL_REMOVED_MEDIA = 'call:removedMedia'\n\n/**\n * A new Track has been added to the Call.\n *\n * The Track may have been added by either the local user or remote user using\n *    the {@link call.addMedia} API.\n *\n * Information about the Track can be retrieved using the\n *    {@link media.getTrackById} API.\n *\n * @public\n * @memberof call\n * @event call:newTrack\n * @param {Object} params\n * @param {string} params.callId The ID of the call the track was added to.\n * @param {string} params.mediaId The ID of the media the track was added to.\n * @param {string} params.trackId The ID of the newly added track.\n * @param {boolean} params.local Whether the track is local or not (remote)\n */\nexport const CALL_NEW_TRACK = 'call:newTrack'\n\n/**\n * A Track has been removed from a Call.\n *\n * The Track may have been removed by either the local user or remote user using\n *    the {@link call.removeMedia} API. Tracks are also removed from Calls\n *    automatically while the Call is on hold.\n *\n * Note that receiving this event is not an indication that a media operation\n *    has completed. Therefore the application should not assume it is safe to\n *    perform a new operation at this time. To be notified when a call has had\n *    its media removed, see {@link call.event:call:removedMedia call:removedMedia}\n *\n * @public\n * @memberof call\n * @event call:trackEnded\n * @param {Object} params\n * @param {string} params.callId The ID of the call the track was removed from.\n * @param {string} params.mediaId The ID of the media the track was removed from.\n * @param {string} params.trackId The ID of the removed track.\n * @param {boolean} params.local Whether the track was local or not (remote)\n */\nexport const CALL_TRACK_ENDED = 'call:trackEnded'\n\n/**\n * Stats have been retrieved for a Call or specific Track of a Call.\n *\n * See the {@link call.getStats} API for more information.\n *\n * @public\n * @memberof call\n * @event call:statsReceived\n * @param {Object} params\n * @param {string} params.callId The ID of the Call to retrieve stats for.\n * @param {string} [params.trackId] The ID of the Track to retrieve stats for.\n * @param {Map} params.result The RTCStatsReport.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n * @example\n * client.on('call:statsReceived', function (params) {\n *    // Iterate over each individual statistic inside the RTCPStatsReport Map.\n *    params.result.forEach(stat => {\n *      ...\n *    })\n * })\n */\nexport const STATS_RECEIVED = 'call:statsReceived'\n\n/**\n * A Track has been replaced on the Call.\n *\n * A Track is replaced by the local user using the {@link call.replaceTrack}\n *    API.\n *\n * This event is similar to the {@link call.event:call:newTrack call:newTrack}\n *    event, where the call has a new Track, except that an existing Track has\n *    been removed at the same time. The event includes information about the\n *    Track that was replaced to help an application replace it seamlessly.\n *\n * @public\n * @memberof call\n * @event call:trackReplaced\n * @param {Object} params\n * @param {string} params.callId The ID of the call where a track was replaced.\n * @param {string} [params.newTrackId] The ID of the new track that replaced the old track.\n * @param {call.TrackObject} [params.oldTrack] State of the replaced track.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n */\nexport const CALL_TRACK_REPLACED = 'call:trackReplaced'\n\n/**\n * Custom Parameters have been received for a Call.\n *\n * These are parameters set by the remote endpoint of the Call. Please refer to\n *    {@link call.CustomParameter CustomParameter} for more information.\n * @public\n * @memberof call\n * @requires link_call\n * @event call:customParameters\n * @param {Object} params\n * @param {string} params.callId The ID of the Call in which custom parameters were received.\n * @param {Array<call.CustomParameter>} params.customParameters The custom parameters received.\n */\nexport const CUSTOM_PARAMETERS = 'call:customParameters'\n\n/**\n * The list of available and supported codecs by the browser have been retrieved.\n *\n * This event is emitted as a result of the {@link call.getAvailableCodecs} API. Please refer to the API for more\n *  information.\n * @public\n * @memberof call\n * @event call:availableCodecs\n * @param {Object} params\n * @param {string} params.kind The kind of media the codecs are for.\n * @param {Array<Object>} params.codecs The list of codecs.\n */\nexport const AVAILABLE_CODECS = 'call:availableCodecs'\n\n/**\n * A Call's media connection state has been changed.\n *\n * This event is emitted as a result of changes to the media connection of the Call.\n * These state changes occur during call establishment, connection loss/re-establishment, call completion, etc.\n *\n * To check the media connection state of a call, retrieve the call's information using the  {@link call.getById} API,\n *  and check the `mediaConnectionState` property of the call.\n * See {@link call.mediaConnectionStates} for the list of possible values and descriptions.\n * @public\n * @memberof call\n * @event call:mediaConnectionChange\n * @param {Object} params\n * @param {string} params.callId The ID of the Call whose media connection state was changed.\n * @param {Object} params.previous The call's media connection properties before the operation changed it.\n * @param {string} params.previous.state The previous state of the media connection.\n */\nexport const MEDIA_CONNECTION_CHANGE = 'call:mediaConnectionChange'\n\n/**\n * A media restart operation for a Call has been attempted.\n *\n * This event is emitted as a result of the {@link call.restartMedia} API being called.\n *    See the description for {@link call.restartMedia} for information about its\n *    usage.\n *\n * The {@link call.event:call:mediaConnectionChange call:mediaConnectionChange} event\n *    will also be emitted alongside this event when the media restart operation is\n *    successful.\n * @public\n * @static\n * @memberof call\n * @event call:mediaRestart\n * @param {Object} params\n * @param {string} params.callId The ID of the Call that was acted on.\n * @param {api.BasicError} [params.error] An error object, if the operation was not successful.\n * @example\n * client.on('call:mediaRestart', function (params) {\n *    if (params.error) {\n *      // The operation failed. May want to determine whether to re-attempt the\n *      //    operation (if the failure was simply a connectivity issue) or to\n *      //    consider the call's media irrecoverable.\n *      ...\n *    } else {\n *      // The call should be re-establishing media, with the call's\n *      //    `mediaConnectionState` being updated.\n *      const mediaState = client.call.getById(params.callId).mediaConnectionState\n *      ...\n *    }\n * })\n */\nexport const MEDIA_RESTART = 'call:mediaRestart'\n","import baseConnectivity from '../common/base'\nimport { connCheckMethods } from '../../constants'\nimport { defaults } from 'lodash/fp'\n\n// Parse and/or Validate\nimport { enums, validation as v8n, parse } from '../../../src/common/validation'\n\nconst defaultValues = {\n  method: { type: connCheckMethods.PING_PONG, responsibleParty: 'client' },\n  pingInterval: 30000,\n  reconnectLimit: 5,\n  reconnectDelay: 5000,\n  reconnectTimeMultiplier: 1,\n  reconnectTimeLimit: 640000,\n  autoReconnect: true,\n  maxMissedPings: 3,\n  checkConnectivity: true\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  method: v8n.schema({\n    type: enums(['pingPong', 'keepAlive']),\n    responsibleParty: enums(['client', 'server'])\n  }),\n  pingInterval: v8n.positive(),\n  reconnectLimit: v8n.positive(),\n  reconnectDelay: v8n.positive(),\n  reconnectTimeMultiplier: v8n.positive(),\n  reconnectTimeLimit: v8n.positive(),\n  autoReconnect: v8n.boolean(),\n  maxMissedPings: v8n.positive(),\n  checkConnectivity: v8n.boolean()\n})\nconst parseOptions = parse('connectivity', v8nValidation)\n\n/**\n * Configuration options for the Connectivity feature.\n * Can use pingPong (default) or keepAlive as the connectivity check.\n *\n * Ping Pong: The responsibleParty (default 'client') sends \"ping\" messages to the other party (default 'server') on the websocket at regular intervals, and the other party is expected to respond with a \"pong\" message. This lets both sides know that the connection is still valid and that they can receive messages from each other.\n *\n * Keep Alive: The responsibleParty (default 'client') sends \"keepalive\" messages to the other party (default 'server') on the websocket at regular intervals. This lets the responsibleParty know that the other party is still connected, and that it should \"keep the connection alive\".\n *\n * Keep Alive is the older/simpler method where only one side (the server) has logic for handling the connection. The server knows that if it doesn't receive the keepalive messages, the client is gone and it should clean-up the connection/websocket.\n * In Ping pong, both sides can handle the connection. Both sides can determine if the connection is gone because they will miss the ping or pong message from the other side. The benefit of ping pong is that both sides learn of possible issues sooner.\n *\n * For more information on these methods refer to these documents:\n *\n * https://en.wikipedia.org/wiki/Ping-pong_scheme\n *\n * https://en.wikipedia.org/wiki/Keepalive\n *\n * @public\n * @name config.connectivity\n * @memberof config\n * @instance\n * @param {Object} connectivity Connectivity configs.\n * @param {Object} connectivity.method Configuration for how connectivity checks should be made.\n * @param {String} [connectivity.method.type='pingPong'] The method of connectivity checking to use: `keepAlive` or `pingPong`.\n * @param {String} [connectivity.method.responsibleParty='client'] Configures who is responsible for initiating the connectivity check: `client` or `server`.\n * @param {Number} [connectivity.pingInterval=30000] Time in between websocket ping attempts (milliseconds). Only used for when the client is responsible for ping/connCheck.\n * @param {Number} [connectivity.reconnectLimit=5] Number of failed reconnect attempts before reporting an error. Can be set to 0 to not limit reconnection attempts.\n * @param {Number} [connectivity.reconnectDelay=5000] Base time between websocket reconnect attempts (milliseconds).\n * @param {Number} [connectivity.reconnectTimeMultiplier=1] Reconnect delay multiplier for subsequent attempts. The reconnect delay time will be multiplied by this after each failed reconnect attempt to increase the delay between attempts. eg. 5000ms then 10000ms then 20000ms delay if value is 2.\n * @param {Number} [connectivity.reconnectTimeLimit=640000] Maximum time delay between reconnect attempts (milliseconds). Used in conjunction with `reconnectTimeMultiplier` to prevent overly long delays between reconnection attempts.\n * @param {Boolean} [connectivity.autoReconnect=true] Flag to determine whether reconnection will be attempted automatically after connectivity disruptions.\n * @param {Number} [connectivity.maxMissedPings=3] Maximum pings sent (without receiving a response) before reporting an error.\n * @param {Boolean} [connectivity.checkConnectivity=true] Flag to determine whether to enable connectivity checking or not.\n */\nexport default function connectivity (options = {}) {\n  options = defaults(defaultValues, options)\n  parseOptions(options)\n  return baseConnectivity(options)\n}\n","// Connectivity plugin.\nimport pluginInterface from '../interface'\nimport eventsMap from '../interface/events'\nimport { wsConnectFlow } from './sagas'\n\n// Other plugins.\nimport { update as updateConfig } from '../../config/interface/actions'\nimport { mapEvents } from '../../events/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { connCheckResponsibility } from '../../constants'\n\n/**\n * Base Connectivity plugin factory.\n * Responsible for handling websockets.\n * @method baseConnectivity\n * @param  {Object} [options={}] Connectivity configs. See above.\n * @return {Object} Plugin - A connectivity plugin.\n */\nexport default function baseConnectivity (options) {\n  // For backwards compatibility, convert the old style to the new style.\n  if (typeof options.method === 'string') {\n    const method = options.method\n    options.method = {\n      type: method,\n      // In both old scenarios, the client is responsible.\n      responsibleParty: connCheckResponsibility.CLIENT\n    }\n  }\n\n  function * init () {\n    yield put(updateConfig(options, pluginInterface.name))\n    yield put(mapEvents(eventsMap))\n  }\n\n  return {\n    sagas: [wsConnectFlow],\n    init,\n    name: pluginInterface.name,\n    reducer: pluginInterface.reducer,\n    api: pluginInterface.api\n  }\n}\n","import name from './name'\nimport api from './api'\nimport reducer from './reducers'\n\nexport default { name, api, reducer }\n","// Constants\nimport { platforms } from '../../constants'\n\n/**\n * The 'connection' namespace is used to connect and maintain connections between\n * the SDK and one or more backend servers.\n *\n * @public\n * @namespace connection\n */\n\n/**\n * Information about a websocket connection.\n *\n * Can be retrieved using the {@link connection.getSocketState} API.\n *\n * @public\n * @static\n * @typedef {Object} WSConnectionObject\n * @memberof connection\n * @property {boolean} connected The state of the websocket connection.\n * @property {boolean} pinging True if the client has sent a ping to the server and is still waiting for a pong response.\n * @property {Object} method Information about how the websocket is being used.\n * @property {string} [method.type] How the websocket is staying connected.\n * @property {string} [method.responsibleParty] Who is responsible for keeping the connection alive.\n * @property {string} platform The SDK platform being used.\n * @property {number} pingInterval How often the client will ping the server to test for websocket connectivity.\n * @property {number} reconnectLimit How many times the SDK will try to reconnect a disconnected websocket.\n * @property {number} reconnectDelay How long the SDK will wait before retrying websocket reconnection.\n * @property {number} reconnectTimeMultiplier Reconnect delay multiplier for subsequent attempts. The reconnect delay time will be multiplied by this after each failed reconnect attempt to increase the delay between attempts. eg. 5000ms then 10000ms then 20000ms delay if value is 2.\n * @property {number} reconnectTimeLimit Maximum time delay between reconnect attempts (milliseconds). Used in conjunction with `reconnectTimeMultiplier` to prevent overly long delays between reconnection attempts.\n * @property {boolean} autoReconnect Indicates if the SDK should automatically try reconnecting a disconnected websocket.\n * @property {number} maxMissedPings How many missed pings before the SDK stops trying to reconnect a disconnected websocket.\n * @property {string} webSocketOAuthMode The mode used for authenticating with the server.\n * @property {Object} wsInfo Information required to connect a websocket to the server.\n * @property {string} [wsInfo.protocol] The protocol to use to connect a websocket.\n * @property {string} [wsInfo.server] The domain name or IP address of the server to connect to.\n * @property {number} [wsInfo.port] The port of the server to connect to.\n * @property {string} [wsInfo.url] The URL path to use to request a websocket connection.\n * @property {string} [wsInfo.params] Any additional params that might be required by the server to establish the websocket connection.\n * @property {number} lastContact The date and time that the last known contact with the server was.\n */\n\nimport { changeConnectivityChecking, lostConnection } from './actions'\n\n// Selectors\nimport { getConnectionState } from './selectors'\nimport { getPlatform } from '../../auth/interface/selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('CONNECTIVITY')\n\nexport default function api ({ dispatch, getState }) {\n  const connectivityApi = {\n    /**\n     * Get the state of the websocket.\n     * @public\n     * @static\n     * @memberof connection\n     * @method getSocketState\n     * @param {string} [platform='link'] Backend platform for which to request the websocket's state.\n     * @return {connection.WSConnectionObject} Details about the current websocket connection, including state and configuration.\n     */\n    getSocketState (platform = platforms.LINK) {\n      log.debug(API_LOG_TAG + 'connection.getSocketState: ', platform)\n      return getConnectionState(getState(), platform)\n    },\n\n    /**\n     * Enables or disables connectivity checking.\n     * @public\n     * @memberof connection\n     * @method enableConnectivityChecking\n     * @param {boolean} enable Enable connectivity checking.\n     */\n    enableConnectivityChecking (enable) {\n      log.debug(API_LOG_TAG + 'connection.enableConnectivityChecking: ', enable)\n      dispatch(changeConnectivityChecking(enable))\n    },\n\n    /**\n     * Triggers a reset in the connection to the WebSocket being used for notifications.\n     * This can be used in scenarios where a network issue (undetectable by the SDK)\n     * is detected by an application.\n     *\n     * If there is no WebSocket currently connected, this function has no effect.\n     * Calling this function will trigger all the normal WebSocket and connectivity lifecycle\n     * events as well as trigger re-connection processing that follows the configuration of the SDK.\n     * Calling this function always has the potential of causing some events being lost by the\n     * SDK and preventing proper operation.\n     * @public\n     * @memberof connection\n     * @method resetConnection\n     */\n    resetConnection () {\n      const state = getState()\n      const platform = getPlatform(state)\n      log.debug(API_LOG_TAG + 'connection.resetConnection: ', platform)\n\n      const wsState = getConnectionState(state, platform)\n      if (!wsState.connected) {\n        log.debug(API_LOG_TAG + 'connection.resetConnection: No active websocket connection. Ignoring request.')\n        return\n      }\n      // Dispatching this action would close/cleanup existing ws connection\n      // However, we'll re-connect after that.\n      dispatch(lostConnection(undefined, platform))\n    }\n  }\n  return { connection: connectivityApi }\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { omit } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.WS_ATTEMPT_CONNECT] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_RECONNECT_FAILED] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_CONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: true,\n        method: action.payload.kandy.method,\n        platform: action.meta.platform,\n        ...omit('checkConnectivity', action.payload.kandy)\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.LOST_CONNECTION] = {\n  next (state, action) {\n    return {\n      ...state,\n      [action.meta.platform]: {\n        ...state[action.meta.platform],\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_DISCONNECT_FINISHED] = {\n  next (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.WS_ERROR] = {\n  next (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      [action.meta.platform]: {\n        connected: false,\n        pinging: false\n      }\n    }\n  }\n}\n\n/*\n  Accepts a boolean payload for checkConnectivity\n */\nreducers[actionTypes.CHANGE_CONNECTIVITY_CHECKING] = {\n  next (state, action) {\n    return {\n      ...state,\n      checkConnectivity: action.payload\n    }\n  }\n}\n\n/*\n  Accepts a payload for pingInterval in MILLISECONDS\n */\nreducers[actionTypes.CHANGE_PING_INTERVAL] = {\n  next (state, action) {\n    return {\n      ...state,\n      pingInterval: action.payload\n    }\n  }\n}\n\n/**\n * Connectivity Interface reducer\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n */\nconst reducer = handleActions(reducers, {})\nexport default reducer\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nvar events = {}\n\nevents[actionTypes.WS_CONNECT_FINISHED] = function (action) {\n  if (action.error) {\n    // TODO: Handle the error case?\n  } else {\n    return {\n      type: eventTypes.WS_CHANGE,\n      args: { platform: action.meta.platform }\n    }\n  }\n}\n\nevents[actionTypes.LOST_CONNECTION] = function (action) {\n  return {\n    type: eventTypes.WS_CHANGE,\n    args: { platform: action.meta.platform }\n  }\n}\n// TODO: Differentiate between types of disconnects?\nevents[actionTypes.WS_DISCONNECT_FINISHED] = events[actionTypes.LOST_CONNECTION]\n\n// TODO: Does an app care that we're trying to connect/reconnect?\nevents[actionTypes.WS_ATTEMPT_CONNECT] = function (action) {\n  return {\n    type: eventTypes.WS_CHANGE,\n    args: { platform: action.meta.platform }\n  }\n}\n\nexport default events\n","/**\n * The websocket to the server has changed state.\n *\n * @public\n * @memberof connection\n * @event ws:change\n * @param {Object} params\n * @param {string} params.platform The platform\n */\nexport const WS_CHANGE = 'ws:change'\n","// Connectivity plugin.\nimport { openWebsocket, cleanupWebSocket, wsEmitter } from './websocket'\nimport { getConnectivityConfig, getPingInterval, getCheckConnectivity } from '../interface/selectors'\nimport * as actionTypes from '../interface/actionTypes'\nimport * as actions from '../interface/actions'\n\n// Other plugins.\nimport { getConnectionInfo } from '../../auth/interface/selectors'\nimport { getSubscriptionInfo } from '../../subscription/interface/selectors'\nimport { logManager } from '../../logs'\n\n// Libraries.\nimport { takeEvery, delay, call, put, fork, cancel, actionChannel, race, select, take } from 'redux-saga/effects'\n\n// Constants\nimport { platforms, connCheckMethods, connCheckResponsibility } from '../../constants'\n\n// Get the logger\nconst log = logManager.getLogger('CONNECTIVITY')\n\nexport function * wsConnectFlow () {\n  log.info('Creating channel for handling websocket actions ...')\n  const chan = yield actionChannel(actionTypes.WS_ATTEMPT_CONNECT)\n  log.info('Channel successfully created.')\n  yield takeEvery(chan, websocketLifecycle)\n}\n\n/**\n * Saga that handles a websocket over its lifecycle.\n * @method websocketLifecycle\n * @param  {Object} wsConnectAction\n */\nexport function * websocketLifecycle (wsConnectAction) {\n  const wsInfo = wsConnectAction.payload\n  const { platform, isReconnect } = wsConnectAction.meta\n\n  // Redux-saga take() pattern.\n  // Take disconnect websocket action for this platform.\n  function disconnectWebsocketPattern (action) {\n    return action.type === actionTypes.WS_DISCONNECT && action.meta.platform === platform\n  }\n\n  log.info(`Connecting to websocket on platform: ${platform} ...`)\n  // Try to open the websocket, but cancel if we get a disconnect action.\n  const { websocket, disconnect } = yield race({\n    websocket: call(connectWebsocket, wsInfo, platform),\n    disconnect: take(disconnectWebsocketPattern)\n  })\n\n  // If the websocket didn't open, stop here. Dispatch the error if there was one.\n  if (disconnect) {\n    log.info('Received disconnect during websocket connection; stopping.')\n    return\n  } else if (websocket.error) {\n    if (isReconnect) {\n      yield put(actions.wsReconnectFailed(undefined, platform))\n      return\n    } else {\n      yield put(actions.wsConnectFinished(new Error(websocket.message), platform))\n      return\n    }\n  }\n\n  // Append information to the websocket, so that its accessible elsewhere.\n  // TODO: Remove this and replace with proper redux state storage.\n  const connConfig = yield select(getConnectivityConfig)\n  websocket.kandy = connConfig\n\n  websocket.kandy.wsInfo = wsInfo\n  websocket.kandy.platform = platform\n\n  // set last contact in both cases to be now\n  websocket.kandy.lastContact = Date.now()\n\n  const emitTask = yield fork(wsEmitter, websocket, platform)\n\n  // determine which pingFlow is appropriate\n  let pingFlow\n  if (websocket.kandy.method.responsibleParty === connCheckResponsibility.SERVER) {\n    log.debug(`Starting a serverPing flow on ${platform} ...`)\n    pingFlow = yield fork(serverPingFlow, websocket, platform)\n  } else {\n    log.debug(`Starting a clientPing flow on ${platform} ...`)\n    pingFlow = yield fork(clientPingFlow, websocket, platform)\n  }\n\n  // Dispatch the finish action, to notify that the websocket is connected.\n  yield put(actions.wsConnectFinished(websocket, platform))\n\n  // Redux-saga take() pattern.\n  // Take end of lifecycle WS actions for this platform.\n  function closeWebsocketPattern (action) {\n    return (\n      (action.type === actionTypes.WS_DISCONNECT ||\n        action.type === actionTypes.LOST_CONNECTION ||\n        action.type === actionTypes.WS_CLOSED ||\n        action.type === actionTypes.WS_ERROR) &&\n      action.meta.platform === platform\n    )\n  }\n\n  // Wait for a disconnect or lost connection action.\n  const action = yield take(closeWebsocketPattern)\n  log.debug(`Cancelling outstanding tasks upon receiving action: ${action.type}`)\n\n  // Whether we're disconnecting or have lost connection,\n  //      we want to cancel these tasks either way.\n  yield cancel([emitTask, pingFlow])\n\n  log.debug('Cleaning up websocket connection ...')\n  yield call(cleanupWebSocket, websocket)\n\n  if (action.type === actionTypes.WS_DISCONNECT) {\n    // If we're disconnecting, close the websocket to end it's lifecycle.\n    yield put(actions.wsDisconnectFinished(undefined, platform))\n    log.info('Successfully disconnected websocket connection.')\n  } else if (action.type === actionTypes.WS_CLOSED && action.payload.code === 1000) {\n    // 1000 signifies a normal closure\n    // Normal websocket close, don't try to reconnect\n    log.debug('Websocket closed normally.')\n    yield put(actions.wsReconnectFailed(undefined, platform))\n  } else {\n    if (websocket.kandy.autoReconnect) {\n      // If this is a Link websocket, we need to ensure the URL is using the\n      //     \"latest\" access token from state.\n      if (wsConnectAction.meta.platform === platforms.UC) {\n        log.info('Updating access token ...')\n        const { notificationChannel } = yield select(getSubscriptionInfo)\n        const { accessToken, oauthToken } = yield select(getConnectionInfo)\n        wsInfo.url = notificationChannel\n        if (oauthToken && !accessToken) {\n          wsInfo.params = {\n            access_token: oauthToken\n          }\n        } else {\n          wsInfo.params = {\n            token: accessToken\n          }\n        }\n      } else if (wsConnectAction.meta.platform === platforms.LINK) {\n        const { bearerAccessToken } = yield select(getConnectionInfo)\n        // If using bearerAccessToken and WS query mode, set the token as part\n        //    of the WS reconnect query string.\n        if (bearerAccessToken && connConfig.webSocketOAuthMode === 'query') {\n          wsInfo.params = {\n            token: bearerAccessToken\n          }\n        }\n      }\n\n      // If we've lost connection, re-dispatch the initial action, so that we can\n      //      start the lifecycle over.\n      log.debug('Attempting to reconnect using a new websocket ...')\n      yield put(actions.wsAttemptConnect(wsInfo, wsConnectAction.meta.platform, true))\n    } else {\n      log.debug('Not attempting to reconnect to websocket autoReconnect is false.')\n      yield put(actions.wsReconnectFailed(undefined, platform))\n    }\n  }\n}\n\n/**\n * if we receive a server ping we want to respond with a pong,\n * if there is none we want to check to see if its been too long since the server last pinged us and if it has been then reconnect,\n * otherwise we just want to increment the time since the last ping\n * @param {Object} ws a websocket connected to the backend\n * @return {Object} yields a Flux standard action\n */\nexport function * serverPingFlow (ws) {\n  const { lastContact, platform, maxMissedPings, autoReconnect } = ws.kandy\n  let timeOfLastPing = Date.now()\n  const { pingInterval: configPingInterval } = yield select(getConnectivityConfig)\n  if (configPingInterval) {\n    log.warn(\n      '`connectivity.pingInterval` has been set, but `connectivity.method.responsibleParty` is set to `server`. ' +\n        `The configured value of ${configPingInterval}ms will be ignored.`\n    )\n  }\n\n  while (true) {\n    /**\n     * //TODO: Get rid of this use of getPingInterval\n     * The server doesn't even use this interval, it uses whatever the server is set to\n     * It gets an undefined value, sets it to 120 seconds, and when the server responds switched to that timeout.\n     * See KJS-58 for a discussion of the problem, and KAA-2215 for a long-term solution\n     */\n    let pingInterval = yield select(getPingInterval)\n    pingInterval = typeof pingInterval !== 'undefined' ? pingInterval : 120000\n    const maxIdleDuration = pingInterval * maxMissedPings\n    log.debug(`serverPing: Using ping interval: ${pingInterval} with maximum idle duration: ${maxIdleDuration}`)\n\n    // wait for incoming server pings or disconnect actions on an interval\n    const { serverPing, disconnect } = yield race({\n      expiry: delay(pingInterval),\n      serverPing: take(actionTypes.RECEIVE_SERVER_PING),\n      disconnect: take(actionTypes.WS_DISCONNECT_FINISHED)\n    })\n\n    // is disconnect action received then exit\n    if (disconnect) {\n      log.debug('Got disconnect action. Exiting from serverPing flow ...')\n      break\n    }\n\n    if (serverPing) {\n      // server sent us a ping so reset the timeSinceLastPing\n      timeOfLastPing = Date.now()\n\n      // pingInterval is stored in milliseconds but comes in as seconds so convert\n      const pingIntervalMillis = serverPing.payload.connCheck.interval * 1000\n      // Prevent firing actions if pingInterval hasn't changed\n      if (pingIntervalMillis !== pingInterval) {\n        yield put(actions.changePingInterval(pingIntervalMillis, platform))\n      }\n\n      const message = { connAck: {} }\n      log.debug(\n        `Received a server ping which uses interval: ${pingIntervalMillis} ms. ${platform} is replying with message: ${message}`\n      )\n      const error = _sendWSMessage(ws, JSON.stringify(message))\n\n      // if the pong websocket message has an error then try to reconnect\n      if (error) {\n        log.error(`Got error when attempting to reply: ${error.message}`)\n        if (autoReconnect) {\n          log.info('Trying to auto reconnect ...')\n        }\n        yield put(actions.lostConnection(undefined, platform))\n        break\n      }\n    } else {\n      if (Date.now() - timeOfLastPing >= maxIdleDuration) {\n        log.warn('Closing websocket due to inactivity. (have not received pong from server)', platform)\n\n        // try to reconnect or exit\n        if (autoReconnect) {\n          log.debug(`${platform} is attempting to auto reconnect ...`)\n        }\n        yield put(actions.lostConnection(undefined, platform))\n        break\n      } else {\n        log.debug(`${platform} websocket last contact: ${lastContact}. Reconnect after ${maxIdleDuration}.`)\n      }\n    }\n  }\n}\n\n/**\n * This flow is responsible for handling keepAlive and pingPong methods for client,\n * if keepAlive is used the client simply sends the keepAlive message to the websocket after waiting the pingInterval\n * if pingPong is used the client is responsible for pinging the server and listening for server \"pong\" responses via the websocket\n * the client will then determine if too much time has passed and attempt to reconnect if its not receiving server pongs or if an error occurs\n * @param {Object} ws a websocket connected to the backend\n * @return {Object} yields a Flux standard action\n */\nexport function * clientPingFlow (ws) {\n  const { lastContact, platform, maxMissedPings, autoReconnect } = ws.kandy\n  const { checkConnectivity, method } = yield select(getConnectivityConfig)\n\n  let timeOfLastPong = Date.now()\n  let message = ''\n  let shouldCheck\n\n  while (true) {\n    // If the flag was explicitly set in state, prefer that over the config.\n    shouldCheck = yield select(getCheckConnectivity)\n    shouldCheck = typeof shouldCheck !== 'undefined' ? shouldCheck : checkConnectivity\n\n    const { pingInterval } = yield select(getConnectivityConfig)\n    const maxIdleDuration = pingInterval * maxMissedPings\n    const intervalInSeconds = pingInterval / 1000\n\n    if (shouldCheck) {\n      if (method.type === connCheckMethods.PING_PONG) {\n        message = { connCheck: { interval: intervalInSeconds } }\n      } else if (method.type === connCheckMethods.KEEP_ALIVE) {\n        message = { message_type: 'ping' }\n      } else {\n        log.error(`Invalid connectivity method: ${method}`)\n        break\n      }\n\n      log.debug(`${platform} is sending a ${method.type} every ${intervalInSeconds} sec.`)\n\n      const error = _sendWSMessage(ws, JSON.stringify(message))\n      if (error) {\n        log.error('Exception in clientPing flow: ' + error.message)\n        if (autoReconnect) {\n          log.debug(`${platform} is attempting to auto reconnect ...`)\n        }\n        yield put(actions.lostConnection(undefined, platform))\n        break\n      }\n    } else {\n      log.debug('Set to not check websocket connectivity. Waiting for connectivity status change ...')\n\n      // If we shouldn't ping, wait until we receive a trigger to (maybe) ping.\n      const shouldCheckConnectivity = yield take(\n        action => action.type === 'CHANGE_CONNECTIVITY_CHECKING' && action.payload\n      )\n      log.debug(`Connectivity check setting changed. Check connectivity?: ${shouldCheckConnectivity}`)\n      continue\n    }\n\n    const delayStartTime = Date.now()\n    // Wait for either the ping interval, a disconnect or a pong from the server\n    const { disconnect, serverPong } = yield race({\n      expiry: delay(pingInterval),\n      serverPong: take(actionTypes.RECEIVE_SERVER_PONG),\n      disconnect: take(actionTypes.WS_DISCONNECT_FINISHED)\n    })\n\n    // If we receive a serverPong, we will not have waited the full pingInterval duration.\n    //    Determine how long we were waiting for, so that we know how long to wait (again)\n    //    to fulfill the full pingInterval duration (before restarting the ping loop).\n    const timeElapsed = Date.now() - delayStartTime\n\n    // If we received a disconnect action, stop the pings and exit.\n    if (disconnect) {\n      log.debug('Got disconnect action. Exiting from clientPing flow ...')\n      break\n    }\n\n    if (method.type === connCheckMethods.PING_PONG) {\n      if (serverPong) {\n        // we received a pong, wait pingInterval to send another ping\n        timeOfLastPong = Date.now()\n\n        const timeUntilNextPing = pingInterval - timeElapsed\n        const { disconnect } = yield race({\n          expiry: delay(timeUntilNextPing),\n          disconnect: take(actionTypes.WS_DISCONNECT_FINISHED)\n        })\n        // If we received a disconnect action, stop the pings and exit.\n        if (disconnect) {\n          log.debug('Got disconnect action. Exiting from clientPing flow ...')\n          break\n        }\n      } else {\n        if (Date.now() - timeOfLastPong >= maxIdleDuration) {\n          log.warn('Closing websocket due to inactivity. (have not received pong from server)', platform)\n\n          // its been too long since the last pong, attempt to reconnect or exit\n          yield put(actions.lostConnection(undefined, platform))\n\n          break\n        } else {\n          log.debug(`${platform} websocket last contact: ${lastContact}. Reconnect after ${maxIdleDuration}.`)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Generic Websocket message that takes a websocket and a message and sends it\n * @param  {Object} ws  websocket\n * @return {Object}     Error object\n */\nfunction _sendWSMessage (ws, message) {\n  try {\n    if (ws && ws.readyState === 1) {\n      log.debug('Sending message on websocket.', message)\n      ws.send(message)\n    } else {\n      throw new Error('websocket was not in readyState')\n    }\n  } catch (e) {\n    return e\n  }\n}\n\n/**\n * Helper function for connecting to a websocket.\n * Attempts to connect a specified number of times before returning an error.\n * Includes a delay in between attempts, determined by configs.\n * @method connectWebsocket\n * @param  {Object} wsInfo\n * @return {Websocket|Object}  Either a connected websocket or an error object.\n */\nexport function * connectWebsocket (wsInfo, platform) {\n  const configs = yield select(getConnectivityConfig)\n  let connectionAttempt = 0\n  // The delay between attempts should not be shorter than 2 seconds.\n  let delayTime = configs.reconnectDelay > 2000 ? configs.reconnectDelay : 2000\n  let websocket\n\n  // If no limit is set, we will continually attempt to reconnect.\n  if (!configs.reconnectLimit) {\n    log.debug('No connectivity reconnect limit set.')\n  }\n\n  function * safeOpenWs (wsInfo) {\n    let websocket\n    try {\n      websocket = yield call(openWebsocket, wsInfo)\n    } catch (err) {\n      websocket = err\n    }\n    return websocket\n  }\n  while (connectionAttempt < configs.reconnectLimit || !configs.reconnectLimit) {\n    const wsConnectStart = Date.now()\n    const { openWs, timeout } = yield race({\n      openWs: call(safeOpenWs, wsInfo),\n      timeout: delay(delayTime)\n    })\n    const attemptDuration = Date.now() - wsConnectStart\n\n    // Checking for both timeout and open websocket errors here since we need to calculate the next delay parameters in\n    //  both scenarios\n    if (timeout || (openWs && openWs.error)) {\n      connectionAttempt++\n      websocket = openWs\n      log.debug(\n        `Failed to connect to websocket on ${platform}. (Attempt #${connectionAttempt}). Message: ${\n          timeout ? 'Timed out' : websocket.message\n        }.`\n      )\n\n      // If we are still under the reconnect attempt limit, calculate the next delay time and delay before retrying.\n      if (connectionAttempt < configs.reconnectLimit || !configs.reconnectLimit) {\n        // Calculate the remaining delay time by checking how long the previous connection attempt was.\n        // Do this before potentially lengthening the `delayTime` value.\n        const remainingDelay = timeout ? 0 : delayTime - attemptDuration\n\n        // Increase the delay time for the next loop if we're not at the limit.\n        if (delayTime !== configs.reconnectTimeLimit) {\n          delayTime = configs.reconnectDelay * Math.pow(configs.reconnectTimeMultiplier, connectionAttempt)\n          delayTime = delayTime < configs.reconnectTimeLimit ? delayTime : configs.reconnectTimeLimit\n        }\n\n        log.debug(`Websocket will attempt to reconnect after ${remainingDelay} ms on ${platform}`)\n        if (remainingDelay > 0) {\n          yield delay(remainingDelay)\n        }\n      } else {\n        log.debug(`Stopping websocket connection attempts on ${platform}.`)\n        // We are at reconnect attempt limit; if it was due to a timeout we need to return an error. In case of\n        //  websocket error, that will be returned by the websocket.\n        if (timeout) {\n          return {\n            error: true,\n            message: 'Timed out.'\n          }\n        }\n        break\n      }\n    } else if (openWs) {\n      websocket = openWs\n      break\n    }\n  }\n\n  // Return either the websocket or the latest error.\n  return websocket\n}\n","import { wsClosed, wsError, receiveServerPing, receiveServerPong } from '../interface/actions'\nimport { eventChannel, END, buffers } from 'redux-saga'\nimport { take, put, call } from 'redux-saga/effects'\n\nimport { toQueryString } from '../../common/utils'\n\n// Other plugins.\nimport { websocketNotification } from '../../notifications/interface/actions'\nimport { logManager } from '../../logs'\n\nconst INITIAL_BUFFER_SIZE = 50\nconst log = logManager.getLogger('CONNECTIVITY')\n\n/**\n * Create a new websocket.\n * @method openWebsocket\n * @param  {Object} options Websocket configuration options.\n * @param {string} options.protocol Websocket protocol to use.\n * @param {string} options.server Websocket hostname.\n * @param {string} options.port Websocket port to use.\n * @param {string} options.url Websocket notification channel.\n * @param {Object} options.params A list of URL params to attach to the websocket.\n * @return {WebSocket} ws Newly connected websocket.\n */\nexport function openWebsocket (options) {\n  // Create the websocket.\n  const ws = new WebSocket(\n    `${options.protocol}://${options.server}:${options.port}${options.url}` + toQueryString(options.params)\n  )\n\n  // Use a promise to wait for the first message from the websocket.\n  // This indicates whether the WS opened successfully or not.\n  const validateWS = new Promise((resolve, reject) => {\n    const onOpen = function () {\n      ws.onopen = null\n      ws.onerror = null\n      resolve(ws)\n    }\n    const onError = function () {\n      ws.onopen = null\n      ws.onerror = null\n\n      // TODO: Fix this?\n      /* eslint-disable-next-line prefer-promise-reject-errors */\n      reject({\n        // Websocket doesn't return error codes for security reasons and as such all websocket\n        // errors have to be handled the same.\n        error: true,\n        message: 'Could not connect to websocket. Received error on open.'\n      })\n    }\n    ws.onopen = onOpen\n    ws.onerror = onError\n  })\n  return validateWS\n}\n\n/**\n * Clean-up a provided websocket.\n * @method cleanupWebSocket\n * @param  {Websocket} ws Websocket to be cleaned-up.\n * @return {Websocket} ws The websocket after being cleaned.\n */\nexport function cleanupWebSocket (ws) {\n  if (ws.close) {\n    ws.close()\n  }\n  ws.onclose = null\n  ws.onmessage = null\n  ws.onopen = null\n  ws.onerror = null\n}\n\n/**\n * Create an event channel for a given websocket\n * @param  {WebSocket} ws       The websocket to make an event channel for.\n * @param {string} [platform=link]    The backend platform associated with the websocket.\n * @return {EventChannel}              The event channel corresponding to the WebSocket\n */\nfunction createWsChannel (ws, platform) {\n  // this function handles server messages\n  return eventChannel(emit => {\n    // Define handlers\n    ws.onmessage = message => {\n      // Mark this websocket are being connected as of now.\n      ws.kandy.lastContact = Date.now()\n\n      var data = JSON.parse(message.data)\n      log.debug('Received message on websocket.', data)\n      if (data.connCheck) {\n        // Handle CPaaS server pings\n        emit(receiveServerPing(data, platform))\n      } else if (data.connAck) {\n        // Handle CPaaS server pongs\n        emit(receiveServerPong(data, platform))\n      } else {\n        emit(websocketNotification(data, platform))\n      }\n    }\n    ws.onclose = data => {\n      emit(wsClosed(data, platform))\n      emit(END)\n    }\n    ws.onerror = err => {\n      emit(wsError(new Error(err), platform))\n      emit(END)\n    }\n\n    return () => cleanupWebSocket(ws)\n  }, buffers.expanding(INITIAL_BUFFER_SIZE))\n}\n\n/**\n * Saga worker for creating a websocket and emitting its events\n * @param {Object} ws configuration options.\n * @param {string} [platform=link]    The backend platform associated with the websocket.\n * @return {Generator}\n */\nexport function * wsEmitter (ws, platform) {\n  var wsChannel = yield call(createWsChannel, ws, platform)\n  while (true) {\n    const action = yield take(wsChannel)\n    yield put(action)\n  }\n}\n","// Messaging plugin.\nimport pluginInterface from './interface'\nimport * as sagas from './sagas'\nimport eventsMap from './interface/events'\n\n// Other plugins.\nimport { mapEvents } from '../../events/interface/actions'\nimport { update as updateConfig } from '../../config/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { defaults, values } from 'lodash/fp'\n\n// Parse and/or Validate\nimport { validation as v8n, parse } from '../../../src/common/validation'\n\nconst defaultOptions = {\n  features: ['base', 'history', 'rich', 'parts', 'isTyping']\n}\n\nconst v8nValidation = v8n.schema({\n  features: v8n.array().every.string()\n})\nconst parseOptions = parse('messaging', v8nValidation)\n\n/**\n * Factory function for the CPaaS messaging plugin.\n * @method cpaasMessaging\n * @param  {Object} [options={}]\n * @param  {Array} [options.features=['base', 'history', 'rich', 'parts', 'isTyping']] A list of the supported features of messaging\n * @return {Object} A plugin object.\n */\nexport default function cpaasMessaging (options = {}) {\n  options = defaults(defaultOptions, options)\n  parseOptions(options)\n\n  function * init () {\n    yield put(updateConfig(options, pluginInterface.name))\n    yield put(mapEvents(eventsMap))\n  }\n\n  const capabilities = [\n    'sms',\n    'chat',\n    'parts',\n    'history',\n    'internalAndSmsMessaging',\n    'isTyping',\n    'richMessagingWithoutLocation',\n    'fetchConversations',\n    'fetchSmsConversations'\n  ]\n\n  return {\n    capabilities,\n    api: pluginInterface.api,\n    name: pluginInterface.name,\n    reducer: pluginInterface.reducer,\n    mixins: pluginInterface.mixins,\n    sagas: values(sagas),\n    init\n  }\n}\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\nimport mixins from './mixins'\n\n/**\n * This interface is for a messaging plugin.\n * @type {string}\n */\nconst name = 'messaging'\n\nexport default {\n  name,\n  api,\n  reducer,\n  mixins\n}\n","/**\n * The messaging feature revolves around a 'conversation' namespace. It is responsible for storing the conversations\n * and its messages, and returning conversation objects when requested.\n *\n * See the \"Conversation\" and \"Message\" sections of the documentation for more details.\n *\n * Available conversations can be retrieved using the {@link conversation.get}\n *    or {@link conversation.getAll} APIs.\n *\n * Messaging functions are all part of the 'conversation' namespace. Ex: {@link messaging.getAll client.conversation.getAll}\n *\n * @public\n * @namespace conversation\n */\n\nimport { convoActions } from './actions'\nimport { getConversations as selectConversations, findConversation } from './selectors'\nimport { getSubscriptions } from '../../../subscription/interface/selectors'\nimport { logManager, API_LOG_TAG } from '../../../logs'\nimport { chatTypes, chatTypeAliases } from '../../mappings'\n// Retrieve logger\nconst log = logManager.getLogger('Messaging')\n\nexport default function api (context) {\n  const messagingApi = {\n    /**\n     * Fetches chat conversations that the current user is part of. This will refresh\n     * the available information with any new information from the server.\n     *\n     * If successful, the event {@link conversation.event:conversations:change conversations:change} will be emitted.\n     *\n     * Available conversation information can be retrieved using the\n     *    {@link conversation.get} or {@link conversation.getAll} Messaging\n     *    APIs.\n     *\n     * @public\n     * @static\n     * @method fetch\n     * @memberof conversation\n     * @param {Object} [options] A configuration object to query for more specific results.\n     * @param {string} [options.type='chat-oneToOne'] The type of conversation to fetch. See {@link conversation.chatTypes} for valid types.\n     */\n    fetch: function (options = {}) {\n      log.debug(API_LOG_TAG + 'conversation.fetch: ', options)\n      // convert chat chatTypes to CPaaS values\n      if (options.type) {\n        options.type = chatTypeAliases[options.type]\n      }\n      context.dispatch(convoActions.fetchConversations(options))\n    },\n    /**\n     * Retrieves a conversation object matching the User ID and Type provided if available.\n     *\n     * Conversations are made available using the {@link conversation.fetch} or\n     *    {@link conversation.create} Messaging APIs.\n     *\n     * @public\n     * @static\n     * @method get\n     * @memberof conversation\n     * @param {string} recipient The User ID of the remote user with which the current user had a conversation.\n     * @param {Object} [options] Options used to query for more specific results.\n     * @param {string} [options.type='chat-oneToOne'] The type of conversation to get. See {@link conversation.chatTypes} for valid types.\n     * @returns {conversation.Conversation} A Conversation object.\n     */\n    get: function (recipient, options = { type: chatTypes.ONETOONE }) {\n      log.debug(API_LOG_TAG + 'conversation.get: ', recipient, options)\n      // convert chat chatTypes to CPaaS values\n      options.type = chatTypeAliases[options.type]\n      const destination = Array.isArray(recipient) ? [...recipient] : [recipient]\n      let description = 'Conversation'\n      let messages\n      let id\n      const conversation = findConversation(context.getState(), destination, options.type)\n      if (conversation) {\n        if (options.type === conversation.type) {\n          description = conversation.description\n          messages = conversation.messages\n          id = conversation.id\n\n          return context.primitives.Conversation({\n            destination,\n            type: options.type,\n            id: id,\n            description,\n            messages: messages,\n            isTypingList: conversation.isTypingList,\n            lastReceived: conversation ? conversation.lastReceived : undefined,\n            lastPull: conversation ? conversation.lastPull : undefined\n          })\n        } else {\n          log.info(\n            'Conversation found with matching destination, but conversation type does not match the type requested. Please specify the appropriate type, or call client.conversation.create() for a new type of conversation'\n          )\n        }\n      } else {\n        log.info(\n          'Requested conversation not in state. Please use the create function if you would like a new conversation object'\n        )\n      }\n      return undefined\n    },\n    /**\n     * Creates and return a new conversation object. Any messages being sent through this Conversation\n     * object will be sent to the destination provided.\n     *\n     * If successful, the event {@link conversation.event:conversations:new conversations:new} will be emitted.\n     *\n     * @public\n     * @static\n     * @method create\n     * @memberof conversation\n     * @param {string} recipient The ID of the remote user to create a conversation with. The ID will be changed to lowercase.\n     * @param {Object} [options] Options to use when creating a new conversation object.\n     * @param {string} [options.type='chat-oneToOne'] The type of conversation to create. See {@link conversation.chatTypes} for valid types.\n     * @returns {conversation.Conversation} A Conversation object.\n     */\n    create: function (recipient, options = { type: chatTypes.ONETOONE }) {\n      log.debug(API_LOG_TAG + 'conversation.create')\n      // convert chat chatTypes to CPaaS values\n      options.type = chatTypeAliases[options.type]\n\n      const recipients = Array.isArray(recipient) ? recipient : [recipient]\n\n      const destination = recipients.map(recipient => recipient.toLowerCase())\n\n      const prevConv = findConversation(context.getState(), destination, options.type)\n\n      if (!prevConv) {\n        if (options.type === chatTypes.SMS) {\n          // When creating an SMS conversation, provide both sender & receiver information\n          // because sender can use different phone numbers to login from multiple places.\n          // The sender's phone number will actually come from 'destinationAddress' of the registered subscription for 'smsinbound'.\n          const subscriptions = getSubscriptions(context.getState(), 'smsinbound', 'websocket')\n          let sender\n          if (subscriptions.length > 0) {\n            // [0]: There should be only one subscription for the given service & given channel type\n            sender = subscriptions[0].destinationAddress\n          } else {\n            // Backwards compatibility which eventually needs to be phased out/deprecated.\n            sender = context.getState().config.messaging.smsFrom\n          }\n\n          context.dispatch(convoActions.createConversation(destination, options, sender))\n        } else {\n          // For chat & group, receiver information is enough.\n          context.dispatch(convoActions.createConversation(destination, options))\n        }\n      }\n\n      return context.primitives.Conversation({\n        destination,\n        type: options.type\n      })\n    },\n    /**\n     * Retrieves all available conversations for the current user.\n     *\n     * Conversations are made available using the {@link conversation.fetch} or\n     *    {@link conversation.create} Messaging APIs.\n     *\n     * @public\n     * @static\n     * @method getAll\n     * @memberof conversation\n     * @returns {Array<conversation.Conversation>} An array of Conversation objects.\n     */\n    getAll: function () {\n      log.debug(API_LOG_TAG + 'conversation.getAll')\n      const conversations = selectConversations(context.getState())\n\n      // Map conversation Objects to Conversation-Mixin Objects\n      return conversations.map(conversation => context.primitives.Conversation(conversation))\n    },\n\n    /**\n     * Possible types of conversations.\n     * @public\n     * @static\n     * @typedef {Object} chatTypes\n     * @memberof conversation\n     * @type {Object}\n     * @property {string} ONETOONE A simple chat between two users.\n     * @property {string} GROUP A chat between groups of users\n     * @property {string} SMS A chat using SMS.\n     * @example\n     * // Use the chat types to fetch group conversations.\n     * client.conversation.fetch({type: client.conversation.chatTypes.GROUP}) {\n     */\n    chatTypes\n  }\n  return { conversation: messagingApi }\n}\n","import * as actionTypes from '../actionTypes'\nimport { chatTypes } from '../../../mappings'\n\n/**\n * Action helper functions.\n */\n\nfunction sendMessageHelper (actionType, destination, parts, timestamp, type, id) {\n  return {\n    type: actionType,\n    payload: {\n      destination,\n      id: id,\n      message: {\n        timestamp,\n        isPending: true,\n        read: false,\n        parts,\n        type\n      }\n    }\n  }\n}\n\nfunction messageReadHelper (actionType, messageId, participant) {\n  return {\n    type: actionType,\n    payload: { messageId, participant }\n  }\n}\n\n/**\n * Message actions.\n * Actions about the CRUD of message objects.\n */\n\n/**\n * An action fired when a delivery receipt is received\n *\n * @method deliveryReceiptReceived\n * @param {string} messageId the id of the sent message\n * @param {string} deliveryStatus the status of sent message\n * @param {Array<string>} destination An array of destinations for messages created in this conversation.\n * @param {string} type Type of message. 'chat-oneToOne', 'chat-group' or 'sms'.\n * @returns {Object} A flux standard action representing the send message action.\n */\nexport const deliveryReceiptReceived = (messageId, deliveryStatus, destination, type) => {\n  return {\n    type: actionTypes.RECEIVE_DELIVERY_RECEIPT,\n    payload: { messageId, deliveryStatus, destination, type }\n  }\n}\n\n/**\n * Creates a send message action. Triggered when the user initiates the send message process.\n *\n * @method sendMessage\n * @param {Array<string>} destination An array of destinations for messages created in this conversation.\n * @param {Array<part>} parts The message parts, as a formatted object.\n * @param {number} timestamp A timestamp for the sent message.\n * @param {string} type Type of message. 'chat-oneToOne', 'chat-group' or 'sms'.\n * @param {number} id The ID of the conversation as it exists in the back end.\n * @returns {Object} A flux standard action representing the send message action.\n */\nexport const sendMessage = (destination, parts, timestamp, type, id) =>\n  sendMessageHelper(actionTypes.SEND_MESSAGE, destination, parts, timestamp, type, id)\n\n/**\n * Creates a send message finished action. Trigged when a message send function has received a success response.\n *\n * @method sendMessageFinish\n * @param {Object} params\n * @param {Array<string>} params.destination An array of destinations for messages created in this conversation.\n * @param {string} params.sender The sender of the outgoing message.\n * @param {string} params.type The type of conversation: can be one of 'chat-oneToOne', 'chat-group' or 'sms'\n * @param {Array<part>} params.parts The message parts.\n * @param {number} params.timestamp A timestamp for the sent message.\n * @param {string} [params.messageId] The returned messageId of the message if sent successfully.\n * @param {string} [params.deliveryStatus] The status of sent message\n * @param {Object} [params.error] A basic error object\n * @returns {Object} A flux standard action representing the send message finished action.\n */\nexport const sendMessageFinish = ({\n  destination,\n  sender,\n  type,\n  parts,\n  timestamp,\n  messageId,\n  deliveryStatus,\n  error\n}) => {\n  return {\n    type: actionTypes.SEND_MESSAGE_FINISH,\n    payload: { destination, sender, type, parts, timestamp, messageId, deliveryStatus, error },\n    error: Boolean(error)\n  }\n}\n\n/**\n * Creates a message received action. Triggered when the websocket receives a chat message.\n *\n * @method messageReceived\n * @param {Array<string>} destination An array of destinations for messages created in this conversation.\n * @param {Array<part>} parts The message parts.\n * @param {string} messageId The messageId of the message that has been received.\n * @param {string} sender The user who sent the message. This is the user who the conversation is with.\n * @param {number} timestamp A timestamp for the sent message.\n * @param {Object} meta - A meta object.\n * @param {string} meta.type The type of conversation: can be one of \"chat-oneToOne\", \"chat-group\" or \"sms\".\n * @param {boolean} meta.newConversation - A boolean value indicating whether the message corresponds to a conversation not yet in the store.\n * @returns {Object} A flux standard action representing the message received action.\n */\nexport function messageReceived (\n  destination,\n  parts,\n  messageId,\n  sender,\n  timestamp,\n  meta = { type: chatTypes.ONETOONE, newConversation: false }\n) {\n  return {\n    type: actionTypes.MESSAGE_RECEIVED,\n    meta: meta,\n    payload: {\n      destination: destination,\n      message: {\n        timestamp: timestamp,\n        isPending: false,\n        read: false,\n        parts: parts,\n        sender: sender,\n        messageId: messageId\n      }\n    }\n  }\n}\n\n/**\n * Creates an incoming message read action. This triggers when we receive a \"Message Read\" notification over the websocket.\n *\n * @method incomingMessageRead\n * @param {string} messageId The unique id of the message being marked as read.\n * @param {string} participant The other participant of the conversation.\n * @returns {Object} A flux standard action representing the incoming message read action.\n */\nexport const incomingMessageRead = (messageId, participant) =>\n  messageReadHelper(actionTypes.INCOMING_MESSAGE_READ, messageId, participant)\n\n/**\n * Creates a send message read action. This should send a \"mark message as read\" request to the server.\n *\n * @method sendMessageRead\n * @param {string} messageId The unique id of the message being marked as read.\n * @param {string} participant The other participant of the conversation.\n * @returns {Object} A flux standard action representing the send message read action.\n */\nexport const sendMessageRead = (messageId, participant) =>\n  messageReadHelper(actionTypes.SEND_MESSAGE_READ, messageId, participant)\n\n/**\n * Creates a send message read finish action. This triggers on server response when attempting to mark a message read.\n *\n * @method sendMessageReadFinish\n * @param {Object} params\n * @param {string} params.messageId The unique id of the message being marked as read.\n * @param {string} params.participant The other participant of the conversation.\n * @param {Object} params.error A Basic error object.\n * @returns {Object} A flux standard action representing the send message read finish action.\n */\nexport function sendMessageReadFinish ({ messageId, participant, error }) {\n  return {\n    type: actionTypes.SEND_MESSAGE_READ_FINISH,\n    payload: error || { messageId, participant },\n    error: Boolean(error)\n  }\n}\n\n/**\n * Creates a fetch messages action. This is dispatched by the API directly.\n * @method fetchMessages\n * @param {string} id The ID of the conversation whose messages are about to be fetched.\n * @param {Array<string>} destination An array of destinations for messages created in this conversation.\n * @param {number} amount A number representing the amount of messages to fetch.\n * @param {string} type The type of conversation: can be one of \"chat-oneToOne\", \"chat-group\" or \"sms\".\n * @returns {Object} A flux standard action representing the fetch messages action.\n */\nexport function fetchMessages (id, destination, amount, type) {\n  return {\n    type: actionTypes.FETCH_MESSAGES,\n    payload: { id, destination, amount, type }\n  }\n}\n\n/**\n * Creates a fetch messages finished action.\n * @method fetchMessagesFinished\n * @param {Array<string>} destination An array of destinations for messages created in this conversation.\n * @param {string} type The type of conversation: can be one of \"chat-oneToOne\", \"chat-group\" or \"sms\".\n * @param {Array<message>} messages An array of formatted messages to put into the store.\n * @param {Object} [error] An error object, only present if an error occurred.\n * @returns {Object} A flux standard action representing the fetch messages finished action.\n */\nexport function fetchMessagesFinished (destination, type, messages, error) {\n  return {\n    type: actionTypes.FETCH_MESSAGES_FINISHED,\n    payload: error || { destination, type, messages },\n    error: !!error\n  }\n}\n\n/**\n * Request to clear messages from a conversation's state.\n * @method clearMessages\n * @param  {string} destination The destination for messages created in this conversation.\n * @param {string} type The type of conversation: can be one of 'chat-OneToOne', 'chat-group' or 'sms'.\n * @returns {Object} A flux standard action.\n */\nexport function clearMessages (destination, type) {\n  return {\n    type: actionTypes.CLEAR_MESSAGES,\n    payload: {\n      destination: destination,\n      type: type\n    }\n  }\n}\n\n/**\n * Request to delete all the messages from a conversation.\n * @method deleteMessage\n * @param {string} id The conversation id whose message is in the process of being deleted.\n * @param  {string} destination The destination for messages created in this conversation.\n * @param {string} type The type of conversation: can be one of \"chat-oneToOne\", \"chat-group\" or \"sms\".\n * @param {string} messageId The ID of the message targeted for deletion\n * @returns {Object} A flux standard action.\n */\nexport function deleteMessage (id, destination, type, messageId) {\n  return {\n    type: actionTypes.DELETE_MESSAGE,\n    payload: {\n      id: id,\n      destination: destination,\n      type: type,\n      messageId: messageId\n    }\n  }\n}\n\n/**\n * Creates a fetch messages finished action.\n * @method deleteMessageFinish\n * @param {Object} params\n * @param {Array} params.destination An array of destinations for messages created in this conversation.\n * @param {string} params.type The type of conversation: can be one of \"chat-oneToOne\", \"chat-group\" or \"sms\".\n * @param {string} params.messageId The ID of the message that was targeted for deletion\n * @param {Object} [params.error] An error object, only present if an error occurred.\n * @returns {Object} A flux standard action representing the fetch messages finished action.\n */\nexport function deleteMessageFinish ({ destination, type, messageId, error }) {\n  return {\n    type: actionTypes.DELETE_MESSAGE_FINISH,\n    payload: error || { destination, type, messageId },\n    error: !!error\n  }\n}\n\n/**\n * Returns a get image links action\n * @method getImageLinks\n * @param {Object} params\n * @param {Array} params.parts the different parts of the message\n * @param {string} params.destination the destination address(es)\n * @param {string} params.type The type of conversation: can be one of \"chat-oneToOne\", \"chat-group\" or \"sms\".\n * @param {string} params.messageId id for looking up the message\n * @returns {Object}\n */\nexport function getImageLinks ({ parts, destination, type, messageId }) {\n  return {\n    type: actionTypes.GET_IMAGE_LINKS,\n    payload: { parts, destination, type, messageId }\n  }\n}\n\n/**\n * Returns a get image links finish action\n * @method getImageLinksFinish\n * @param {Object} params\n * @param {string} params.url the url that returns an attachment\n * @param {string} params.rawURL the url returned when we upload an image\n * @param {Array} params.destination the destination address(es)\n * @param {string} params.type The type of conversation: can be one of \"chat-oneToOne\", \"chat-group\" or \"sms\".\n * @param {string} params.messageId id for looking up the message\n * @param {Object} [params.error] a standard error object\n * @returns {Object}\n */\nexport function getImageLinksFinish ({ url, rawURL, destination, type, messageId, error }) {\n  return {\n    type: actionTypes.GET_IMAGE_LINKS_FINISH,\n    payload: error || { url, rawURL, destination, type, messageId },\n    error: !!error\n  }\n}\n","import * as actionTypes from '../actionTypes'\n\n/**\n * Conversation actions.\n * Actions relating to the creation/management of conversation objects.\n */\n\n/**\n * Creates a create conversation action. Triggered when the user creates a new conversation object.\n *\n * @method createConversation\n * @param {Array<string>} destination An array of destinations for messages created in this conversation.\n * @param {Object} options The options object can contain any keys an app may want passed along into the conversation object in the store.\n * @param {string} source An optional parameter indicating the source of any messages created in this conversation.\n *        Applies only for sms type of conversations.\n * @returns {Object} A flux standard action representing the create conversation action.\n */\nexport function createConversation (destination, options, source) {\n  // Assumption here is that if 'source' param is passed, then 'options' must be passed to explicitly specify that this is for sms.\n  if (options && options.type === 'sms' && source) {\n    return {\n      type: actionTypes.CREATE_CONVERSATION,\n      payload: {\n        id: source + '--' + destination,\n        source: source,\n        destination: destination,\n        messages: [],\n        isTypingList: [],\n        ...options\n      }\n    }\n  }\n\n  return {\n    type: actionTypes.CREATE_CONVERSATION,\n    payload: {\n      destination: destination,\n      messages: [],\n      isTypingList: [],\n      ...options\n    }\n  }\n}\n\n/**\n * Creates a fetch conversations action. This is dispatched by the API directly.\n * @param {Object} [options] An optional configuration object to query for more specific results. If no object is passed, all conversations will be retrieved\n * @method fetchConversations\n * @returns {Object} A flux standard action representing the fetch conversations action.\n */\nexport function fetchConversations (options) {\n  return {\n    type: actionTypes.FETCH_CONVERSATIONS,\n    payload: {\n      ...options\n    }\n  }\n}\n\n/**\n * Creates a fetch conversations finished action.\n * @method fetchConversationsFinished\n * @param {Object} params\n * @param {Array<conversation>} [params.conversations] An array of conversation objects, if fetch was successful\n * @param {Object} [params.error] An error object, only included if fetchConversations implementation had an error.\n * @returns {Object} A flux standard action representing the fetch conversations finished action.\n */\nexport function fetchConversationsFinished ({ conversations, error }) {\n  return {\n    type: actionTypes.FETCH_CONVERSATIONS_FINISHED,\n    payload: error || { conversations },\n    error: Boolean(error)\n  }\n}\n\n/**\n * Creates an update conversation action.\n *\n * @method updateConversation\n * @param {Object} conversation The conversation object\n * @param {Array<string>} conversation.destination An array of strings representing the destinations for messages that are sent from this conversation object. This property is always required, as it is the primary property by which conversations are organized in messaging plugin\n * @param {number} [conversation.id] The conversation object's corresponding ID\n * @param {string} [conversation.type] The conversation type, which is expected to be one of: \"chat-oneToOne\", \"chat-group\", \"sms\".\n * @returns {Object} A flux standard action representing the update conversation action.\n */\nexport function updateConversation (conversation) {\n  return {\n    type: actionTypes.UPDATE_CONVERSATION,\n    payload: conversation\n  }\n}\n\n/**\n * Deletes all the messages from a conversation.\n * @method deleteConversation\n * @param {string} id The unique id of the conversation being deleted.\n * @param  {Array<string>} destination An array of destinations for messages created in this conversation.\n * @param {string} type The type of conversation: can be one of \"chat-oneToOne\", \"chat-group\" or \"sms\".\n * @returns {Object} A flux standard action representing the delete conversation action.\n */\nexport function deleteConversation (id, destination, type) {\n  return {\n    type: actionTypes.DELETE_CONVERSATION,\n    payload: {\n      id: id,\n      destination: destination,\n      type: type\n    }\n  }\n}\n\n/**\n * Creates a delete conversations finished action.\n * @method deleteConversationFinish\n * @param {Object} params\n * @param {Array<string>} params.destination An array of destinations for messages created in this conversation.\n * @param {string} params.type The type of conversation: can be one of \"chat-oneToOne\", \"chat-group\" or \"sms\".\n * @param {Object} [params.error] An error object, only present if an error occurred.\n * @returns {Object} A flux standard action representing the delete conversation finished action.\n */\nexport function deleteConversationFinish ({ destination, type, error }) {\n  return {\n    type: actionTypes.DELETE_CONVERSATION_FINISH,\n    payload: error || { destination, type },\n    error: !!error\n  }\n}\n\n/**\n *\n * @param {Object} params\n * @param {string} params.state (active/idle) state of the typing user\n * @param {string} params.destination the target user to send the notification to\n * @returns {Object} A flux standard action representing the setIsTyping action.\n */\nexport function setIsTyping ({ state, destination, type }) {\n  return {\n    type: actionTypes.SET_IS_TYPING,\n    payload: { state, destination, type }\n  }\n}\n\n/**\n *\n * @param {Object} params\n * @param {string} params.state (active/idle) state of the typing user\n * @param {string} params.senderAddress the username of the user who sent the notification\n * @param {string} params.destination the target user to send the notification to\n * @param {string} params.type a standard error object\n * @param {BasicError} params.error a standard error object\n * @returns {Object} A flux standard action representing the setIsTyping finished action.\n */\nexport function setIsTypingFinished ({ state, senderAddress, destination, type, error }) {\n  return {\n    type: actionTypes.SET_IS_TYPING_FINISHED,\n    payload: error || { state, senderAddress, destination, type },\n    error: !!error\n  }\n}\n","import * as actionTypes from './actionTypes'\nimport { handleActions } from 'redux-actions'\nimport { unionBy, unionWith, sortBy, isEqual } from 'lodash/fp'\n\nconst reducers = {}\n\nreducers[actionTypes.CREATE_CONVERSATION] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: [...state.conversations, { ...action.payload }]\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_CONVERSATIONS_FINISHED] = {\n  next (state, action) {\n    // TODO: does not persist conversations unique to local state\n    return {\n      ...state,\n      conversations: unionWith(\n        (a, b) => isEqual(a.destination, b.destination) && a.type === b.type, // Comparator\n        action.payload.conversations,\n        state.conversations // Conversation arrays\n      )\n    }\n  }\n}\n\nreducers[actionTypes.UPDATE_CONVERSATION] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return { ...conversation, ...action.payload }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_MESSAGES] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            isPending: true\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_MESSAGES_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: sortBy('timestamp', unionBy('messageId', action.payload.messages, conversation.messages)),\n            isTypingList: [],\n            isPending: false\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.SEND_MESSAGE] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.message.type\n        ) {\n          return {\n            ...conversation,\n            messages: [...conversation.messages, action.payload.message]\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.INCOMING_MESSAGE_READ] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.map(message => {\n              if (message.messageId === action.payload.messageId) {\n                return { ...message, read: true }\n              }\n              return message\n            })\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.SEND_MESSAGE_READ_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.map(message => {\n              if (message.messageId === action.payload.messageId) {\n                return { ...message, read: true }\n              }\n              return message\n            })\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.MESSAGE_RECEIVED] = {\n  next (state, action) {\n    if (action.meta.newConversation) {\n      return {\n        ...state,\n        conversations: [\n          ...state.conversations,\n          {\n            destination: action.payload.destination,\n            messages: [action.payload.message],\n            type: action.meta.type,\n            lastReceived: action.payload.message.timestamp,\n            isTypingList: []\n          }\n        ]\n      }\n    } else {\n      return {\n        ...state,\n        conversations: state.conversations.map(conversation => {\n          if (isEqual(conversation.destination, action.payload.destination) && conversation.type === action.meta.type) {\n            return {\n              ...conversation,\n              messages: [...conversation.messages, action.payload.message],\n              lastReceived: action.payload.message.timestamp\n            }\n          }\n          return conversation\n        })\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SEND_MESSAGE_FINISH] = (state, action) => {\n  return {\n    ...state,\n    conversations: state.conversations.map(conversation => {\n      if (isEqual(conversation.destination, action.payload.destination) && conversation.type === action.payload.type) {\n        return {\n          ...conversation,\n          messages: conversation.messages.map(message => sendMessageFinishHelper(message, action))\n        }\n      }\n      return conversation\n    })\n  }\n}\n\n// Remove all messages from the specified conversation.\nreducers[actionTypes.CLEAR_MESSAGES] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: []\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.DELETE_MESSAGE_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.filter(message => message.messageId !== action.payload.messageId)\n          }\n        }\n        return conversation\n      })\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.DELETE_CONVERSATION_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.filter(\n        conversation =>\n          !(isEqual(conversation.destination, action.payload.destination) && conversation.type === action.payload.type)\n      )\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.RECEIVE_DELIVERY_RECEIPT] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.map(message => {\n              if (message.messageId === action.payload.messageId) {\n                return {\n                  ...message,\n                  deliveryStatus: action.payload.deliveryStatus\n                }\n              }\n              return message\n            })\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.SET_IS_TYPING_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          let isTypingList = [...conversation.isTypingList]\n          if (action.payload.state === 'active') {\n            if (!conversation.isTypingList.includes(action.payload.senderAddress)) {\n              isTypingList = conversation.isTypingList.concat([action.payload.senderAddress])\n            }\n          } else if (action.payload.state === 'idle') {\n            if (conversation.isTypingList.includes(action.payload.senderAddress)) {\n              isTypingList = conversation.isTypingList.filter(username => action.payload.senderAddress !== username)\n            }\n          }\n          return {\n            ...conversation,\n            isTypingList\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.GET_IMAGE_LINKS] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.map(message => {\n              // iterate over messages find ours using messageId\n              if (isEqual(message.messageId, action.payload.messageId)) {\n                return {\n                  ...message,\n                  isFetchingLinks: true\n                }\n              }\n              return message\n            })\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\nreducers[actionTypes.GET_IMAGE_LINKS_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      conversations: state.conversations.map(conversation => {\n        if (\n          isEqual(conversation.destination, action.payload.destination) &&\n          conversation.type === action.payload.type\n        ) {\n          return {\n            ...conversation,\n            messages: conversation.messages.map(message => {\n              // iterate over messages find ours using messageId\n              if (isEqual(message.messageId, action.payload.messageId)) {\n                return {\n                  ...message,\n                  isFetchingLinks: false,\n                  parts: message.parts.map(part => {\n                    // iterate over message parts and find ours using oldURL\n                    if (isEqual(part.rawURL, action.payload.rawURL)) {\n                      return {\n                        ...part,\n                        url: action.payload.url\n                      }\n                    }\n                    return part\n                  })\n                }\n              }\n              return message\n            })\n          }\n        }\n        return conversation\n      })\n    }\n  }\n}\n\n/*\n * Combine all of reducers into a single reducer, with\n *      a default state of an empty array.\n */\nconst reducer = handleActions(reducers, { conversations: [], errors: [] })\nexport default reducer\n\n/**\n * sendMessageFinishHelper\n *\n * A helper function to make dealing with the messages array in SEND_MESSAGE_FINISH\n * a little bit easier.\n *\n * @param {Object} message\n * @param {Object} action\n */\nfunction sendMessageFinishHelper (message, action) {\n  if (message.timestamp === action.payload.timestamp) {\n    if (action.payload.error) {\n      message = {\n        ...message,\n        sender: action.payload.sender,\n        isPending: false,\n        messageId: null,\n        error: action.payload.error\n      }\n    } else {\n      message = {\n        ...message,\n        sender: action.payload.sender,\n        isPending: false,\n        messageId: action.payload.messageId,\n        parts: action.payload.parts\n      }\n    }\n    if (action.payload.deliveryStatus) {\n      message.deliveryStatus = action.payload.deliveryStatus\n    }\n  } else {\n    message = { ...message }\n  }\n  return message\n}\n","/**\n * A Conversation object represents a conversation either between two users, or between a\n * user and a group. A user can create a Conversation using {@link conversation.create} Messaging API.\n *\n * A Conversation can be used to create messages to send using the Conversation and Messaging APIs\n * {@link conversation.Conversation.createMessage Conversation.createMessage} and {@link conversation.Message.send Message.send} functions.\n *\n *\n * Once a sender sends the initial message (within a conversation) to a recipient, there will be a\n * conversation object saved in both sender and recipient's state.\n *\n * @property {string} destination The ID/group ID of the remote user with which the current user is having a conversation.\n * @property {string} address The ID of the current user who is having a conversation.\n * @property {number} lastReceived The timestamp (milliseconds since epoch) of when a message was last received in this conversation.\n * This property applies only to conversation object stored in recipient's state.\n * @property {string} type The type of conversation. See {@link conversation.chatTypes} for valid types.\n * @property {string} lastMessage The last message received.\n * @property {Array<conversation.Message>} messages The array of message objects.\n * @property {Array<string>} isTypingList The array identifying the User IDs of the users who are currently typing.\n *\n * @public\n * @static\n * @typedef {Object} Conversation\n * @memberof conversation\n */\n// `features` and `lastPull` are not documented because they're intended to be internal\n\n/**\n * A Part is a custom object representing a section of the payload of a message. Messages can have one or many Parts.\n *\n * @property {string} type The payload type. Can be `text`, `json`, or `file`.\n * @property {string} text The text of the message. Messages with file or json attachments are still required to have text associated to it.\n * @property {Object} [json] The object corresponding to a json object to attach to a message. A `Part` cannot have both json and a file.\n * @property {File} [file] The file to attach to a message. A `Part` cannot have both json and a file.\n *\n * @public\n * @static\n * @typedef {Object} Part\n * @memberof conversation\n */\n\n/**\n * A Message object is a means by which a sender can deliver information to a recipient.\n *\n * Creating and sending a message:\n *\n * The message object can be obtained through the {@link conversation.Conversation.createMessage Conversation.createMessage} API on an existing conversation.\n *\n * Messages have Parts which represent pieces of a message, such as a text part, a json object part or a file part.\n * Once all the desired parts have been added to the message using the {@link conversation.Message.addPart Message.addPart} function,\n * the message can then be sent using the {@link conversation.Message.send Message.send} function.\n *\n * Once the sender sends a message, this message is saved in sender's state as an object.\n * Similarly, once the recipient gets a message, this message is saved in recipient's state.\n *\n * Retrieving a delivered message:\n *\n * Once a message is delivered successfully, it can be\n * obtained through the {@link conversation.Conversation.getMessages Conversation.getMessages} or {@link conversation.Conversation.getMessage Conversation.getMessage} API on an existing conversation.\n *\n * Below are the properties pertaining to the message object, returned by Conversation.getMessage(s) APIs, for either sender or recipient.\n *\n * @property {number} timestamp A Unix timestamp in seconds marking the time when the message was created by sender.\n * @property {Array<conversation.Part>} parts An array of Part Objects.\n * @property {string} sender The primary contact address of the sender.\n * @property {Array<string>} destination An array of primary contact addresses associated with various destinations to which the message is meant to be delivered.\n * @property {string} messageId The unique id of the message. The message object (stored in sender's state) has a different id\n * than the one associated with the message object stored in recipient's state.\n * @property {string} type The type of message that was sent. See {@link conversation.chatTypes} for valid types.\n * This property applies only to message objects stored in sender's state.\n * @property {boolean} isFetchingLinks Whether or not the recipient of the message is in the process of fetching the message attachment(s) using the provided link(s).\n * @public\n * @static\n * @typedef {Object} Message\n * @memberof conversation\n */\n\nimport { find, includes, isEqual } from 'lodash/fp'\nimport { convoActions, messageActions } from './actions'\nimport { chatTypes } from '../../mappings'\n\nimport { getMessagingConfig, findConversation } from './selectors'\nimport { getUserInfo } from '../../../auth/interface/selectors'\nimport compose from '@stamp/compose'\n// Events\nimport { emitEvent } from '../../../events/interface/actions'\nimport { MESSAGES_ERROR } from './eventTypes'\n\nimport { logManager } from '../../../logs'\nconst log = logManager.getLogger('MESSAGING')\n\n/**\n * Base conversation stamp\n *\n * @param {Array<string>} destination The destination(s) for messages being sent through\n * this conversation in this instance of the SDK. This should be an Array with any number of user IDs.\n * @param {string} [type='chat-oneToOne'] The message type. See {@link conversation.chatTypes} for valid types.\n * @param {string} [id=undefined] id The unique identifier for the conversation.\n * @param {string} [description=''] The description associated with the conversation.\n * @param {Array<conversation.Message>} [messages=[]] An array containing the conversation's messages.\n * @param {Array<string>} [isTypingList=[]] A array that represents the list of users who are currently typing.\n * @param {number} lastReceived The timestamp associated with the last received message.\n */\nconst conversationBase = {\n  initializers: [\n    function ({\n      destination,\n      type = chatTypes.ONETOONE,\n      id = undefined,\n      description = '',\n      messages = [],\n      isTypingList = [],\n      lastReceived,\n      lastPull\n    }) {\n      this.destination = destination\n      this.type = type\n      this.description = description\n      this.messages = messages\n      this.isTypingList = isTypingList\n      this.id = id\n      const features = getMessagingConfig(this.context.getState()).features\n      if (this.destination.length === 1) {\n        const groupIndex = features.indexOf('group')\n        if (groupIndex > -1) {\n          features.splice(groupIndex, 1)\n        }\n      }\n      this.features = features\n      this.lastReceived = lastReceived\n      this.lastPull = lastPull\n      this.isPending = false\n    }\n  ],\n\n  methods: {\n    /**\n     * Creates and return a message object. You must specify a part. If this is a simple text message, provide a `text` part as demonstrated in the example below.\n     *\n     * If successful, the event {@link conversation.event:messages:change messages:change} will be emitted.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @method createMessage\n     * @constructs Message\n     * @param {conversation.Part} part The Part to add to the message.\n     * @returns {conversation.Message} The newly created Message object.\n     *\n     * @example\n     * conversation.createMessage({type: 'text', text: 'This is the message'});\n     */\n    createMessage (part) {\n      if (typeof part === 'string') {\n        part = { type: 'text', text: part }\n      }\n      const parts = Array.isArray(part) ? part : [part]\n\n      const messageContext = {\n        features: this.features,\n        isGroup: this.destination.length > 1,\n        id: this.id,\n        type: this.type\n      }\n      return this.context.primitives.Message({\n        destination: this.destination,\n        parts: parts,\n        context: messageContext,\n        type: this.type\n      })\n    },\n\n    /**\n     * Clears all messages in this conversation from local state.\n     *\n     * If successful, the event {@link conversation.event:messages:change messages:change} will be emitted.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @method clearMessages\n     */\n    clearMessages () {\n      this.context.dispatch(messageActions.clearMessages(this.destination, this.type))\n    },\n\n    /**\n     * Gets all messages from this conversation.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @method getMessages\n     * @return {Array<conversation.Message>} An array of messages.\n     */\n    getMessages: function () {\n      const conversation = findConversation(this.context.getState(), this.destination, this.type)\n\n      return conversation.messages.map(message => {\n        if (!message.parts) {\n          log.debug('no message parts found on message, skipping message')\n          return\n        }\n        return this.getMessage(message.messageId)\n      })\n    },\n\n    /**\n     * Gets a specific message from this conversation.\n     *\n     * @public\n     * @static\n     * @method getMessage\n     * @memberof conversation.Conversation\n     * @param {string} messageId The ID of the message to retrieve.\n     * @return {conversation.Message} A message object.\n     */\n    getMessage (messageId) {\n      const convo = findConversation(this.context.getState(), this.destination, this.type)\n      const message = find(message => message.messageId === messageId)(convo.messages)\n\n      if (!message) {\n        log.debug(`Message (${messageId}) not found in conversation (${this.destination}).`)\n        return\n      }\n\n      const { parts, sender, timestamp, isFetchingLinks } = message\n      const { type, features, destination, id } = this\n      const mixinMessage = this.context.primitives.Message({\n        parts,\n        sender,\n        timestamp,\n        isFetchingLinks,\n        destination,\n        type,\n        messageId,\n        context: {\n          features,\n          id,\n          type,\n          isGroup: destination.length > 1\n        }\n      })\n\n      // TODO: Have these functions as proper mixin functions, instead of adding them manually afterwards.\n      mixinMessage.forward = participant => {\n        this.context.dispatch(\n          messageActions.sendMessage(participant, mixinMessage.parts, Date.now(), this.type, this.id)\n        )\n      }\n      // Only allow the end user to markRead on message that were incoming.\n      const userInfo = getUserInfo(this.context.getState())\n      if (mixinMessage.sender !== userInfo.username) {\n        // TODO: Have these functions as proper mixin functions, instead of adding them manually afterwards.\n        mixinMessage.markRead = () => {\n          this.context.dispatch(messageActions.sendMessageRead(mixinMessage.messageId, this.destination))\n        }\n      }\n      return mixinMessage\n    },\n\n    /**\n     * Deletes specified messages from this conversation.\n     * Provide an array of message IDs for the messages to be deleted.\n     *\n     * If successful, the event {@link conversation.event:messages:change messages:change} will be emitted.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @method deleteMessages\n     * @param {Array<string>} [messageIds=[]] An array of message IDs for the messages to be deleted\n     */\n    deleteMessages: function (messageIds = []) {\n      messageIds.forEach(messageId => {\n        this.context.dispatch(messageActions.deleteMessage(this.id, this.destination, this.type, messageId))\n      })\n    },\n\n    /**\n     * Delete the conversation.\n     *\n     * If successful, the event {@link conversation.event:messages:change messages:change} will be emitted.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @method delete\n     */\n    delete: function () {\n      this.context.dispatch(convoActions.deleteConversation(this.id, this.destination, this.type))\n    },\n\n    /**\n     * Subscribe to this conversation's messages list to receive notification of changes.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @param {Function} subscriber A subscriber function to be triggered when the messages array of this conversation is updated.\n     * @param {string} subscriber.destination The conversation participants.\n     * @param {string} subscriber.messageId The ID of the message that caused the event.\n     * @return {Function} The unsubscribe function.\n     */\n    subscribe: function (subscriber) {\n      if (subscriber) {\n        // Create a subscriber wrapper to properly determine if this messages:change event is relevant to this convo\n        // TODO: we might need to change the name of `conversationId` as it is used here. Conversations have actual IDs in the backend, which are an integer value rather than an array of strings, as is the case with destination. We track conversation IDs, as they exist in the back end, as we are required to identify the conversation by `id` when performing actions in the backend on a Group Conversation.\n        const subscriberWrapper = ({ destination, messageId }) => {\n          if (isEqual(destination, this.destination)) {\n            subscriber({ destination, messageId })\n          }\n        }\n        // Subscribe to the messages:change event with the wrapped subscriber\n        this.context.api.on('messages:change', subscriberWrapper)\n\n        // Return the unsubscribe function\n        return () => {\n          this.context.api.off('messages:change', subscriberWrapper)\n        }\n      }\n    }\n  }\n}\n\n/*\n * Conversation history stamp. Handles any functions that retrieve history from the server concerning conversations.\n */\nconst conversationHistory = {\n  initializers: [\n    function ({ lastMessage }) {\n      this.lastMessage = lastMessage\n      const features = getMessagingConfig(this.context.getState()).features\n      if (!includes('history', features)) {\n        const prototype = Object.getPrototypeOf(this)\n        delete prototype.fetchMessages\n      }\n      return this\n    }\n  ],\n  methods: {\n    /**\n     * Allows the user to fetch messages associated with a specific conversation to make them available.\n     * When the operation is complete, a `messages:change` event will be emitted.\n     * Messages can then be retrieved using {@link conversation.Conversation.getMessages Conversation.getMessages}.\n     *\n     * If successful, the event {@link conversation.event:messages:change messages:change} will be emitted.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @method fetchMessages\n     * @param {number} [amount=50] An amount of messages to fetch.\n     */\n    fetchMessages: function (amount = 50) {\n      this.context.dispatch(messageActions.fetchMessages(this.id, this.destination, amount, this.type))\n    }\n  }\n}\n/*\n * Conversation is Typing. Responsible for updating the state of who is idling or actively typing.\n */\nconst conversationIsTyping = {\n  initializers: [\n    function () {\n      const features = getMessagingConfig(this.context.getState()).features\n      if (!includes('isTyping', features)) {\n        const prototype = Object.getPrototypeOf(this)\n        delete prototype.setIsTyping\n      }\n      return this\n    }\n  ],\n  methods: {\n    /**\n     * Sets the typing status of the conversation for the current user.\n     * Other participants will be notified of changes to the conversation's typing status.\n     *\n     * If successful, the event {@link conversation.event:isTypingList:change isTypingList:change} will be emitted.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Conversation\n     * @method setIsTyping\n     * @param {boolean} isTyping Whether the user is typing or not\n     */\n    setIsTyping: function (isTyping) {\n      const typingState = isTyping ? 'active' : 'idle'\n      this.context.dispatch(\n        convoActions.setIsTyping({ state: typingState, destination: this.destination, type: this.type })\n      )\n    }\n  }\n}\n\n/*\n * Base Message stamp\n * @param {string} destination The Destination for messages being sent through\n * this conversation in this instance of the SDK. This can be one or many users,\n * separated by commas `,`\n * @param  {Object} parts Initial part to the message.\n * @param  {Object} context Information and capabilities for how the message will act with regard to the conversation.\n * @param  {Array} context.features Array of features the conversation supports.\n * @param  {string} type The type of conversation ('chat-onToOne', 'chat-group' or 'sms')\n * @param  {Function} context.send Function for sending the message.\n * @param  {number} timestamp unix timestamp in seconds.\n * @param  {boolean} isFetchingLinks Whether or not the recipient of the message is in the process of fetching the message attachment(s) using the provided link(s).\n * @param  {string} sender The author of the message.\n * @param  {string} messageId A unique ID for looking up the message.\n * @param  {string} [type='chat-oneToOne'] The message type. See {@link conversation.chatTypes} for valid types.\n */\nconst messageBase = {\n  initializers: [\n    function ({\n      destination,\n      parts,\n      context,\n      timestamp,\n      isFetchingLinks,\n      sender,\n      messageId,\n      type = chatTypes.ONETOONE\n    }) {\n      this.destination = Array.isArray(destination) ? destination : [destination]\n      this.convoContext = context\n      this.type = type\n      this.messageId = messageId\n      this.sender = sender\n      this.timestamp = timestamp\n      this.isFetchingLinks = isFetchingLinks\n      this.parts = parts\n    }\n  ],\n  methods: {\n    /**\n     * Sends the message.\n     *\n     * @public\n     * @static\n     * @method send\n     * @memberof conversation.Message\n     */\n    send () {\n      log.debug('Send message', this)\n      const dateInSeconds = (Date.now() / 1000) | 0\n      this.context.dispatch(\n        messageActions.sendMessage(this.destination, this.parts, dateInSeconds, this.type, this.convoContext.id)\n      )\n    }\n  }\n}\n\n/**\n * stamp to add message parts capabilities to a Message primitive\n * @name withParts\n * @param  {Object} context - Information and capabilities for how the message will act with regard to the conversation.\n * @param  {Array<string>} context.features - Array of features the conversation supports.\n */\nconst withParts = {\n  initializers: [\n    function ({ context: { features = [] } }) {\n      if (!includes('parts', features)) {\n        const prototype = Object.getPrototypeOf(this)\n        delete prototype.addPart\n      }\n      return this\n    }\n  ],\n  methods: {\n    /**\n     * Add an additional `Part` to a message.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Message\n     * @param {conversation.Part} part The `Part` to add to the message.\n     */\n    addPart (part) {\n      // Validate the part. If not valid, returns an error.\n      const validationResponse = validatePart(part, this.convoContext.features)\n      if (validationResponse instanceof Error) {\n        this.context.dispatch(emitEvent(MESSAGES_ERROR, { error: validationResponse.message }))\n      }\n      this.parts.push(part)\n    }\n  }\n}\n\n/**\n * stamp to allow creation of multimedia links\n * @name multimediaLinks\n * @param  {Object} context - Information and capabilities for how the message will act with regard to the conversation.\n * @param  {Array<string>} context.features - Array of features the conversation supports.\n */\nconst multimediaLinks = {\n  initializers: [\n    function ({ context: { features = [] } }) {\n      if (!includes('rich', features)) {\n        const prototype = Object.getPrototypeOf(this)\n        delete prototype.createImageLinks\n      }\n      return this\n    }\n  ],\n  methods: {\n    /**\n     * Creates a usable image link for the message in this `Message` instance.\n     *\n     * @public\n     * @static\n     * @memberof conversation.Message\n     */\n    createImageLinks () {\n      const { parts, destination, type, messageId } = this\n      this.context.dispatch(messageActions.getImageLinks({ parts, destination, type, messageId }))\n    }\n  }\n}\n\n/*\n * A helper function to validate inputs. Will be progressively updated as we\n * allow for more and more input types.\n */\nconst validatePart = function (part, features) {\n  if (part.hasOwnProperty('type')) {\n    let validTypeFlag = false\n    switch (part.type) {\n      case 'text':\n        validTypeFlag = true\n        break\n      case 'file':\n        validTypeFlag = features.indexOf('rich') !== -1\n        break\n      case 'location':\n        validTypeFlag = features.indexOf('rich') !== -1\n        break\n      case 'json':\n        validTypeFlag = features.indexOf('rich') !== -1\n    }\n    return validTypeFlag || new Error(`Part of type \"${part.type}\" is not supported`)\n  } else {\n    return new Error('A message part must have a type. Options are: [text, file, location, json]')\n  }\n}\n\nexport default {\n  Conversation: compose(conversationBase, conversationHistory, conversationIsTyping),\n  Message: compose(messageBase, withParts, multimediaLinks)\n}\n","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;\n","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n","import * as messagingSagas from './messaging'\nimport * as subsSagas from './subscriptions'\nimport * as actionTypes from '../interface/actionTypes'\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\nimport { platforms } from '../../../constants'\nimport { registerService } from '../../../subscription/interface/effects'\nimport { chatTypes } from '../../mappings'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\nimport { get, has } from 'lodash/fp'\n\n/**\n * Register For Services\n */\n\n/**\n * Saga to register the chat service with the subscription plugin.\n * Runs immediately.\n * @method registerChat\n */\nexport function * registerChat () {\n  yield registerService('chat', subsSagas.chatSubscription, subsSagas.chatUnsubscription)\n}\n\n/**\n * Saga to register the SMS service with the subscription plugin.\n * Runs immediately.\n * @method registerInboundSMS\n */\nexport function * registerInboundSMS () {\n  yield registerService('smsinbound', subsSagas.smsInboundSubscription, subsSagas.smsInboundUnsubscription)\n}\n\n/**\n * Saga to register the SMS service with the subscription plugin.\n * Runs immediately.\n * @method registerOutboundSMS\n */\nexport function * registerOutboundSMS () {\n  /*\n   * smsoutbound subscriptions are disabled because they are not supported by\n   *    the backend yet.\n   * See: KAA-1925\n   */\n  // yield registerService('smsoutbound', subsSagas.smsOutboundSubscription, subsSagas.smsOutboundUnsubscription)\n}\n\n/**\n * Chat Operations\n */\n\n/**\n * Send an outgoing Simple Chat Message\n * @method sendChatMessage\n */\nexport function * sendChatMessage () {\n  function sendChatPattern (action) {\n    return (\n      action.type === actionTypes.SEND_MESSAGE &&\n      (action.payload.message.type === chatTypes.ONETOONE || action.payload.message.type === chatTypes.GROUP)\n    )\n  }\n\n  yield takeEvery(sendChatPattern, messagingSagas.sendChatMessage)\n}\n\n/**\n * Delete a Conversation\n * @method deleteConversation\n */\nexport function * deleteConversation () {\n  yield takeEvery(actionTypes.DELETE_CONVERSATION, messagingSagas.deleteConversation)\n}\n\n/**\n * Delete a Message\n * @method deleteMessage\n */\nexport function * deleteMessage () {\n  yield takeEvery(actionTypes.DELETE_MESSAGE, messagingSagas.deleteMessage)\n}\n\n/**\n * Handle an incoming Simple Chat Message\n * @method receiveChatMessage\n */\nexport function * receiveChatMessageNotification () {\n  function incomingChatMessagePattern (action) {\n    return (\n      action.type === NOTIFICATION_RECEIVED &&\n      action.payload.chatMessageNotification &&\n      action.payload.chatMessageNotification.chatMessage &&\n      action.payload.chatMessageNotification.chatMessage['x-type'] === 'inbound'\n    )\n  }\n\n  yield takeEvery(incomingChatMessagePattern, messagingSagas.handleChatMessageNotification)\n}\n\n/**\n * SMS Operations\n */\n\n/**\n * Waits for SMS send message actions and triggers sendSMS saga\n * @method sendSMS\n */\nexport function * sendSMS () {\n  function sendSMSPattern (action) {\n    return action.type === actionTypes.SEND_MESSAGE && action.payload.message.type === chatTypes.SMS\n  }\n\n  yield takeEvery(sendSMSPattern, messagingSagas.sendSMS)\n}\n\n/**\n * Waits for incoming SMS notification actions and triggers handleIncomingSMS saga\n * @method receiveSMS\n */\nexport function * receiveSMS () {\n  // Redux-saga take() pattern.\n  function incomingSMSPattern (action) {\n    return action.type === NOTIFICATION_RECEIVED && action.payload.inboundSMSMessageNotification\n  }\n\n  yield takeEvery(incomingSMSPattern, messagingSagas.handleIncomingSMS)\n}\n\n/**\n * Waits for delivery receipts notification actions and triggers handleDeliveryReceipts saga\n * @method receiveDeliveryReceipt\n */\nexport function * receiveDeliveryReceipt () {\n  function deliveryReceiptPattern (action) {\n    return (\n      action.type === NOTIFICATION_RECEIVED &&\n      action.meta.platform === platforms.CPAAS &&\n      has('payload.deliveryInfoNotification.deliveryInfo.deliveryStatus', action)\n    )\n  }\n\n  yield takeEvery(deliveryReceiptPattern, messagingSagas.handleDeliveryReceipts)\n}\n\n/**\n * Waits for fetch conversation actions and depending on the action.payload.type, it triggers\n * fetchConversations saga (for fetching one-on-one/group conversations) or\n * fetchSmsConversations saga (for fetching sms conversations)\n * @method fetchConversations\n */\nexport function * fetchConversations () {\n  function fetchConversationPattern (action) {\n    return action.type === actionTypes.FETCH_CONVERSATIONS && action.payload.type !== 'sms'\n  }\n\n  function fetchSmsConversationPattern (action) {\n    return action.type === actionTypes.FETCH_CONVERSATIONS && action.payload.type === 'sms'\n  }\n\n  yield takeEvery(fetchConversationPattern, messagingSagas.fetchConversations)\n\n  yield takeEvery(fetchSmsConversationPattern, messagingSagas.fetchSmsConversations)\n}\n\n/**\n * Waits for fetch message actions and triggers fetchChatMessages saga or fetchSmsMessages,\n * depending of the type specified in the action's payload.\n * @method fetchMessages\n */\nexport function * fetchMessages () {\n  function fetchChatMessagesPattern (action) {\n    return action.type === actionTypes.FETCH_MESSAGES && action.payload.type !== 'sms'\n  }\n\n  function fetchSmsMessagesPattern (action) {\n    return action.type === actionTypes.FETCH_MESSAGES && action.payload.type === 'sms'\n  }\n  yield takeEvery(fetchChatMessagesPattern, messagingSagas.fetchChatMessages)\n\n  yield takeEvery(fetchSmsMessagesPattern, messagingSagas.fetchSmsMessages)\n}\n\n/**\n * Waits for isTyping notifications and triggers up[dateIsTyping saga\n * @method setIsTyping\n */\nexport function * setIsTyping () {\n  function isTypingPattern (action) {\n    return action.type === actionTypes.SET_IS_TYPING\n  }\n  yield takeEvery(isTypingPattern, messagingSagas.setIsTyping)\n}\n\n/**\n * Waits for isTyping notifications and triggers up[dateIsTyping saga\n * @method receiveIsTypingNotification\n */\nexport function * receiveIsTypingNotification () {\n  function isTypingPattern (action) {\n    return (\n      action.type === NOTIFICATION_RECEIVED &&\n      has('payload.chatMessageNotification.isComposing', action) &&\n      get('payload.chatMessageNotification.isComposing[\"x-type\"]', action) === 'inbound'\n    )\n  }\n  yield takeEvery(isTypingPattern, messagingSagas.receiveIsTypingNotification)\n}\n\n/**\n * Waits for get image links notifications and triggers getImageLinks saga\n * @method getImageLinks\n */\nexport function * getImageLinks () {\n  function getImageLinksPattern (action) {\n    return action.type === actionTypes.GET_IMAGE_LINKS\n  }\n  yield takeEvery(getImageLinksPattern, messagingSagas.getImageLinks)\n}\n","// Messaging plugin.\nimport { messageActions, convoActions } from '../interface/actions'\nimport {\n  sendSMSRequest,\n  sendChatMessageRequest,\n  sendGroupChatMessageRequest,\n  fetchConversationsRequest,\n  fetchSmsConversationsRequest,\n  deleteChatConversationRequest,\n  deleteChatMessageRequest,\n  fetchMessagesRequest,\n  fetchSmsMessagesRequest,\n  uploadFile,\n  setIsTypingRequest,\n  fetchImageLinks\n} from '../requests'\n\n// Other plugins.\nimport { findConversation, getMessagingConfig } from '../interface/selectors'\nimport { getRequestInfo } from '../../../auth/interface/selectors'\n\nimport { platforms } from '../../../constants'\nimport { DeliveryStatuses, chatTypes } from '../../mappings'\n\n// Libraries.\nimport { call, put, select, all } from 'redux-saga/effects'\n\n// Logging\nimport { logManager } from '../../../logs'\nimport BasicError, { messagingCodes } from '../../../errors'\nconst log = logManager.getLogger('MESSAGING')\n\n/**\n * Handles isTypingNotifications and sets isTypingList in redux state\n * @method receiveIsTypingNotification\n * @param {Object} action A 'NOTIFICATION_RECEIVED' action.\n */\nexport function * receiveIsTypingNotification (action) {\n  const {\n    state,\n    senderAddress,\n    'x-destinationAddress': destinationAddress\n  } = action.payload.chatMessageNotification.isComposing\n\n  // use helper function to get sessionType from notifications\n  const sessionType = getNotificationType(action.payload.chatMessageNotification, 'chatSession')\n  if (sessionType !== chatTypes.GROUP && sessionType !== chatTypes.ONETOONE) {\n    yield put(\n      convoActions.setIsTypingFinished({\n        error: new BasicError({\n          message: `Invalid chat type. Type must be ${chatTypes.GROUP} or ${chatTypes.ONETOONE}.`,\n          code: messagingCodes.SET_IS_TYPING_FAIL\n        })\n      })\n    )\n  }\n  // For group chat, we need to use the destinationAddress (groupId)\n  const destination = sessionType === chatTypes.ONETOONE ? senderAddress : destinationAddress\n\n  yield put(\n    convoActions.setIsTypingFinished({\n      state,\n      senderAddress: senderAddress,\n      destination: [destination],\n      type: sessionType\n    })\n  )\n}\n\n/**\n * Sets the typing status of the current user in redux state\n * @method setIsTyping\n * @param {Object} action A 'SET_IS_TYPING' action.\n */\nexport function * setIsTyping (action) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const type = action.payload.type\n  const response = yield call(setIsTypingRequest, requestInfo, action.payload.destination, action.payload.state, type)\n  const { state, senderAddress, 'x-destinationAddress': destination, error } = response\n\n  if (error) {\n    yield put(\n      convoActions.setIsTypingFinished({\n        error: error\n      })\n    )\n  } else {\n    yield put(\n      convoActions.setIsTypingFinished({\n        state,\n        senderAddress: senderAddress,\n        destination: [destination],\n        type: type\n      })\n    )\n  }\n}\n\n/**\n * Sends chat messages via POST request\n * @method sendChatMessage\n * @param  {Object} action A `SEND_MESSAGE` action\n */\nexport function * sendChatMessage (action) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  let chatResponse\n  const chatType = action.payload.message.type\n\n  let textParts = []\n  let fileParts = []\n  action.payload.message.parts.forEach(part => {\n    if (part.type === 'text') {\n      textParts = textParts.concat([part])\n    } else if (part.type === 'file') {\n      fileParts = fileParts.concat([part])\n    } else {\n      log.info('Unknown part type: ' + part.type)\n    }\n  })\n\n  // TODO: when the backend API expands its functionality this log/error should be removed\n  if (fileParts.length > 1) {\n    log.info(\"Too many fileParts to upload, API doesn't currently support multiple fileParts.\")\n    yield put(\n      messageActions.sendMessageFinish({\n        error: new BasicError({\n          message: \"Too many fileParts to upload, API doesn't currently support multiple fileParts.\",\n          code: messagingCodes.INVALID_FILE_PARTS\n        })\n      })\n    )\n  }\n\n  let attachmentParts = []\n  if (fileParts.length > 0) {\n    const uploadResponseList = yield all(fileParts.map(filePart => call(uploadFile, requestInfo, filePart.file)))\n\n    attachmentParts = uploadResponseList.map(response => {\n      return { ...response.attachment, type: 'file', rawURL: response.attachment.link }\n    })\n    // multimedia messaging requires a specific format for each uploaded file\n    const chatMediaParts = attachmentParts.map(part => {\n      return { name: part.name, 'x-id': part['x-id'] }\n    })\n\n    if (chatType === chatTypes.ONETOONE) {\n      chatResponse = yield call(\n        sendChatMessageRequest,\n        requestInfo,\n        action.payload.destination[0],\n        textParts[0].text,\n        chatMediaParts\n      )\n    } else if (chatType === chatTypes.GROUP) {\n      chatResponse = yield call(\n        sendGroupChatMessageRequest,\n        requestInfo,\n        action.payload.destination[0],\n        textParts[0].text,\n        chatMediaParts\n      )\n    }\n  } else {\n    // hardcoding textParts because API only allows sending one text part\n    if (chatType === chatTypes.ONETOONE) {\n      chatResponse = yield call(sendChatMessageRequest, requestInfo, action.payload.destination[0], textParts[0].text)\n    } else if (chatType === chatTypes.GROUP) {\n      chatResponse = yield call(\n        sendGroupChatMessageRequest,\n        requestInfo,\n        action.payload.destination[0],\n        textParts[0].text\n      )\n    }\n  }\n  const allParts = textParts.concat(attachmentParts)\n  const finishInfo = {\n    type: chatType,\n    destination: action.payload.destination,\n    sender: chatResponse.senderAddress,\n    deliveryStatus: chatResponse.status,\n    parts: allParts,\n    timestamp: action.payload.message.timestamp\n  }\n\n  if (chatResponse.error) {\n    yield put(\n      messageActions.sendMessageFinish({\n        ...finishInfo,\n        error: chatResponse.error\n      })\n    )\n  } else {\n    const messageId = chatResponse.resourceURL.split('/messages/')[1]\n    yield put(\n      messageActions.sendMessageFinish({\n        ...finishInfo,\n        messageId\n      })\n    )\n  }\n}\n\n/**\n * Deletes a conversation via DELETE request\n * @method deleteConversation\n * @param  {Object} action A `DELETE_CONVERSATION` action\n */\nexport function * deleteConversation (action) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const chatType = action.payload.type\n\n  if (chatType === chatTypes.SMS) {\n    // sms delete requires originators phone number, which we'll get from the id passed in action's payload\n    if (action.payload.id) {\n      requestInfo.senderAddress = action.payload.id.split('--')[0]\n    } else {\n      // Maintaining backwards compatibility\n      const messagingConfig = yield select(getMessagingConfig)\n      requestInfo.senderAddress = messagingConfig.smsFrom || 'default'\n    }\n  }\n  const deleteResponse = yield call(deleteChatConversationRequest, requestInfo, action.payload.destination[0], chatType)\n\n  if (deleteResponse.error) {\n    yield put(\n      convoActions.deleteConversationFinish({\n        type: chatType,\n        destination: action.payload.destination,\n        error: deleteResponse.error\n      })\n    )\n  } else {\n    yield put(\n      convoActions.deleteConversationFinish({\n        type: chatType,\n        destination: action.payload.destination\n      })\n    )\n  }\n}\n\n/**\n * Deletes a message via DELETE request\n * @method deleteMessage\n * @param  {Object} action A `DELETE_MESSAGE` action\n */\nexport function * deleteMessage (action) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  const chatType = action.payload.type\n  if (chatType === chatTypes.SMS) {\n    // sms delete requires originators phone number, which we'll get from the id passed in action's payload\n    if (action.payload.id) {\n      requestInfo.senderAddress = action.payload.id.split('--')[0]\n    } else {\n      // Maintain backwards compatibility\n      const messagingConfig = yield select(getMessagingConfig)\n      requestInfo.senderAddress = messagingConfig.smsFrom || 'default'\n    }\n  }\n\n  const deleteResponse = yield call(\n    deleteChatMessageRequest,\n    requestInfo,\n    action.payload.destination[0],\n    action.payload.messageId,\n    chatType\n  )\n\n  if (deleteResponse.error) {\n    yield put(\n      messageActions.deleteMessageFinish({\n        type: chatType,\n        destination: action.payload.destination,\n        messageId: action.payload.messageId,\n        error: deleteResponse.error\n      })\n    )\n  } else {\n    yield put(\n      messageActions.deleteMessageFinish({\n        type: chatType,\n        destination: action.payload.destination,\n        messageId: action.payload.messageId\n      })\n    )\n  }\n}\n\n/**\n * Handles incoming chat message notifications\n * @method handleChatMessageNotification\n * @param  {Object} action A `NOTIFICATION_RECEIVED` action.\n */\nexport function * handleChatMessageNotification (action) {\n  const {\n    dateTime,\n    senderAddress,\n    text,\n    attachment,\n    'x-destinationAddress': destinationAddress\n  } = action.payload.chatMessageNotification.chatMessage\n\n  // use helper function to get message type from notification\n  const messageType = getNotificationType(action.payload.chatMessageNotification, 'chatMessage')\n\n  // Grab the messageId from the end of link.href\n  const messageId = action.payload.chatMessageNotification.link[0].href.split('/messages/')[1]\n\n  let destination\n  if (messageType === chatTypes.GROUP) {\n    destination = [destinationAddress]\n  } else {\n    destination = [senderAddress]\n  }\n\n  const existingConversation = yield select(findConversation, destination, messageType)\n  const newConversation = !existingConversation\n\n  let parts = []\n  if (text) {\n    const textPart = [{ type: 'text', text }]\n    parts = parts.concat(textPart)\n  }\n\n  if (attachment) {\n    const fileParts = attachment.map(file => {\n      return {\n        type: 'file',\n        rawURL: file.link,\n        name: file.name,\n        size: file.size,\n        'x-id': file['x-id']\n      }\n    })\n    parts = parts.concat(fileParts)\n  }\n\n  yield put(\n    messageActions.messageReceived(destination, parts, messageId, senderAddress, dateTime, {\n      type: messageType,\n      newConversation: newConversation\n    })\n  )\n}\n\n/**\n * Handles delivery receipts for SMS messages via websocket messages\n * @method handleDeliveryReceipts\n * @param  {Object} action A `NOTIFICATION_RECEIVED` action representing a deliveryReceipt.\n */\nexport function * handleDeliveryReceipts (action) {\n  const deliveryInfo = action.payload.deliveryInfoNotification.deliveryInfo\n  let deliveryStatus = null\n  if (DeliveryStatuses[deliveryInfo.deliveryStatus]) {\n    deliveryStatus = DeliveryStatuses[deliveryInfo.deliveryStatus]\n  } else {\n    log.info(`Invalid deliveryStatus: ${deliveryInfo.deliveryStatus}, defaulting to Unknown`)\n    deliveryStatus = DeliveryStatuses.Unknown\n  }\n  const messageId = deliveryInfo.messageId\n  const destination = `${deliveryInfo.address}`\n  yield put(messageActions.deliveryReceiptReceived(messageId, deliveryStatus, [destination], chatTypes.SMS))\n}\n\n/**\n * Handles \"send message\" actions specifically for SMS.\n * @method sendSMS\n * @param  {Object} action A `SEND_MESSAGE` action representing a SMS Message.\n */\nexport function * sendSMS (action) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  if (action.payload.id) {\n    // id is the current conversation id, which is  of the form: <senderAddress>--<destinationAddress>\n    // We just need to extract the senderAddress.\n    requestInfo.senderAddress = action.payload.id.split('--')[0]\n  } else {\n    // Maintain backwards compatibility\n    const messagingConfig = yield select(getMessagingConfig)\n    requestInfo.senderAddress = messagingConfig.smsFrom || 'default'\n  }\n\n  const { destination, message } = action.payload\n  const response = yield call(sendSMSRequest, requestInfo, destination[0], message.parts[0].text)\n\n  // TODO: Do something with the rest of the information from the response?\n  //      The finish action is specific for pre-CPaaS messages, so its\n  //      awkward to pass on/store all the new information.\n  const finishInfo = {\n    sender: requestInfo.username,\n    destination: destination,\n    parts: message.parts,\n    timestamp: message.timestamp,\n    type: message.type\n  }\n\n  if (response.error) {\n    yield put(\n      messageActions.sendMessageFinish({\n        ...finishInfo,\n        deliveryStatus: DeliveryStatuses.DeliveryImpossible,\n        error: response.error\n      })\n    )\n  } else {\n    // the ID is in the end of a string (`.../messages/<ID>`), so get it.\n    const messageId = response.resourceURL.split('/messages/')[1]\n    yield put(\n      messageActions.sendMessageFinish({\n        ...finishInfo,\n        deliveryStatus: DeliveryStatuses[response.deliveryInfoList.deliveryInfo[0].deliveryStatus],\n        messageId\n      })\n    )\n  }\n}\n\n/**\n * Saga for receiving an incoming SMS message.\n * @method handleIncomingSMS\n * @param  {Object} action A `NOTIFICATION_RECEIVED` action representing an inbound SMS.\n */\n// TODO: Have a single \"handleIncoming\" saga that handles both IM and SMS?\nexport function * handleIncomingSMS (action) {\n  const notification = action.payload.inboundSMSMessageNotification\n  const { message, messageId, senderAddress } = notification.inboundSMSMessage\n  const { dateTime } = notification\n\n  const existingConversation = yield select(findConversation, [senderAddress], chatTypes.SMS)\n  const newConversation = !existingConversation\n\n  yield put(\n    messageActions.messageReceived(\n      [senderAddress],\n      [{ type: 'text', text: message }],\n      messageId,\n      senderAddress,\n      dateTime,\n      {\n        newConversation: newConversation,\n        type: chatTypes.SMS\n      }\n    )\n  )\n}\n\n/**\n * Saga that fetches a list of Chat Conversations\n * @method fetchConversations\n * @param {Object} action A 'FETCH_CONVERSATIONS' action.\n */\nexport function * fetchConversations (action) {\n  const type = action.payload.type\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const response = yield call(fetchConversationsRequest, requestInfo, type)\n\n  if (response.error) {\n    yield put(\n      convoActions.fetchConversationsFinished({\n        error: response.error\n      })\n    )\n  } else {\n    const chatSessions = response.chatSession.map(chatSession => {\n      const { sessionId, sessionType, remoteAddress, localAddress, sessionDetails } = chatSession\n      const { lastText, lastPullTime, lastMessageTime } = sessionDetails\n\n      return {\n        id: sessionId,\n        destination: [remoteAddress],\n        address: localAddress,\n        type: chatTypes[sessionType.toUpperCase()],\n        lastMessage: lastText,\n        lastReceived: lastMessageTime,\n        lastPull: lastPullTime,\n        isTypingList: [],\n        messages: []\n      }\n    })\n\n    yield put(\n      convoActions.fetchConversationsFinished({\n        conversations: chatSessions,\n        error: false\n      })\n    )\n  }\n}\n\n/**\n * Saga that fetches a list of SMS Conversations\n * @method fetchSmsConversations\n * @param {Object} action A 'FETCH_CONVERSATIONS' action.\n */\nexport function * fetchSmsConversations (action) {\n  const type = action.payload.type\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const response = yield call(fetchSmsConversationsRequest, requestInfo, type)\n\n  if (response.error) {\n    yield put(\n      convoActions.fetchConversationsFinished({\n        error: response.error\n      })\n    )\n  } else {\n    const smsSessions = response.chatSession.map(smsThread => {\n      const { remoteAddress, localAddress, threadDetails, resourceURL } = smsThread\n      const { lastText, lastPullTime, firstMessageTime, lastMessageTime, length } = threadDetails\n      // the remote & local info are at the end of a string (`.../smsmessaging/v1/<userID>/remoteAddresses/<address1>/localAddresses/<address2>`).\n      const tmp = resourceURL.split('/remoteAddresses/')[1]\n      const addresses = tmp.split('/localAddresses/')\n\n      // NOTE: Just like when an SMS conversation is created, the id of that conversation is generated as follows:\n      //       <source>--<destination>\n      return {\n        id: addresses[1] + '--' + addresses[0],\n        destination: [remoteAddress],\n        address: localAddress,\n        type: chatTypes.SMS,\n        lastMessage: lastText,\n        lastReceived: lastMessageTime,\n        lastPull: lastPullTime,\n        isTypingList: [],\n        messages: [],\n        firstReceived: firstMessageTime,\n        length: length\n      }\n    })\n\n    yield put(\n      convoActions.fetchConversationsFinished({\n        conversations: smsSessions,\n        error: false\n      })\n    )\n  }\n}\n\n/**\n * Saga that fetches all chat messages for a particular conversation\n * @method fetchChatMessages\n * @param {Object} action A 'FETCH_MESSAGES' action.\n */\nexport function * fetchChatMessages (action) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const response = yield call(fetchMessagesRequest, requestInfo, {\n    destination: action.payload.destination[0],\n    type: action.payload.type\n  })\n\n  const messageList = response.chatMessage.map(message => {\n    let parts = []\n    if (message.text) {\n      parts = parts.concat({ type: 'text', text: message.text })\n    }\n    if (message.attachment) {\n      parts = parts.concat(\n        message.attachment.map(attachment => {\n          return {\n            type: 'file',\n            ...attachment,\n            rawURL: attachment.link,\n            name: attachment.name\n          }\n        })\n      )\n    }\n\n    return {\n      parts: parts,\n      sender: message.senderAddress,\n      destination: message['x-destinationAddress'],\n      timestamp: message.dateTime,\n      messageId: message.resourceURL.split('/messages/')[1] // messageID is after /messages/ in the resourceURL\n    }\n  })\n\n  if (response.error) {\n    yield put(\n      messageActions.fetchMessagesFinished(action.payload.destination, action.payload.type, null, response.error)\n    )\n  } else {\n    yield put(messageActions.fetchMessagesFinished(action.payload.destination, action.payload.type, messageList, null))\n  }\n}\n\n/**\n * Saga that fetches all sms messages for a particular conversation.\n * @method fetchSmsMessages\n * @param {Object} action A 'FETCH_MESSAGES' action.\n */\nexport function * fetchSmsMessages (action) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  let senderAddress\n\n  if (action.payload.id) {\n    // id is the current conversation id, which is  of the form: <senderAddress>--<destinationAddress>\n    // We just need to extract the senderAddress.\n    senderAddress = action.payload.id.split('--')[0]\n  } else {\n    // Maintain backwards compatibility\n    const messagingConfig = yield select(getMessagingConfig)\n    senderAddress = messagingConfig.smsFrom || 'default'\n  }\n\n  const response = yield call(fetchSmsMessagesRequest, requestInfo, {\n    source: senderAddress,\n    destination: action.payload.destination[0],\n    type: action.payload.type\n  })\n\n  const messageList = response.smsMessage.map(message => {\n    let parts = []\n    // In the SMS use case, message.message is the actual sms message in plain text.\n    if (message.message) {\n      parts = parts.concat({ type: 'text', text: message.message })\n    }\n    if (message.attachment) {\n      parts = parts.concat(\n        message.attachment.map(attachment => {\n          return {\n            type: 'file',\n            ...attachment,\n            rawURL: attachment.link,\n            name: attachment.name\n          }\n        })\n      )\n    }\n\n    // the remote & local info are at the end of a string (`.../smsmessaging/v1/<userID>/remoteAddresses/<address1>/localAddresses/<address2>`).\n    const tmp = message.resourceURL.split('/remoteAddresses/')[1]\n    const tmp2 = tmp.split('/localAddresses/')\n    const remoteAddress = tmp2[0]\n    const localAddress = tmp2[1].split('/messages/')[0]\n\n    // message.type is either outbound or inbound\n    // Assume type is 'outbound'.\n    // This means the senderAddress is localAddress & destinationAddress is remoteAddress.\n    let senderAddress = localAddress\n    let destinationAddress = remoteAddress\n\n    if (message.type !== 'outbound') {\n      // otherwise, the values are swapped\n      senderAddress = remoteAddress\n      destinationAddress = localAddress\n    }\n\n    return {\n      parts: parts,\n      status: message.status,\n      type: message.type,\n      sender: senderAddress,\n      destination: destinationAddress,\n      timestamp: message.dateTime,\n      messageId: message.resourceURL.split('/messages/')[1] // messageID is after /messages/ in the resourceURL\n    }\n  })\n\n  if (response.error) {\n    yield put(\n      messageActions.fetchMessagesFinished(action.payload.destination, action.payload.type, null, response.error)\n    )\n  } else {\n    yield put(messageActions.fetchMessagesFinished(action.payload.destination, action.payload.type, messageList, null))\n  }\n}\n\n/**\n * Creates URLs for multimedia attachments and dispatches an action to update the store with the new url\n * @param {Object} action A 'GET_IMAGE_LINKS' action.\n */\nexport function * getImageLinks (action) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const { parts, destination, type, messageId } = action.payload\n  const fileParts = parts.filter(part => part.type === 'file')\n  const responseList = yield all(fileParts.map(filePart => call(fetchImageLinks, requestInfo, filePart.rawURL)))\n\n  yield all(\n    responseList.map((response, index) => {\n      if (response.error) {\n        return put(messageActions.getImageLinksFinish({ error: response.error }))\n      } else {\n        // create a url from the blob and save it to the store.\n        const url = URL.createObjectURL(response.blob)\n        return put(\n          messageActions.getImageLinksFinish({\n            url,\n            rawURL: fileParts[index].rawURL,\n            destination,\n            type,\n            messageId\n          })\n        )\n      }\n    })\n  )\n}\n\n/**\n * Helper function to determine the session or message type from the notification.\n * @param {Object} notification\n * @param {string} notificationType\n * @return {string} resourceType\n */\nfunction getNotificationType (notification, notificationType) {\n  // determine type of resource by parsing the notification link\n  const link = notification.link.find(link => link.rel === notificationType)\n  let resourceType\n  if (link) {\n    resourceType = getResourceType(link.href)\n  }\n  return resourceType\n}\n\n/**\n * Helper function to determine the resource type from the resourceURL.\n * @param {string} resourceURL\n * @return {string} resourceType\n */\nfunction getResourceType (resourceURL) {\n  // determine type of resource by looking for '/group/' or '/oneToOne' in the string\n  // determine if the href is for a group type resource by searching for\n  // '/path-string/path-string/path-string/group/' in the link's href\n  let resourceType\n  if (resourceURL.search(/\\/\\S*\\/\\S*\\/\\S*\\/group\\//) !== -1) {\n    resourceType = chatTypes.GROUP\n    // determine if the href is for a chat type resource by searching for\n    // '/path-string/path-string/path-string/oneToOne/' in the link's href\n  } else if (resourceURL.search(/\\/\\S*\\/\\S*\\/\\S*\\/oneToOne\\//) !== -1) {\n    resourceType = chatTypes.ONETOONE\n  } else {\n    log.info('Unknown chat type.')\n  }\n  return resourceType\n}\n","// Messaging plugin.\nimport {\n  chatSubscribe,\n  chatUnsubscribe,\n  smsOutboundSubscribe,\n  smsOutboundUnsubscribe,\n  smsInboundSubscribe,\n  smsInboundUnsubscribe\n} from '../requests'\nimport { getMessagingConfig } from '../interface/selectors'\n\n// Other plugins.\nimport { getRequestInfo } from '../../../auth/interface/selectors'\nimport { getNotificationChannels } from '../../../subscription/interface/selectors'\nimport { reportSubscriptionFinished, reportUnsubscriptionFinished } from '../../../subscription/interface/actions'\nimport { logManager } from '../../../logs'\n\nimport BasicError, { subscriptionCodes } from '../../../errors'\nimport { platforms } from '../../../constants'\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('MESSAGING')\n\n/**\n * Plugin chat subscription saga.\n * Handles subscribing to the chat service needed for the messaging plugin.\n * @method chatSubscription\n * @param {Object} config   The subscription request config\n * @param {string} type     The type of notification channel for this subscription.\n */\nexport function * chatSubscription (config, type) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const channels = yield select(getNotificationChannels)\n  const channel = channels.notificationChannels[type]\n\n  log.info(`Subscribing to chat service on ${type} channel.`)\n\n  const response = yield call(chatSubscribe, requestInfo, channel)\n\n  if (response.error) {\n    yield put(\n      // TODO: Create a subscription effect for this?\n      reportSubscriptionFinished({\n        service: 'chat',\n        type: type,\n        error: response.error\n      })\n    )\n  } else {\n    yield put(\n      reportSubscriptionFinished({\n        service: 'chat',\n        type: type,\n        subscription: response.subscription\n      })\n    )\n  }\n}\n\n/**\n * Plugin chat unsubscription saga.\n * Handles unsubscribing from chat service needed for the messaging plugin.\n * @method chatUnsubscription\n */\nexport function * chatUnsubscription (action) {\n  const { subscriptions } = yield select(getNotificationChannels)\n  let chatSubscription = subscriptions.filter(sub => {\n    return sub.service === 'chat' && sub.channelType === action.payload.type\n  })\n\n  if (chatSubscription.length === 0) {\n    // This scenario should not occur because we should not be able to subscribe\n    //    to an already subscribed-to service.\n    log.debug(`No chat subscription on ${action.payload.type} channel found to unsubscribe.`)\n    yield put(\n      reportUnsubscriptionFinished({\n        error: new BasicError({\n          message: 'Multiple chat subscriptions found. Cannot unsubscribe.',\n          code: subscriptionCodes.CPAAS_UNSUBSCRIBE_FAIL\n        }),\n        service: 'chat',\n        type: action.payload.type\n      })\n    )\n    return\n  } else if (chatSubscription.length > 1) {\n    // \"Error\" scenario, why are there more than 1 chat subscriptions?\n    // TODO: Report ...something.\n    yield put(reportUnsubscriptionFinished())\n    return\n  } else {\n    chatSubscription = chatSubscription[0]\n  }\n\n  log.info(`Unsubscribing from chat service on ${action.payload.type} channel.`)\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  const response = yield call(chatUnsubscribe, requestInfo, chatSubscription)\n\n  yield put(\n    reportUnsubscriptionFinished({\n      ...response,\n      service: 'chat',\n      type: action.payload.type\n    })\n  )\n}\n\n/**\n * Subscription saga for inbound SMS notifications.\n * @method smsInboundSubscription\n * @param {Object} config   The subscription request config\n * @param {string} type     The type of notification channel for this subscription.\n */\nexport function * smsInboundSubscription (config, type) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const channels = yield select(getNotificationChannels)\n  const channel = channels.notificationChannels[type]\n\n  if (config && config.params && config.params.destinationAddress) {\n    requestInfo.destinationAddress = config.params.destinationAddress\n  } else {\n    // we need to be backwards compatible, so get the sms number from global configuration obj.\n    const messagingConfig = yield select(getMessagingConfig)\n    requestInfo.destinationAddress = messagingConfig.smsFrom\n  }\n  log.debug(\n    `Subscribing to SMS inbound service on ${type} channel for destination address: ${requestInfo.destinationAddress}.`\n  )\n\n  const response = yield call(smsInboundSubscribe, requestInfo, channel)\n\n  yield put(\n    reportSubscriptionFinished({\n      ...response,\n      service: 'smsinbound',\n      type: type\n    })\n  )\n}\n\n/**\n * Unsubscription saga for inbound SMS notifications.\n * @method smsInboundUnsubscription\n * @param  {Object} action\n */\nexport function * smsInboundUnsubscription (action) {\n  const { subscriptions } = yield select(getNotificationChannels)\n  let smsSubscription = subscriptions.filter(sub => {\n    return sub.service === 'smsinbound' && sub.channelType === action.payload.type\n  })\n\n  if (smsSubscription.length === 1) {\n    smsSubscription = smsSubscription[0]\n\n    log.debug(`Unsubscribing from inbound SMS service on ${action.payload.type} channel.`)\n    const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n    const response = yield call(smsInboundUnsubscribe, requestInfo, smsSubscription)\n\n    yield put(\n      reportUnsubscriptionFinished({\n        ...response,\n        service: 'smsinbound',\n        type: action.payload.type\n      })\n    )\n  } else {\n    // \"Error\" scenario: Should only be one subscription like this.\n  }\n}\n\n/**\n * Subscription saga for outbound SMS notifications.\n * @method smsOutboundSubscription\n * @param {Object} config   The subscription request config\n * @param {string} type     The type of notification channel for this subscription.\n */\nexport function * smsOutboundSubscription (config, type) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const channels = yield select(getNotificationChannels)\n  const channel = channels.notificationChannels[type]\n\n  log.debug(`Subscribing to SMS outbound service on ${type} channel.`)\n  const response = yield call(smsOutboundSubscribe, requestInfo, channel)\n\n  yield put(\n    reportSubscriptionFinished({\n      ...response,\n      service: 'smsoutbound',\n      type: type\n    })\n  )\n}\n\n/**\n * Unsubscription saga for outbound SMS notifications.\n * @method smsOutboundUnsubscription\n * @param  {Object} action\n */\nexport function * smsOutboundUnsubscription (action) {\n  const { subscriptions } = yield select(getNotificationChannels)\n  let smsSubscription = subscriptions.filter(sub => {\n    return sub.service === 'smsoutbound' && sub.channelType === action.payload.type\n  })\n\n  if (smsSubscription.length === 1) {\n    smsSubscription = smsSubscription[0]\n\n    log.debug(`Unsubscribing from outbound SMS service on ${action.payload.type} channel.`)\n    const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n    const response = yield call(smsOutboundUnsubscribe, requestInfo, smsSubscription)\n\n    yield put(\n      reportUnsubscriptionFinished({\n        ...response,\n        service: 'smsoutbound',\n        type: action.payload.type\n      })\n    )\n  } else {\n    // \"Error\" scenario: Should only be one subscription like this.\n  }\n}\n","import * as actionTypes from './actionTypes'\nimport * as eventTypes from './eventTypes'\nimport { isEqual } from 'lodash/fp'\n\nconst eventsMap = {}\n\neventsMap[actionTypes.CREATE_CONVERSATION] = function (action) {\n  return {\n    type: eventTypes.CONVERSATIONS_NEW,\n    args: {\n      destination: action.payload.destination,\n      type: action.payload.type\n    }\n  }\n}\n\neventsMap[actionTypes.SEND_MESSAGE_FINISH] = function (action) {\n  return {\n    type: eventTypes.MESSAGES_CHANGE,\n    args: {\n      destination: action.payload.destination,\n      type: action.payload.type,\n      messageId: action.payload.messageId,\n      sender: action.payload.sender\n    }\n  }\n}\n\neventsMap[actionTypes.MESSAGE_RECEIVED] = function (action) {\n  const { meta, payload } = action\n  if (meta.newConversation) {\n    return {\n      type: eventTypes.CONVERSATIONS_CHANGE,\n      args: {\n        destination: payload.destination,\n        type: meta.type,\n        messageId: payload.message.messageId\n      }\n    }\n  }\n  return {\n    type: eventTypes.MESSAGES_CHANGE,\n    args: {\n      destination: payload.destination,\n      messageId: payload.message.messageId,\n      type: meta.type\n    }\n  }\n}\n\neventsMap[actionTypes.FETCH_CONVERSATIONS_FINISHED] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGES_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.CONVERSATIONS_CHANGE,\n      args: action.payload.conversations.map(conversation => {\n        return {\n          destination: conversation.destination,\n          type: conversation.type\n        }\n      })\n    }\n  }\n}\n\neventsMap[actionTypes.DELETE_CONVERSATION_FINISH] = function (action, { state }) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGES_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.CONVERSATIONS_CHANGE,\n      args: state.messaging.conversations.map(conversation => {\n        if (\n          !(isEqual(conversation.destination, action.payload.destination) && conversation.type === action.payload.type)\n        ) {\n          return {\n            destination: conversation.destination,\n            type: conversation.type\n          }\n        }\n      })\n    }\n  }\n}\n\neventsMap[actionTypes.FETCH_MESSAGES_FINISHED] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGES_ERROR,\n      args: action.payload\n    }\n  } else {\n    return {\n      type: eventTypes.MESSAGES_CHANGE,\n      args: {\n        destination: action.payload.destination,\n        type: action.payload.type\n      }\n    }\n  }\n}\n\neventsMap[actionTypes.CLEAR_MESSAGES] = function (action) {\n  return {\n    type: eventTypes.MESSAGES_CHANGE,\n    args: action.payload\n  }\n}\n\neventsMap[actionTypes.DELETE_MESSAGE_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.MESSAGES_ERROR,\n      args: action.payload\n    }\n  } else {\n    return {\n      type: eventTypes.MESSAGES_CHANGE,\n      args: {\n        destination: action.payload.destination,\n        messageId: action.payload.messageId,\n        type: action.payload.type\n      }\n    }\n  }\n}\n\neventsMap[actionTypes.RECEIVE_DELIVERY_RECEIPT] = function (action) {\n  return {\n    type: eventTypes.MESSAGES_CHANGE,\n    args: {\n      destination: action.payload.destination,\n      messageId: action.payload.messageId,\n      type: action.payload.type\n    }\n  }\n}\n\neventsMap[actionTypes.SET_IS_TYPING_FINISHED] = function (action) {\n  return {\n    type: eventTypes.IS_TYPING_LIST_CHANGE,\n    args: {\n      destination: action.payload.destination,\n      sender: action.payload.senderAddress,\n      type: action.payload.type,\n      state: action.payload.state\n    }\n  }\n}\n\neventsMap[actionTypes.GET_IMAGE_LINKS_FINISH] = function (action) {\n  return {\n    type: eventTypes.MESSAGES_CHANGE,\n    args: {\n      destination: action.payload.destination,\n      type: action.payload.type\n    }\n  }\n}\n\nexport default eventsMap\n","// Notification plugin.\nimport { api, reducer, name } from '../../notifications/interface'\nimport events from '../../notifications/interface/events'\nimport * as sagas from './sagas'\n\n// Other plugins.\nimport { mapEvents } from '../../events/interface/actions'\nimport { update as updateConfig } from '../../config/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { defaultsDeep, values } from 'lodash/fp'\n\n// Parse and/or Validate\nimport { validation as v8n, parse } from '../../../src/common/validation'\n\n/**\n * Configuration options for the notification feature.\n * @public\n * @name config.notifications\n * @memberof config\n * @instance\n * @param {Object} notifications - The notifications configuration object.\n * @param {number} [notifications.idCacheLength=100] - Default amount of event ids to remember for de-duplication purposes.\n */\n\n/**\n * CPaaS Notifications plugin factory.\n * @method notifications\n * @param {configs.notifications} options - Configuration options for authentication.\n * @return {Object} plugin - A notifications plugin.\n */\nconst defaultOptions = {\n  idCacheLength: 100\n}\n// config validation\nconst v8nValidation = v8n.schema({\n  idCacheLength: v8n.positive()\n})\nconst parseOptions = parse('notifications', v8nValidation)\nexport default function notifications (options = {}) {\n  const pluginOptions = defaultsDeep(defaultOptions, options)\n  parseOptions(pluginOptions)\n\n  function * init () {\n    yield put(updateConfig(pluginOptions, name))\n    yield put(mapEvents(events))\n  }\n\n  const capabilities = []\n\n  return {\n    name,\n    capabilities,\n    init,\n    api,\n    reducer,\n    sagas: values(sagas)\n  }\n}\n","import reducer from './reducers'\nimport api from './api'\n\nconst name = 'notifications'\n\nexport { name, api, reducer }\n","import * as actionTypes from './actionTypes'\nimport { WS_CONNECT_FINISHED, WS_DISCONNECT_FINISHED } from '../../connectivity/interface/actionTypes'\nimport { handleActions } from 'redux-actions'\n\nconst reducers = {}\n\nreducers[actionTypes.ENABLE_NOTIFICATION_CHANNEL_FINISH] = {\n  next (state, action) {\n    const channel = action.meta.channel\n    const enabled = action.payload.channelEnabled\n\n    let newChannelState\n    if (enabled) {\n      newChannelState = {\n        ...state[channel],\n        ...action.payload\n      }\n    } else {\n      // If the channel is being disabled, clear old state.\n      newChannelState = {\n        ...action.payload\n      }\n    }\n\n    return {\n      ...state,\n      [channel]: newChannelState\n    }\n  }\n}\n\n/*\n * The websocket channel is assumed to be enabled when the\n *      websocket is opened.\n */\nreducers[WS_CONNECT_FINISHED] = {\n  next (state) {\n    // TODO: Link WS only?\n    return {\n      ...state,\n      WEBSOCKET: {\n        ...state.WEBSOCKET,\n        channelEnabled: true\n      }\n    }\n  }\n}\n\n/*\n * The websocket channel is assumed to be disabled when the\n *      websocket is closed.\n */\nreducers[WS_DISCONNECT_FINISHED] = {\n  next (state) {\n    // TODO: Link WS only?\n    return {\n      ...state,\n      WEBSOCKET: {\n        ...state.WEBSOCKET,\n        channelEnabled: false\n      }\n    }\n  }\n}\n\n// Default notifications sub-state.\nconst defaultState = {\n  WEBSOCKET: {\n    channelEnabled: false\n  },\n  PUSH: {\n    channelEnabled: true\n  }\n}\n\n/**\n * Notifications reducer.\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n */\nconst reducer = handleActions(reducers, defaultState)\nexport default reducer\n","/**\n * The 'notification' namespace allows user to register/deregister for/from push notifications as well as\n * enabling/disabling the processing of websocket notifications.\n *\n * @public\n * @requires externalNotifications\n * @namespace notification\n */\n\nimport * as actions from './actions'\nimport { platforms } from '../../constants'\n\nimport { defer } from '../../common/utils'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Notifications API.\n * @method api\n * @param {Function} dispatch The redux store's dispatch function.\n * @return {Object} api  The notifications API object.\n */\nexport default function api ({ dispatch }) {\n  const notificationApi = {\n    /**\n     * Provides an external notification to the system for processing.\n     *\n     * @public\n     * @requires externalNotifications\n     * @memberof notification\n     * @method process\n     * @param {Object} notification\n     * @param {string} [channel] - The channel that the notification came from.\n     */\n    process (notification, channel, platform = platforms.LINK) {\n      log.debug(API_LOG_TAG + 'notification.process: ', notification, channel, platform)\n      dispatch(actions.externalNotification(notification, channel, platform))\n    },\n\n    /**\n     * Registers with Apple push notification service. Once registration is successful, the application will be able to receive\n     * standard and/or voip push notifications. It can then send these notifications to the SDK with {@link api.notifications.process}\n     * in order for the SDK to process them.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method registerApplePush\n     * @param {Object} params\n     * @param {string[]} params.services - Array of services for which we wish to receive notifications.\n     * @param {string} params.voipDeviceToken - The voip device token used for voip push on iOS.\n     *                                          This token is required if registering for call service notifications on iOS.\n     * @param {string} params.standardDeviceToken - The standardDevice token used for standard push on iOS .\n     *                                              This token is required when registering for non-call service notifications.\n     * @param {string} params.bundleId - The bundleId to identify the application receiving the push notification.\n     * @param {string} params.clientCorrelator - Unique identifier for a client device.\n     * @param {string} params.realm - The realm used by the push registration service to identify and\n     *                                establish a connection with the service gateway.\n     * @param {boolean} params.isProduction - If true, push notification will be sent to production.\n     *                                        If false, push notification will be sent to sandbox.\n     * @return {Promise} When successful,  the information of the registration.\n     *                   Promise will reject with error object otherwise.\n     */\n    registerApplePush ({\n      services,\n      voipDeviceToken,\n      standardDeviceToken,\n      bundleId,\n      clientCorrelator,\n      realm,\n      isProduction\n    }) {\n      const deferredResult = defer()\n      log.debug(API_LOG_TAG + 'notification.registerApplePush', arguments)\n\n      dispatch(\n        actions.registerApplePushNotification(\n          {\n            services,\n            voipDeviceToken,\n            standardDeviceToken,\n            bundleId,\n            clientCorrelator,\n            realm,\n            isProduction\n          },\n          deferredResult\n        )\n      )\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Registers with Google push notification service. Once registration is successful, the application will be able to receive\n     * standard and/or voip push notifications. It can then send these notifications to the SDK with {@link api.notifications.process}\n     * in order for the SDK to process them.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method registerAndroidPush\n     * @param {Object} params\n     * @param {string[]} params.services - Array of services to register for.\n     * @param {string} params.deviceToken - The device token used for standard push on Android. This token is required\n     *                                      when registering for all related services notifications.\n     * @param {string} params.bundleId - The bundleId to identify the application receiving the push notification.\n     * @param {string} params.clientCorrelator - Unique identifier for a client device.\n     * @param {string} params.realm - The realm used by the push registration service to identify\n     *                                and establish a connection with the service gateway.\n     * @return {Promise} When successful,  the information of the registration.\n     *                   Promise will reject with error object otherwise.\n     */\n    registerAndroidPush ({ services, deviceToken, bundleId, clientCorrelator, realm }) {\n      const deferredResult = defer()\n      log.debug(API_LOG_TAG + 'notification.registerAndroidPush', arguments)\n\n      dispatch(\n        actions.registerAndroidPushNotification(\n          {\n            services,\n            deviceToken,\n            bundleId,\n            clientCorrelator,\n            realm\n          },\n          deferredResult\n        )\n      )\n      return deferredResult.promise\n    },\n\n    /**\n     * Unregister Apple push notifications.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method unregisterApplePush\n     * @param {string} registrationInfo - The data returned from the push registration\n     * @return {Promise} When successful, the promise will resolve with undefined.\n     *                   Promise will reject with error object otherwise.\n     */\n    unregisterApplePush (registrationInfo) {\n      const deferredResult = defer()\n      log.debug(API_LOG_TAG + 'notification.unregisterPush')\n      dispatch(actions.unregisterApplePushNotification(registrationInfo, deferredResult))\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Unregister Android push notifications.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method unregisterAndroidPush\n     * @param {string} registrationInfo - The data returned from the push registration\n     * @return {Promise} When successful, the promise will resolve with undefined.\n     *                   Promise will reject with error object otherwise.\n     */\n    unregisterAndroidPush (registrationInfo) {\n      const deferredResult = defer()\n      log.debug(API_LOG_TAG + 'notification.unregisterPush')\n      dispatch(actions.unregisterAndroidPushNotification(registrationInfo, deferredResult))\n\n      return deferredResult.promise\n    },\n\n    /**\n     * Enables, or disables, the processing of websocket notifications.\n     *\n     * @public\n     * @requires push\n     * @memberof notification\n     * @method enableWebsocket\n     * @param {boolean} enable - Whether the websocket channel should be enabled.\n     */\n    enableWebsocket (enable) {\n      log.debug(API_LOG_TAG + 'notification.enableWebsocket: ', enable)\n      dispatch(\n        actions.enableNotificationChannel('WEBSOCKET', {\n          channelEnabled: enable\n        })\n      )\n    }\n  }\n\n  return { notification: notificationApi }\n}\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nvar events = {}\n\nevents[actionTypes.ENABLE_NOTIFICATION_CHANNEL_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.NOTI_ERROR,\n      args: { channel: action.meta.channel, error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.NOTI_CHANGE,\n      args: { channel: action.meta.channel }\n    }\n  }\n}\n\nevents[actionTypes.NOTIFICATION_RECEIVED] = function (action) {\n  if (!action.error) {\n    return {\n      type: eventTypes.NOTI_RECEIVED,\n      args: { payload: action.payload }\n    }\n  }\n}\n\nexport default events\n","/**\n * Push notifications registration state has changed.\n *\n * @public\n * @requires push\n * @memberof notification\n * @event notifications:change\n * @param {Object} params\n * @param {string} params.channel The channel for the notification.\n */\nexport const NOTI_CHANGE = 'notifications:change'\n\n/**\n * An error occurred with push notifications.\n *\n * @public\n * @requires push\n * @memberof notification\n * @event notifications:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n * @param {string} params.channel The channel for the notification.\n */\nexport const NOTI_ERROR = 'notifications:error'\n\n/**\n * A notification was received by the SDK.\n *\n * @private This is an undocumented feature.\n *\n * @event notification:received\n * @param {Object} params Object that has information about the notification.\n * @param {Object} params.payload The payload of the notification.\n */\nexport const NOTI_RECEIVED = 'notification:received'\n","// Notification plugin.\nimport * as actions from '../../notifications/interface/actions'\nimport * as actionTypes from '../../notifications/interface/actionTypes'\nimport { getNotificationsInfo, getNotificationConfig } from '../../notifications/interface/selectors'\n\n// Logs\nimport { logManager } from '../../logs'\nimport { put, select, take } from 'redux-saga/effects'\n\n// Get the logger\nconst log = logManager.getLogger('NOTIFICATIONS')\n\n/**\n * Tries to find the id of the notification.\n *\n * CPaaS notifications do not have a consistent path to their ID.\n * The ID is one level down in the object, but we need to dynamically\n * find the key that its in.\n *\n * @param {Object} notification\n * @returns The notification id if it finds one, undefined otherwise.\n */\nfunction findNotificationInfo (notification) {\n  for (const key in notification) {\n    if (notification[key].id) {\n      return [notification[key].id, key]\n    }\n  }\n}\n\nexport function * processNotifications () {\n  const idCache = []\n\n  /**\n   * Checks whether a notification has already been received,\n   *      judging by its event ID.\n   * @method isDuplicate\n   * @param  {string} id\n   * @param {Object} config\n   * @return {boolean}\n   */\n  function isDuplicate (id, config) {\n    // Get the list of \"relevant\" IDs in the queue (\"relevant\" being the latest X elements).\n    // This covers edge-cases where the cache length config is changed (to a smaller number)\n    //    after the queue has begun to be populated.\n    const ids = config.idCacheLength === 0 ? [] : idCache.slice(config.idCacheLength * -1)\n    // If the notification ID is part of the list, then it's a duplicate.\n    if (ids.indexOf(id) !== -1) {\n      return true // duplicate.\n    } else {\n      // Not a duplicate.\n      idCache.push(id)\n      while (idCache.length > config.idCacheLength) {\n        idCache.shift()\n      }\n\n      return false\n    }\n  }\n\n  while (true) {\n    const { payload: notification, meta } = yield take(actionTypes.PROCESS_NOTIFICATION)\n    const config = yield select(getNotificationConfig)\n    log.info(`Received notification on channel ${meta.channel}; handling.`)\n\n    // Only process notifications from enabled channels, ie. \"silence\" the channel.\n    const channel = yield select(getNotificationsInfo, meta.channel)\n    if (!channel.channelEnabled) {\n      log.debug('Notification received on disabled channel. Ignoring it.', meta.channel)\n      continue\n    }\n\n    // Find the unique ID of the received notification.\n    const [notificationId, notificationType] = findNotificationInfo(notification) || []\n    if (!notificationId) {\n      log.error('Received notification without a findable ID.', Object.keys(notification))\n      continue\n    }\n\n    log.debug(`Received notification of type ${notificationType} with ID ${notificationId}.`)\n    if (!isDuplicate(notificationId, config)) {\n      log.info('Notifying other plugins about notification ...')\n      // Notify others (plugins) that a new notification was receive.\n      yield put(actions.notificationReceived(notification, meta.platform))\n      log.debug(`Finished processing notification of type ${notificationType} with ID ${notificationId}`)\n\n      // Finish processing the notification.\n      // TODO: Investigate if we need to add a handler for this action, as currently there is no handling of the action.\n      yield put(actions.processNotificationFinish(notification))\n    } else {\n      log.info('Notification was a duplicate; ignoring ...')\n      const error = new Error(`Notification id ${notificationId} is duplicate.`)\n      yield put(actions.processNotificationFinish(error))\n    }\n  }\n}\n","import { cloneDeep } from 'lodash/fp'\n\n/**\n * Retrieves the notifications state.\n * @method getNotificationsInfo\n * @param  {String} [channel] - Specific notification channel information to retrieve.\n * @return {Object}\n */\nexport function getNotificationsInfo (state, channel = undefined) {\n  if (channel) {\n    return state.notifications[channel]\n  } else {\n    return state.notifications\n  }\n}\n\n/**\n * Retrieves notification config.\n * @method getNotificationConfig\n * @return {Object}\n */\nexport function getNotificationConfig (state) {\n  return cloneDeep(state.config.notifications)\n}\n","// Presence plugin.\nimport { api, reducer } from '../interface'\nimport * as sagas from './sagas'\nimport events from '../interface/events'\nimport { STATUS, ACTIVITY } from './constants'\n\n// Other plugins.\nimport { mapEvents } from '../../events/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { values } from 'lodash/fp'\n\nconst name = 'presence'\n\nconst capabilities = ['presence']\n\nexport default () => {\n  // Add plugin-specific things to the API.\n  function augmentedApi (context) {\n    const newApi = api(context)\n    /**\n     * Possible presence status values.\n     * @public\n     * @static\n     * @name statuses\n     * @memberof presence\n     * @type {Object}\n     * @property {string} OPEN\n     * @property {string} CLOSED\n     * @example\n     * const { statuses, activities } = client.presence\n     * // Use the values when updating presence.\n     * client.presence.update(statuses.OPEN, activities.AVAILABLE)\n     */\n    newApi.presence.statuses = STATUS\n    /**\n     * Possible presence activity values.\n     * @public\n     * @static\n     * @name activities\n     * @memberof presence\n     * @type {Object}\n     * @property {string} AVAILABLE\n     * @property {string} BUSY\n     * @property {string} LUNCH\n     * @property {string} VACATION\n     * @property {string} ON_THE_PHONE\n     * @property {string} ACTIVITIES_UNKNOWN\n     * @property {string} ACTIVITIES_OTHER\n     * @example\n     * const { statuses, activities } = client.presence\n     * // Use the values when updating presence.\n     * client.presence.update(statuses.OPEN, activities.AVAILABLE)\n     */\n    newApi.presence.activities = ACTIVITY\n    return newApi\n  }\n\n  return {\n    name,\n    capabilities,\n    api: augmentedApi,\n    reducer,\n    init: () => [put(mapEvents(events))],\n    sagas: values(sagas)\n  }\n}\n","export { default as api } from './api'\nexport { default as reducer } from './reducers'\n","/**\n * The 'presence' namespace provides an interface for an application to set the\n *    User's presence information and to track other Users' presence\n *    information.\n *\n * Presence information is persisted by the server. When the SDK is initialized,\n *    there will be no information available. Presence information will become\n *    available either by using {@link presence.fetch} or by subscribing for\n *    updates about other Users, using {@link presence.subscribe}.\n *\n * Available presence information can be retrieved using {@link presence.get} or\n *    {@link presence.getAll}.\n *\n * @public\n * @requires presence\n * @namespace presence\n */\n\n/**\n * The PresenceStatus type defines the user's current status in terms of the user's availability to\n * communicate/respond to other users in the network.\n * An instance of this type can be obtained by invoking the {@link presence.get} function.\n *\n * Reporting when a user is on the phone is enabled (by default), which means that presence update notifications\n * will be sent whenever a user is in a call, as well as when the call has ended.\n * This is a user preference enabled or disabled on server side, and it can only be changed on the server side.\n *\n * The status is set to {@link presence.statuses open} as soon as a user subscribes for the presence service.\n *\n * @public\n * @static\n * @typedef {Object} PresenceStatus\n * @memberof presence\n * @property {string} userId The unique identifier for the user associated with this presence status.\n * @property {string} status The current status the user has set for themselves. For supported values see {@link presence.statuses}.\n * @property {string} activity The current activity of the user.\n *      For supported values see {@link presence.activities}.\n * @property {string} note Additional message accompanying the status & activity.\n * @property {boolean} loading Whether the presence information has been loaded or is in the process of loading.\n */\n\nimport * as actions from './actions'\nimport * as selectors from './selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('PRESENCE')\n\nexport default function (context) {\n  const presenceApi = {\n    /**\n     * Updates the presence information for the current user.\n     *\n     * See {@link presence.statuses} and {@link presence.activities} for valid\n     *    values.\n     *\n     * The SDK will emit a\n     *    {@link presence.event:presence:selfChange presence:selfChange} event\n     *    when the operation completes. The updated presence information is\n     *    available and can be retrieved with {@link presence.getSelf}.\n     *\n     * Other users subscribed for this user's presence will receive a\n     *    {@link presence.event:presence:change presence:change} event.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method update\n     * @param  {string} status The status of the presence state.\n     * @param  {string} activity The activity to be shown as presence state\n     * @param  {string} [note] An additional note to be provided when the activity is `presence.activities.ACTIVITIES_OTHER`.\n     */\n    update (status, activity, note) {\n      log.debug(API_LOG_TAG + 'presence.update: ', status, activity, note)\n      context.dispatch(actions.updatePresence(status, activity, note))\n    },\n\n    /**\n     * Retrieves the presence information for specified users, if available.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method get\n     * @param  {Array<string>|string} user A User ID or an array of User IDs.\n     * @return {Array<Object>|Object} List of user presence information.\n     */\n    get (user) {\n      log.debug(API_LOG_TAG + 'presence.get: ', user)\n      const users = Array.isArray(user) ? user : [user]\n      const storedUsers = selectors.getPresence(context.getState(), users)\n      // return something sensible based on the input\n      if (!Array.isArray(users)) {\n        if (storedUsers.length) {\n          return storedUsers[0]\n        }\n        return undefined\n      }\n      return storedUsers\n    },\n\n    /**\n     * Retrieves the presence information for all available users.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method getAll\n     * @return {Array<Object>} List of user presence information.\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'presence.getAll')\n      return selectors.getAllPresence(context.getState())\n    },\n\n    /**\n     * Retrieves the presence information for the current user.\n     *\n     * This information is set using the {@link presence.update} API.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method getSelf\n     * @return {Object} Presence information for the current user.\n     */\n    getSelf () {\n      log.debug(API_LOG_TAG + 'presence.getSelf')\n      return selectors.getSelfPresence(context.getState())\n    },\n\n    /**\n     * Fetches presence information for the given users. This will refresh the\n     *    available information with any new information from the server.\n     *\n     * Available presence information an be retrieved using the\n     *    {@link presence.get} or {@link presence.getAll} APIs.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method fetch\n     * @param {Array<string>|string} user A User ID or an array of User IDs.\n     */\n    fetch (user) {\n      log.debug(API_LOG_TAG + 'presence.fetch: ', user)\n      const users = Array.isArray(user) ? user : [user]\n      context.dispatch(actions.getPresence(users))\n    },\n\n    /**\n     * Subscribe to another User's presence updates.\n     *\n     * When the User updates their presence information, the SDK will emit a\n     *    {@link presence.event:presence:change presence:change} event.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method subscribe\n     * @param {Array<string>|string} users A User ID or an array of User IDs.\n     */\n    subscribe (users) {\n      log.debug(API_LOG_TAG + 'presence.subscribe: ', users)\n      context.dispatch(actions.subscribePresence(users))\n    },\n\n    /**\n     * Unsubscribe from another User's presence updates.\n     *\n     * @public\n     * @static\n     * @memberof presence\n     * @requires presence\n     * @method unsubscribe\n     * @param {Array<string>|string} users A User ID or an array of User IDs.\n     */\n    unsubscribe (users) {\n      log.debug(API_LOG_TAG + 'presence.unsubscribe: ', users)\n      context.dispatch(actions.unsubscribePresence(users))\n    }\n  }\n  return { presence: presenceApi }\n}\n","import * as actionTypes from './actionTypes'\n\n// Libraries\nimport { handleActions } from 'redux-actions'\nimport { omit } from 'lodash/fp'\n\n// Helpers\nimport { subscriptionCodes } from '../../errors'\n\nconst reducers = {}\n\nreducers[actionTypes.UPDATE] = {\n  next (state) {\n    return {\n      ...state,\n      self: {\n        ...state.self,\n        loading: true,\n        error: false\n      }\n    }\n  }\n}\n\nreducers[actionTypes.UPDATE_FINISH] = {\n  next (state, action) {\n    const result = {\n      ...state,\n      self: {\n        loading: false,\n        error: false,\n        status: action.payload.status,\n        activity: action.payload.activity\n      }\n    }\n    if (action.payload.note) {\n      result.self.note = action.payload.note\n    }\n    return result\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      self: {\n        ...state.self,\n        loading: false,\n        error: action.payload\n      }\n    }\n  }\n}\n\nreducers[actionTypes.GET] = {\n  next (state, { payload: userIds }) {\n    const users = { ...state.users }\n    for (const userId of userIds) {\n      users[userId] = {\n        userId,\n        loading: true\n      }\n    }\n    return { ...state, users }\n  }\n}\n\nreducers[actionTypes.GET_FINISH] = {\n  next (state, { payload }) {\n    if (!payload.presenceContact) {\n      return { ...state }\n    }\n\n    const users = {}\n    for (const contact of payload.presenceContact) {\n      const presenceObject = {}\n      presenceObject.userId = contact.presentityUserId\n      if (contact.presence && contact.presence.person) {\n        presenceObject.activity = contact.presence.person.activities.activityValue\n        presenceObject.status = contact.presence.person['overriding-willingness'].overridingWillingnessValue\n        presenceObject.note = contact.presence.person.activities.other\n      }\n      presenceObject.loading = false\n      users[contact.presentityUserId] = presenceObject\n    }\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        ...users\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state\n    }\n  }\n}\n\nreducers[actionTypes.RECEIVED] = {\n  next (state, { payload }) {\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        [payload.userId]: {\n          userId: payload.userId, // optimize for filtering by userId\n          status: payload.status,\n          activity: payload.activity,\n          note: payload.note,\n          loading: false\n        }\n      }\n    }\n  }\n}\n\nreducers[actionTypes.SUBSCRIBE] = {\n  next (state, { payload }) {\n    // Payload could be a string (single userId) or array (multiple userIds)\n    if (!Array.isArray(payload)) {\n      payload = [payload]\n    }\n    const updatedUsers = Object.assign({}, state.users)\n    payload.forEach(userId => {\n      updatedUsers[userId] = {\n        userId,\n        loading: false,\n        isPending: true\n      }\n    })\n\n    return {\n      ...state,\n      users: updatedUsers\n    }\n  }\n}\n\nreducers[actionTypes.SUBSCRIBE_FINISH] = {\n  next (state, { payload }) {\n    const updatedUsers = Object.assign({}, state.users)\n    payload.presentityUserId.forEach(userId => {\n      updatedUsers[userId] = {\n        userId,\n        loading: false,\n        isPending: false\n      }\n    })\n\n    return {\n      ...state,\n      users: updatedUsers\n    }\n  },\n  throw (state, { payload }) {\n    const updatedUsers = Object.assign({}, state.users)\n    payload.presentityUserId.forEach(userId => {\n      delete updatedUsers[userId]\n    })\n\n    return {\n      ...state,\n      users: updatedUsers\n    }\n  }\n}\n\nreducers[actionTypes.UNSUBSCRIBE] = {\n  next (state, { payload }) {\n    // Payload could be a string (single userId) or array (multiple userIds)\n    if (!Array.isArray(payload)) {\n      payload = [payload]\n    }\n    const updatedUsers = Object.assign({}, state.users)\n    payload.forEach(userId => {\n      updatedUsers[userId] = {\n        userId,\n        loading: false,\n        isPending: true\n      }\n    })\n\n    return {\n      ...state,\n      users: updatedUsers\n    }\n  }\n}\n\nreducers[actionTypes.UNSUBSCRIBE_FINISH] = {\n  next (state, { payload }) {\n    return {\n      ...state,\n      users: omit(payload.presentityUserId, state.users)\n    }\n  },\n  throw (state, { payload }) {\n    let updatedUsers = Object.assign({}, state.users)\n    if (payload.code === subscriptionCodes.CPAAS_SERVICE_UNSUB_FAIL) {\n      // Remove the userId from state\n      updatedUsers = omit(payload.presentityUserId, updatedUsers)\n    } else {\n      // Update the userId in state\n      if (payload.presentityUserId && payload.presentityUserId.length > 0) {\n        payload.presentityUserId.forEach(userId => {\n          updatedUsers[userId] = {\n            userId,\n            loading: false,\n            isPending: false\n          }\n        })\n      }\n    }\n\n    return {\n      ...state,\n      users: updatedUsers\n    }\n  }\n}\n\nconst reducer = handleActions(reducers, { self: {}, users: {} })\nexport default reducer\n","/**\n * Presence saga index.\n * Defines which actions trigger which sagas.\n */\n\n// Presence plugin.\nimport * as subscriptionSagas from './subscriptions'\nimport * as presenceSagas from './presence'\nimport * as actionTypes from '../../interface/actionTypes'\n\n// Other plugins.\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\nimport { registerService } from '../../../subscription/interface/effects'\n\n/**\n * Register the presence service for subscriptions.\n * @method registerPresence\n */\nexport function * registerPresence () {\n  yield registerService('presence', subscriptionSagas.presenceSubscribe, subscriptionSagas.presenceUnsubscribe)\n}\n\n/**\n * Presence operations.\n */\n\n/**\n * Subscribe user presence.\n * @method subscribePresence\n */\nexport function * subscribePresence () {\n  yield takeEvery(actionTypes.SUBSCRIBE, presenceSagas.subscribePresence)\n}\n\n/**\n * Unsubscribe user presence.\n * @method unsubscribePresence\n */\nexport function * unsubscribePresence () {\n  yield takeEvery(actionTypes.UNSUBSCRIBE, presenceSagas.unsubscribePresence)\n}\n\n/**\n * Update user presence.\n * @method updatePresence\n */\nexport function * updatePresence () {\n  yield takeEvery(actionTypes.UPDATE, presenceSagas.updatePresence)\n}\n\n/**\n * Fetch user(s) presence.\n * @method fetchPresence\n */\nexport function * fetchPresence () {\n  yield takeEvery(actionTypes.GET, presenceSagas.fetchPresence)\n}\n\nexport function * receivePresence () {\n  yield takeEvery(\n    action => action.type === NOTIFICATION_RECEIVED && action.payload.presenceNotification,\n    presenceSagas.handleIncomingPresence\n  )\n}\n","// Presence plugin.\nimport { getPresenceLists, createList } from '../requests/presence'\nimport { subscribe, unsubscribe } from '../requests/subscriptions'\n\n// Other plugins.\nimport { reportSubscriptionFinished, reportUnsubscriptionFinished } from '../../../subscription/interface/actions'\nimport { logManager } from '../../../logs'\nimport { getRequestInfo } from '../../../auth/interface/selectors'\nimport { getNotificationChannels } from '../../../subscription/interface/selectors'\nimport BasicError from '../../../errors'\n\n// Helpers.\nimport { platforms } from '../../../constants'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('PRESENCE')\n\n/**\n * Subscription saga. Creates a new presence subscription channel.\n * @method presenceSubscribe\n * @param {Object} config   The subscription request config\n * @param {string} type     The type of notification channel for this subscription.\n */\nexport function * presenceSubscribe (config, type) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const channels = yield select(getNotificationChannels)\n\n  const callbackURL = channels.notificationChannels.websocket.callbackURL\n\n  log.debug('Subscribing to presence service')\n  // either use an existing presence list, or create a new one\n  const presenceListResponse = yield call(getPresenceLists, requestInfo)\n  log.debug('Received presenceLists response:', presenceListResponse)\n\n  // check if there is a presence list already\n  let presenceListId, newListResponse\n  if (presenceListResponse instanceof BasicError) {\n    yield put(\n      reportSubscriptionFinished({\n        service: 'presence',\n        type: 'websocket',\n        error: presenceListResponse\n      })\n    )\n    return\n  } else {\n    // check if there is an existing presenceList\n    if (presenceListResponse.presenceList.length > 0) {\n      const url = presenceListResponse.presenceList[0].resourceURL\n      if (url) {\n        const lastIndex = url.lastIndexOf('/')\n        presenceListId = url.slice(lastIndex + 1)\n      }\n    } else {\n      //  create a new presenceList\n      newListResponse = yield call(createList, [], requestInfo)\n\n      if (newListResponse instanceof BasicError) {\n        yield put(\n          reportSubscriptionFinished({\n            service: 'presence',\n            type: 'websocket',\n            error: newListResponse\n          })\n        )\n        return\n      }\n\n      const resourceURL = newListResponse.resourceURL\n      if (resourceURL) {\n        presenceListId = resourceURL.substring(resourceURL.lastIndexOf('/') + 1)\n      }\n    }\n  }\n\n  // Subscribe to the presence list subscription\n  const response = yield call(subscribe, presenceListId, callbackURL, requestInfo)\n  log.debug('Received subscribe presence response:', response)\n\n  if (response.error) {\n    yield put(\n      reportSubscriptionFinished({\n        service: 'presence',\n        type: 'websocket',\n        error: response.error\n      })\n    )\n  } else {\n    yield put(\n      reportSubscriptionFinished({\n        service: 'presence',\n        type: 'websocket',\n        subscription: response.presenceListSubscription\n      })\n    )\n  }\n}\n\n/**\n * Unsubscription saga. Deletes an existing presence subscription.\n * @method presenceUnsubscribe\n */\nexport function * presenceUnsubscribe (action) {\n  const { subscriptions } = yield select(getNotificationChannels)\n  let presenceSubscription = subscriptions.filter(sub => {\n    return sub.service === 'presence' && sub.channelType === action.payload.type\n  })\n\n  if (presenceSubscription.length === 0) {\n    // \"Error\" scenario: Can't unsubscribe to a service\n    //    that we don't have.\n  } else if (presenceSubscription.length > 1) {\n    // \"Error\" scenario: There shouldn't be able to have\n    //    more than 1 of the same service.\n  } else {\n    presenceSubscription = presenceSubscription[0]\n  }\n  const presenceListId = presenceSubscription.presenceListId\n  const subscription = presenceSubscription.subscriptionId\n  const subscriptionId = subscription.substring(subscription.lastIndexOf('/') + 1)\n\n  log.info(`Unsubscribing from presence service on ${action.payload.type} channel.`)\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  // Unsubscribe from the presence list subscription\n  const response = yield call(unsubscribe, presenceListId, subscriptionId, requestInfo)\n\n  yield put(\n    reportUnsubscriptionFinished({\n      ...response,\n      service: 'presence',\n      type: action.payload.type\n    })\n  )\n}\n","// Presence plugin.\n\n// Helpers.\nimport request from '../../../request/effects'\nimport { handleRequestError } from '../../../common/helpers'\n\n/**\n * REST request to create a presence list subscription.\n * @method subscribe\n * @param  {string} presenceListId Resource ID of the presenceList\n * @param  {string} callbackURL Callback URL of websocket channel\n * @param  {Object} requestInfo\n * @return {Object}\n */\nexport function * subscribe (presenceListId, callbackURL, requestInfo) {\n  const presenceListSubscription = {\n    presenceListSubscription: {\n      callbackReference: {\n        notifyURL: callbackURL\n      },\n      clientCorrelator: requestInfo.clientCorrelator,\n      duration: 86400\n    }\n  }\n\n  const requestOptions = {\n    method: 'POST',\n    url:\n      `${requestInfo.baseURL}/cpaas/presence/${requestInfo.version}/` +\n      `${requestInfo.username}/subscriptions/presenceListSubscriptions/` +\n      `${presenceListId}`,\n    body: JSON.stringify(presenceListSubscription)\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Subscribe to presence list')\n    }\n  } else {\n    return response.payload.body\n  }\n}\n\n/**\n * REST request to delete a subscription against a presence list.\n * @method unsubscribe\n * @param  {string} presenceListId Resource ID of the presenceList\n * @param  {string} subscriptionId Resource ID of the subscription\n * @param  {Object} requestInfo\n * @return {Object}\n */\nexport function * unsubscribe (presenceListId, subscriptionId, requestInfo) {\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url:\n      `${requestInfo.baseURL}/cpaas/presence/${requestInfo.version}/` +\n      `${requestInfo.username}/subscriptions/presenceListSubscriptions/` +\n      `${presenceListId}/${subscriptionId}`\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error && response.payload.result.code !== 404) {\n    return {\n      error: handleRequestError(response, 'Unsubscribe from presence list')\n    }\n  } else {\n    return response.payload.body\n  }\n}\n","// Presence plugin.\nimport { publish, retrievePresence, addUser, removeUser } from '../requests/presence'\nimport * as actions from '../../interface/actions'\nimport { getAllPresence } from '../../interface/selectors'\n\n// Other plugins.\nimport { logManager } from '../../../logs'\nimport { getRequestInfo } from '../../../auth/interface/selectors'\nimport { getNotificationChannels } from '../../../subscription/interface/selectors'\n\n// Helpers.\nimport { platforms } from '../../../constants'\nimport { STATUS, ACTIVITY } from '../constants'\nimport BasicError, { presenceCodes, subscriptionCodes } from '../../../errors'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\n\nconst log = logManager.getLogger('PRESENCE')\n\n/**\n * Map of old presence activity values to new values.\n * @type {Object}\n */\nconst activityMapUcToCPaaS = {\n  active: ACTIVITY.AVAILABLE,\n  idle: ACTIVITY.BUSY,\n  away: ACTIVITY.BUSY,\n  lunch: ACTIVITY.LUNCH,\n  other: ACTIVITY.ACTIVITIES_OTHER,\n  busy: ACTIVITY.BUSY,\n  vacation: ACTIVITY.VACATION,\n  'on-the-phone': ACTIVITY.ON_THE_PHONE,\n  unknown: ACTIVITY.ACTIVITIES_UNKNOWN\n}\n\n/*\n * Map of old presence status values to new values.\n * @type {Object}\n */\nconst statusMapUcToCPaaS = {\n  open: STATUS.OPEN,\n  closed: STATUS.CLOSED\n}\n\n/**\n * Update presence.\n * @method updatePresence\n * @param  {Object} action An action of type `PUBLISH_PRESENCE`.\n */\nexport function * updatePresence ({ payload }) {\n  // Convert the status to the CPaaS value (if required)\n  if (payload.status in statusMapUcToCPaaS) {\n    payload.status = statusMapUcToCPaaS[payload.status]\n  }\n\n  // Convert the activity to the CPaaS value (if required)\n  if (payload.activity in activityMapUcToCPaaS) {\n    payload.activity = activityMapUcToCPaaS[payload.activity]\n  }\n\n  // Verify that the status value is a valid CPaaS values\n  if (Object.values(STATUS).indexOf(payload.status) === -1) {\n    log.info('Could not update presence: Invalid status.')\n    yield put(\n      actions.updatePresenceFinish(\n        new BasicError({\n          code: presenceCodes.INVALID_STATUS,\n          message: 'Invalid status in presence update request.'\n        })\n      )\n    )\n    return\n  }\n\n  // Verify that the activity value is a valid CPaaS value\n  if (Object.values(ACTIVITY).indexOf(payload.activity) === -1) {\n    log.info('Could not update presence: Invalid activity.')\n    yield put(\n      actions.updatePresenceFinish(\n        new BasicError({\n          code: presenceCodes.INVALID_ACTIVITY,\n          message: 'Invalid activity in presence update request.'\n        })\n      )\n    )\n    return\n  }\n\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const response = yield call(publish, payload, requestInfo)\n  log.debug('Received response from getRequestInfo request:', response)\n\n  if (response instanceof BasicError) {\n    yield put(actions.updatePresenceFinish(response))\n  } else {\n    const presenceValues = {}\n    presenceValues.status = response.presence.person['overriding-willingness'].overridingWillingnessValue\n    presenceValues.activity = response.presence.person.activities.activityValue\n    presenceValues.note = response.presence.person.activities.other\n\n    yield put(actions.updatePresenceFinish(presenceValues))\n  }\n}\n\n/**\n * fetchPresence.\n * @method fetchPresence\n * @param  {Array<string>} users An array of userIds.\n */\nexport function * fetchPresence ({ payload }) {\n  const users = payload\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  const response = yield call(retrievePresence, users, requestInfo)\n  log.debug('Received response from retrievePresence request:', response)\n\n  if (response instanceof BasicError) {\n    yield put(actions.getPresenceFinish(response))\n  } else {\n    const presence = {}\n    const presenceContact = response.presenceContact[0]\n    presence.userId = presenceContact.presentityUserId\n    if (presenceContact.presence) {\n      presence.activity = presenceContact.presence.person.activities.activityValue\n      presence.status = presenceContact.presence.person['overriding-willingness'].overridingWillingnessValue\n      presence.note = presenceContact.presence.person.activities.other\n    }\n    yield put(actions.getPresenceFinish(presence))\n  }\n}\n\n/**\n * subscribePresence.\n * @method subscribePresence\n * @param  {string} userId userId\n */\nexport function * subscribePresence ({ payload }) {\n  const userId = payload\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  // get current presenceListId\n  const subscriptions = yield select(getNotificationChannels)\n  var presenceSubscription = subscriptions.subscriptions.filter(function (sub) {\n    return sub.service === 'presence'\n  })\n  let response\n  let action\n  if (presenceSubscription.length === 0) {\n    const error = new BasicError({\n      message: 'Found no subscription for presence service. Subscribe for presence first and then try again.',\n      code: subscriptionCodes.CPAAS_SERVICE_SUB_FAIL\n    })\n    error.presentityUserId = [userId]\n    action = actions.subscribePresenceFinish(error)\n  } else {\n    const presenceListId = presenceSubscription[0].presenceListId\n    response = yield call(addUser, userId, presenceListId, requestInfo)\n    log.debug('Received response from addUser request:', response)\n    if (response instanceof BasicError) {\n      response.presentityUserId = [userId]\n    }\n    action = actions.subscribePresenceFinish(response)\n  }\n\n  yield put(action)\n}\n/**\n * unsubscribePresence.\n * @method unsubscribePresence\n * @param  {string} userId userId\n */\nexport function * unsubscribePresence ({ payload }) {\n  const userId = payload\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n  // get current presenceListId\n  const subscriptions = yield select(getNotificationChannels)\n  var presenceSubscription = subscriptions.subscriptions.filter(function (sub) {\n    return sub.service === 'presence'\n  })\n  let response\n  let action\n  if (presenceSubscription.length === 0) {\n    const error = new BasicError({\n      message: 'Found no subscription for presence service.',\n      code: subscriptionCodes.CPAAS_SERVICE_UNSUB_FAIL\n    })\n    error.presentityUserId = [userId]\n    action = actions.unsubscribePresenceFinish(error)\n  } else {\n    const presenceListId = presenceSubscription[0].presenceListId\n    response = yield call(removeUser, userId, presenceListId, requestInfo)\n    log.debug('Received response from removeUser request:', response)\n    if (response instanceof BasicError) {\n      response.presentityUserId = [userId]\n    }\n    action = actions.unsubscribePresenceFinish(response)\n  }\n\n  yield put(action)\n}\n\n/**\n * handle incoming presence notification.\n * @method handleIncomingPresence\n * @param  {string} userId userId\n */\nexport function * handleIncomingPresence (wsAction) {\n  const notification = wsAction.payload.presenceNotification\n  const users = yield select(getAllPresence)\n\n  if (\n    notification.presence &&\n    users[notification.presentityUserId] &&\n    !users[notification.presentityUserId].isPending\n  ) {\n    const presence = {}\n    presence.userId = notification.presentityUserId\n    presence.activity = notification.presence.person.activities.activityValue\n    presence.status = notification.presence.person['overriding-willingness'].overridingWillingnessValue\n    presence.note = notification.presence.person.activities.other\n    yield put(actions.presenceReceived(presence))\n  }\n}\n","import * as actionTypes from './actionTypes'\nimport * as eventTypes from './eventTypes'\n\n// Helper function for error events.\nfunction presenceError (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.ERROR,\n      args: { error: action.payload }\n    }\n  }\n}\n\nconst eventsMap = {}\n\neventsMap[actionTypes.RECEIVED] = action => ({\n  type: eventTypes.RECEIVED,\n  args: {\n    userId: action.payload.userId,\n    status: action.payload.status,\n    activity: action.payload.activity,\n    note: action.payload.note\n  }\n})\n\neventsMap[actionTypes.UPDATE_FINISH] = action => {\n  if (action.error) {\n    return presenceError(action)\n  } else {\n    return {\n      type: eventTypes.SELF_CHANGE\n    }\n  }\n}\n\neventsMap[actionTypes.GET_FINISH] = action => {\n  if (action.error) {\n    return presenceError(action)\n  } else {\n    return {\n      type: eventTypes.RECEIVED,\n      args: {\n        userId: action.payload.userId,\n        status: action.payload.status,\n        activity: action.payload.activity,\n        note: action.payload.note\n      }\n    }\n  }\n}\n\neventsMap[actionTypes.SUBSCRIBE_FINISH] = action => {\n  if (action.error) {\n    return presenceError(action)\n  } else {\n    return {\n      type: eventTypes.SUBSCRIBE,\n      args: {\n        userIds: action.payload.presentityUserId\n      }\n    }\n  }\n}\n\neventsMap[actionTypes.UNSUBSCRIBE_FINISH] = action => {\n  if (action.error) {\n    return presenceError(action)\n  } else {\n    return {\n      type: eventTypes.UNSUBSCRIBE,\n      args: {\n        userIds: action.payload.presentityUserId\n      }\n    }\n  }\n}\n\n// TODO: Should have events to notify of successful operations for these actions.\neventsMap[actionTypes.CREATE_PRESENCE_LIST_FINISH] = presenceError\n\nexport default eventsMap\n","/**\n * A presence update about a subscribed user has been received.\n *\n * This event is generated as a result of {@link presence.fetch} or {@link presence.update} operations.\n *\n * For the latter operation, the current user receives a presence update of another user that the current user is subscribed to.\n *\n * The changed information can be retrieved using the {@link presence.get}\n *    API.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:change\n * @param {Object} params A presence object containing data.\n * @param {string} params.userId The ID of the user.\n * @param {string} params.status The presence status of the user.\n * @param {string} params.activity The activity of the user.\n * @param {string} params.note A custom note provided by the user.\n */\nexport const RECEIVED = 'presence:change'\n\n/**\n * The current user's presence information has changed.\n *\n * The changed information can be retrieved using the {@link presence.getSelf}\n *    API.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:selfChange\n */\nexport const SELF_CHANGE = 'presence:selfChange'\n\n/**\n * An update (as a result of subscribing to a specific user's presence) has been received.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:subscribe\n * @param {Object} params A subscription object containing data.\n * @param {Array<string>} params.userIds The ID(s) of the user(s) whose presence needs to be watched.\n */\nexport const SUBSCRIBE = 'presence:subscribe'\n\n/**\n * An update (as a result of unsubscribing to a specific user's presence) has been received.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:unsubscribe\n * @param {Object} params A subscription object containing data.\n * @param {Array<string>} params.userIds The ID(s) of the user(s) whose presence no longer requires to be watched.\n */\nexport const UNSUBSCRIBE = 'presence:unsubscribe'\n\n/**\n * An error occurred with presence.\n *\n * @public\n * @memberof presence\n * @requires presence\n * @event presence:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const ERROR = 'presence:error'\n","// Groups plugin.\nimport { api, reducer } from '../interface'\nimport * as sagas from './sagas'\nimport events from '../interface/events'\n\n// Other plugins.\nimport { mapEvents } from '../../events/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\nimport { values } from 'lodash/fp'\n\nconst name = 'groups'\n\nconst capabilities = ['groups']\n\nexport default () => {\n  return {\n    name,\n    capabilities,\n    api: api,\n    reducer,\n    init: () => [put(mapEvents(events))],\n    sagas: values(sagas)\n  }\n}\n","export { default as api } from './api'\nexport { default as reducer } from './reducers'\n","/**\n * The 'groups' namespace provides an interface for an application to create and\n *    manage Groups for a User. Groups are used in conjunction with the\n *    {@link conversation Messaging} feature to allow for group conversations.\n *\n * Groups are persisted by the server. When the SDK is initialized, there will\n *    be no Group information available, but the {@link groups.fetch}\n *    API is used to make available any Groups that were created\n *    previously.\n *\n * The creator of a Group is the Group's administrator.\n *\n * @public\n * @requires groups\n * @namespace groups\n */\n\nimport * as actions from './actions'\nimport * as selectors from './selectors'\n\nimport { logManager, API_LOG_TAG } from '../../logs'\n\nconst log = logManager.getLogger('GROUPS')\n\nexport default function (context) {\n  const groupsApi = {\n    /**\n     * Creates a Group.\n     *\n     * The SDK will emit a {@link groups.event:group:new group:new} event locally\n     *    when the operation completes. This event will include a Group ID that\n     *    is used to uniquely identify the group.\n     *\n     * Remote users added to the Group during creation will receive a\n     *    `group:invitation_received` event, which will include information\n     *    about the Group. Group participants can be managed after creation\n     *    using the {@link groups.addParticipant} and\n     *    {@link groups.removeParticipant} APIs.\n     *\n     * Group information will become available after the operation completes\n     *    using the {@link groups.get} and {@link groups.getAll} APIs.\n     *\n     * @public\n     * @static\n     * @memberof groups\n     * @method create\n     * @param {Object} params\n     * @param {Array<string>} [params.participants] List of participants to\n     *    invite to the group as part of creation. A participant's address\n     *    should be in the form of their User ID.\n     * @param {string} [params.subject] Subject of the Group.\n     * @param {string} params.name Name of the Group.\n     * @param {string} [params.image] HTTP URL of the image to be used as the\n     *    Group's avatar.\n     * @param {string} params.type Closed group indicates this is an\n     *    invitation-based closed chat group. Only Closed supported.\n     */\n    create (params) {\n      log.debug(API_LOG_TAG + 'groups.create: ', params)\n      context.dispatch(actions.create(params))\n    },\n\n    /**\n     * Fetches information about all Groups that the current user is a member\n     *    of. This will refresh the available Groups with any new information\n     *    from the server.\n     *\n     * The SDK will emit a {@link groups.event:group:refresh group:refresh} event\n     *    when the operation completes.\n     *\n     * Information about an available Group can be retrieved using the\n     *    {@link groups.getAll} or {@link groups.get} APIs.\n     *\n     * @public\n     * @static\n     * @memberof groups\n     * @method fetch\n     */\n    fetch () {\n      log.debug(API_LOG_TAG + 'groups.fetch')\n      context.dispatch(actions.fetchGroups())\n    },\n\n    /**\n     * Retrieves information about all available Groups.\n     *\n     * @public\n     * @static\n     * @memberof groups\n     * @method getAll\n     * @return {Array<Group>} The list of all available Groups.\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'groups.getAll')\n      return selectors.getAllGroups(context.getState())\n    },\n\n    /**\n     * Retrieves information about a single Group, if available.\n     *\n     * @public\n     * @static\n     * @memberof groups\n     * @method get\n     * @param {string} groupId The ID uniquely identifying the Group.\n     * @return {Group} The specified Group.\n     */\n    get (groupId) {\n      log.debug(API_LOG_TAG + 'groups.get: ', groupId)\n      return selectors.getGroup(context.getState(), groupId)\n    },\n\n    /**\n     * Retrieves the list of participants from an available Group.\n     *\n     * @public\n     * @memberof groups\n     * @method getParticipants\n     * @param {string} groupId The ID of the Group to get participants.\n     * @return {Array<string>} The list of Group participants.\n     */\n    getParticipants (groupId) {\n      log.debug(API_LOG_TAG + 'groups.getParticipants: ', groupId)\n      return selectors.getParticipants(context.getState(), groupId)\n    },\n\n    /**\n     * Retrieves information about all Group invitations available.\n     *\n     * The {@link groups.event:group:invitation_received group:invitation_received}\n     *    event indicates that a new Group invitation is available.\n     *\n     * @public\n     * @static\n     * @memberof groups\n     * @method getInvitations\n     * @return {Array<Invitations>} The list of Group invitations.\n     */\n    getInvitations () {\n      log.debug(API_LOG_TAG + 'call.getInvitations')\n\n      return selectors.getInvitations(context.getState())\n    },\n\n    /**\n     * Leaves a Group.\n     *\n     * The SDK will emit a {@link groups.event:group:change group:change} event\n     *    when the operation completes.\n     *\n     * @public\n     * @memberof groups\n     * @method leave\n     * @param {string} groupId The ID of the Group to leave.\n     */\n    leave (groupId) {\n      log.debug(API_LOG_TAG + 'groups.leave: ', groupId)\n      context.dispatch(actions.leave(groupId))\n    },\n\n    /**\n     * Accepts an invitation to a Group.\n     *\n     * The SDK will emit a {@link groups.event:group:change group:change} event\n     *    when the operation completes.\n     *\n     * @public\n     * @memberof groups\n     * @method acceptInvitation\n     * @param {string} groupId The ID of the Group to accept an invitation to.\n     */\n    acceptInvitation (groupId) {\n      log.debug(API_LOG_TAG + 'groups.acceptInvitation: ', groupId)\n      context.dispatch(actions.acceptInvitation(groupId))\n    },\n\n    /**\n     * Rejects an invitation to a Group.\n     *\n     * The SDK will emit a {@link groups.event:group:change group:change} event\n     *    when the operation completes.\n     *\n     * @public\n     * @memberof groups\n     * @method rejectInvitation\n     * @param {string} groupId The ID of the Group to reject an invitation to.\n     */\n    rejectInvitation (groupId) {\n      log.debug(API_LOG_TAG + 'groups.rejectInvitation: ', groupId)\n      context.dispatch(actions.rejectInvitation(groupId))\n    },\n\n    /**\n     * Adds participant to a Group.\n     *\n     * The SDK will emit a {@link groups.event:group:change group:change} event\n     *    when the operation completes. The participant being added will receive\n     *    a {@link groups.event:group:invitation_received group:invitation_received}\n     *    event.\n     *\n     * @public\n     * @static\n     * @memberof groups\n     * @method addParticipant\n     * @param {string} groupId The ID of the Group to add participant to.\n     * @param {string} participant The User ID of the participant to add.\n     */\n    addParticipant (groupId, participant) {\n      log.debug(API_LOG_TAG + 'groups.addParticipant: ', groupId, participant)\n      context.dispatch(actions.addParticipant(groupId, participant))\n    },\n\n    /**\n     * Removes a participant from a Group.\n     *\n     * The SDK will emit a {@link groups.event:group:change group:change} event\n     *    when the operation completes.\n     *\n     * @public\n     * @static\n     * @memberof groups\n     * @method removeParticipant\n     * @param {string} groupId The ID of the Group to remove participant from.\n     * @param {string} participant The User ID of the participant to remove.\n     */\n    removeParticipant (groupId, participant) {\n      log.debug(API_LOG_TAG + 'groups.removeParticipant: ', groupId, participant)\n      context.dispatch(actions.removeParticipant(groupId, participant))\n    },\n\n    /**\n     * Deletes a Group.\n     *\n     * The Group will no longer be available using the {@link groups.get}\n     *    and {@link groups.getAll} APIs.\n     *\n     * The SDK will emit a {@link groups.event:group:delete group:delete} event\n     *    for all participants in the Group.\n     *\n     * @public\n     * @memberof groups\n     * @method delete\n     * @param {string} groupId The ID of the Group to delete.\n     */\n    delete (groupId) {\n      log.debug(API_LOG_TAG + 'groups.delete: ', groupId)\n      context.dispatch(actions.deleteGroup(groupId))\n    }\n  }\n  return { groups: groupsApi }\n}\n","import { cloneDeep } from 'lodash/fp'\n/**\n * Retrieves all the groups in state.\n * @method getAllGroups\n * @param  {Object} state Redux state.\n * @return {[Object]}  List of groups.\n */\nexport function getAllGroups (state) {\n  return cloneDeep(state.groups.groups)\n}\n\n/**\n * Retrieves group information for a specified group in state.\n * @method get\n * @param  {Object} state Redux state.\n * @return {Object}  Group information of specified group.\n */\nexport function getGroup (state, groupId) {\n  const group = state.groups.groups.find(group => group.id === groupId)\n  if (group) {\n    return cloneDeep(group)\n  }\n}\n\n/**\n * Retrieves list of participants from a specified group in state.\n * @method getParticipants\n * @param  {Object} state Redux state.\n * @return {[Object]}  List of participants in specified group.\n */\nexport function getParticipants (state, groupId) {\n  const group = state.groups.groups.find(group => group.id === groupId)\n  if (group) {\n    return cloneDeep(group.participants)\n  }\n}\n\n/**\n * Retrieves all the invitations in state.\n * @method getInvitations\n * @param  {Object} state Redux state.\n * @return {[Object]}  List of invitations.\n */\nexport function getInvitations (state, groupId) {\n  return cloneDeep(state.groups.invitations)\n}\n","import * as actionTypes from './actionTypes'\n\n// Libraries\nimport { handleActions } from 'redux-actions'\n\nconst reducers = {}\n\nreducers[actionTypes.CREATE_GROUP_FINISH] = {\n  next (state, action) {\n    // rename groupId to id\n    const newGroup = { ...action.payload.group, id: action.payload.group.groupId }\n    delete newGroup.groupId\n\n    return { ...state, groups: [...state.groups, newGroup] }\n  }\n}\n\n/*\n * Removes the specified group from state.\n */\nreducers[actionTypes.DELETE_GROUP_FINISH] = {\n  next (state, action) {\n    const { groupId } = action.payload\n\n    return {\n      ...state,\n      groups: state.groups.filter(group => group.id !== groupId)\n    }\n  }\n}\n\n/*\n * Adds a participant to the specified group.\n */\nreducers[actionTypes.ADD_PARTICIPANT_FINISH] = {\n  next (state, action) {\n    const { groupId, participant } = action.payload\n\n    return {\n      ...state,\n      groups: state.groups.map(group => {\n        if (group.id === groupId) {\n          return {\n            ...group,\n            participants: [...group.participants, participant]\n          }\n        }\n        return group\n      })\n    }\n  }\n}\n\n/*\n * Removes a participant from the specified group.\n */\nreducers[actionTypes.REMOVE_PARTICIPANT_FINISH] = {\n  next (state, action) {\n    const { groupId, participant } = action.payload\n    return {\n      ...state,\n      groups: state.groups.map(group => {\n        if (group.id === groupId) {\n          return {\n            ...group,\n            participants: group.participants.filter(member => member.address !== participant)\n          }\n        }\n        return group\n      })\n    }\n  }\n}\n\n/*\n * Leave a specified group and remove invitation in state if it exists.\n */\nreducers[actionTypes.LEAVE_GROUP_FINISH] = {\n  next (state, action) {\n    const { groupId } = action.payload\n\n    return {\n      ...state,\n      groups: state.groups.filter(group => group.id !== groupId),\n      invitations: state.invitations.filter(invite => invite.id !== groupId)\n    }\n  }\n}\n\n/*\n * Fetch list of groups from server and update state.\n */\nreducers[actionTypes.FETCH_GROUPS_FINISH] = {\n  next (state, action) {\n    // rename groupId to id\n    const groups = action.payload.groups.map(group => {\n      const groupWithId = { ...group, id: group.groupId }\n      delete groupWithId.groupId\n      return groupWithId\n    })\n\n    return {\n      ...state,\n      groups\n    }\n  }\n}\n\n/*\n * Accept the invitation and update the state.\n */\nreducers[actionTypes.ACCEPT_INVITATION_FINISH] = {\n  next (state, action) {\n    const { group } = action.payload\n    const newGroup = { ...group, id: group.groupId }\n    delete newGroup.groupId\n\n    // remove the invitation and replace the group in state.\n    return {\n      ...state,\n      groups: [...state.groups.filter(group => group.id !== newGroup.id), newGroup],\n      invitations: state.invitations.filter(invite => invite.id !== newGroup.id)\n    }\n  }\n}\n\n/*\n * Reject the invitation and update the state.\n */\nreducers[actionTypes.REJECT_INVITATION_FINISH] = {\n  next (state, action) {\n    const { groupId } = action.payload\n\n    // remove the invitation and the group from state.\n    return {\n      ...state,\n      groups: state.groups.filter(group => group.id !== groupId),\n      invitations: state.invitations.filter(invite => invite.id !== groupId)\n    }\n  }\n}\n\n/*\n * Invitation has been received.\n */\nreducers[actionTypes.INVITATION_RECEIVED] = {\n  next (state, action) {\n    const invitation = { ...action.payload.invitation, id: action.payload.invitation.groupId }\n    delete invitation.groupId\n\n    return {\n      ...state,\n      invitations: [...state.invitations, invitation]\n    }\n  }\n}\n\n/*\n * A group that you belong to has been deleted.\n */\nreducers[actionTypes.EVENT_NOTIFICATION_RECEIVED] = {\n  next (state, action) {\n    const { groupId, notification } = action.payload\n\n    // if the eventType is 'SessionInvited' (ie you have an unaccepted invitation),\n    // remove the group and invitation from state.\n    if (notification.eventType === 'SessionCancelled') {\n      return {\n        ...state,\n        groups: state.groups.filter(group => group.id !== groupId),\n        invitations: state.invitations.filter(invite => invite.id !== groupId)\n      }\n      // otherwise, just remove the group\n    } else if (notification.eventType === 'SessionEnded') {\n      return {\n        ...state,\n        groups: state.groups.filter(group => group.id !== groupId)\n      }\n    }\n  }\n}\n/*\n * A group that you belong to has been modified.\n */\nreducers[actionTypes.STATUS_NOTIFICATION_RECEIVED] = {\n  next (state, action) {\n    // need to update the state.... if the group exists in state, update this participants\n    const { groupId, notification } = action.payload\n    const changedParticipant = notification.participants[0]\n    const newState = {\n      ...state,\n      groups: state.groups.map(group => {\n        if (group.id === groupId) {\n          const newGroup = {\n            ...group,\n            participants: group.participants.filter(participant => participant.address !== changedParticipant.address)\n          }\n          newGroup.participants.push(changedParticipant)\n          return {\n            ...newGroup\n          }\n        }\n        return group\n      })\n    }\n    return newState\n  }\n}\n\nconst reducer = handleActions(reducers, { groups: [], invitations: [] })\nexport default reducer\n","/**\n * Groups saga index.\n * Defines which actions trigger which sagas.\n */\n\n// groups plugin.\nimport * as groupSagas from './groups'\nimport * as actionTypes from '../../interface/actionTypes'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\n\n// Other plugins.\nimport { NOTIFICATION_RECEIVED } from '../../../notifications/interface/actionTypes'\n\n/**\n * Create group.\n * @method processCreateGroup\n */\nexport function * processCreateGroup () {\n  yield takeEvery(actionTypes.CREATE_GROUP, groupSagas.createGroup)\n}\n\n/**\n * Delete group.\n * @method processDeleteGroup\n */\nexport function * processDeleteGroup () {\n  yield takeEvery(actionTypes.DELETE_GROUP, groupSagas.deleteGroup)\n}\n\n/**\n * Add a participant to a group.\n * @method processAddParticipant\n */\nexport function * processAddParticipant () {\n  yield takeEvery(actionTypes.ADD_PARTICIPANT, groupSagas.addParticipant)\n}\n\n/**\n * Remove a participant from a group.\n * @method processRemoveParticipant\n */\nexport function * processRemoveParticipant () {\n  yield takeEvery(actionTypes.REMOVE_PARTICIPANT, groupSagas.removeParticipant)\n}\n\n/**\n * Leave group.\n * @method leaveGroup\n */\nexport function * leaveGroup () {\n  yield takeEvery(actionTypes.LEAVE_GROUP, groupSagas.leaveGroup)\n}\n\n/**\n * Fetch groups.\n * @method fetch\n */\nexport function * fetch () {\n  yield takeEvery(actionTypes.FETCH_GROUPS, groupSagas.fetch)\n}\n\n/**\n * Accept invitation.\n * @method acceptInvitation\n */\nexport function * acceptInvitation () {\n  yield takeEvery(actionTypes.ACCEPT_INVITATION, groupSagas.acceptInvitation)\n}\n\n/**\n * Reject invitation.\n * @method rejectInvitation\n */\nexport function * rejectInvitation () {\n  yield takeEvery(actionTypes.REJECT_INVITATION, groupSagas.rejectInvitation)\n}\n\n/**\n * Receive invitation. (groupChatSessionInvitationNotification)\n * @method receiveInvitationNotification\n */\nexport function * receiveInvitationNotification () {\n  yield takeEvery(\n    action => action.type === NOTIFICATION_RECEIVED && action.payload.groupChatSessionInvitationNotification,\n    groupSagas.handleInvitationNotification\n  )\n}\n\n/**\n * Receive participant status. (chatParticipantStatusNotification)\n * @method receiveParticipantStatusNotification\n */\nexport function * receiveParticipantStatusNotification () {\n  yield takeEvery(\n    action => action.type === NOTIFICATION_RECEIVED && action.payload.chatParticipantStatusNotification,\n    groupSagas.handleParticipantStatusNotification\n  )\n}\n\n/**\n * Receive chat event notification. (chatEventNotification)\n * @method receiveEventNotification\n */\nexport function * receiveEventNotification () {\n  yield takeEvery(\n    action =>\n      action.type === NOTIFICATION_RECEIVED &&\n      action.payload.chatEventNotification &&\n      action.payload.chatEventNotification.eventType === 'SessionUpdated',\n    groupSagas.handleEventNotification\n  )\n}\n","// groups plugin.\nimport {\n  createRequest,\n  deleteRequest,\n  fetchRequest,\n  addParticipantRequest,\n  removeParticipantRequest,\n  acceptInvitationRequest,\n  rejectInvitationRequest,\n  leaveGroupRequest,\n  fetchRequestByGroupId\n} from '../requests/groups'\nimport * as actions from '../../interface/actions'\n\n// Other plugins.\nimport { getUserInfo, getRequestInfo } from '../../../auth/interface/selectors'\nimport BasicError, { groupsCodes } from '../../../errors'\n\n// Helpers.\nimport { logManager } from '../../../logs'\n\n// Constants\nimport { platforms } from '../../../constants'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\nimport { remapParticipants } from '../../utils'\n\nconst log = logManager.getLogger('GROUPS')\n\n/**\n * Create a group.\n * @method create\n * @param  {Object} action An action of type `CREATE`.\n */\nexport function * createGroup ({ payload }) {\n  const { params } = payload\n  log.info(`Creating group ${params.name}.`)\n\n  // Verify that name has been supplied\n  if (!params.name) {\n    log.info('name value is mandatory.')\n    yield put(\n      actions.createFinish(\n        {},\n        new BasicError({\n          code: groupsCodes.MISSING_PARAMETERS,\n          message: 'Failed to create group. No name value was provided.'\n        })\n      )\n    )\n    return\n  }\n\n  // add the provided participants to the createListFinish\n  let participantInvites = []\n  if (params.participants) {\n    participantInvites = params.participants.map(participant => {\n      // TODO: Why is participant an object and not a string? The docs say it\n      //    should be a string.\n      return { address: participant.address, 'x-isAdmin': false }\n    })\n  }\n  const currentUser = yield select(getUserInfo)\n  const requestParams = { ...params, participants: participantInvites, currentUser }\n\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const newGroup = yield call(createRequest, requestParams, requestInfo)\n  log.debug('Received response from create group request:', newGroup)\n\n  if (!newGroup.error) {\n    yield put(actions.createFinish(newGroup))\n  } else {\n    yield put(actions.createFinish({}, newGroup.error))\n  }\n}\n\n/**\n * Delete a group.\n * @method deleteGroup\n * @param  {Object} payload Information about the group to be deleted.\n * @return {Object}\n */\nexport function * deleteGroup ({ payload }) {\n  const { groupId } = payload\n  log.info(`Deleting group ${groupId}.`)\n\n  // verify that a groupId was supplied\n  if (!groupId) {\n    log.info('groupId parameter is required for delete group operation.')\n    yield put(\n      actions.deleteGroupFinish({\n        error: new BasicError({\n          code: groupsCodes.MISSING_PARAMETERS,\n          message: 'Failed to delete group. groupId parameter is required.'\n        })\n      })\n    )\n    return\n  }\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const deletedGroup = yield call(deleteRequest, groupId, requestInfo)\n  log.debug('Received response from deleteGroup request:', deletedGroup)\n\n  if (!deletedGroup.error) {\n    yield put(actions.deleteGroupFinish({ groupId }))\n  } else {\n    yield put(actions.deleteGroupFinish({ error: deletedGroup.error }))\n  }\n}\n\n/**\n * Add a participant to a specified group.\n * @method addParticipant\n * @param  {Object} payload Information about the group and participant.\n * @return {Object}\n */\nexport function * addParticipant ({ payload }) {\n  const { groupId, participant } = payload\n  log.info(`Adding participant ${participant} to group ${groupId}.`)\n\n  // verify that a groupId was supplied\n  if (!groupId) {\n    log.info('groupId parameter is required for add participant operation.')\n    yield put(\n      actions.addParticipantFinish({\n        error: new BasicError({\n          code: groupsCodes.MISSING_PARAMETERS,\n          message: 'Failed to add participant. groupId parameter is required.'\n        })\n      })\n    )\n    return\n  }\n\n  // verify that a participant was supplied\n  if (!participant) {\n    log.info('participant parameter is required for add participant operation.')\n    yield put(\n      actions.addParticipantFinish({\n        error: new BasicError({\n          code: groupsCodes.MISSING_PARAMETERS,\n          message: 'Failed to add participant. Participant parameter is required.'\n        })\n      })\n    )\n    return\n  }\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const newParticipant = yield call(addParticipantRequest, payload, requestInfo)\n  log.debug('Received response from addParticipant request:', newParticipant)\n\n  if (!newParticipant.error) {\n    yield put(\n      actions.addParticipantFinish({\n        groupId,\n        participant: newParticipant\n      })\n    )\n  } else {\n    yield put(actions.addParticipantFinish({ error: newParticipant.error }))\n  }\n}\n\n/**\n * Remove a participant to a group.\n * @method removeParticipant\n * @param  {Object} payload Information about the group modified.\n * @return {Object}\n */\nexport function * removeParticipant ({ payload }) {\n  const { groupId, participant } = payload\n  log.info(`Removing participant ${participant} from group ${groupId}.`)\n  // verify that a groupId was supplied\n  if (!groupId) {\n    log.info('groupId parameter is required for remove participant operation.')\n    yield put(\n      actions.removeParticipantFinish({\n        error: new BasicError({\n          code: groupsCodes.MISSING_PARAMETERS,\n          message: 'Failed to remove participant. groupId parameter is required.'\n        })\n      })\n    )\n    return\n  }\n  // verify that a participant was supplied\n  if (!participant) {\n    log.info('participant parameter is required for remove participant operation.')\n    yield put(\n      actions.removeParticipantFinish({\n        error: new BasicError({\n          code: groupsCodes.MISSING_PARAMETERS,\n          message: 'Failed to remove participant. Participant parameter is required.'\n        })\n      })\n    )\n    return\n  }\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const response = yield call(removeParticipantRequest, payload, requestInfo)\n  log.debug('Received response from removeParticipant request:', response)\n\n  if (!response.error) {\n    yield put(\n      actions.removeParticipantFinish({\n        groupId,\n        participant\n      })\n    )\n  } else {\n    yield put(actions.removeParticipantFinish({ error: response.error }))\n  }\n}\n\n/**\n * Leave a specified group.\n * @method leaveGroup\n * @param  {Object} payload Information about the group modified.\n * @return {Object}\n */\nexport function * leaveGroup ({ payload }) {\n  const { groupId } = payload\n  log.info('leaveGroup saga called: ', groupId)\n\n  // verify that a groupId was supplied\n  if (!groupId) {\n    log.info('groupId parameter is required for leave group operation.')\n    yield put(\n      actions.leaveGroupFinish({\n        error: new BasicError({\n          code: groupsCodes.MISSING_PARAMETERS,\n          message: 'Failed to leave group. groupId parameter is required.'\n        })\n      })\n    )\n    return\n  }\n\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const userInfo = yield select(getUserInfo, platforms.CPAAS)\n  const response = yield call(leaveGroupRequest, groupId, requestInfo, userInfo)\n  log.debug('Received response from leave group request:', response)\n\n  if (!response.error) {\n    yield put(actions.leaveGroupFinish({ groupId, participant: userInfo.identity }))\n  } else {\n    yield put(actions.leaveGroupFinish({ error: response.error }))\n  }\n}\n\n/**\n * Fetches all existing groups from the server.\n * @method fetch\n */\nexport function * fetch () {\n  log.info('Fetching groups.')\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const groups = yield call(fetchRequest, requestInfo)\n\n  if (!groups.error) {\n    yield put(actions.fetchGroupsFinish({ groups }))\n  } else {\n    yield put(actions.fetchGroupsFinish({ error: groups.error }))\n  }\n\n  log.debug('Received response from fetch request:', groups)\n}\n\n/**\n * Accept invitation to a group.\n * @method acceptInvitation\n * @param  {Object} payload Information about the group to accept an invitation to.\n * @return {Object}\n */\nexport function * acceptInvitation ({ payload }) {\n  log.info('accept invitation saga called: ', payload)\n  const { groupId } = payload\n\n  // verify that a groupId was supplied\n  if (!groupId) {\n    log.info('groupId parameter is required for accepting invitation operation.')\n    yield put(\n      actions.acceptInvitationFinish({\n        error: new BasicError({\n          code: groupsCodes.MISSING_PARAMETERS,\n          message: 'Failed to accept invitation. groupId parameter is required.'\n        })\n      })\n    )\n    return\n  }\n\n  // Need to accept the invitation before you can fetch the group. Otherwise, The\n  // request will fail with a 404 because you are not actually in the chat group yet.\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const userInfo = yield select(getUserInfo, platforms.CPAAS)\n  const response = yield call(acceptInvitationRequest, groupId, requestInfo, userInfo)\n\n  if (response.error) {\n    yield put(actions.acceptInvitationFinish({ error: response.error }))\n    return\n  }\n\n  // Before accepting an invitation, we need to have the current state of\n  // the group in state.\n  const group = yield call(fetchRequestByGroupId, groupId, requestInfo)\n\n  if (group.error) {\n    yield put(actions.acceptInvitationFinish({ error: group.error }))\n    return\n  }\n\n  if (!response.error && !group.error) {\n    yield put(actions.acceptInvitationFinish({ groupId, group }))\n  }\n}\n\n/**\n * Reject invitation to a group.\n * @method rejectInvitation\n * @param  {Object} payload Information about the group to reject an invitation to.\n * @param  {Object} payload.groupId the Group ID for referencing this group\n * @return {Object}\n */\nexport function * rejectInvitation ({ payload }) {\n  log.info('reject invitation saga called: ', payload)\n  const { groupId } = payload\n\n  // verify that a groupId was supplied\n  if (!groupId) {\n    log.info('groupId parameter is required for rejecting invitation operation.')\n    yield put(\n      actions.rejectInvitationFinish({\n        error: new BasicError({\n          code: groupsCodes.MISSING_PARAMETERS,\n          message: 'Failed to reject invitation. groupId parameter is required.'\n        })\n      })\n    )\n    return\n  }\n\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const userInfo = yield select(getUserInfo, platforms.CPAAS)\n  const response = yield call(rejectInvitationRequest, groupId, requestInfo, userInfo)\n  if (!response.error) {\n    yield put(actions.rejectInvitationFinish({ groupId }))\n  } else {\n    yield put(actions.rejectInvitationFinish({ error: response.error }))\n  }\n}\n\n/**\n * Handle incoming 'groupChatSessionInvitationNotification' websocket messages.\n * @method handleInvitationNotification\n * @param {Object} wsAction An Object received on the websocket\n */\nexport function * handleInvitationNotification (wsAction) {\n  const { 'x-name': name, link, participant } = wsAction.payload.groupChatSessionInvitationNotification\n\n  // parse the href to get the groupId and add to invitation\n  const linkInfo = link.find(link => link.rel === 'groupChatSessionInformation')\n  const groupId = linkInfo.href.substring(linkInfo.href.lastIndexOf('/') + 1)\n\n  // map out resourceURL and rename x-isAdmin\n  const participants = remapParticipants(participant)\n\n  const invitation = {\n    groupId,\n    participants,\n    name\n  }\n  yield put(actions.invitationReceived({ invitation }))\n}\n\n/**\n * Handle incoming 'chatParticipantStatusNotification' websocket messages.\n * @method handleParticipantStatusNotification\n * @param {Object} wsAction An Object received on the websocket\n * @param {Array}  wsAction.link A list of session information objects\n * @param {Array}  wsAction.participant a list of participants for the group\n * @param {number} wsAction.dateTime the time the notification was sent\n * @param {string} wsAction.id an ID (NOT the same as groupId) for the group\n * @param {string} wsAction['x-name'] the name of the group\n */\nexport function * handleParticipantStatusNotification (wsAction) {\n  const notification = wsAction.payload.chatParticipantStatusNotification\n  const link = notification.link.find(link => link.rel === 'groupChatSessionInformation')\n  const groupId = link.href.substring(link.href.lastIndexOf('/') + 1)\n\n  // map out resourceURL and rename x-isAdmin\n  notification.participants = remapParticipants(notification.participant)\n  delete notification.participant\n\n  yield put(actions.statusNotificationReceived({ groupId, notification }))\n}\n\n/**\n * Handle incoming 'chatEventNotification' websocket messages.\n * @method handleEventNotification\n * @param {Object} wsAction An Object received on the websocket\n * @param {Array}  wsAction.link A list of session information objects\n * @param {number} wsAction.dateTime the time the notification was sent\n * @param {string} wsAction.id an ID (NOT the same as groupId) for the group\n * @param {string} wsAction['x-name'] the name of the group\n */\nexport function * handleEventNotification (wsAction) {\n  const notification = wsAction.payload.chatEventNotification\n  const link = notification.link.find(link => link.rel === 'groupChatSessionInformation')\n  const groupId = link.href.substring(link.href.lastIndexOf('/') + 1)\n\n  yield put(actions.eventNotificationReceived({ groupId, notification }))\n}\n","// Helpers.\nimport request from '../../../request/effects'\nimport { handleRequestError } from '../../../common/helpers'\nimport { marshallGroup } from '../../utils'\n\n/**\n * REST request to create a new group.\n * @method create\n * @param  {Object} params\n * @param  {Array} [params.participants] List of participants to add to group when created.\n * @param  {string} params.name Name of the group chat session.\n * @param  {string} params.type Closed group indicates this is an invitation-based closed chat group. Only Closed is supported.\n * @param  {Object} requestInfo Info needed to perform the request.\n * @param  {string} [params.subject] Subject of the group chat session.\n * @param  {string} [params.image]  HTTP URL of the image that is assigned to the group chat session avatar\n * @return {group}\n */\nexport function * createRequest (params, requestInfo) {\n  // Add the group owner (current user) to list of group participants\n  const groupOwner = {\n    address: params.currentUser.identity,\n    'x-isAdmin': true\n  }\n  const participants = [groupOwner, ...params.participants]\n\n  const requestBody = {\n    groupChatSessionInformation: {\n      participant: participants,\n      subject: params.subject,\n      'x-image': params.image,\n      'x-name': params.name,\n      'x-type': params.type\n    }\n  }\n\n  const url = `${requestInfo.baseURL}/cpaas/chat/${requestInfo.version}/${requestInfo.username}/group`\n  const requestOptions = {\n    method: 'POST',\n    url,\n    body: JSON.stringify(requestBody)\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Create group')\n    }\n  } else {\n    // re-map group objects to a more workable structure\n    const group = marshallGroup(response.payload.body.groupChatSessionInformation)\n    return group\n  }\n}\n\n/**\n * Request to delete a specified group.\n * @method deleteRequest\n * @param  {string} groupId The ID of the group to delete.\n * @param  {Object} requestInfo Info needed to perform the request.\n * @return {Object} obj\n * @return {Object} [obj.error] The error message if the group delete was unsuccessful\n */\nexport function * deleteRequest (groupId, requestInfo) {\n  const url = `${requestInfo.baseURL}/cpaas/chat/${requestInfo.version}/${requestInfo.username}/group/${groupId}`\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url\n  }\n  const response = yield request(requestOptions)\n\n  // handle errors if they occur, otherwise response will be No Content.\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Delete Group')\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * REST request to add a participant to a specified group.\n * @method addParticipantRequest\n * @param  {Object} payload\n * @param  {string} payload.groupId The ID of the group to remove the participant from.\n * @param  {string} payload.participant The participant address.\n * @param  {Object} requestInfo Info needed to perform the request.\n */\nexport function * addParticipantRequest ({ groupId, participant }, requestInfo) {\n  const requestBody = {\n    participantInformation: {\n      address: participant,\n      'x-isAdmin': false\n    }\n  }\n\n  const url = `${requestInfo.baseURL}/cpaas/chat/${requestInfo.version}/${requestInfo.username}/group/${groupId}/participants`\n  const requestOptions = {\n    method: 'POST',\n    url,\n    body: JSON.stringify(requestBody)\n  }\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Add Participant')\n    }\n  } else {\n    const { 'x-isAdmin': isAdmin, status, address } = response.payload.body.participantInformation\n\n    return { address, status, isAdmin }\n  }\n}\n\n/**\n * REST request to remove a participant from a specified group.\n * @method removeParticipantRequest\n * @param  {Object} payload\n * @param  {string} payload.groupId The ID of the group.\n * @param  {string} payload.participant The participant to remove from the group.\n * @param  {Object} requestInfo Info needed to perform the request.\n * @return {Object}\n */\nexport function * removeParticipantRequest ({ groupId, participant }, requestInfo) {\n  const url = `${requestInfo.baseURL}/cpaas/chat/${requestInfo.version}/${requestInfo.username}/group/${groupId}/participants/${participant}`\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url\n  }\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Remove participant')\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * REST request to leave a specified group.\n * @method leaveGroupRequest\n * @param  {string} groupId The ID of the group to leave.\n * @param  {Object} requestInfo Info needed to perform the request.\n * @param  {Object} userInfo Info needed about the current user.\n * @return {Object}\n */\nexport function * leaveGroupRequest (groupId, requestInfo, userInfo) {\n  const url =\n    `${requestInfo.baseURL}/cpaas/chat/${requestInfo.version}` +\n    `/${requestInfo.username}/group/${groupId}/participants/${userInfo.identity}`\n\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url\n  }\n  const response = yield request(requestOptions)\n\n  // handle errors if they occur, otherwise response will be No Content.\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Leave group')\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * REST request to fetch groups from server.\n * @method fetchRequest\n * @param  {Object} requestInfo Info needed to perform the request.\n * @return {Array} An array of Groups.\n */\nexport function * fetchRequest (requestInfo) {\n  const url = `${requestInfo.baseURL}/cpaas/chat/${requestInfo.version}/${requestInfo.username}/group`\n  const requestOptions = {\n    method: 'GET',\n    url\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Fetch groups')\n    }\n  } else {\n    const groupSessions = response.payload.body.groupChatSessionInformationList.groupChatSessionInformation\n\n    // re-map group objects to a more workable structure\n    const groups = groupSessions.map(group => marshallGroup(group))\n    return groups\n  }\n}\n\n/**\n * REST request to fetch a group with a specific groupId from server.\n * @method fetchRequestByGroupId\n * @param  {string} groupId The ID of the group to fetch.\n * @param  {Object} requestInfo Info needed to perform the request.\n * @return {Object}\n */\nexport function * fetchRequestByGroupId (groupId, requestInfo) {\n  const url = `${requestInfo.baseURL}/cpaas/chat/${requestInfo.version}/${requestInfo.username}/group/${groupId}`\n  const requestOptions = {\n    method: 'GET',\n    url\n  }\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Fetch group by groupId')\n    }\n  } else {\n    // re-map group objects to a more workable structure\n    const group = marshallGroup(response.payload.body.groupChatSessionInformation)\n    return group\n  }\n}\n\n/**\n * Request to accept an invitation to a specified group.\n * @method acceptInvitationRequest\n * @param  {string} groupId The ID of the group to accept invitation to.\n * @param  {Object} requestInfo Info needed to perform the request.\n * @param  {Object} userInfo Info needed about the current user.\n * @return {Object}\n */\nexport function * acceptInvitationRequest (groupId, requestInfo, userInfo) {\n  const requestBody = {\n    participantSessionStatus: {\n      status: 'Connected'\n    }\n  }\n  const url =\n    `${requestInfo.baseURL}/cpaas/chat/${requestInfo.version}/` +\n    `${requestInfo.username}/group/${groupId}/participants/${userInfo.identity}/status`\n  const requestOptions = {\n    method: 'PUT',\n    url,\n    body: JSON.stringify(requestBody)\n  }\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Accept Invitation')\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * Request to reject an invitation to a specified group.\n * @method rejectInvitationRequest\n * @param  {string} groupId The ID of the group to reject invitation to.\n * @param  {Object} requestInfo Info needed to perform the request.\n * @param  {Object} userInfo Info needed about the current user.\n * @return {Object}\n */\nexport function * rejectInvitationRequest (groupId, requestInfo, userInfo) {\n  const url =\n    `${requestInfo.baseURL}/cpaas/chat/${requestInfo.version}/` +\n    `${requestInfo.username}/group/${groupId}/participants/${userInfo.identity}`\n  const requestOptions = {\n    method: 'DELETE',\n    responseType: 'none',\n    url\n  }\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    return {\n      error: handleRequestError(response, 'Reject Invitation')\n    }\n  } else {\n    return {\n      error: false\n    }\n  }\n}\n","import * as actionTypes from './actionTypes'\nimport * as eventTypes from './eventTypes'\n\nconst events = {}\n\nconst groupChangedEvent = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.GROUP_CHANGE,\n      args: { error: action.payload }\n    }\n  } else {\n    const { groupId } = action.payload\n    return {\n      type: eventTypes.GROUP_CHANGE,\n      args: { id: groupId }\n    }\n  }\n}\n\nevents[actionTypes.CREATE_GROUP_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.GROUP_NEW,\n      args: { error: action.payload }\n    }\n  } else {\n    const { groupId } = action.payload.group\n    return {\n      type: eventTypes.GROUP_NEW,\n      args: { id: groupId }\n    }\n  }\n}\n\nevents[actionTypes.DELETE_GROUP_FINISH] = function (action, { prevState }) {\n  if (action.error) {\n    return {\n      type: eventTypes.GROUP_DELETE,\n      args: { error: action.payload }\n    }\n  } else {\n    const group = prevState.groups.groups.find(group => group.id === action.payload.groupId)\n    return {\n      type: eventTypes.GROUP_DELETE,\n      args: { group }\n    }\n  }\n}\n\nevents[actionTypes.ADD_PARTICIPANT_FINISH] = groupChangedEvent\nevents[actionTypes.REMOVE_PARTICIPANT_FINISH] = groupChangedEvent\nevents[actionTypes.LEAVE_GROUP_FINISH] = groupChangedEvent\nevents[actionTypes.ACCEPT_INVITATION_FINISH] = groupChangedEvent\nevents[actionTypes.REJECT_INVITATION_FINISH] = groupChangedEvent\nevents[actionTypes.STATUS_NOTIFICATION_RECEIVED] = groupChangedEvent\nevents[actionTypes.EVENT_NOTIFICATION_RECEIVED] = groupChangedEvent\n\nevents[actionTypes.INVITATION_RECEIVED] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.GROUP_INVITATION_RECEIVED,\n      args: { error: action.payload }\n    }\n  } else {\n    // replace groupId with id\n    const invitation = { ...action.payload.invitation, id: action.payload.invitation.groupId }\n    delete invitation.groupId\n\n    return {\n      type: eventTypes.GROUP_INVITATION_RECEIVED,\n      args: { invitation }\n    }\n  }\n}\n\nevents[actionTypes.FETCH_GROUPS_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.GROUP_REFRESH,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.GROUP_REFRESH,\n      args: {}\n    }\n  }\n}\n\nexport default events\n","/**\n * A new Group has been created and its information is now available.\n *\n * Information about an available Group can be retrieved using the\n *    {@link groups.getAll} or {@link groups.get} APIs.\n *\n * @public\n * @static\n * @memberof groups\n * @event group:new\n * @param {Object} params\n * @param {string} params.id The ID of the newly available Group.\n * @example\n * // Set an event listener for new Groups being created.\n * client.on('group:new', params => {\n *    const group = client.groups.get(params.groupId)\n *    // Use the new group.\n * })\n */\nexport const GROUP_NEW = 'group:new'\n\n/**\n * An existing Group has been modified and the new information is available.\n *\n * @public\n * @memberof groups\n * @event group:change\n * @param {Object} params\n * @param {string} params.id The ID of the Group that has changed.\n */\nexport const GROUP_CHANGE = 'group:change'\n\n/**\n * A Group has been deleted and is no longer available.\n *\n * The latest information about the Group is provided as part of the event.\n *\n * @public\n * @memberof groups\n * @event group:delete\n * @param {Object} params\n * @param {Object} params.group The information about the Group that was deleted.\n * @param {string} params.group.id the Group ID of the deleted group\n * @param {string} params.group.image the group image of the deleted group\n * @param {string} params.group.name the group name of the deleted group\n * @param {Array} params.group.participants the participants of the group of the deleted group\n * @param {string} params.group.subject the subject for the group of the deleted group\n */\nexport const GROUP_DELETE = 'group:delete'\n\n/**\n * The list of Groups has been refreshed.\n *\n * Any previously available Groups may have had their information updated, and\n *    any otherwise unknown Groups may now be available.\n *\n * Information about an available Group can be retrieved using the\n *    {@link groups.getAll} or {@link groups.get} APIs.\n *\n * @public\n * @memberof groups\n * @event group:refresh\n */\nexport const GROUP_REFRESH = 'group:refresh'\n\n/**\n * An invitation to a Group has been received.\n *\n * Information about a Group invitation can be retrieved using the\n *    {@link groups.getInvitations} API.\n *\n * @public\n * @static\n * @memberof groups\n * @event group:invitation_received\n * @param {Object} params\n * @param {Object} params.invitation contains information about the group invitation\n * @param {string} params.invitation.id Group ID used to locate and join the group\n * @param {Array} params.invitation.participants a list of participants in the group\n * @param {string} params.invitation.name the group name\n */\nexport const GROUP_INVITATION_RECEIVED = 'group:invitation_received'\n\n/**\n * An error occurred with a Group operation.\n *\n * @public\n * @memberof groups\n * @event group:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const GROUP_ERROR = 'group:error'\n","// Subscription plugin.\nimport { api, reducer, name } from '../interface'\nimport eventsMap from '../interface/events'\nimport { subscriptionFlow, onConnectionLostEntry } from './sagas'\n\n// Other plugins.\nimport { update as updateConfig } from '../../config/interface/actions'\nimport { mapEvents } from '../../events/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\n\n// Helpers.\nimport { mergeValues } from '../../common/utils'\n\n// Parse and/or Validate\nimport { validation as v8n, parse } from '../../../src/common/validation'\n\n/**\n * Configuration options for the Subscription feature.\n * @public\n * @name config.subscription\n * @memberof config\n * @instance\n * @param {Object} subscription Subscription configs.\n * @param {number} [subscription.channelLifetime=3600] The amount of time (in seconds) for which to keep subscription channels up and alive.\n * @param {number} [subscription.timeout=20] The amount of time (in seconds) allowed for the subscription/unsubscription process to take place before timing out.\n */\n\n/**\n * CPaaS subscription implementation factory.\n * @method createSubscriptionPlugin\n * @param {Object} options - Configuration options for subscription. See above.\n * @return {Object} plugin - A subscription plugin.\n */\n\nconst defaultOptions = {\n  channelLifetime: 3600, // sec\n  timeout: 20 // sec\n}\n\n// config validation\nconst v8nValidation = v8n.schema({\n  channelLifetime: v8n.positive(),\n  timeout: v8n.positive()\n})\nconst parseOptions = parse('subscription', v8nValidation)\n\nexport default function createSubscriptionPlugin (options = {}) {\n  options = mergeValues(defaultOptions, options)\n  parseOptions(options)\n\n  function * init () {\n    // Send the provided options to the store.\n    // This will be `state.config[name]`.\n    yield put(updateConfig(options, name))\n    yield put(mapEvents(eventsMap))\n  }\n\n  return {\n    sagas: [subscriptionFlow, onConnectionLostEntry],\n    init,\n    capabilities: ['cpaas_subscription'],\n    api,\n    reducer,\n    name\n  }\n}\n","import reducer from './reducers'\nimport name from './name'\nimport api from './api'\n\nexport { reducer, name, api }\n","import * as actionTypes from './actionTypes'\n\n// Constants\nimport { platforms } from '../../constants'\n\n// Other plugins.\nimport { DISCONNECT_REASONS } from '../../auth/constants'\n\n// Libraries.\nimport { handleActions } from 'redux-actions'\nimport { remove } from 'lodash/fp'\n\n/* State Structure\n    subscription: {\n        notificationChannels: { // An object with key values pairs for channelType -> channelInfo\n            [Websocket] : { ... }, // Channel Info taken directly from UC response.\n            [Push]      : { ... }\n        }\n    }\n */\n\nconst defaultState = {\n  // Information about the open notification channels.\n  notificationChannels: {},\n  // The list of active subscriptions.\n  subscriptions: [],\n  // The list of services that plugins can subscribe to.\n  registeredServices: [],\n  // Whether a subscription change is currently in progress.\n  isPending: false\n}\n\nconst reducers = {}\n\n// Helper function for changing the pending value.\nfunction pendingChange (value) {\n  return (state, action) => {\n    return { ...state, isPending: value }\n  }\n}\n// Change isPending depending on the start/finish of subscriptions.\nreducers[actionTypes.SUBSCRIBE] = pendingChange(true)\nreducers[actionTypes.UNSUBSCRIBE] = pendingChange(true)\n\nreducers[actionTypes.SUBSCRIBE_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      error: undefined,\n      platform: action.meta.platform,\n      subscriptions: action.payload.subscriptions || state.subscriptions\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      error: action.payload\n    }\n  }\n}\n\n/*\n * Remove subscriptions that are in the unsubscriptions list\n */\nreducers[actionTypes.UNSUBSCRIBE_FINISHED] = {\n  next (state, action) {\n    const newState = {\n      ...state,\n      isPending: false\n    }\n\n    /*\n     * Check if we are using link platform and clear the subscription array\n     */\n    if (action.meta.platform === platforms.LINK) {\n      newState.subscriptions = []\n    }\n\n    /*\n     * If connectivity was lost, remove all subscriptions to reflect that we\n     *    aren't receiving anything from them.\n     * In \"normal\" scenarios, other reducers handle the subscriptions state.\n     */\n    if (action.payload.reason === DISCONNECT_REASONS.LOST_CONNECTION) {\n      newState.subscriptions = []\n    }\n\n    return newState\n  },\n  throw (state) {\n    return {\n      ...state,\n      isPending: false\n    }\n  }\n}\n\n/*\n * When a plugin reports a successful subscription, store it in state.\n */\nreducers[actionTypes.PLUGIN_SUBSCRIPTION_FINISHED] = {\n  next (state, action) {\n    return {\n      ...state,\n      subscriptions: state.subscriptions.concat(action.payload)\n    }\n  }\n}\n\n/*\n * When a plugin reports a successful unsubscription, remove it from state.\n */\nreducers[actionTypes.PLUGIN_UNSUBSCRIPTION_FINISHED] = {\n  next (state, action) {\n    function removeSubscription (subscription) {\n      return subscription.channelType === action.payload.channelType && subscription.service === action.payload.service\n    }\n\n    return {\n      ...state,\n      subscriptions: remove(removeSubscription)(state.subscriptions)\n    }\n  }\n}\n\n/*\n * Store the services that plugins can subscribe to in state.\n */\nreducers[actionTypes.REGISTER_SUB_SERVICE] = {\n  next (state, action) {\n    return {\n      ...state,\n      // TODO: Worry about duplicate services?\n      registeredServices: state.registeredServices.concat(action.payload.services)\n    }\n  }\n}\n\n/*\n * Store the new notification channel into state.\n * Assumption: A channel of the same type should NOT already exist.\n */\nreducers[actionTypes.CHANNEL_OPENED] = {\n  next (state, action) {\n    return {\n      ...state,\n      notificationChannels: {\n        ...state.notificationChannels,\n        [action.meta.type]: action.payload\n      }\n    }\n  }\n}\n\n/*\n * Remove the notification channel info when it has been closed.\n */\nreducers[actionTypes.CHANNEL_CLOSED] = {\n  next (state, action) {\n    return {\n      ...state,\n      notificationChannels: {\n        ...state.notificationChannels,\n        [action.meta.type]: undefined\n      }\n    }\n  }\n}\n\n/**\n * Subscription Interface reducer\n * @method reducer\n * @param  {Object}  state - The current redux state.\n * @param  {Object}  action - A flux standard action.\n * @return {Object}  - The new redux state.\n * @example\n * Subscription state structure example; connected.\n * subscriptionState = {\n *\n * }\n */\nconst reducer = handleActions(reducers, defaultState)\nexport default reducer\n","/**\n * This interface is for an subscription plugin.\n * @type {string}\n */\nconst name = 'subscription'\nexport default name\n","/**\n * The 'services' namespace allows an application to manage how they wish the SDK to\n *    receive communications from the platform. An application can subscribe to\n *    services in order to receive updates about that service for the current\n *    user. A feature generally requires a subscription for its service to be\n *    fully functional.\n *\n * The services an application can subscribe to are based on the features\n *    included in the SDK. The list of available services can be retrieved\n *    using the {@link services.getSubscriptions} API. These values can be used\n *    with the {@link services.subscribe} API.\n *\n * The channel used for subscriptions is the method for receiving the service\n *    updates. The recommended channel is `websocket`, where the SDK is able to\n *    handle receiving the updates internally. Alternate channel methods, if a\n *    websocket cannot be used, will be available in the future.\n *\n * @public\n * @namespace services\n */\n\n/**\n * The ServiceDescriptor type defines the format for specifying how to subscribe for a certain service.\n * This is the service configuration object that needs to be passed (as part of an array of configuration objects) when calling\n * the {@link services.subscribe} function.\n * Only some plugins (`call`, `messaging` and `presence`) support such configuration object that needs to be passed\n * to the subscribe function.\n *\n * @public\n * @static\n * @typedef {Object} ServiceDescriptor\n * @property {string} service The name of the available service user wants to subscribe to.\n * The available service names are `chat`, `presence`, `call` and `smsinbound`.\n *\n * @property {Object} [params] An object containing any additional parameters required for subscribing to that service.\n * This is an optional property as not all service subscriptions require it.\n * @memberof services\n * @example\n * // Subscribe to chat, presence & call services on a WebSocket channel.\n * client.services.subscribe([\n *    {service: 'chat'},\n *    {service: 'presence'},\n *    {service: 'call'},\n * ], 'websocket')\n */\n\n/**\n * The SmsInboundServiceParams type defines the additional information when subscribing to SMS inbound service.\n * This is the configuration object that needs to be passed as the value for the {@link services.ServiceDescriptor ServiceDescriptor.params} property.\n *\n * @public\n * @static\n * @typedef {Object} SmsInboundServiceParams\n * @memberof services\n * @property {string} destinationAddress An E164 formatted DID number.\n *     The subscription created will provide notifications for inbound SMS messages destined for this address.\n * @example\n * // Subscribe to smsinbound service on a WebSocket channel.\n * client.services.subscribe([\n *    {service: 'smsinbound', params: {destinationAddress: '+18001234567'}}\n * ], 'websocket')\n */\n\n// Subscription plugin.\nimport * as actions from './actions'\nimport { getSubscribedServices, getRegisteredServices } from './selectors'\n\n// Auth plugin.\nimport { getUserInfo as selectUserInfo } from '../../auth/interface/selectors'\n\n// Constants\nimport { notificationTypes } from '../../constants'\n\n// Libraries\nimport { normalizeServices } from '../../common/utils'\n\n// Logs\nimport { logManager, API_LOG_TAG } from '../../logs'\nconst log = logManager.getLogger('SUBSCRIPTION')\n\n/**\n * Service API. All functions in this plugin are part of the 'services' namespace.\n * @method api\n * @param  {Function} params\n * @param  {Function} params.dispatch - The redux store's dispatch function.\n * @param  {Function} params.getState - The redux store's getState function.\n * @return {Object} api - The subscription API object.\n */\nexport default function api ({ dispatch, getState }) {\n  const subscriptionApi = {\n    /**\n     * Subscribes to platform notifications for an SDK service.\n     *\n     * Subscriptions can only be made for services available to the SDK. See\n     *    {@link services.getSubscriptions} for information about services.\n     *\n     * Extra configurations can be provided for a subscription as part of its\n     *    \"service configurations\" object (see the `services` parameter). This\n     *    configuration object must contain a `service` property with the\n     *    service name, but may also include other properties as extra\n     *    subscription configurations.\n     *\n     * The SDK currently only supports the `websocket` channel as a subscription\n     *    type.\n     *\n     * @public\n     * @static\n     * @requires cpaas_subscription\n     * @memberof services\n     * @method subscribe\n     * @param {Array<string | services.ServiceDescriptor>} services A list of service configurations.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {string} [options.type='websocket'] The method of how to receive service updates.\n     * @example\n     * // Subscribe for chat and SMS services.\n     * const services = [\n     *    { service: 'chat' },\n     *    // Specify extra configurations for certain services.\n     *    { service: 'smsinbound', params: {destinationAddress: '<phoneNumber>' }}\n     * ]\n     *\n     * client.services.subscribe(services)\n     */\n\n    /**\n     * Subscribes to platform notifications for an SDK service.\n     *\n     * Extra configuration can be provide as an additional object parameter.\n     * Currently only a \"forceLogOut\" flag can be supplied in this object.\n     *\n     * For push notifications on link, please see {@link notifications.registerPush}\n     *\n     * The SDK currently only supports the `websocket` channel as a subscription\n     *    type.\n     *\n     * @public\n     * @static\n     * @memberof services\n     * @requires link_subscription\n     * @method subscribe\n     * @param {Array<string | services.ServiceDescriptor>} services A list of service configurations.\n     * @param {Object} [options] The options object for non-credential options.\n     * @param {boolean} [options.forceLogOut] Force the oldest connection to log out if too many simultaneous connections. Link only.\n     * @param {string} [options.type='websocket'] The method of how to receive service updates.\n     * @param {string} [options.clientCorrelator] Unique ID for the client. This is used by the platform to identify an instance of the application used by the specific device.\n     * @example\n     * // Subscribe for chat and SMS services.\n     * client.services.subscribe(['call', 'IM'], {forceLogOut: true, clientCorrelator: 'abc123'})\n     */\n    subscribe (services, options = {}) {\n      // For backwards compatibility, we need to check if the 2nd parameter\n      // is a string and if it's a valid notification type, then convert\n      // it to the new api format\n      if (\n        typeof options === 'string' &&\n        (options === notificationTypes.WEBSOCKET || options === notificationTypes.PUSH)\n      ) {\n        options = {\n          type: options\n        }\n      }\n\n      if (!options.type) {\n        options.type = notificationTypes.WEBSOCKET\n      }\n\n      log.debug(API_LOG_TAG + 'services.subscribe: ', services, options.type)\n      const userInfo = selectUserInfo(getState())\n      if (userInfo && (userInfo.username || userInfo.accessToken)) {\n        // Normalize services array\n        services = normalizeServices(services)\n        dispatch(actions.subscribe(services, options))\n      } else {\n        // TODO: Directly emit error event\n      }\n    },\n\n    /**\n     * Cancels existing subscriptions for platform notifications.\n     *\n     * Existing subscriptions can be retrieved using the\n     *    {@link services.getSubscriptions} API. The `subscribed` values are the\n     *    services that can be unsubscribed from.\n     *\n     * @public\n     * @static\n     * @memberof services\n     * @method unsubscribe\n     * @param {Array<string>} services A list of subscribed service names.\n     * @param {string} [type='websocket'] The method of how the service updates\n     *    are being received.\n     * @example\n     * // Unsubscribe from chat and SMS services.\n     * const services = [ 'chat', 'smsinbound' ]\n     *\n     * client.services.unsubscribe(services)\n     */\n    unsubscribe (services, type = notificationTypes.WEBSOCKET) {\n      log.debug(API_LOG_TAG + 'services.unsubscribe: ', services, type)\n      const userInfo = selectUserInfo(getState())\n      if (userInfo && (userInfo.accessToken || userInfo.username)) {\n        dispatch(actions.unsubscribe(services, type))\n      } else {\n        // TODO: Directly emit error event\n      }\n    },\n\n    /**\n     * Resubscribe for notification subscriptions. ***NOT YET SUPPORTED***\n     * @memberof services\n     * @method resubscribe\n     * @param {Array<string>} services The subscribed services that should be unsubscribed.\n     * @param {string} [type='websocket'] The type of channel to be used for the notifications.\n     */\n    resubscribe (services, type = notificationTypes.WEBSOCKET) {\n      log.debug(API_LOG_TAG + 'services.resubscribe: ', services, type)\n      log.info(`THIS FUNCTIONALITY IS NOT YET SUPPORTED. Services: ${services}. Type: ${type}`)\n    },\n\n    /**\n     * Retrieves information about currently subscribed services and available services.\n     *\n     * The `available` values are the SDK's services that an application can\n     *    subscribe to receive notifications about. A feature generally\n     *    requires a subscription to its service in order to be fully functional.\n     *\n     * The `subscribed` values are the SDK's services that the application has\n     *    an active subscription for. Services are subscribed to using the\n     *    {@link services.subscribe} API.\n     *\n     * @public\n     * @static\n     * @memberof services\n     * @method getSubscriptions\n     * @return {Object} Lists of subscribed and available services.\n     * @example\n     * // Get the lists of services.\n     * const services = client.services.getSubscriptions()\n     *\n     * // Figure out which available services don't have a subscription.\n     * const notSubscribed = services.available.filter(service => {\n     *    return !services.subscribed.includes(service)\n     * })\n     *\n     * // Subscribe for all not-yet-subscribed services.\n     * client.services.subscribe(notSubscribed)\n     */\n    getSubscriptions () {\n      log.debug(API_LOG_TAG + 'services.getSubscriptions')\n      return {\n        subscribed: getSubscribedServices(getState()),\n        available: getRegisteredServices(getState()),\n        isPending: getState().subscription.isPending\n      }\n    }\n  }\n\n  return { services: subscriptionApi }\n}\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nfunction subChangeEvent (action) {\n  const payload = action.payload.retryAfter\n    ? { reason: action.payload.reason, retryAfter: action.payload.retryAfter }\n    : { reason: action.payload.reason }\n  return {\n    type: action.error ? eventTypes.SUB_ERROR : eventTypes.SUB_CHANGE,\n    args: action.error ? { error: action.payload.error } : payload\n  }\n}\n\nconst eventsMap = {}\n\n// Emit an event on start action for isPending change.\neventsMap[actionTypes.SUBSCRIBE] = subChangeEvent\neventsMap[actionTypes.UNSUBSCRIBE] = subChangeEvent\n\n// Emit an event on finish action for results.\neventsMap[actionTypes.SUBSCRIBE_FINISHED] = subChangeEvent\neventsMap[actionTypes.UNSUBSCRIBE_FINISHED] = subChangeEvent\n\neventsMap[actionTypes.RESUBSCRIPTION_FINISHED] = function (action) {\n  const resubEvent = {\n    type: eventTypes.SUB_RESUB,\n    args: {\n      attemptNum: action.payload.attemptNum,\n      isFailure: action.error || false\n    }\n  }\n\n  if (action.error) {\n    resubEvent.args.error = action.payload\n  }\n  return resubEvent\n}\n\nexport default eventsMap\n","/**\n * Subscription information has changed.\n *\n * The updated subscription information can be retrieved using the\n *    {@link services.getSubscriptions} API.\n * @public\n * @memberof services\n * @event subscription:change\n * @param {Object} params\n * @param {string} [params.reason] When unsolicited, the reason for the change.\n *   Reason can have (but not limited to) these values:\n *   'GONE' - When Connection was terminated by the server.\n *   'LOST_CONNECTION' - When internet connection was lost.\n *   'WS_OVERRIDDEN' - When websocket was overridden by the server.\n */\nexport const SUB_CHANGE = 'subscription:change'\n\n/**\n * An error occurred during a subscription operation.\n *\n * The subscription information can be retrieved using the\n *    {@link services.getSubscriptions} API.\n * @public\n * @memberof services\n * @event subscription:error\n * @param {Object} params\n * @param {Object} params.error A Basic error object, representing the error that occurred.\n */\nexport const SUB_ERROR = 'subscription:error'\n\n/**\n * An attempt to extend the current user's subscription was made.\n *\n * In a failure scenario, the current user is still connected, and further\n * resubscription attempts will be made, but may become disconnected if the\n * session expires.\n * @public\n * @memberof services\n * @event subscription:resub\n * @param {Object} params\n * @param {number} params.attemptNum The attempt number of this resubscription.\n * @param {boolean} params.isFailure Whether the resubscription failed or not.\n * @param {api.BasicError} [params.error] The Basic error object.\n */\nexport const SUB_RESUB = 'subscription:resub'\n","// Subscription plugin.\nimport * as actionTypes from '../../interface/actionTypes'\nimport * as actions from '../../interface/actions'\n\nimport { ensureChannelOpen, closeChannel } from './channels'\n\nimport {\n  getRegisteredServices,\n  getSubscribedServices,\n  getNotificationChannels,\n  getSubscriptionConfig\n} from '../../interface/selectors'\n\n// Other plugins\nimport * as connectivityActionTypes from '../../../connectivity/interface/actionTypes'\nimport { DISCONNECT_REASONS } from '../../../auth/constants'\nimport { getUserInfo } from '../../../auth/interface/selectors'\n\n// Helpers.\nimport { logManager } from '../../../logs'\nimport BasicError, { subscriptionCodes } from '../../../errors'\nimport { waitFor } from '../../../common/effects'\n\n// Libraries.\nimport { call, put, select, take, actionChannel, delay, takeEvery } from 'redux-saga/effects'\nimport { intersection, compact } from 'lodash/fp'\n\n// Constants\nimport { platforms } from '../../../constants'\n\nconst platform = platforms.CPAAS\nconst log = logManager.getLogger('SUBSCRIPTION')\n\n/**\n * Entry point for ALL subscription change actions.\n * Queues all subscription changes (ie. subscribe, unsubscribe) to avoid async\n * scenarios. This ensures channels and subscriptions are not duplicated\n * and that resources are created/clean-up when needed.\n * @method subscriptionFlow\n */\nexport function * subscriptionFlow () {\n  // Use a channel to queue ALL subscription change requests.\n  const subscriptionChannel = yield actionChannel([actionTypes.SUBSCRIBE, actionTypes.UNSUBSCRIBE])\n\n  while (true) {\n    const action = yield take(subscriptionChannel)\n\n    // Get the channel information of the channel to be closed.\n    const { notificationChannels } = yield select(getNotificationChannels)\n    const channel = notificationChannels[action.payload.type]\n\n    // Handle the action appropriately.\n    if (action.type === actionTypes.SUBSCRIBE) {\n      if (!action.payload.services || action.payload.services.length === 0) {\n        // Error scenario: No services specified.\n        // TODO: Better error.\n        log.info('Failed subscription: No services specified.')\n        yield put(actions.subscribeFinished({ error: true }))\n        continue\n      }\n\n      // Open the notification channel if it isn't already.\n      const result = yield call(ensureChannelOpen, action.payload.type)\n      if (!result.success) {\n        log.info('Failed to open channel. Error: ', result.error)\n        // Error scenario: Could not open channel.\n        yield put(actions.subscribeFinished({ error: result.error }))\n        continue\n      }\n\n      // Ensure only one user credentials can be used at a time.\n      // If user of SDK instance triggers a subscribe for services\n      // using another set of credentials, then it needs to unsubscribe\n      // from currently subscribed services.\n      const currentUserInfo = yield select(getUserInfo)\n      let currentSubscribedUsername\n      if (channel && channel.resourceURL) {\n        currentSubscribedUsername = channel.resourceURL\n          .split('/channels/')[0]\n          .split('/')\n          .pop()\n      }\n\n      if (currentSubscribedUsername && currentUserInfo.username !== currentSubscribedUsername) {\n        // See NOTE below, for the same yield delay(0)\n        yield delay(0)\n\n        // Error scenario: When attempting to subscribe,\n        // if we detect that there was a previous subscribed user,\n        // then that currently subscribed user\n        // has to be the same as the currently authenticated user.\n        yield put(\n          actions.subscribeFinished({\n            error: new BasicError({\n              message:\n                'Previously subscribed username does not match the currently authenticated username. Unsubscribe previous user from service(s).',\n              code: subscriptionCodes.CPAAS_SERVICE_SUB_FAIL\n            })\n          })\n        )\n        continue\n      }\n\n      log.info('Subscribing for services.')\n      // Subscribe to the services and retrieve a list of their responses.\n      const subResponses = yield call(subscribeForServices, action)\n\n      // Report that the subscription flow has finished.\n      if (subResponses.error) {\n        log.info('Failed to subscribe for services. Error: ', subResponses.error)\n        yield put(\n          actions.subscribeFinished({\n            error: subResponses.error,\n            type: action.payload.type\n          })\n        )\n      } else {\n        log.info('Successfully subscribed for services.')\n        yield put(\n          actions.subscribeFinished({\n            type: action.payload.type\n          })\n        )\n      }\n    } else {\n      // TODO: How to do a \"unsubscribe all\" services?\n      // ie. not need the application to specify them all individually.\n      // Might be simpler for the API to be sub/unsub(type, services).\n\n      // Unsubscribe the services.\n      const unsubResponses = yield call(unsubscribeServices, action)\n      if (unsubResponses.error) {\n        log.info('Failed to unsubscribe from services. Error: ', unsubResponses.error)\n        yield put(\n          actions.unsubscribeFinished({\n            error: unsubResponses.error,\n            type: action.payload.type\n          })\n        )\n        continue\n      }\n      log.info('Successfully unsubscribed from services.')\n\n      // If there are no longer any subscribed services for this channel (and\n      //    the channel is open), close it.\n      const subscribedServices = yield select(getSubscribedServices, action.payload.type)\n      if (subscribedServices.length === 0 && channel) {\n        const closeResponse = yield call(closeChannel, channel, platform)\n\n        if (closeResponse.error) {\n          // TODO: Error scenario?\n          log.info('Failed to close channel. Error: ', closeResponse.error)\n        } else {\n          // TODO: Parameters.\n          yield put(actions.channelClosed(action.payload.type))\n        }\n      }\n\n      // Report that the unsubscription flow has finished.\n      yield put(\n        actions.unsubscribeFinished({\n          type: action.payload.type\n        })\n      )\n    }\n  }\n}\n\n/**\n * This function handles the flow of subscribing for CPaaS services.\n * This means it dispatches a command action to tell other plugins to subscribe.\n * Once all plugins have done their subscription (if they need one), we return\n * the subscription response information.\n * @method subscribeForServices\n * @param  {Object} action A subscription action.\n * @param  {Object} action.payload The action's payload\n * @param  {string} action.payload.type The type of notification channel for this subscription.\n * @param  {Array<Object>} action.payload.services The requested services for this subscription\n * @return {Object}\n */\nfunction * subscribeForServices (action) {\n  const requestedServices = action.payload.services\n\n  // Get lists of registered and subscribed services\n  const registeredServices = yield select(getRegisteredServices)\n  const subscribedServices = yield select(getSubscribedServices, action.payload.type)\n\n  // Filter requested services to remove invalid services (services not registered / already subscribed to)\n  const notRegistered = []\n  const alreadySubscribed = []\n  const validServices = requestedServices.filter(serviceConfig => {\n    // Remove requested services of plugins that are not registered\n    if (!registeredServices.includes(serviceConfig.service)) {\n      notRegistered.push(serviceConfig.service)\n      return false\n      // Remove requested services already subscribed to\n    } else if (subscribedServices.includes(serviceConfig.service)) {\n      alreadySubscribed.push(serviceConfig.service)\n      return false\n    }\n    // Valid requested service\n    return true\n  })\n\n  let reason\n  if (notRegistered.length > 0) {\n    reason = 'Not registered for requested service(s): ' + notRegistered + '.'\n    log.debug(reason)\n  }\n  if (alreadySubscribed.length > 0) {\n    reason = 'Already subscribed for requested service(s): ' + alreadySubscribed + '.'\n    log.debug(reason)\n  }\n\n  if (validServices.length === 0) {\n    // eslint-disable-next-line no-warning-comments\n    /**\n     * While odd looking, delay(0) is needed to let the \"subscribe action\" finish its flow\n     * before the \"subscribe finish\" action is dispatched.\n     * For a very in-depth explanation, see comments on this PR:\n     * <https://github.com/Kandy-IO/Kandy.js/pull/2579#issuecomment-589670097>\n     */\n    yield delay(0)\n\n    // TODO: Proper error / return.\n    return {\n      error: new BasicError({\n        message: 'Failed to subscribe: No valid services provided. Reason: ' + reason,\n        // TODO: Proper error code.\n        code: 'BAD_INPUT'\n      })\n    }\n  }\n  log.info(`Requesting subscriptions for services: ${validServices.map(serviceConfig => serviceConfig.service)}.`)\n\n  // Announce to all plugins that subscriptions should happen.\n  yield put(actions.doPluginSubscriptions(validServices, action.payload.type))\n\n  // What we're waiting for.\n  const waitPatterns = validServices.map(serviceConfig => action =>\n    action.type === actionTypes.PLUGIN_SUBSCRIPTION_FINISHED && action.payload.service === serviceConfig.service\n  )\n\n  const subscriptionConfig = yield select(getSubscriptionConfig, platform)\n  // Wait for a response from each plugin.\n  const { results } = yield waitFor(subscriptionConfig.timeout * 1000, waitPatterns)\n\n  // TODO: Would it be better to handle partial results here?\n  return compact(results)\n}\n\n/**\n * This function handles the flow of unsubscribing for CPaaS services.\n * This means it dispatches a command action to tell other plugins to unsubscribe.\n * Once all plugins have done their unsubscription (if they need one), we return\n * the unsubscription response information.\n * The logic in this saga is a copy from the `subscribeForServices` saga.\n * @method unsubscribeServices\n * @param  {Object} action An unsubscription action.\n * @return {Object}\n */\nfunction * unsubscribeServices (action) {\n  const subscribedServices = yield select(getSubscribedServices, action.payload.type)\n\n  // Get the list of services we want to unsubscribe, but aren't subscribed.\n  const notSubscribed = action.payload.services.filter(service => {\n    return subscribedServices.indexOf(service) === -1\n  })\n  if (notSubscribed.length > 0) {\n    log.debug(`Not subscribed for services for unsubscription: ${notSubscribed}.`)\n  }\n\n  // Get the list of subscribed services we want to unsubscribe.\n  const validServices = intersection(subscribedServices, action.payload.services)\n  log.info(`Unsubscribing from services: ${validServices}.`)\n\n  if (validServices.length === 0) {\n    // TODO: Proper error / return.\n    return {\n      error: new BasicError({\n        message: 'Failed to unsubscribe: No valid services provided.',\n        // TODO: Proper error code.\n        code: 'BAD_INPUT'\n      })\n    }\n  }\n\n  const subscriptionConfig = yield select(getSubscriptionConfig, platform)\n\n  // Announce to all plugins that unsubscriptions should happen\n  yield put(actions.doPluginUnsubscriptions(validServices, action.payload.type))\n\n  // What we're waiting for.\n  const waitPatterns = validServices.map(service => action =>\n    action.type === actionTypes.PLUGIN_UNSUBSCRIPTION_FINISHED && action.payload.service === service\n  )\n\n  // Wait for a response from each plugin.\n  const { results } = yield waitFor(subscriptionConfig.timeout * 1000, waitPatterns)\n\n  // Get the service from each of the unsubscribed actions\n  let resultServices = results\n  if (Array.isArray(results)) {\n    resultServices = results.map(resultAction => resultAction.payload.service)\n  }\n\n  return compact(resultServices)\n}\n\n/**\n * Triggers onConnectionLost saga when a WS_RECONNECT_FAILED actionType occurs\n * @method onConnectionLostEntry\n */\nexport function * onConnectionLostEntry () {\n  yield takeEvery(connectivityActionTypes.WS_RECONNECT_FAILED, onConnectionLost)\n}\n\n/**\n * Handles lost connections from the connectivity plugin\n * @method onConnectionLost\n */\nexport function * onConnectionLost () {\n  yield put(\n    actions.unsubscribeFinished({\n      reason: DISCONNECT_REASONS.LOST_CONNECTION\n    })\n  )\n}\n","// Subscription plugin.\nimport { requestWebsocket, deleteChannel } from '../requests'\nimport * as actions from '../../interface/actions'\nimport { getSubscriptionConfig, getNotificationChannels } from '../../interface/selectors'\n\n// Other plugins.\nimport { getAuthConfig, getRequestInfo } from '../../../auth/interface/selectors'\nimport { connectWebsocket, disconnectWebsocket } from '../../../connectivity/interface/effects'\nimport { logManager } from '../../../logs'\n\nimport { getConnectivityConfig, getConnectionState } from '../../../connectivity/interface/selectors'\n// Helpers.\nimport BasicError, { subscriptionCodes } from '../../../errors'\nimport { notificationTypes, platforms } from '../../../constants'\n\n// Libraries.\nimport { call, put, select } from 'redux-saga/effects'\n\nconst platform = platforms.CPAAS\nconst log = logManager.getLogger('SUBSCRIPTION')\n\n/**\n * Ensures that a notification channel of `type` is open.\n * If already open, does nothing. If not open, requests/opens it.\n * @method ensureChannel\n * @param {string} type The type of notification channel.\n * @return {Object} The result containing a boolean property: success.\n *                  If success property is false, an extra error property will also be present.\n */\nexport function * ensureChannelOpen (type) {\n  /**\n   * Assumed format of the subInfo object:\n   * @param {Object} subInfo\n   * @param {Object} subInfo.notificationChannels A mapping of types to the channel info.\n   * @param {Array} subInfo.subscriptions A list of active subscriptions.\n   */\n  const subInfo = yield select(getNotificationChannels)\n\n  // If there is no open notification channel for `type`, request it.\n  if (!subInfo.notificationChannels[type]) {\n    let channelResponse\n    if (type === notificationTypes.WEBSOCKET) {\n      log.info(`Opening websocket channel for platform ${platform}.`)\n      channelResponse = yield call(openWebsocketChannel, platform)\n    } else if (type === notificationTypes.PUSH) {\n      // TODO: CPaaS Push subscription here.\n    } else {\n      // Bad scenario.\n    }\n\n    if (channelResponse.error) {\n      log.info('Failed to open websocket channel. Error: ', channelResponse.error)\n      // Error scenario: Could not open websocket channel.\n      return { success: false, error: channelResponse.error }\n    }\n\n    // Save newly opened channel info in state.\n    yield put(\n      actions.channelOpened(\n        {\n          ...channelResponse.notificationChannel,\n          channelId: channelResponse.notificationChannel.resourceURL.split('/channels/')[1]\n        },\n        type\n      )\n    )\n    log.info('Successfully opened websocket channel.')\n    return { success: true }\n  } else {\n    // If there is already a channel, use it.\n    return { success: true }\n  }\n}\n\n/**\n * This wsSubscribe function makes a request to the CPAAS gateway for a subscription.\n * If successful it triggers a subscribeFinished action containing subscription information.\n * @method openWebsocketChannel\n */\nexport function * openWebsocketChannel (platform) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const subscriptionInfo = yield select(getSubscriptionConfig)\n  const connectivityInfo = yield select(getConnectivityConfig)\n\n  // Request a websocket to subscribe to.\n  const response = yield call(requestWebsocket, requestInfo, subscriptionInfo, connectivityInfo)\n\n  if (response.error) {\n    return response\n  }\n\n  const subscription = {\n    ...response.notificationChannel,\n    service: 'CPaaS',\n    url: response.notificationChannel.channelData.channelURL\n  }\n\n  const connectionInfo = yield select(getAuthConfig)\n  // Format the response to pass off to the connectivity plugin.\n  const websocketInfo = {\n    protocol: 'wss',\n    server: connectionInfo.server.base,\n    port: connectionInfo.server.port,\n    url: subscription.url,\n    params: {\n      access_token: requestInfo.token\n    }\n  }\n\n  // Request the websocket connection.\n  const wsOpenOrError = yield connectWebsocket(websocketInfo, platform)\n\n  if (wsOpenOrError.error) {\n    log.info('Failed to connect to websocket. Error: ', wsOpenOrError.error)\n    // TODO: the connectivity plugin should be creating (and passing on) the websocket errors.\n    throw new BasicError({\n      message: 'Failed to connect to the websocket.',\n      code: subscriptionCodes.WS_CONNECTION_ERROR\n    })\n  } else {\n    // We're connected. Finish subscription process.\n    // TODO: Once auth is complete, fill the data.\n    return {\n      // We will only ever have one of each notificationChannel type. So this should be the only websocket channel in state.\n      notificationChannel: response.notificationChannel,\n      type: notificationTypes.WEBSOCKET\n    }\n  }\n}\n/**\n * Close the specified channel by cleaning up its resources then deleting it.\n * @method closeChannel\n * @param  {Object} channel Information about the channel to be closed.\n * @param  {string} platform\n * @return {Object}\n */\nexport function * closeChannel (channel, platform) {\n  const { channelId, channelType } = channel\n\n  // TODO: Don't hardcode a constant.\n  if (channelType === 'websockets') {\n    // Ask the connectivity plugin to disconnect this platform's websocket if it exists\n    const wsState = yield select(getConnectionState, platform)\n    if (wsState.connected) {\n      log.info(`Closing websocket channel for platform ${platform}.`)\n      const closeAction = yield disconnectWebsocket(undefined, platform)\n\n      if (closeAction.error) {\n        log.info(`Failed to close websocket. Error: ${closeAction.error} Continuing anyway.`)\n      }\n    }\n\n    const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n\n    // Delete the notification channel resource.\n    log.info(`Deleting channel with id: ${channelId}`)\n    const response = yield call(deleteChannel, channelId, requestInfo)\n    return response\n  } else {\n    // TODO: Handle closing other channel types.\n  }\n}\n","// Other plugins.\nimport request from '../../request/effects'\nimport BasicError, { subscriptionCodes } from '../../errors'\nimport { logManager } from '../../logs'\n\nconst log = logManager.getLogger('AUTH')\n\n/**\n * This function requests a websocket to connect to the backend.\n * @method requestWebsocket\n * @param  {Object}    requestInfo\n * @param  {Object}    subscriptionInfo\n * @return {Object} Returns an object containing the websocket connection information, most importantly a URL to connect to a websocket.\n */\n\nexport function * requestWebsocket (requestInfo, subscriptionInfo, connectivityInfo) {\n  const req = {}\n  req.method = 'POST'\n  req.url = `${requestInfo.baseURL}/cpaas/notificationchannel/${requestInfo.version}/${requestInfo.username}/channels`\n  req.body = JSON.stringify({\n    notificationChannel: {\n      channelLifetime: subscriptionInfo.expires,\n      channelType: 'Websockets',\n      clientCorrelator: requestInfo.clientCorrelator,\n      'x-connCheckRole': connectivityInfo.method.responsibleParty\n    }\n  })\n\n  const response = yield request(req)\n\n  if (response.error) {\n    if (response.payload.body) {\n      log.debug('Websocket request failed.', response.payload.body)\n      // Handle errors from the server.\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: 'Failed to retrieve a websocket.',\n          code: subscriptionCodes.CPAAS_WSREQUEST_FAIL\n        })\n      }\n    } else {\n      log.debug('Failed requesting a websocket.', response.payload.result.message)\n      // Handle errors from the request plugin.\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: 'Retrieve websocket request failed.',\n          // TODO: Shared error codes.\n          code: subscriptionCodes.CPAAS_WSREQUEST_FAIL\n        })\n      }\n    }\n  } else {\n    // Request was successful.\n    return {\n      error: false,\n      ...response.payload.body\n    }\n  }\n}\n/**\n * Request to delete a specified notification channel.\n * @method deleteChannel\n * @param  {string} channelId The ID of the channel to delete.\n * @param  {Object} requestInfo\n * @return {Object}\n */\nexport function * deleteChannel (channelId, requestInfo) {\n  const requestOptions = {}\n  requestOptions.method = 'DELETE'\n  requestOptions.responseType = 'none'\n  requestOptions.url =\n    `${requestInfo.baseURL}` +\n    `/cpaas/notificationchannel/${requestInfo.version}/${requestInfo.username}` +\n    `/channels/${channelId}`\n\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    log.info('Failed to delete channel. Error: ', response.error)\n    if (response.payload.body) {\n      // Handle errors from the server.\n      // TODO: Better error; more info.\n      return {\n        error: new BasicError({\n          message: 'Failed to delete notification channel.',\n          code: subscriptionCodes.CPAAS_UNSUBSCRIBE_FAIL\n        })\n      }\n    } else {\n      // Handle errors from the request helper.\n      // TODO: Better error; more info.\n      return {\n        error: new BasicError({\n          message: 'Delete channel request failed',\n          code: subscriptionCodes.CPAAS_UNSUBSCRIBE_FAIL\n        })\n      }\n    }\n  } else {\n    log.info('Successfully deleted channel.')\n    // Request was successful.\n    return {\n      error: false,\n      ...response.payload.body\n    }\n  }\n}\n\n/**\n * Revoke a websocket connection.\n * @method revokeWebsocket\n * @param  {Object}    connection Server information for the service in use.\n * @param  {string}    connection.server Server information for generating the URL.\n * @param  {string}    connection.requestOptions Common request options to be added.\n * @param  {string}    subscriptionURL URL of the user's websocket instance.\n * @return {Object}    Revoke websocket response.\n */\nexport function * revokeWebsocket (connection, subscriptionURL, credentials) {\n  // Build the revokeWebsocket request.\n  const requestOptions = {}\n  requestOptions.method = 'DELETE'\n  requestOptions.responseType = 'none'\n\n  requestOptions.url =\n    `${connection.server.protocol}://${connection.server.server}:${connection.server.port}` + subscriptionURL\n\n  requestOptions.headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${credentials.accessToken}`\n  }\n\n  log.info('Revoking websocket connection.')\n  // Send the revokeWebsocket request.\n  const response = yield request(requestOptions)\n\n  // Handle the response and any possible errors.\n  if (response.error) {\n    log.info('Failed to revoke the websocket connection. Error: ', response.error)\n    if (response.payload.body) {\n      // Handle errors from the server.\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: 'Failed to revoke websocket connection.',\n          code: subscriptionCodes.CPAAS_WSREVOKE_FAIL\n        })\n      }\n    } else {\n      // Handle errors from the request helper.\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: 'Revoke websocket request failed.',\n          // TODO: Shared error codes.\n          code: subscriptionCodes.CPAAS_WSREVOKE_FAIL\n        })\n      }\n    }\n  } else {\n    log.info('Successfully revoked websocket connection.')\n    // Request was successful.\n    return {\n      error: false\n    }\n  }\n}\n\n/**\n * CPaaS refreshWebsocket. All this call does is ask the backend to extend the lifetime\n * of the websocket.\n * @method refreshWebsocket\n * @param  {Object}    connection Server information for the service in use.\n * @param  {string}    connection.server Server information for generating the URL.\n * @param  {string}    connection.requestOptions Common request options to be added.\n * @param  {Object}    subscription Information about the subscription instance.\n * @param  {string}    subscription.expires - The time (in seconds) until subscription expiry.\n * @param  {Array}     subscription.service - The services to resubscribe to.\n * @param  {Array}     subscription.url - The URL of the user's subscription instance.\n * @return {Object}    Resubscription response.\n */\nexport function * refreshWebsocket (connection, subscription, credentials) {\n  const requestOptions = {}\n  requestOptions.method = 'PUT'\n\n  requestOptions.url =\n    `${connection.server.protocol}://${connection.server.server}:${connection.server.port}` +\n    subscription.url +\n    '/channelLifetime'\n\n  requestOptions.headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${credentials.accessToken}`\n  }\n\n  requestOptions.body = JSON.stringify({\n    notificationChannelLifetime: {\n      channelLifetime: subscription.channelLifetime\n    }\n  })\n\n  log.info('Refreshing websocket connection.')\n  const response = yield request(requestOptions)\n\n  if (response.error) {\n    if (response.payload.body) {\n      // Handle errors from the server.\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: 'Failed to refresh websocket connection.',\n          code: subscriptionCodes.CPAAS_WSREFRESH_FAIL\n        })\n      }\n    } else {\n      // Handle errors from the request helper.\n      return {\n        // TODO: Better error; more info.\n        error: new BasicError({\n          message: 'Refreshing websocket request failed.',\n          // TODO: Shared error codes.\n          code: subscriptionCodes.CPAAS_WSREFRESH_FAIL\n        })\n      }\n    }\n  } else {\n    // Request was successful.\n    const extendResponse = response.payload.body\n    log.info(\"Successfully extended Websocket connection's lifetime.\")\n\n    // Success.\n    return {\n      error: false,\n      ...extendResponse\n    }\n  }\n}\n","export { waitFor } from './waitFor'\n","import { all, call, cancel, delay, fork, race, take, join, setContext, getContext } from 'redux-saga/effects'\nimport { logManager } from '../../logs'\n\nconst log = logManager.getLogger('EFFECTS')\nconst WAIT_SAGA_CONTEXT = 'waitSagaContext'\n\n/**\n * Simple saga that simply does a take, to allow a take effect to be forked.\n *\n * @param {(string|Function|Array)} pattern The action or action selector to wait for.\n */\nfunction * processTake (pattern) {\n  const result = yield take(pattern)\n\n  const waitContext = yield getContext(WAIT_SAGA_CONTEXT)\n  if (waitContext) {\n    log.debug(`Finished wait (${++waitContext.numFinishedWaits} of ${waitContext.numTotalWaits})`)\n    log.trace(`Wait processed action: : ${pattern}`)\n  }\n\n  return result\n}\n\n/**\n * Saga that processes the wait effect.\n * @param {number} timeout The number of milliseconds to wait for the actions to be dispatched.\n * @param {Array.<(string|Function|Array)>} waitPatterns An array of actions or action selectors to wait for.\n */\nfunction * waitSaga (timeout, waitPatterns) {\n  const waitSagaContext = {\n    numFinishedWaits: 0,\n    numTotalWaits: waitPatterns.length\n  }\n\n  // Use a context to add debugging information for the child saga processTake to use.\n  yield setContext({\n    [WAIT_SAGA_CONTEXT]: waitSagaContext\n  })\n\n  // Fork all of the takes\n  const waitTasks = yield all(waitPatterns.map(pattern => fork(processTake, pattern)))\n\n  log.debug(`Waiting ${timeout} msecs for ${waitSagaContext.numTotalWaits} actions to happen.`)\n\n  // Race between the wait tasks and a delay.\n  let { results, timeoutResult } = yield race({\n    results: join(waitTasks),\n    timeoutResult: delay(timeout)\n  })\n\n  // If we have a timeout, gather partial results.\n  if (timeoutResult) {\n    // Get partial results from tasks\n    results = waitTasks.map(task => task.result())\n\n    // Cancel remaining wait tasks\n    yield cancel(waitTasks)\n\n    log.debug(\n      `Waiting for actions timed out. ${waitSagaContext.numFinishedWaits} actions were processed out of ${waitSagaContext.numTotalWaits}.`\n    )\n  } else {\n    log.debug(`Waiting for actions completed, all ${waitSagaContext.numTotalWaits} actions were processed`)\n  }\n\n  return {\n    timeout: !!timeoutResult,\n    results\n  }\n}\n\n/**\n * Type defining the result of a yielded wait effect.\n *\n * @typedef {Object} WaitEffectResult\n * @property {Array.<Action>} results The array of results for all of the patterns. This can contain partial results.\n *                                    Action patterns that have timed out will be undefined.\n * @property {boolean} timeout The wait timed out.\n */\n\n/**\n * A redux-saga wait effect. This effect will wait for a specified set of actions to occur an return the result\n * of each `take` effect performed on each action. If the wait times out, then the result will contain partial results\n * as well as mark the result as having timed out.\n *\n * @param {number} timeout\n * @param {Array.<ActionPattern>} waitPatterns The list of wait patterns.\n * @return A blocking redux-saga effect that will instruct the middleware to wait for the actions matching the wait\n *         patterns or until a timeout is reached. The result from the yielded will be of type {@link WaitEffectResult}.\n * @see {@link https://redux-saga.js.org/docs/api/#takepattern Redux-saga's take documentation} for supported patterns.\n */\nexport function waitFor (timeout, waitPatterns) {\n  return call(waitSaga, timeout, waitPatterns)\n}\n","// Users plugin.\nimport pluginInterface from '../interface/index'\nimport * as sagas from './sagas'\nimport contactsEvents from '../interface/events/contacts'\nimport usersEvents from '../interface/events/users'\n\n// Other plugins.\nimport { mapEvents } from '../../events/interface/actions'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\n\nconst capabilities = ['addContactAsBuddy', 'selfInfoAsUserSearch', 'advancedSearch']\n\nexport default function cpaasUsers () {\n  function * init () {\n    yield put(mapEvents({ ...contactsEvents, ...usersEvents }))\n  }\n\n  return {\n    name: pluginInterface.name,\n    sagas: Object.values(sagas),\n    api: pluginInterface.api,\n    reducer: pluginInterface.reducer,\n    capabilities,\n    init\n  }\n}\n","// Import the components of the interface.\nimport api from './api'\nimport reducer from './reducers'\n\n/**\n * This interface is for a users plugin.\n * @type {string}\n */\nconst name = 'users'\n\n// Export the interface as a single object.\nexport default { name, api, reducer }\n","import usersAPI from './users'\nimport contactsAPI from './contacts'\n\n/**\n * Users API index.\n * APIs are organized by their namespacing.\n * @method api\n * @param {Object} context\n * @param {Function} context.dispatch The redux store's dispatch function.\n * @param {Function} context.getState The redux store's getState function.\n * @param {Object} context.primitives Primitive types designed for use in the SDK\n * @return {Object} The plugin's API object.\n */\nexport default function api (context) {\n  return {\n    contacts: contactsAPI(context),\n    user: usersAPI(context)\n  }\n}\n","// Users plugin.\nimport * as actions from '../actions/users'\nimport { getUser, getUsers } from '../selectors'\n\nimport { logManager, API_LOG_TAG } from '../../../logs'\nconst log = logManager.getLogger('USERS')\n\nexport default function usersAPI ({ dispatch, getState, primitives }) {\n  /**\n   * The 'user' namespace allows access to user information for users within the same domain.\n   *\n   * @public\n   * @namespace user\n   */\n\n  /**\n   * The User data object.\n   *\n   * @public\n   * @static\n   * @typedef {Object} User\n   * @memberof user\n   * @property {user.UserID} userId The User ID of the user.\n   * @property {string} emailAddress The email address of the user.\n   * @property {string} firstName The first name of the user.\n   * @property {string} lastName The last name of the user.\n   * @property {string} photoURL The URL to get the photo of the user.\n   * @property {string} buddy Whether the user is a \"buddy\". Values can be \"true\" or \"false\".\n   */\n\n  return {\n    /**\n     * Fetches information about a User.\n     *\n     * The SDK will emit a {@link user.event:users:change users:change}\n     *    event after the operation completes. The User's information will then\n     *    be available.\n     *\n     * Information about an available User can be retrieved using the\n     *    {@link user.get} API.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method fetch\n     * @param {string} userId The User ID of the user.\n     */\n    fetch (userId) {\n      log.debug(API_LOG_TAG + 'user.fetch: ', userId)\n      dispatch(actions.fetchUser(userId))\n    },\n\n    /**\n     * Fetches information about the current User from directory.\n     * Compared to {@link user.fetch} API, this API retrieves additional user related information.\n     *\n     * The SDK will emit a {@link user.event:users:change users:change}\n     *    event after the operation completes. The User's information will then\n     *    be available.\n     *\n     * Information about an available User can be retrieved using the\n     *    {@link user.get} API.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method fetchSelfInfo\n     * @requires selfInfoAsUserProfile\n     */\n    /**\n     * Fetches information about the current User from directory.\n     * This API is simply a shortcut for the {@link user.fetch user.fetch(getUserInfo().identity)} API.\n     *\n     * The SDK will emit a {@link user.event:users:change users:change}\n     *    event after the operation completes. The User's information will then\n     *    be available.\n     *\n     * Information about an available User can be retrieved using the\n     *    {@link user.get} API.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method fetchSelfInfo\n     * @requires selfInfoAsUserSearch\n     */\n    fetchSelfInfo () {\n      log.debug(API_LOG_TAG + 'user.fetchSelfInfo')\n      dispatch(actions.fetchSelfInfo())\n    },\n\n    /**\n     * Retrieves information about a User, if available.\n     *\n     * See the {@link user.fetch} and {@link user.search} APIs for details about\n     *    making Users' information available.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method get\n     * @param {user.UserID} userId The User ID of the user.\n     * @returns {user.User} The User object for the specified user.\n     */\n    get (userId) {\n      log.debug(API_LOG_TAG + 'user.get: ', userId)\n      return getUser(getState(), userId)\n    },\n\n    /**\n     * Retrieves information about all available Users.\n     *\n     * See the {@link user.fetch} and {@link user.search} APIs for details about\n     *    making Users' information available.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method getAll\n     * @returns {Array<user.User>} An array of all the User objects.\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'user.getAll')\n      return getUsers(getState())\n    },\n\n    /**\n     * Searches the domain's directory for Users.\n     *\n     * Directory searching only supports one filter. If multiple filters are provided, only one of the filters will be used for the search.\n     * A search with no filters provided will return all users.\n     *\n     * The SDK will emit a {@link user.event:directory:change directory:change}\n     *    event after the operation completes. The search results will be\n     *    provided as part of the event, and will also be available using the\n     *    {@link user.get} and {@link user.getAll} APIs.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method search\n     * @requires limitedSearch\n     * @param {Object} filters The filter options for the search.\n     * @param {user.UserID} [filters.userId] Matches the User ID of the user.\n     * @param {string} [filters.name] Matches the firstName or lastName.\n     * @param {string} [filters.firstName] Matches the firstName.\n     * @param {string} [filters.lastName] Matches the lastName.\n     * @param {string} [filters.userName] Matches the userName.\n     * @param {string} [filters.phoneNumber] Matches the phoneNumber.\n     */\n\n    /**\n     * Searches the domain's directory for Users.\n     *\n     * The SDK will emit a {@link user.event:directory:change directory:change}\n     *    event after the operation completes. The search results will be\n     *    provided as part of the event, and will also be available using the\n     *    {@link user.get} and {@link user.getAll} APIs.\n     *\n     * @public\n     * @static\n     * @memberof user\n     * @method search\n     * @requires advancedSearch\n     * @param {Object} filters The filter options for the search.\n     * @param {user.UserID} [filters.userId] Matches the User ID of the user.\n     * @param {string} [filters.name] Matches the firstName or lastName.\n     * @param {string} [filters.firstName] Matches the firstName.\n     * @param {string} [filters.lastName] Matches the lastName.\n     * @param {string} [filters.userName] Matches the userName.\n     * @param {string} [filters.phoneNumber] Matches the phoneNumber.\n     * @param {Object} [options] Sorting options.\n     * @param {string} [options.sortBy] The User property to sort the results by. This can be any of the above listed filters.\n     * @param {string} [options.order] Order in which results are returned. Can be either \"asc\" or \"desc\".\n     * @param {number} [options.max] The maximum number of results to return.\n     * @param {string} [options.next] The pointer for a chunk of results, which may be returned from a previous query.\n     */\n    search (filters = {}, options = {}) {\n      log.debug(API_LOG_TAG + 'user.search: ', filters, options)\n      dispatch(actions.searchDirectory(filters, options))\n    }\n  }\n}\n","// Users plugin.\nimport * as actions from '../actions/contacts'\nimport { getContact, getContacts } from '../selectors'\n\nimport { logManager, API_LOG_TAG } from '../../../logs'\n\nconst log = logManager.getLogger('USERS')\n\nexport default function contactsAPI ({ dispatch, getState, primitives }) {\n  /**\n   * The 'contacts' namespace allows users to store personal contacts to their account.\n   *\n   * @public\n   * @namespace contacts\n   */\n\n  return {\n    /**\n     * Add a contact to a user's personal address book.\n     * Will trigger the `contacts:new` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method add\n     * @requires addContactAsFriend\n     * @param {Object} contact The contact object.\n     * @param {string} contact.primaryContact The primary userId for the contact\n     * @param {string} contact.contactId The contact's unique contact ID\n     * @param {string} [contact.firstName] The contact's first name\n     * @param {string} [contact.lastName] The contact's last name\n     * @param {string} [contact.photoUrl] The URL address identifying location of user's picture\n     * @param {string} [contact.emailAddress] The contact's email address\n     * @param {string} [contact.homePhone] The contact's home phone number\n     * @param {string} [contact.workPhone] The contact's business phone number\n     * @param {string} [contact.mobilePhone] The contact's mobile phone number\n     * @param {string} [contact.conferenceURL] Conference URL and access code for this user's address book entry\n     * @param {string} [contact.fax] The user's fax number\n     * @param {string} [contact.pager] The user's pager number\n     * @param {string} [contact.groupList] The name of the contact list for which to add this contact to (\"friends\" by default)\n     * @param {boolean} [contact.friendStatus] Indicates whether or not the contact is a friend of the user\n     */\n    /**\n     * Add a contact to a user's personal address book.\n     * Will trigger the `contacts:new` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method add\n     * @requires addContactAsBuddy\n     * @param {Object} contact The contact object.\n     * @param {string} contact.primaryContact The primary userId for the contact\n     * @param {string} contact.contactId The contact's unique contact ID\n     * @param {string} [contact.firstName] The contact's first name\n     * @param {string} [contact.lastName] The contact's last name\n     * @param {string} [contact.email] The contact's email address\n     * @param {string} [contact.homePhoneNumber] The contact's home phone number\n     * @param {string} [contact.businessPhoneNumber] The contact's business phone number\n     * @param {string} [contact.mobilePhoneNumber] The contact's mobile phone number\n     * @param {string} [contact.list] The name of the contact list for which to add this contact to (\"friends\" by default)\n     * @param {boolean} [contact.buddy] Indicates whether or not the contact is a friend of the user\n     */\n    add (contact) {\n      log.debug(API_LOG_TAG + 'contacts.add: ', contact)\n      dispatch(actions.addContact(contact))\n    },\n\n    /**\n     * Retrieves local information about a contact.\n     *\n     * @public\n     * @memberof contacts\n     * @method get\n     * @param {string} contactId The unique contact ID of the contact.\n     * @return {Object} Contact information.\n     */\n    get (contactId) {\n      log.debug(API_LOG_TAG + 'contacts.get: ', contactId)\n      return getContact(getState(), contactId)\n    },\n\n    /**\n     * Retrieves local information about all contacts.\n     *\n     * @public\n     * @memberof contacts\n     * @method getAll\n     * @return {Array} List of contact information.\n     */\n    getAll () {\n      log.debug(API_LOG_TAG + 'contacts.getAll')\n      return getContacts(getState())\n    },\n\n    /**\n     * Refreshes the local information about contacts. This will get new contacts from the platform.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method refresh\n     */\n    refresh () {\n      log.debug(API_LOG_TAG + 'contacts.refresh')\n      dispatch(actions.refreshContacts())\n    },\n\n    /**\n     * Remove a contact from a personal address book.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method remove\n     * @param  {string} id The Id of the contact that will be removed.\n     */\n    remove (id) {\n      log.debug(API_LOG_TAG + 'contacts.remove: ', id)\n      dispatch(actions.removeContact(id))\n    },\n\n    /**\n     * Update a contact from the user's personal address book.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method update\n     * @requires addContactAsFriend\n     * @param {Object} contact The contact object.\n     * @param {string} contact.primaryContact The primary userId for the contact\n     * @param {string} contact.contactId The contact's unique contact ID\n     * @param {string} [contact.firstName] The contact's first name\n     * @param {string} [contact.lastName] The contact's last name\n     * @param {string} [contact.photoUrl] The URL address identifying location of user's picture\n     * @param {string} [contact.emailAddress] The contact's email address\n     * @param {string} [contact.homePhone] The contact's home phone number\n     * @param {string} [contact.workPhone] The contact's business phone number\n     * @param {string} [contact.mobilePhone] The contact's mobile phone number\n     * @param {string} [contact.conferenceURL] Conference URL and access code for this user's address book entry\n     * @param {string} [contact.fax] The user's fax number\n     * @param {string} [contact.pager] The user's pager number\n     * @param {string} [contact.groupList] The name of the contact list for which to add this contact to (\"friends\" by default)\n     * @param {boolean} [contact.friendStatus] Indicates whether or not the contact is a friend of the user\n     */\n    /**\n     * Update a contact from the user's personal address book.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method update\n     * @requires addContactAsBuddy\n     * @param {Object} contact The contact object.\n     * @param {string} contact.primaryContact The primary userId for the contact\n     * @param {string} contact.contactId The contact's unique contact ID\n     * @param {string} [contact.firstName] The contact's first name\n     * @param {string} [contact.lastName] The contact's last name\n     * @param {string} [contact.email] The contact's email address\n     * @param {string} [contact.homePhoneNumber] The contact's home phone number\n     * @param {string} [contact.businessPhoneNumber] The contact's business phone number\n     * @param {string} [contact.mobilePhoneNumber] The contact's mobile phone number\n     * @param {string} [contact.list] The name of the contact list for which to add this contact to (\"friends\" by default)\n     * @param {boolean} [contact.buddy] Indicates whether or not the contact is a friend of the user\n     */\n    update (contact) {\n      let objectToUse\n      if (typeof contact === 'string' || contact instanceof String) {\n        log.warn(\n          API_LOG_TAG +\n            'contacts.update: Call to update(contactId, contact) has been deprecated and so it will be removed. Consider using: update(contact), instead.'\n        )\n        // second argument is supposed to be actual contact obj\n        objectToUse = arguments[1]\n      } else {\n        // Assume first param is the actual contact obj\n        objectToUse = contact\n      }\n      log.debug(API_LOG_TAG + 'contacts.update: ', objectToUse)\n      dispatch(actions.updateContact(objectToUse))\n    },\n\n    /**\n     * Fetch a contact from the user's personal address book.\n     * Will trigger the `contacts:change` event.\n     *\n     * @public\n     * @memberof contacts\n     * @method fetch\n     * @param  {string} contactId The unique contact ID of the contact.\n     */\n    fetch (contactId) {\n      log.debug(API_LOG_TAG + 'contacts.fetch: ', contactId)\n      dispatch(actions.fetchContact(contactId))\n    }\n  }\n}\n","import contactsReducers from './contacts'\nimport usersReducers from './users'\nimport { handleActions } from 'redux-actions'\n\n/*\n * Combine all of reducers into a single reducer, defaulting to an empty Object for each\n * substate of contacts and users\n */\nconst reducer = handleActions(\n  { ...contactsReducers, ...usersReducers },\n  {\n    errors: [],\n    contacts: {},\n    users: {},\n    isPending: true\n  }\n)\nexport default reducer\n","import * as actionTypes from '../actions/actionTypes'\nimport { unset } from 'lodash/fp'\n\nconst reducers = {}\n\nconst contactsPendingReducer = {\n  next (state) {\n    return {\n      ...state,\n      isPending: true\n    }\n  }\n}\n\nreducers[actionTypes.ADD_CONTACT] = contactsPendingReducer\nreducers[actionTypes.REFRESH_CONTACTS] = contactsPendingReducer\nreducers[actionTypes.FETCH_CONTACT] = contactsPendingReducer\nreducers[actionTypes.UPDATE_CONTACT] = contactsPendingReducer\n\nreducers[actionTypes.ADD_CONTACT_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      contacts: {\n        ...state.contacts,\n        [action.payload.contactId]: action.payload\n      },\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.REFRESH_CONTACTS_FINISH] = {\n  next (state, action) {\n    const contacts = {}\n    for (const contact of action.payload) {\n      contacts[contact.contactId] = contact\n    }\n    return {\n      ...state,\n      contacts: contacts,\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_CONTACT_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      contacts: {\n        ...state.contacts,\n        [action.payload.contactId]: action.payload\n      },\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.REMOVE_CONTACT_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      contacts: unset(action.payload, state.contacts), // Remove the property from state.contacts whose key is equal to action.payload\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.UPDATE_CONTACT_FINISH] = {\n  next (state, action) {\n    return {\n      ...state,\n      contacts: {\n        ...state.contacts,\n        [action.payload.contactId]: action.payload\n      },\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nexport default reducers\n","import * as actionTypes from '../actions/actionTypes'\n\nconst reducers = {}\n\nreducers[actionTypes.FETCH_USER_FINISH] = {\n  next (state, action) {\n    const user = action.payload\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        [user.userId]: user\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.FETCH_SELF_INFO_FINISH] = {\n  next (state, action) {\n    const self = action.payload\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        [self.userId]: self\n      }\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nreducers[actionTypes.SEARCH_DIRECTORY_FINISH] = {\n  next (state, action) {\n    const users = {}\n    for (const user of action.payload) {\n      users[user.userId] = user\n    }\n    return {\n      ...state,\n      users: {\n        ...state.users,\n        ...users\n      },\n      isPending: false\n    }\n  },\n  throw (state, action) {\n    return {\n      ...state,\n      isPending: false,\n      errors: state.errors.concat(action.payload)\n    }\n  }\n}\n\nexport default reducers\n","/**\n * Users saga index.\n * Defines which actions trigger which sagas.\n */\n\n// Users plugin.\nimport * as contactsSagas from './contacts'\nimport * as usersSagas from './users'\nimport * as actionTypes from '../../interface/actions/actionTypes'\n\n// Libraries.\nimport { takeEvery } from 'redux-saga/effects'\n\n// Contacts sagas\n\n/**\n * addContact\n *\n * Add a contact to the personal address book of the subscribed user.\n * @method addContact\n */\nexport function * addContact () {\n  yield takeEvery(actionTypes.ADD_CONTACT, contactsSagas.addContact)\n}\n\n/**\n * updateContact\n *\n * Update a contact to the personal address book of the subscribed user.\n * @method updateContact\n */\nexport function * updateContact () {\n  yield takeEvery(actionTypes.UPDATE_CONTACT, contactsSagas.updateContact)\n}\n\n/**\n * removeContact\n *\n * Remove a contact from the currently subscribed user's address book.\n * @method removeContact\n */\nexport function * removeContact () {\n  yield takeEvery(actionTypes.REMOVE_CONTACT, contactsSagas.removeContact)\n}\n\n/**\n * fetchContact\n *\n * Fetch a contact from the personal address book of the subscribed user.\n * @method fetchContact\n */\nexport function * fetchContact () {\n  yield takeEvery(actionTypes.FETCH_CONTACT, contactsSagas.fetchContact)\n}\n\n/**\n * refreshContacts\n *\n * Refresh the contacts of the currently subscribed user.\n * @method refreshContacts\n */\nexport function * refreshContacts () {\n  yield takeEvery(actionTypes.REFRESH_CONTACTS, contactsSagas.refreshContacts)\n}\n\n// Users sagas\n\n/**\n * searchDirectory\n *\n * Search the user directory.\n * @method searchDirectory\n */\nexport function * searchDirectory () {\n  yield takeEvery(actionTypes.SEARCH_DIRECTORY, usersSagas.searchDirectory)\n}\n\n/**\n * fetchUser\n *\n * Fetch a user from the directory service.\n * @method fetchUser\n */\nexport function * fetchUser () {\n  yield takeEvery(actionTypes.FETCH_USER, usersSagas.fetchUser)\n}\n\n/**\n * fetchSelfInfo\n *\n * Fetch user information for the currently logged in user.\n * @method fetchSelfInfo\n */\nexport function * fetchSelfInfo () {\n  yield takeEvery(actionTypes.FETCH_SELF_INFO, usersSagas.fetchSelfInfo)\n}\n","// Users plugin\nimport * as actions from '../../interface/actions/contacts'\nimport {\n  addContactRequest,\n  updateContactRequest,\n  deleteContactRequest,\n  fetchContactRequest,\n  refreshContactsRequest\n} from '../requests/contacts'\n\n// Other plugins.\nimport { getRequestInfo } from '../../../auth/interface/selectors'\n\n// Helpers\nimport { remoteContactFromLocal, localContactFromRemote } from '../utils'\nimport BasicError from '../../../errors'\nimport { usersCodes } from '../../../errors/codes'\n\n// Libraries\nimport { call, put, select } from 'redux-saga/effects'\n\n/**\n * Add a contact to the Address Book\n * @method addContact\n * @param {Object} action an action of type ADD_CONTACT\n */\nexport function * addContact (action) {\n  const requestInfo = yield select(getRequestInfo, 'cpaas')\n  const contactBody = remoteContactFromLocal(action.payload, true)\n  const res = yield call(addContactRequest, requestInfo, JSON.stringify(contactBody))\n  if (res.error) {\n    yield put(actions.addContactFinish({ error: res.error }))\n  } else {\n    yield put(actions.addContactFinish({ contact: action.payload }))\n  }\n}\n\n/**\n * Update a contact in the address book\n * @method updateContact\n * @param {Object} action an action of type UPDATE_CONTACT\n */\nexport function * updateContact (action) {\n  // validate\n  if (!action.payload.contact.contactId) {\n    // contactId is a mandatory field\n    yield put(\n      actions.updateContactFinish({\n        error: new BasicError({\n          code: usersCodes.INVALID_PARAM,\n          message: 'Missing property: contactId'\n        })\n      })\n    )\n    return\n  }\n\n  const requestInfo = yield select(getRequestInfo, 'cpaas')\n  const contactBody = remoteContactFromLocal(action.payload.contact, false)\n  const res = yield call(\n    updateContactRequest,\n    requestInfo,\n    action.payload.contact.contactId,\n    JSON.stringify(contactBody)\n  )\n  if (res.error) {\n    yield put(actions.updateContactFinish({ error: res.error }))\n  } else {\n    yield put(actions.updateContactFinish({ contact: action.payload.contact }))\n  }\n}\n\n/**\n * Remove a contact from the address book\n * @method removeContact\n * @param {Object} action an action of type REMOVE_CONTACT\n */\nexport function * removeContact (action) {\n  const requestInfo = yield select(getRequestInfo, 'cpaas')\n  const res = yield call(deleteContactRequest, requestInfo, action.payload)\n  if (res.error) {\n    yield put(actions.removeContactFinish({ error: res.error }))\n  } else {\n    yield put(actions.removeContactFinish({ contactId: action.payload }))\n  }\n}\n\n/**\n * Fetch a contact from the personal address book of the subscribed user.\n * @method fetchContact\n * @param {Object} action an action of type FETCH_CONTACT\n */\nexport function * fetchContact (action) {\n  const requestInfo = yield select(getRequestInfo, 'cpaas')\n  const res = yield call(fetchContactRequest, requestInfo, action.payload)\n  if (res.error) {\n    yield put(actions.fetchContactFinish({ error: res.error }))\n  } else {\n    yield put(actions.fetchContactFinish({ contact: localContactFromRemote(res.result) }))\n  }\n}\n\n/**\n * Refresh the state's contacts by fetching the latest contacts from the user's address book\n * @method refreshContacts\n * @param {Object} action an action of type REFRESH_CONTACTS\n */\nexport function * refreshContacts (action) {\n  const requestInfo = yield select(getRequestInfo, 'cpaas')\n  const res = yield call(refreshContactsRequest, requestInfo)\n  if (res.error) {\n    yield put(actions.refreshContactsFinish({ error: res.error }))\n  } else {\n    yield put(actions.refreshContactsFinish({ contacts: res.result.map(localContactFromRemote) }))\n  }\n}\n","// Helpers.\nimport request from '../../../request/effects'\nimport { handleRequestError } from '../../../common/helpers/handleRequestError'\nimport BasicError from '../../../errors'\nimport { usersCodes } from '../../../errors/codes'\n\n/**\n * addContactRequest\n *\n * Perform an HTTP request to create one contact resource\n * @method addContactRequest\n * @param {Object} requestInfo Platform connection and user info for the request\n * @param {string} [body] The request body for a POST request\n */\nexport function * addContactRequest (requestInfo, body) {\n  const response = yield request({\n    url: `${requestInfo.baseURL}/cpaas/addressbook/v1/${requestInfo.username}/default/contacts`,\n    body: body,\n    method: 'POST',\n    headers: {}\n  })\n\n  if (response.error) {\n    // Handle errors from the server.\n    return {\n      error: handleRequestError(response, 'Add Contact Request')\n    }\n  } else if (response.payload.body) {\n    return { result: response.payload.body.contact }\n  } else {\n    // No error, but response does not contain a body\n    return { result: response.payload.result }\n  }\n}\n\n/**\n * updateContactRequest\n *\n * Perform an HTTP request to update one contact resource\n * @method updateContactRequest\n * @param {Object} requestInfo Platform connection and user info for the request\n * @param {string} [body] The request body for a POST request\n */\nexport function * updateContactRequest (requestInfo, contactId, body) {\n  const response = yield request({\n    url: `${requestInfo.baseURL}/cpaas/addressbook/v1/${requestInfo.username}/default/contacts/${contactId}`,\n    body: body,\n    method: 'PUT',\n    headers: {}\n  })\n\n  if (response.error) {\n    // Handle errors from the server.\n    return {\n      error: handleRequestError(response, 'Update Contact Request')\n    }\n  } else if (response.payload.body) {\n    return { result: response.payload.body.contact }\n  } else {\n    // No error, but no body in the response\n    return { result: response.payload.result }\n  }\n}\n\n/**\n * deleteContactRequest\n *\n * Send an HTTP DELETE request to delete one contact\n * @method deleteContactRequest\n * @param {Object} requestInfo Platform connection and user information necessary to create the request\n * @param {string} contactId The uniquely identifier for the contact\n */\nexport function * deleteContactRequest (requestInfo, contactId) {\n  const url = `${requestInfo.baseURL}/cpaas/addressbook/v1/${requestInfo.username}/default/contacts/${contactId}`\n\n  const options = {\n    method: 'DELETE',\n    responseType: 'none'\n  }\n\n  const response = yield request({ url, ...options })\n\n  if (response.error) {\n    // Handle errors from the server.\n    return {\n      error: handleRequestError(response, 'Delete Contact Request')\n    }\n  } else {\n    // Successful DELETE requests sent to this endpoint do not return a body, thus we will return a boolean\n    return { result: true }\n  }\n}\n\n/**\n * fetchContactRequest\n *\n * Perform an HTTP request to retrieve one contact resource\n * @method fetchContactRequest\n * @param {Object} requestInfo Platform connection and user info for the request\n * @param {string} [contactId] The unique identifier of the contact\n */\nexport function * fetchContactRequest (requestInfo, contactId) {\n  const response = yield request({\n    url: `${requestInfo.baseURL}/cpaas/addressbook/v1/${requestInfo.username}/default/contacts/${contactId}`,\n    method: 'GET'\n  })\n\n  if (response.error) {\n    // Handle errors from the server.\n    return {\n      error: handleRequestError(response, 'Fetch Contact Request')\n    }\n  } else if (response.payload.body) {\n    return { result: response.payload.body.contact }\n  } else {\n    // No error, but response does not contain a body\n    return { result: true }\n  }\n}\n\n/**\n * refreshContactsRequest\n *\n * Perform an HTTP request to retrieve all of a user's address book contacts\n * @method refreshContactsRequest\n * @param {Object} requestInfo Platform connection and user info for the request\n */\nexport function * refreshContactsRequest (requestInfo) {\n  const url = `${requestInfo.baseURL}/cpaas/addressbook/v1/${requestInfo.username}/default/contacts`\n  const options = { method: 'GET' }\n\n  const response = yield request({ url, ...options })\n\n  if (response.error) {\n    // Handle errors from the server.\n    return {\n      error: handleRequestError(response, 'Refresh Contact Request')\n    }\n  } else if (response.payload.body) {\n    return { result: response.payload.body.contactCollection.contact }\n  } else {\n    // Response does not contain an error, but no body was provided. As this request expects a body, we treat it as an error.\n    return {\n      error: new BasicError({\n        message: 'Request succeeded but no body was provided in the response',\n        code: usersCodes.UNKNOWN\n      })\n    }\n  }\n}\n","// Users plugin\nimport * as actions from '../../interface/actions/users'\nimport { directorySearch } from '../requests/users'\n\n// Other plugins.\nimport { getIdentity, getRequestInfo } from '../../../auth/interface/selectors'\nimport { logManager } from '../../../logs'\n\n// Helpers\nimport BasicError from '../../../errors'\nimport { usersCodes } from '../../../errors/codes'\n\n// Libraries\nimport { call, put, select } from 'redux-saga/effects'\nimport { localUserFromRemote } from '../utils'\n\n// Constants\nimport { platforms } from '../../../constants'\n\nconst log = logManager.getLogger('Users')\n\n/**\n * Search the directory for users\n * @method searchDirectory\n * @param {Object} action an action of type SEARCH_DIRECTORY\n */\nexport function * searchDirectory (action) {\n  const { filters, options } = action.payload\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const res = yield call(directorySearch, requestInfo, { ...filters, ...options })\n  if (res.error) {\n    const error = new BasicError({\n      code: usersCodes.DIRECTORY_REQUEST_FAIL,\n      message: res.error.message\n    })\n    yield put(actions.searchDirectoryFinish({ error }))\n  } else {\n    const users = res.directoryItem.map(localUserFromRemote)\n    yield put(actions.searchDirectoryFinish({ users }))\n  }\n}\n\n/**\n * fetch one user by their userId\n * @method fetchUser\n * @param {Object} action an action of type FETCH_USER\n */\nexport function * fetchUser (action) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const res = yield call(directorySearch, requestInfo, { userId: action.payload, sortBy: 'name', order: 'asc' })\n  if (res.error) {\n    const error = new BasicError({\n      code: usersCodes.DIRECTORY_REQUEST_FAIL,\n      message: 'Directory search request resulted in an error being returned from the server'\n    })\n    yield put(actions.fetchUserFinish({ error }))\n  } else {\n    if (res.directoryItem.length > 0) {\n      if (res.directoryItem.length > 1) {\n        log.info('Fetch User request returned more than 1 user', res.directoryItem)\n      }\n      yield put(actions.fetchUserFinish(localUserFromRemote(res.directoryItem[0])))\n    }\n  }\n}\n\n/**\n * Fetch the user information from the directory for the current user.\n * This API is simply a shortcut for the {@link user.fetch user.fetch(getUserInfo().identity)} API.\n *\n * @method fetchSelfInfo\n * @param {Object} action an action of type FETCH_SELF_INFO\n */\nexport function * fetchSelfInfo (action) {\n  const requestInfo = yield select(getRequestInfo, platforms.CPAAS)\n  const identity = yield select(getIdentity)\n\n  const res = yield call(directorySearch, requestInfo, {\n    userName: identity.split('@')[0],\n    sortBy: 'name',\n    order: 'asc'\n  })\n  if (res.error) {\n    const error = new BasicError({\n      code: usersCodes.DIRECTORY_REQUEST_FAIL,\n      message: 'Directory search request resulted in an error being returned from the server'\n    })\n    yield put(actions.fetchSelfInfoFinish({ error }))\n  } else {\n    if (res.directoryItem.length > 0) {\n      if (res.directoryItem.length > 1) {\n        log.info('Fetch Self Info returned more than 1 user', res.directoryItem)\n      }\n      yield put(actions.fetchSelfInfoFinish(localUserFromRemote(res.directoryItem[0])))\n    }\n  }\n}\n","// Helpers.\nimport request from '../../../request/effects'\nimport { handleRequestError } from '../../../common/helpers/handleRequestError'\n\n// Libraries\nimport { logManager } from '../../../logs'\nimport { mapKeys, pick } from 'lodash/fp'\n\nconst log = logManager.getLogger('USERS')\n\n/**\n * directorySearch\n *\n * Composes and executes a REST request to the directory service\n * @method directorySearch\n * @param {Object} requestInfo\n * @param {Object} params\n */\nexport function * directorySearch (requestInfo, params = {}) {\n  const directoryId = params.directoryId || 'default'\n  const method = 'GET'\n  const url = `${requestInfo.baseURL}/cpaas/directory/v1/${requestInfo.username}/${directoryId}/search`\n  const queryParams = mapKeys(mapSearchKey, pick(validKeys, params))\n\n  const response = yield request({ url, queryParams, method })\n\n  if (response.error) {\n    // Handle the error similarly regardless of whether or not the response has a body value\n    const error = handleRequestError(response, 'User Request')\n    log.debug('Error performing directorySearch request', error)\n    return {\n      error: error\n    }\n  } else if (response.payload.body) {\n    // Request was successful\n    return response.payload.body.directoryItemList\n  } else {\n    // Request was successful but no body was provided\n    return { result: true }\n  }\n}\n\n/**\n * valid directory search query keys\n *\n * @type {Array}\n */\nconst validKeys = [\n  'name',\n  'firstName',\n  'lastName',\n  'userId',\n  'userName',\n  'phoneNumber',\n  'order',\n  'sortBy',\n  'max',\n  'next'\n]\n\n/**\n * Helper function to return a validated parameter for directory searches\n * @param {string} key\n * @returns {string}\n */\nfunction mapSearchKey (key) {\n  switch (key) {\n    case 'userId':\n      return 'userName'\n    default:\n      return key\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\nimport * as eventTypes from './eventTypes'\n\nconst eventsMap = {}\n\nconst contactNewEvent = action => {\n  return {\n    type: eventTypes.CONTACTS_CHANGE,\n    args: action.payload\n  }\n}\n\nconst contactsChangeEvent = action => {\n  if (action.error) {\n    return {\n      type: eventTypes.CONTACTS_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.CONTACTS_CHANGE\n    }\n  }\n}\n\nconst addContactFinishActions = action => {\n  if (action.error) {\n    return contactsChangeEvent(action)\n  }\n  return [contactNewEvent(action), contactsChangeEvent(action)]\n}\n\neventsMap[actionTypes.ADD_CONTACT_FINISH] = addContactFinishActions\neventsMap[actionTypes.REFRESH_CONTACTS_FINISH] = contactsChangeEvent\neventsMap[actionTypes.REMOVE_CONTACT_FINISH] = contactsChangeEvent\neventsMap[actionTypes.UPDATE_CONTACT_FINISH] = contactsChangeEvent\neventsMap[actionTypes.FETCH_CONTACT_FINISH] = contactsChangeEvent\n\nexport default eventsMap\n","import * as actionTypes from '../actions/actionTypes'\nimport * as eventTypes from './eventTypes'\n\nconst eventsMap = {}\n\neventsMap[actionTypes.SEARCH_DIRECTORY_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.DIRECTORY_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.DIRECTORY_CHANGE,\n      args: { results: action.payload }\n    }\n  }\n}\n\neventsMap[actionTypes.FETCH_USER_FINISH] = eventsMap[actionTypes.FETCH_SELF_INFO_FINISH] = function (action) {\n  if (action.error) {\n    return {\n      type: eventTypes.USERS_ERROR,\n      args: { error: action.payload }\n    }\n  } else {\n    return {\n      type: eventTypes.USERS_CHANGE,\n      args: { results: [action.payload] }\n    }\n  }\n}\nexport default eventsMap\n","// Request plugin.\nimport { defaultOptions, parseOptions } from './configs'\nimport watchRequests from './sagas'\nimport eventsMap from './interface/events'\nimport { api, name } from './interface'\n\n// Other plugins.\nimport { update as updateConfig } from '../config/interface/actions'\nimport { mapEvents } from '../events/interface/actions'\n\n// Utils.\nimport { mergeValues } from '../common/utils'\n\n// Libraries.\nimport { put } from 'redux-saga/effects'\n\n/*\n * HTTP request plugin.\n */\nexport default pluginFactory()\n\n/*\n * Platform-specific request plugins.\n *    Same base REST behaviour as the generic request plugin, with some extra\n *    handling of a response.\n */\nexport const linkRequest = pluginFactory('link')\nexport const ucRequest = pluginFactory('uc')\nexport const cpaasRequest = pluginFactory('cpaas')\n\n/**\n * Factory function for creating a Request Plugin.\n *    Allows for specifying which platform the requests will be made to. This\n *    adds special handling of responses to check for special-case issues.\n * @param  {string} [platform] The platform this plugin is for.\n * @return {Function} The actual Plugin creator function.\n */\nfunction pluginFactory (platform) {\n  // Generate the saga for this platform, or a generic saga if platform is undefined.\n  const saga = watchRequests(platform)\n\n  return function request (options = {}) {\n    options = mergeValues(defaultOptions, options)\n    parseOptions(options)\n\n    function * init () {\n      yield put(updateConfig(options, name))\n      yield put(mapEvents(eventsMap))\n    }\n\n    return {\n      sagas: [saga],\n      init,\n      capabilities: platform ? ['restAuthorization'] : [],\n      api,\n      name\n    }\n  }\n}\n","// Parse and/or Validate\nimport { validation as v8n, parse } from '../../src/common/validation'\n\n/**\n * Configurable properties 'published' by this \"Request\" plugin.\n * NOTE: Do NOT expose the config properties (related to this plugin) to the public API documentation.\n *\n * @property {boolean} [injectAgentVersionHeader=true] Option to automatically inject an agent version header to every REST request.\n *            This header is used to help with diagnostics and analytics in a completely anonymous fashion.\n *\n * @property {string} [customAgentVersionHeaderSuffix=''] Additional custom information that can be appended to the agent version header's value.\n *           This additional suffix value is only used when injectAgentVersionHeader property is enabled.\n */\nexport const defaultOptions = {\n  injectAgentVersionHeader: true,\n  customAgentVersionHeaderSuffix: ''\n}\n\nconst v8nValidation = v8n.schema({\n  injectAgentVersionHeader: v8n.boolean()\n})\nexport const parseOptions = parse('request', v8nValidation)\n","// Request plugin.\nimport * as actionTypes from './interface/actionTypes'\nimport * as actions from './interface/actions'\nimport makeRequest from './makeRequest'\nimport * as authorizations from './authorization'\nimport { sanitizeRequest } from './utils'\n\n// Other plugins.\nimport { logManager } from '../logs'\n\n// Helpers.\nimport { getVersion } from '../common/version'\n\n// Libraries.\nimport { call, put, takeEvery } from 'redux-saga/effects'\n\n/*\n * Saga-factory for creating the `watchRequests` saga.\n *    If `platform` is undefined, then no extra, platform-specific handling is done.\n */\nexport default function watchRequests (platform) {\n  // Only allow our known platforms or undefined (for base).\n  if (!['link', 'uc', 'cpaas', undefined].includes(platform)) {\n    throw Error('Invalid platform specific for requests.')\n  }\n  return function * watchRequests () {\n    yield takeEvery(actionTypes.REQUEST, handleRequest, platform)\n  }\n}\n\n/*\n * Generator that handles a request action with standard HTTP handling features and reports\n * a requestFinished action when the request is done.\n *\n * @param {string} [platform] The platform being used.\n * @param {FluxStandardAction} action The action to handle.\n */\nfunction * handleRequest (platform, action) {\n  const log = logManager.getLogger('REQUEST', action.meta.requestId)\n\n  const logOptions = sanitizeRequest(action.payload)\n  log.debug(`Making REST request ${action.meta.requestId}.`, logOptions)\n\n  // Make the request based on the action\n  var result = yield call(makeRequest, action.payload, action.meta.requestId)\n\n  log.debug(`Received REST response ${action.meta.requestId}.`, result)\n\n  // If the platform was specified and this is not a 3.X build, perform the\n  //    authorization check side-effect.\n  if (platform && !getVersion().startsWith('3')) {\n    // Call the 'authorization' function specific for this platform.\n    //    They're all named ${platform}Authorization so it's easier to call them.\n    const error = authorizations[`${platform}Authorization`](result)\n\n    if (error) {\n      yield put(actions.authorizationError(error))\n    }\n  }\n\n  yield put(actions.response(action.meta.requestId, result, !!result.error))\n}\n\n// begin-test-code\nexport const __testonly__ = { watchRequests, handleRequest }\n// end-test-code\n","// Other plugins.\nimport { logManager } from '../logs'\n\n// Utils.\nimport { toQueryString } from '../common/utils'\n\n/**\n * The possible response data types that can be handled.\n */\nconst responseTypes = Object.freeze({\n  json: 'json',\n  blob: 'blob',\n  text: 'text',\n  none: 'none'\n})\n\n/**\n * Make a request with the specified options. The options is very similar to the options passed to the GlobalFetch\n * method except that is also accepts the url as part of the options.\n * Reference: https://developer.mozilla.org/en-US/docs/Web/API/Request\n *\n * Currently this processes the request and assumes nothing about the response.\n * - If the response has a body, it will always be parsed and forwarded on.\n *      - If no body, then use an empty object in its place.\n * - If the fetch succeeded, the response \"results\" will always be forwarded on,\n *      even if the response is outside of the 200-299 range.\n *      - Because some backends provide more detailed error info (that a saga\n *        may need) as part of the body, rather than just the response status.\n * - If the fetch fails, return with the fetch failure information.\n *\n * @param {Object} options Options to make the request with.\n * @param {string} options.url The URL to make the request to.\n * @param {Object} [options.queryParams] The parameters to be added to the query string\n * @param {string} [options.responseType='json] The expected data type of the response body.\n * @param {Blob|BufferSource|FormData|UrlSearchParams|string} [options.body] The request body\n * @return {Promise} A promise that resolves with a custom response object.\n */\nexport default async function makeRequest (options, requestId) {\n  const log = logManager.getLogger('REQUEST', requestId)\n\n  /*\n   * Check the provided options to ensure they are valid before making the request.\n   */\n  const error = validateOptions(options)\n  if (error) {\n    log.info(error.result.message)\n    return error\n  }\n\n  // Extract and remove the non-fetch API properties.\n  const { url, queryParams, responseType = 'json', ...fetchOptions } = options\n\n  // Grab that last part of the URL (after the last /) to be logged.\n  let endUrl = url.match(/([^/]*)$/)[0]\n  // Cut it short if it's too long, since this should be human-readable.\n  endUrl = endUrl.length > 15 ? endUrl.substring(0, 15) + '...' : endUrl\n  log.info(`Making ${fetchOptions.method} ${endUrl} request.`)\n\n  let response\n  /*\n   * Make the request. Scenarios to check for:\n   *  1. Fetch failed.\n   *  2. Fetch succeeded and is ok, with no response body.\n   *  3. Fetch succeeded and is ok, with expected response type.\n   *  4. Fetch succeeded and is ok, with unexpected response type.\n   *  5. Fetch succeeded but is not ok.\n   */\n  try {\n    response = await fetch(url + toQueryString(queryParams), fetchOptions)\n  } catch (err) {\n    // Scenario 1: Fetch failed.\n    log.info(`Failed to make request, caused by ${err.message}`)\n    return makeResponse({ error: 'FETCH' }, { code: err.name, message: err.message })\n  }\n\n  // Basic information for the request result.\n  const result = {\n    ok: response.ok,\n    code: response.status,\n    message: response.statusText\n  }\n\n  if (response.ok) {\n    if (response.status === 204) {\n      /*\n       * A `204 (No Content)` response indicates a success, but with no content to return.\n       * Avoid parsing the response because there isn't one.\n       */\n      // Scenario 2: Response is ok, with no response body.\n      log.info(`Finished request with successful response (status ${response.status}).`)\n      return makeResponse(undefined, { body: {}, ...result })\n    }\n\n    const data = await parseBody(response, responseType)\n    if (data instanceof Error) {\n      // Scenario 4: Response is ok, with an unexpected type.\n      log.error(`Failed to parse with response type: ${responseType}. Error: ${data}`)\n      return makeResponse({ error: 'REQUEST' }, { code: data.name, message: data.message })\n    } else {\n      // Scenario 3: Response is ok, with an expected type.\n      log.info(`Finished request with successful response (status ${response.status}).`)\n      return makeResponse(undefined, { body: data, ...result })\n    }\n  } else {\n    // Scenario 5: Response is not ok.\n    let contentType\n    // Check the Content-Type of the response.\n    try {\n      contentType = await response.headers.get('content-type')\n    } catch (err) {\n      log.debug(`Failed to get content-type:${err.message}.`)\n    }\n    /*\n     * Handle a SPiDR special-case error where the response body is a HTML page...\n     * Throw away the body and simply report it as 'Forbidden'.\n     */\n    if (response.status === 403 && contentType.includes('html')) {\n      return makeResponse({ error: 'REQUEST' }, result)\n    }\n\n    /*\n     * Try to parse the response as JSON, and if successful, include\n     * it in the returned error. otherwise, provide an empty object instead.\n     */\n    let responseBody\n    try {\n      responseBody = await response.json()\n    } catch (err) {\n      responseBody = {}\n      log.debug('Failed to parse response:', err.message)\n    }\n    return makeResponse({ error: 'REQUEST' }, { body: responseBody, ...result })\n  }\n}\n\n/**\n * Checks for the provided options to be considered valid before making the\n *    request. If an option is invalid, an error response will be returned.\n * @param  {Object} options\n * @return {Response|undefined}\n */\nfunction validateOptions (options) {\n  const { url, responseType } = options\n\n  if (!url || typeof url !== 'string') {\n    const invalidUrlMessage = `Invalid request url; expected url of type string but received ${url} instead`\n    return makeResponse({ error: 'REQUEST_URL', message: invalidUrlMessage })\n  }\n\n  /*\n   * If an expected responseType was provided, it should be one of the types\n   *    that we know how to handle.\n   */\n  if (responseType && !responseTypes.hasOwnProperty(responseType)) {\n    const invalidResponseType = 'Cannot make request; responseType value was invalid.'\n    return makeResponse({ error: 'RESPONSE_TYPE', message: invalidResponseType })\n  }\n}\n\n/**\n * Get the body from the response depending on our expected content-type.\n * @return {Body|Error}\n */\nasync function parseBody (response, expectedType) {\n  /**\n   * The SDK should only be parsing the responses as is expected without checking the content type of the response.\n   * This is deterministic depending on the `responseType` passed in to the request through the request options.\n   */\n  let responseBody = {}\n  try {\n    switch (expectedType) {\n      case responseTypes.json:\n        responseBody = await response.json()\n        break\n      case responseTypes.blob:\n        responseBody = await response.blob()\n        break\n      case responseTypes.text:\n        responseBody = await response.text()\n        break\n      case responseTypes.none:\n        // Do not parse the response\n        break\n      default:\n        // This should be unreachable code.\n        throw Error('Assertion failed')\n    }\n  } catch (e) {\n    // Note: We get here if we have a successful request but the server sent us unexpected data.\n    // We need to treat this as an error case because we can no longer enforce a contract with the\n    // code making the request.\n    //\n    // If the code gets here the issue is either with the server not sending us expected data, or with\n    // the calling code that told us to expect the wrong data.\n\n    return e\n  }\n\n  return responseBody\n}\n\n/**\n * Make a response object that will  have the same structure every time\n * regardless of the server response.\n *\n * @param {Object} apiResponse API related response data\n * @param {string} apiResponse.error This should be a string indicating an error if the request fails due to an invalid request.\n * @param {string} apiResponse.message This should be a string with more details about the api error.\n * @param {Object} httpResponse This will contain the response data from the server.\n * @param {Object} httpResponse.body The response body data from the server.\n * @param {boolean} httpResponse.ok Indicates if the request was considered a success by the server.\n * @param {Object} httpResponse.code The HTTP status code for the request.\n * @param {Object} httpResponse.message A message describing the server response.\n * @return {Object} An object containing API and/or server response details.\n */\nfunction makeResponse (apiResponse = {}, httpResponse = {}) {\n  return {\n    body: httpResponse.body,\n    error: apiResponse.error,\n    result: {\n      ok: Boolean(httpResponse.ok),\n      code: httpResponse.code,\n      message: apiResponse.message || httpResponse.message\n    }\n  }\n}\n","/**\n * \"Authorization\" issues are REST errors caused by invalid user credentials.\n *    These are issues that should be solvable by an end-user updating/fixing\n *    the credentials that they have provided.\n */\nimport BasicError, { authCodes } from '../errors'\n\n/**\n * Function that checks a REST response action for Link authorization issues.\n * @param  {Object} response A REST response object.\n * @return {BasicError|undefined}\n */\nexport function linkAuthorization (response) {\n  if (!response.error) {\n    return\n  }\n\n  /*\n   * A SPiDR REST request will return\n   *  - '403 Forbidden', with body 'statusCode: 4' for bad password,\n   *  - '403 Forbidden', with html body (which is thrown away) for bad username.\n   *\n   * The SPiDR REST API document (v4.7, May 2019) says it will return '403 Forbidden'\n   *    with other statusCodes for numerous untestable scenarios. Some of these are\n   *    for credential/auth issues, others are for unrelated issues.\n   * Authorization related:\n   *    - 27 (generic auth failure), 61 (credentials issue), 65 (token expired)\n   * Unrelated:\n   *    - 29 (device not authorized), 35 (service not enabled), 37 (invalid value),\n   *      45 (invalid app_name), 46 (invalid CallMe token), 62 (account is disabled),\n   *      63 (account is locked), 64 (invalid CallMe realm)\n   */\n  // Status codes considered to be \"auth issues\".\n  const authIssues = [4, 27, 61, 65]\n\n  const statusCode = getStatusCode(response)\n\n  /*\n   * A case where Link REST request will return '401 Unauthorized'\n   */\n  if (response.result.code === 401) {\n    return new BasicError({\n      code: authCodes.INVALID_CREDENTIALS,\n      message: 'Authorization failed with server. Please check credentials.'\n    })\n  }\n\n  /*\n   * Define a Link authorization issue to be:\n   *  - a '403 Forbidden', with no body or with a specific statusCode.\n   */\n  if (response.result.code === 403 && (response.body === undefined || authIssues.includes(statusCode))) {\n    let message = 'Authorization failed with server. Please check credentials.'\n    if (statusCode) {\n      message += ` Status code: ${statusCode}`\n    }\n    return new BasicError({\n      code: authCodes.INVALID_CREDENTIALS,\n      message: message\n    })\n  }\n}\n\n/**\n * Function that checks a REST response action for UC authorization issues.\n *    UC includes both SPiDR and CIM REST requests.\n * @param  {Object} response A REST response object.\n * @return {BasicError|undefined}\n */\nexport function ucAuthorization (response) {\n  /*\n   * A CIM REST request will return\n   *    - '401 Login Please' (not 401 Unauthorized) with no body for credential issues.\n   *    - '401 Login Please', with body message \"expired token\" for token issues.\n   *\n   * SPiDR will return '401 Unauthorized' for non-auth issues though,\n   *    (statusCode 35 for \"service not enabled\").\n   */\n\n  /*\n   * Define a UC authorization issue to be:\n   *  - a '401 Login Please'.\n   */\n  const result = response.result\n  if (result.code === 401 && result.message === 'Login Please') {\n    let message = 'Authorization failed with server. Please check credentials.'\n\n    const statusCode = getStatusCode(response)\n\n    if (statusCode) {\n      message += ` Status code: ${statusCode}`\n    }\n\n    return new BasicError({\n      code: authCodes.INVALID_CREDENTIALS,\n      message\n    })\n  }\n}\n\n/**\n * Function that checks a REST response action for CPaaS authorization issues.\n * @param  {Object} response A REST response object.\n * @return {BasicError|undefined}\n */\nexport function cpaasAuthorization (response) {\n  /*\n   * A CPaaS REST request will return '401 Unauthorized' for authorization issues.\n   */\n  if (response.result.code === 401) {\n    return new BasicError({\n      code: authCodes.INVALID_CREDENTIALS,\n      message: 'Authorization failed with server. Please check credentials.'\n    })\n  }\n}\n\n/**\n * Helper function for parsing a statusCode from a SPiDR REST response body.\n * @param  {Object} response\n * @return {number|undefined}\n */\nfunction getStatusCode (response) {\n  let statusCode\n  /*\n   * Parse the statusCode out from the body.\n   */\n  if (response.body) {\n    if (response.body.statusCode) {\n      // In some cases (eg. KAA-1937), the statusCode is at the top-level of the body.\n      statusCode = response.body.statusCode\n    } else {\n      // In most cases, the statusCode is inside another object. The name of this\n      //    parameter is different depending which service the request was for,\n      //    so search for it.\n      Object.values(response.body).forEach(value => {\n        if (value.statusCode) {\n          statusCode = value.statusCode\n        }\n      })\n    }\n  }\n  return statusCode\n}\n","import * as eventTypes from './eventTypes'\nimport * as actionTypes from './actionTypes'\n\nconst eventsMap = {}\n\neventsMap[actionTypes.AUTHORIZATION_ERROR] = function (action) {\n  return {\n    type: eventTypes.REQUEST_ERROR,\n    args: {\n      error: action.payload\n    }\n  }\n}\n\nexport default eventsMap\n","/**\n * An error occurred with server authorization.\n *\n * This event will be emitted anytime a REST request to the server is rejected\n *    due to an authorization issue. This may occur for invalid credentials or\n *    expired tokens, depending on which form of authentication the application\n *    has chosen to use.\n * @public\n * @memberof api\n * @requires restAuthorization\n * @event request:error\n * @param {Object} params\n * @param {api.BasicError} params.error The Basic error object.\n */\nexport const REQUEST_ERROR = 'request:error'\n","import name from './name'\nimport api from './api'\n\nexport { name, api }\n","/**\n * This interface is for an request plugin.\n * @type {string}\n */\nconst name = 'requests'\nexport default name\n","import { fetchResource } from '../utils'\nimport { logManager, API_LOG_TAG } from '../../logs'\n// Other plugins.\nimport { getPlatform, getRequestInfo } from '../../auth/interface/selectors'\nimport { merge } from 'lodash/fp'\n\nconst log = logManager.getLogger('REQUEST')\n\n/**\n * Request API.\n * @method api\n * @param  {Function} $0\n * @param  {Function} $0.dispatch - The redux store's dispatch function.\n * @param  {Function} $0.getState - The redux store's getState function.\n * @return {Object} api - The request API object.\n */\nexport default function api ({ dispatch, getState }) {\n  return {\n    request: {\n      /**\n       * The 'request' namespace (within the 'api' type) is used to make network requests to the server.\n       *\n       * @public\n       * @namespace request\n       */\n\n      /**\n       * Send a request to the underlying REST service with the appropriate configuration and authentication.\n       * This is a wrapper on top of the browser's [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n       * and behaves very similarly but using SDK configuration for the base URL and authentication as well\n       * as SDK logging.\n       *\n       * @public\n       * @memberof request\n       * @method fetch\n       * @param {string} resource The full path of the resource to fetch from the underlying service. This should include any REST version\n       *                          or user information. This path will be appended to the base URL according to SDK configuration.\n       * @param {RequestInit} init An object containing any custom settings that you want to apply to the request. See [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n       *                           for a full description and defaults.\n       * @return {Promise<Response>} A promise for a [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) object.\n       * @example\n       * // Send a REST request to the server\n       * // Create a request options object following [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/fetch)\n       * const requestOptions = {\n       *   method: 'POST',\n       *   body: JSON.stringify({\n       *     test: 123\n       *   })\n       * }\n       *\n       * // Note that you will need to subscribe for the `custom` service in order to\n       * // receive notifications from the `externalnotification` service.\n       * const response = await client.request.fetch('/rest/version/1/user/xyz@test.com/externalnotification', requestOptions)\n       */\n      async fetch (resource, init = {}) {\n        log.debug(API_LOG_TAG + 'fetch: ', resource)\n        const state = getState()\n        const platform = getPlatform(state)\n        const requestInfo = getRequestInfo(state, platform)\n        const options = platform === 'cpaas' ? requestInfo.options : requestInfo.requestOptions\n        requestInfo.requestOptions = merge(init, options)\n        requestInfo.platform = platform\n        // Do request\n        return await fetchResource(resource, requestInfo)\n      }\n    }\n  }\n}\n","/**\n * The ID of a User (e.g. joe@test.3s5j.att.com)\n * @public\n * @static\n * @typedef {string} UserID\n * @memberof user\n * @requires cpaas_user_id\n */\n\n/**\n * The User ID ie: joe@test.3s5j.att.com\n *\n * @public\n * @static\n * @typedef {string} UserID\n * @memberof call\n * @requires cpaas_user_id\n */\n\n/**\n * The ID of a User (e.g. joe@domain.com)\n * @public\n * @static\n * @typedef {string} UserID\n * @memberof user\n * @requires link_user_id\n */\n\n/**\n * The SIP URI ie: sip:joe@domain.com\n *\n * @public\n * @static\n * @typedef {string} SIP_URI\n * @memberof call\n * @requires link_user_id\n */\n\n/**\n * The Phone Number ie: +18885559876\n *\n * @public\n * @static\n * @typedef {string} PhoneNumber\n * @memberof call\n * @requires cpaas_pstn\n */\n\n/**\n * The TEL URI ie: tel:+18885559876\n *\n * @public\n * @static\n * @typedef {string} TEL_URI\n * @memberof call\n * @requires link_pstn\n */\n"],"sourceRoot":""}